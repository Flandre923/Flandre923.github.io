<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pickaxe代码简介</title>
      <link href="/2023/11/12/pickaxe%E4%BB%A3%E7%A0%81%E7%AE%80%E4%BB%8B/"/>
      <url>/2023/11/12/pickaxe%E4%BB%A3%E7%A0%81%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="PickaxeItem类"><a href="#PickaxeItem类" class="headerlink" title="PickaxeItem类"></a>PickaxeItem类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义了一个名为PickaxeItem的类，这个类继承自DiggerItem。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PickaxeItem</span> <span class="keyword">extends</span> <span class="title class_">DiggerItem</span> &#123;</span><br><span class="line">    <span class="comment">//它接受四个参数：一个Tier对象，一个整数，一个浮点数和一个Item.Properties对象。这个构造函数用于初始化PickaxeItem对象。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">PickaxeItem</span><span class="params">(Tier p_42961_, <span class="type">int</span> p_42962_, <span class="type">float</span> p_42963_, Item.Properties p_42964_)</span> &#123;</span><br><span class="line">       <span class="comment">//码调用了父类DiggerItem的构造函数，传入了整数的浮点数形式，浮点数，Tier对象，BlockTags.MINEABLE_WITH_PICKAXE和Item.Properties对象。</span></span><br><span class="line">      <span class="built_in">super</span>((<span class="type">float</span>)p_42962_, p_42963_, p_42961_, BlockTags.MINEABLE_WITH_PICKAXE, p_42964_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//义了一个名为canPerformAction的公共方法，它接受两个参数：一个ItemStack对象和一个net.neoforged.neoforge.common.ToolAction对象。这个方法用于检查这个工具是否可以执行给定的动作。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canPerformAction</span><span class="params">(ItemStack stack, net.neoforged.neoforge.common.ToolAction toolAction)</span> &#123;</span><br><span class="line">       <span class="comment">//行代码检查ToolActions.DEFAULT_PICKAXE_ACTIONS是否包含toolAction。如果包含，则返回true；否则，返回false。这表示如果toolAction是钻石工具的默认动作之一，那么这个工具就可以执行这个动作。</span></span><br><span class="line">      <span class="keyword">return</span> net.neoforged.neoforge.common.ToolActions.DEFAULT_PICKAXE_ACTIONS.contains(toolAction);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="DiggerItem类"><a href="#DiggerItem类" class="headerlink" title="DiggerItem类"></a>DiggerItem类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.minecraft.world.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.ImmutableMultimap;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Multimap;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.ImmutableMultimap.Builder;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.tags.BlockTags;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.tags.TagKey;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.EquipmentSlot;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.LivingEntity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.ai.attributes.Attribute;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.ai.attributes.AttributeModifier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.ai.attributes.Attributes;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类继承自TieredItem</span></span><br><span class="line"><span class="comment">// 实现了Vanishable接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DiggerItem</span> <span class="keyword">extends</span> <span class="title class_">TieredItem</span> <span class="keyword">implements</span> <span class="title class_">Vanishable</span> &#123;</span><br><span class="line">   <span class="comment">// 存储与此工具相关的方块类型</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> TagKey&lt;Block&gt; blocks;</span><br><span class="line">    <span class="comment">// 存储此工具的速度</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">final</span> <span class="type">float</span> speed;</span><br><span class="line">    <span class="comment">//存储此工具的基础攻击伤害</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">float</span> attackDamageBaseline;</span><br><span class="line">    <span class="comment">//存储此工具的默认属性修改器</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> Multimap&lt;Attribute, AttributeModifier&gt; defaultModifiers;</span><br><span class="line"><span class="comment">// 两个浮点数，一个Tier对象，一个TagKey&lt;Block&gt;对象和一个Item.Properties对象。这个构造函数用于初始化DiggerItem对象。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">DiggerItem</span><span class="params">(<span class="type">float</span> p_204108_, <span class="type">float</span> p_204109_, Tier p_204110_, TagKey&lt;Block&gt; p_204111_, Item.Properties p_204112_)</span> &#123;</span><br><span class="line">       <span class="comment">// 用了父类TieredItem的构造函数，传入了Tier对象和Item.Properties对象。</span></span><br><span class="line">      <span class="built_in">super</span>(p_204110_, p_204112_);</span><br><span class="line">       <span class="comment">// 将传入的TagKey&lt;Block&gt;对象赋值给blocks字段。</span></span><br><span class="line">      <span class="built_in">this</span>.blocks = p_204111_;</span><br><span class="line">       <span class="comment">// 行代码调用Tier对象的getSpeed方法，并将返回的结果赋值给speed字段。</span></span><br><span class="line">      <span class="built_in">this</span>.speed = p_204110_.getSpeed();</span><br><span class="line">       <span class="comment">// 传入的浮点数与Tier对象的getAttackDamageBonus方法返回的结果相加，并将结果赋值给attackDamageBaseline字段。</span></span><br><span class="line">      <span class="built_in">this</span>.attackDamageBaseline = p_204108_ + p_204110_.getAttackDamageBonus();</span><br><span class="line">       <span class="comment">// Multimap.Builder对象，这是一个用于构建Multimap的建造者对象。Multimap`是一种特殊的映射，它允许每个键映射到多个值</span></span><br><span class="line">       <span class="comment">//它被用来存储属性修改器。</span></span><br><span class="line">      Builder&lt;Attribute, AttributeModifier&gt; builder = ImmutableMultimap.builder();</span><br><span class="line">      builder.put(</span><br><span class="line">          <span class="comment">//行代码向Multimap中添加了一个新的属性修改器。这个属性修改器修改的是攻击伤害属性，它的值是attackDamageBaseline字段的值，操作类型是加法。</span></span><br><span class="line">         Attributes.ATTACK_DAMAGE,</span><br><span class="line">         <span class="keyword">new</span> <span class="title class_">AttributeModifier</span>(BASE_ATTACK_DAMAGE_UUID, <span class="string">&quot;Tool modifier&quot;</span>, (<span class="type">double</span>)<span class="built_in">this</span>.attackDamageBaseline, AttributeModifier.Operation.ADDITION)</span><br><span class="line">      );</span><br><span class="line">       <span class="comment">//行代码向Multimap中添加了一个新的属性修改器。这个属性修改器修改的是攻击速度属性，它的值是传入的浮点数，操作类型是加法。</span></span><br><span class="line">      builder.put(</span><br><span class="line">         Attributes.ATTACK_SPEED, <span class="keyword">new</span> <span class="title class_">AttributeModifier</span>(BASE_ATTACK_SPEED_UUID, <span class="string">&quot;Tool modifier&quot;</span>, (<span class="type">double</span>)p_204109_, AttributeModifier.Operation.ADDITION)</span><br><span class="line">      );</span><br><span class="line">       <span class="comment">//码调用builder.build()方法来构建Multimap，并将结果赋值给defaultModifiers字段。</span></span><br><span class="line">      <span class="built_in">this</span>.defaultModifiers = builder.build();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//它接受两个参数：一个ItemStack对象和一个BlockState对象。这个方法用于获取破坏速度。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getDestroySpeed</span><span class="params">(ItemStack p_41004_, BlockState p_41005_)</span> &#123;</span><br><span class="line">       <span class="comment">//检查BlockState对象是否与blocks字段相匹配。如果匹配，则返回speed字段的值；否则，返回1.0F。</span></span><br><span class="line">      <span class="keyword">return</span> p_41005_.is(<span class="built_in">this</span>.blocks) ? <span class="built_in">this</span>.speed : <span class="number">1.0F</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//它接受三个参数：一个ItemStack对象，两个LivingEntity对象。这个方法用于攻击敌人。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hurtEnemy</span><span class="params">(ItemStack p_40994_, LivingEntity p_40995_, LivingEntity p_40996_)</span> &#123;</span><br><span class="line">       <span class="comment">//行代码调用ItemStack对象的hurtAndBreak方法来损坏物品。如果物品被损坏，它会广播一个破坏事件。</span></span><br><span class="line">      p_40994_.hurtAndBreak(<span class="number">2</span>, p_40996_, p_41007_ -&gt; p_41007_.broadcastBreakEvent(EquipmentSlot.MAINHAND));</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//它接受五个参数：一个ItemStack对象，一个Level对象，一个BlockState对象，一个BlockPos对象和一个LivingEntity对象。这个方法用于破坏方块。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">mineBlock</span><span class="params">(ItemStack p_40998_, Level p_40999_, BlockState p_41000_, BlockPos p_41001_, LivingEntity p_41002_)</span> &#123;</span><br><span class="line">       <span class="comment">//检查Level对象是否为客户端，以及BlockState对象的破坏速度是否不为0.0F。如果这两个条件都满足，则执行下一行代码。</span></span><br><span class="line">      <span class="keyword">if</span> (!p_40999_.isClientSide &amp;&amp; p_41000_.getDestroySpeed(p_40999_, p_41001_) != <span class="number">0.0F</span>) &#123;</span><br><span class="line">          <span class="comment">//调用ItemStack对象的hurtAndBreak方法来损坏物品。如果物品被损坏，它会广播一个破坏事件。</span></span><br><span class="line">         p_40998_.hurtAndBreak(<span class="number">1</span>, p_41002_, p_40992_ -&gt; p_40992_.broadcastBreakEvent(EquipmentSlot.MAINHAND));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这行代码定义了一个名为getDefaultAttributeModifiers的公共方法，它接受一个EquipmentSlot对象作为参数。这个方法用于获取默认属性修改器。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> Multimap&lt;Attribute, AttributeModifier&gt; <span class="title function_">getDefaultAttributeModifiers</span><span class="params">(EquipmentSlot p_40990_)</span> &#123;</span><br><span class="line">       <span class="comment">//这行代码检查EquipmentSlot对象是否为主手槽。如果是，则返回defaultModifiers字段的值；否则，调用父类的getDefaultAttributeModifiers方法。</span></span><br><span class="line">      <span class="keyword">return</span> p_40990_ == EquipmentSlot.MAINHAND ? <span class="built_in">this</span>.defaultModifiers : <span class="built_in">super</span>.getDefaultAttributeModifiers(p_40990_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//为getAttackDamage的公共方法，这个方法用于获取攻击伤害</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getAttackDamage</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.attackDamageBaseline;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//代码定义了一个名为isCorrectToolForDrops的公共方法，它接受一个BlockState对象作为参数。这个方法用于检查这个工具是否适合破坏给定的方块。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">// FORGE: Use stack sensitive variant below</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCorrectToolForDrops</span><span class="params">(BlockState p_150816_)</span> &#123;</span><br><span class="line">       <span class="comment">//行代码检查工具的等级是否已经排序。如果已经排序，则执行下一行代码。</span></span><br><span class="line">      <span class="keyword">if</span> (net.neoforged.neoforge.common.TierSortingRegistry.isTierSorted(getTier())) &#123;</span><br><span class="line">          <span class="comment">//代码检查工具的等级是否适合破坏给定的方块，以及方块是否与blocks字段相匹配满足，则返回true；否则，返回false。</span></span><br><span class="line">         <span class="keyword">return</span> net.neoforged.neoforge.common.TierSortingRegistry.isCorrectTierForDrops(getTier(), p_150816_) &amp;&amp; p_150816_.is(<span class="built_in">this</span>.blocks);</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="comment">//这行代码调用getTier方法获取工具的等级，并将结果赋值给i。</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="built_in">this</span>.getTier().getLevel();</span><br><span class="line">       <span class="comment">//这行代码检查i是否小于3，以及BlockState对象是否属于需要钻石工具的方块标签。如果这两个条件都满足，则执行下一行代码。</span></span><br><span class="line">      <span class="keyword">if</span> (i &lt; <span class="number">3</span> &amp;&amp; p_150816_.is(BlockTags.NEEDS_DIAMOND_TOOL)) &#123;</span><br><span class="line">          <span class="comment">//这个工具不适合破坏这个方块。</span></span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          <span class="comment">//这行代码检查i是否小于2，以及BlockState对象是否属于需要铁工具的方块标签。如果这两个条件都满足，则执行下一行代码。</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">2</span> &amp;&amp; p_150816_.is(BlockTags.NEEDS_IRON_TOOL)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//这行代码检查i是否小于1，以及BlockState对象是否属于需要石头工具的方块标签。如果这两个条件都满足，则返回false；否则，检查BlockState对象是否与blocks字段相匹配，并返回结果。</span></span><br><span class="line">         <span class="keyword">return</span> i &lt; <span class="number">1</span> &amp;&amp; p_150816_.is(BlockTags.NEEDS_STONE_TOOL) ? <span class="literal">false</span> : p_150816_.is(<span class="built_in">this</span>.blocks);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// FORGE START</span></span><br><span class="line">    <span class="comment">//这行代码定义了一个名为isCorrectToolForDrops的公共方法，它接受两个参数：一个ItemStack对象和一个BlockState对象。这个方法用于检查这个工具是否适合破坏给定的方块。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCorrectToolForDrops</span><span class="params">(ItemStack stack, BlockState state)</span> &#123;</span><br><span class="line">       <span class="comment">//这行代码检查BlockState对象是否与blocks字段相匹配，以及工具的等级是否适合破坏这个方块。如果这两个条件都满足，则返回true；否则，返回false。</span></span><br><span class="line">      <span class="keyword">return</span> state.is(blocks) &amp;&amp; net.neoforged.neoforge.common.TierSortingRegistry.isCorrectTierForDrops(getTier(), state);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="TieredItem类"><a href="#TieredItem类" class="headerlink" title="TieredItem类"></a>TieredItem类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码定义了一个名为TieredItem的公共类，这个类继承自Item类。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TieredItem</span> <span class="keyword">extends</span> <span class="title class_">Item</span> &#123;</span><br><span class="line">    <span class="comment">//行代码定义了一个名为tier的私有常量字段，它的类型是Tier。这个字段可能用于存储此物品的挖掘等级。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> Tier tier;</span><br><span class="line"><span class="comment">//这行代码定义了一个名为TieredItem的公共构造函数，它接受两个参数：一个Tier对象和一个Item.Properties对象。这个构造函数用于初始化TieredItem对象。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">TieredItem</span><span class="params">(Tier p_43308_, Item.Properties p_43309_)</span> &#123;</span><br><span class="line">       <span class="comment">//代码调用了父类Item的构造函数，传入了一个新的Item.Properties对象，这个对象的默认耐久度被设置为工具的使用次数。</span></span><br><span class="line">      <span class="built_in">super</span>(p_43309_.defaultDurability(p_43308_.getUses()));</span><br><span class="line">       <span class="comment">//行代码将传入的Tier对象赋值给tier字段。</span></span><br><span class="line">      <span class="built_in">this</span>.tier = p_43308_;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个名为getTier的公共方法，这个方法用于获取物品的等级。</span></span><br><span class="line">   <span class="keyword">public</span> Tier <span class="title function_">getTier</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//行代码返回tier字段的值，表示物品的等级。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.tier;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这行代码定义了一个名为getEnchantmentValue的公共方法，这个方法用于获取物品的附魔值。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getEnchantmentValue</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//这行代码调用Tier对象的getEnchantmentValue方法，并将返回的结果作为附魔值返回。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.tier.getEnchantmentValue();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个名为isValidRepairItem的公共方法，它接受两个ItemStack对象作为参数。这个方法用于检查一个物品是否可以修复另一个物品。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValidRepairItem</span><span class="params">(ItemStack p_43311_, ItemStack p_43312_)</span> &#123;</span><br><span class="line">       <span class="comment">//这行代码检查Tier对象的修复材料是否与传入的ItemStack对象匹配，如果匹配，则返回true；否则，调用父类的isValidRepairItem方法。如果父类的方法也返回true，那么这个方法就会返回true；否则，返回false。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.tier.getRepairIngredient().test(p_43312_) || <span class="built_in">super</span>.isValidRepairItem(p_43311_, p_43312_);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Item-类"><a href="#Item-类" class="headerlink" title="Item 类"></a>Item 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义了一个名为Item的类，这个类实现了FeatureElement，ItemLike和IItemExtension接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Item</span> <span class="keyword">implements</span> <span class="title class_">FeatureElement</span>, ItemLike, net.neoforged.neoforge.common.extensions.IItemExtension &#123;</span><br><span class="line">    <span class="comment">//行代码定义了一个名为LOGGER的私有静态最终字段，它的类型是Logger。这个字段用于记录日志。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">LOGGER</span> <span class="operator">=</span> LogUtils.getLogger();</span><br><span class="line">    <span class="comment">//代码定义了一个名为BY_BLOCK的公共静态最终字段，它的类型是Map&lt;Block, Item&gt;。这个字段用于将方块映射到对应的物品。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Block, Item&gt; BY_BLOCK = net.neoforged.neoforge.registries.GameData.getBlockItemMap();</span><br><span class="line">    <span class="comment">//定义了一个名为BASE_ATTACK_DAMAGE_UUID的受保护的静态最终字段，它的类型是UUID。这个字段用于存储基础攻击伤害的UUID。</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">UUID</span> <span class="variable">BASE_ATTACK_DAMAGE_UUID</span> <span class="operator">=</span> UUID.fromString(<span class="string">&quot;CB3F55D3-645C-4F38-A497-9C13A33DB5CF&quot;</span>);</span><br><span class="line">    <span class="comment">//定义了一个名为BASE_ATTACK_SPEED_UUID的受保护的静态最终字段，它的类型是UUID。这个字段用于存储基础攻击速度的UUID。</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">UUID</span> <span class="variable">BASE_ATTACK_SPEED_UUID</span> <span class="operator">=</span> UUID.fromString(<span class="string">&quot;FA233E1C-4180-4865-B01B-BCCE9785ACA3&quot;</span>);</span><br><span class="line">    <span class="comment">//代码定义了一个名为MAX_STACK_SIZE的公共静态最终字段，它的类型是int。这个字段用于存储物品的最大堆叠大小。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_STACK_SIZE</span> <span class="operator">=</span> <span class="number">64</span>;</span><br><span class="line">    <span class="comment">//定义了一个名为EAT_DURATION的公共静态最终字段，它的类型是int。这个字段用于存储吃东西的持续时间</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">EAT_DURATION</span> <span class="operator">=</span> <span class="number">32</span>;</span><br><span class="line">    <span class="comment">//定义了一个名为MAX_BAR_WIDTH的公共静态最终字段，它的类型是int。这个字段用于存储物品耐久条的最大宽度。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_BAR_WIDTH</span> <span class="operator">=</span> <span class="number">13</span>;</span><br><span class="line">    <span class="comment">//定义了一个私有的最终的Holder.Reference&lt;Item&gt;对象，它被命名为builtInRegistryHolder。这个对象是通过调用BuiltInRegistries.ITEM.createIntrusiveHolder(this)方法创建的，这个方法返回一个Holder.Reference&lt;Item&gt;对象，这个对象包含了当前的Item对象</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> Holder.Reference&lt;Item&gt; builtInRegistryHolder = BuiltInRegistries.ITEM.createIntrusiveHolder(<span class="built_in">this</span>);</span><br><span class="line">    <span class="comment">//定义了一个私有的最终的Rarity对象，它被命名为rarity。这个对象代表了物品的稀有度。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> Rarity rarity;</span><br><span class="line">    <span class="comment">//定义了一个私有的最终的整数，它被命名为maxStackSize。这个整数代表了物品的最大堆叠数量。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> maxStackSize;</span><br><span class="line">    <span class="comment">//定义了一个私有的最终的整数，它被命名为maxDamage。这个整数代表了物品的最大耐久度。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> maxDamage;</span><br><span class="line">    <span class="comment">//这行代码定义了一个私有的最终的布尔值，它被命名为isFireResistant。这个布尔值表示了物品是否对火有抵抗力。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> isFireResistant;</span><br><span class="line">    <span class="comment">//定义了一个私有的最终的Item对象，它被命名为craftingRemainingItem。这个对象代表了在制作过程中保留的物品。这个对象可能为null。</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> Item craftingRemainingItem;</span><br><span class="line">    <span class="comment">// 定义了一个私有的String对象，它被命名为descriptionId。这个字符串代表了物品的描述ID。这个对象可能为null。</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">private</span> String descriptionId;</span><br><span class="line">    <span class="comment">// 定义了一个私有的最终的FoodProperties对象，它被命名为foodProperties。这个对象代表了物品的食物属性。这个对象可能为null。</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> FoodProperties foodProperties;</span><br><span class="line">    <span class="comment">//代码定义了一个私有的最终的FeatureFlagSet对象，它被命名为requiredFeatures。这个对象代表了物品所需的特性标志集。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> FeatureFlagSet requiredFeatures;</span><br><span class="line"><span class="comment">//它的名字是getId，它接受一个Item对象作为参数，参数的名字是p_41394_。这个方法返回一个整数。：</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">(Item p_41394_)</span> &#123;</span><br><span class="line">       <span class="comment">//它检查p_41394_是否为null。如果p_41394_为null，那么这个表达式就返回0。否则，它调用BuiltInRegistries.ITEM.getId(p_41394_)方法，并返回这个方法的结果。BuiltInRegistries.ITEM.getId(p_41394_)方法返回的是p_41394_在ITEM注册表中的ID。</span></span><br><span class="line">      <span class="keyword">return</span> p_41394_ == <span class="literal">null</span> ? <span class="number">0</span> : BuiltInRegistries.ITEM.getId(p_41394_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//码定义了一个公共的静态方法，它的名字是byId，它接受一个整数作为参数，参数的名字是p_41446_。这个方法返回一个Item对象。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> Item <span class="title function_">byId</span><span class="params">(<span class="type">int</span> p_41446_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> BuiltInRegistries.ITEM.byId(p_41446_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//它的名字是byBlock，它接受一个Block对象作为参数，参数的名字是p_41440_。这个方法返回一个Item对象。这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。</span></span><br><span class="line">   <span class="meta">@Deprecated</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> Item <span class="title function_">byBlock</span><span class="params">(Block p_41440_)</span> &#123;</span><br><span class="line">       <span class="comment">//这行代码从BY_BLOCK这个Map中获取键为p_41440_的值，如果这个Map中不存在键为p_41440_的值，那么就返回Items.AIR。</span></span><br><span class="line">      <span class="keyword">return</span> BY_BLOCK.getOrDefault(p_41440_, Items.AIR);</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//它接受一个Item.Properties对象作为参数，参数的名字是p_41383_。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">Item</span><span class="params">(Item.Properties p_41383_)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.rarity = p_41383_.rarity;</span><br><span class="line">      <span class="built_in">this</span>.craftingRemainingItem = p_41383_.craftingRemainingItem;</span><br><span class="line">      <span class="built_in">this</span>.maxDamage = p_41383_.maxDamage;</span><br><span class="line">      <span class="built_in">this</span>.maxStackSize = p_41383_.maxStackSize;</span><br><span class="line">      <span class="built_in">this</span>.foodProperties = p_41383_.foodProperties;</span><br><span class="line">      <span class="built_in">this</span>.isFireResistant = p_41383_.isFireResistant;</span><br><span class="line">      <span class="built_in">this</span>.requiredFeatures = p_41383_.requiredFeatures;</span><br><span class="line">       <span class="comment">//查SharedConstants.IS_RUNNING_IN_IDE是否为true。如果为true，那么它获取this对象的类名，并检查这个类名是否以&quot;Item&quot;结尾。如果不是，那么它记录一个错误。</span></span><br><span class="line">      <span class="keyword">if</span> (SharedConstants.IS_RUNNING_IN_IDE) &#123;</span><br><span class="line">         <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getSimpleName();</span><br><span class="line">         <span class="keyword">if</span> (!s.endsWith(<span class="string">&quot;Item&quot;</span>)) &#123;</span><br><span class="line">            LOGGER.error(<span class="string">&quot;Item classes should end with Item and &#123;&#125; doesn&#x27;t.&quot;</span>, s);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">this</span>.canRepair = p_41383_.canRepair;</span><br><span class="line">      initClient();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。这个方法的名字是builtInRegistryHolder，没有参数，返回一个Holder.Reference&lt;Item&gt;对象。</span></span><br><span class="line">   <span class="meta">@Deprecated</span></span><br><span class="line">   <span class="keyword">public</span> Holder.Reference&lt;Item&gt; <span class="title function_">builtInRegistryHolder</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.builtInRegistryHolder;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是onUseTick，接受四个参数：一个Level对象，一个LivingEntity对象，一个ItemStack对象和一个整数。这个方法没有返回值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUseTick</span><span class="params">(Level p_41428_, LivingEntity p_41429_, ItemStack p_41430_, <span class="type">int</span> p_41431_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是onDestroyed，接受一个ItemEntity对象作为参数。这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。这个方法没有返回值。</span></span><br><span class="line">   <span class="comment">/** <span class="doctag">@deprecated</span> Forge: &#123;<span class="doctag">@link</span> IItemExtension#onDestroyed(ItemEntity, DamageSource) Use damage source sensitive version&#125; */</span></span><br><span class="line">   <span class="meta">@Deprecated</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroyed</span><span class="params">(ItemEntity p_150887_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是verifyTagAfterLoad，接受一个CompoundTag对象作为参数。这个方法没有返回值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">verifyTagAfterLoad</span><span class="params">(CompoundTag p_150898_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是canAttackBlock，接受四个参数：一个BlockState对象，一个Level对象，一个BlockPos对象和一个Player对象。这个方法返回一个布尔值。</span></span><br><span class="line">    <span class="comment">//检查一个物品是否可以攻击一个方块。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canAttackBlock</span><span class="params">(BlockState p_41441_, Level p_41442_, BlockPos p_41443_, Player p_41444_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是asItem，没有参数，返回一个Item对象。这个方法被@Override注解标记，表示这个方法覆盖了父类或者接口中的方法。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> Item <span class="title function_">asItem</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是useOn，接受一个UseOnContext对象作为参数。这个方法返回一个InteractionResult对象。</span></span><br><span class="line">   <span class="keyword">public</span> InteractionResult <span class="title function_">useOn</span><span class="params">(UseOnContext p_41427_)</span> &#123;</span><br><span class="line">       <span class="comment">//行代码返回InteractionResult.PASS，表示物品使用操作被跳过。</span></span><br><span class="line">       <span class="comment">//一些物品可能会被使用在方块上（例如放置物品），而其他物品可能不会。但在这个例子中，由于方法直接返回了InteractionResult.PASS，所以我们可以说这个物品不能被使用在任何方块上。</span></span><br><span class="line">      <span class="keyword">return</span> InteractionResult.PASS;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是getDestroySpeed，接受两个参数：一个ItemStack对象和一个BlockState对象。这个方法返回一个浮点数。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getDestroySpeed</span><span class="params">(ItemStack p_41425_, BlockState p_41426_)</span> &#123;</span><br><span class="line">       <span class="comment">//行代码返回1.0F，表示物品的销毁速度是1.0。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">1.0F</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是use，接受三个参数：一个Level对象，一个Player对象和一个InteractionHand对象。这个方法返回一个InteractionResultHolder&lt;ItemStack&gt;对象。</span></span><br><span class="line">   <span class="keyword">public</span> InteractionResultHolder&lt;ItemStack&gt; <span class="title function_">use</span><span class="params">(Level p_41432_, Player p_41433_, InteractionHand p_41434_)</span> &#123;</span><br><span class="line">       <span class="comment">//代码获取玩家手中的物品，并将其赋值给itemstack。</span></span><br><span class="line">      <span class="type">ItemStack</span> <span class="variable">itemstack</span> <span class="operator">=</span> p_41433_.getItemInHand(p_41434_);</span><br><span class="line">       <span class="comment">//代码检查itemstack是否是可食用的。</span></span><br><span class="line">      <span class="keyword">if</span> (itemstack.isEdible()) &#123;</span><br><span class="line">          <span class="comment">//码检查玩家是否可以吃itemstack。</span></span><br><span class="line">         <span class="keyword">if</span> (p_41433_.canEat(itemstack.getFoodProperties(p_41433_).canAlwaysEat())) &#123;</span><br><span class="line">             <span class="comment">//两行代码表示玩家开始使用物品，并返回一个表示物品被消耗的InteractionResultHolder对象。</span></span><br><span class="line">            p_41433_.startUsingItem(p_41434_);</span><br><span class="line">            <span class="keyword">return</span> InteractionResultHolder.consume(itemstack);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="comment">// 返回一个表示操作失败的InteractionResultHolder对象，这个对象包含了itemstack。</span></span><br><span class="line">            <span class="keyword">return</span> InteractionResultHolder.fail(itemstack);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 表示如果itemstack不是可食用的，那么返回一个表示操作被跳过的InteractionResultHolder对象，这个对象包含了玩家手中的物品。</span></span><br><span class="line">         <span class="keyword">return</span> InteractionResultHolder.pass(p_41433_.getItemInHand(p_41434_));</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是finishUsingItem，接受三个参数：一个ItemStack对象，一个Level对象和一个LivingEntity对象。</span></span><br><span class="line">   <span class="keyword">public</span> ItemStack <span class="title function_">finishUsingItem</span><span class="params">(ItemStack p_41409_, Level p_41410_, LivingEntity p_41411_)</span> &#123;</span><br><span class="line">       <span class="comment">//一个条件表达式，它检查当前的物品是否是可食用的。如果是，那么它让p_41411_（一个LivingEntity对象）在p_41410_（一个Level对象）中吃p_41409_（一个ItemStack对象），并返回吃完后的物品。如果不是，那么它直接返回p_41409_。</span></span><br><span class="line">       <span class="comment">//如果物品是可食用的，那么这个方法会让生物吃这个物品；如果物品不是可食用的，那么这个方法会直接返回这个物品。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.isEdible() ? p_41411_.eat(p_41410_, p_41409_) : p_41409_;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的最终方法，这个方法的名字是getMaxStackSize，没有参数，返回一个整数。这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。注释也提示应该使用物品堆叠对象敏感的版本。</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">// Use ItemStack sensitive version.</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">getMaxStackSize</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//这行代码返回this.maxStackSize，表示物品的最大堆叠数量。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.maxStackSize;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是getMaxDamage，没有参数，返回一个整数。这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。注释也提示应该使用物品堆叠对象敏感的版本。</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">// Use ItemStack sensitive version.</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">getMaxDamage</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//代码返回this.maxDamage，表示物品的最大耐久度。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.maxDamage;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是canBeDepleted，没有参数，返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canBeDepleted</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="comment">//表示物品是否可以耗尽。如果物品的最大耐久度大于0，那么这个物品就可以耗尽；否则，这个物品就不能耗尽</span></span><br><span class="line">       <span class="keyword">return</span> <span class="built_in">this</span>.maxDamage &gt; <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是isBarVisible，接受一个ItemStack对象作为参数。这个方法返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isBarVisible</span><span class="params">(ItemStack p_150899_)</span> &#123;</span><br><span class="line">       <span class="comment">//代码返回p_150899_.isDamaged()，表示物品的耐久条是否可见。如果物品已经损坏，那么这个物品的耐久条就会显示出来；否则，这个物品的耐久条就不会显示出来。</span></span><br><span class="line">      <span class="keyword">return</span> p_150899_.isDamaged();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是getBarWidth，接受一个ItemStack对象作为参数。这个方法返回一个整数。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getBarWidth</span><span class="params">(ItemStack p_150900_)</span> &#123;</span><br><span class="line">       <span class="comment">//这行代码计算并返回物品的耐久条的宽度。这个宽度是通过物品的损坏值和最大耐久度计算得出的。</span></span><br><span class="line">      <span class="keyword">return</span> Math.round(<span class="number">13.0F</span> - (<span class="type">float</span>)p_150900_.getDamageValue() * <span class="number">13.0F</span> / (<span class="type">float</span>)<span class="built_in">this</span>.getMaxDamage(p_150900_));</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是getBarColor，接受一个ItemStack对象作为参数。这个方法返回一个整数。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getBarColor</span><span class="params">(ItemStack p_150901_)</span> &#123;</span><br><span class="line">       <span class="comment">//代码首先获取物品的最大耐久度，然后计算物品的损坏程度，最后将损坏程度转换为RGB颜色。</span></span><br><span class="line">      <span class="type">float</span> <span class="variable">stackMaxDamage</span> <span class="operator">=</span> <span class="built_in">this</span>.getMaxDamage(p_150901_);</span><br><span class="line">       <span class="comment">//这个方法的作用是获取物品的耐久条的颜色。例如，一些物品的耐久条颜色会随着物品的损坏程度变化而变化，而其他物品的耐久条颜色可能是固定的。</span></span><br><span class="line">      <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> Math.max(<span class="number">0.0F</span>, (stackMaxDamage - (<span class="type">float</span>)p_150901_.getDamageValue()) / stackMaxDamage);</span><br><span class="line">      <span class="keyword">return</span> Mth.hsvToRgb(f / <span class="number">3.0F</span>, <span class="number">1.0F</span>, <span class="number">1.0F</span>);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是overrideStackedOnOther，接受四个参数：一个ItemStack对象，一个Slot对象，一个ClickAction对象和一个Player对象。这个方法返回一个布尔值</span></span><br><span class="line">    <span class="comment">//方法的作用是覆盖物品在其他物品上的堆叠行为</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">overrideStackedOnOther</span><span class="params">(ItemStack p_150888_, Slot p_150889_, ClickAction p_150890_, Player p_150891_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是overrideOtherStackedOnMe，接受六个参数：两个ItemStack对象，一个Slot对象，一个ClickAction对象，一个Player对象和一个SlotAccess对象。这个方法返回一个布尔值。</span></span><br><span class="line">    <span class="comment">//这行代码返回false，表示默认情况下，这个物品不会覆盖其他物品堆叠在自己上的行为。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">overrideOtherStackedOnMe</span><span class="params">(</span></span><br><span class="line"><span class="params">      ItemStack p_150892_, ItemStack p_150893_, Slot p_150894_, ClickAction p_150895_, Player p_150896_, SlotAccess p_150897_</span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//，这个方法的名字是hurtEnemy，接受三个参数：一个ItemStack对象，一个LivingEntity对象和一个LivingEntity对象。这个方法返回一个布尔值。</span></span><br><span class="line">    <span class="comment">//行代码返回false，表示默认情况下，这个物品不会对敌人造成伤害。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hurtEnemy</span><span class="params">(ItemStack p_41395_, LivingEntity p_41396_, LivingEntity p_41397_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 这个方法的名字是mineBlock，接受五个参数：一个ItemStack对象，一个Level对象，一个BlockState对象，一个BlockPos对象和一个LivingEntity对象。这个方法返回一个布尔值。</span></span><br><span class="line">    <span class="comment">//行代码返回false，表示默认情况下，这个物品不能破坏方块。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">mineBlock</span><span class="params">(ItemStack p_41416_, Level p_41417_, BlockState p_41418_, BlockPos p_41419_, LivingEntity p_41420_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//代码定义了一个公共的方法，这个方法的名字是isCorrectToolForDrops，接受一个BlockState对象作为参数。这个方法返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCorrectToolForDrops</span><span class="params">(BlockState p_41450_)</span> &#123;</span><br><span class="line">       <span class="comment">//返回false，表示默认情况下，这个物品不是破坏方块后获得掉落物的正确工具。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//代码定义了一个公共的方法，这个方法的名字是interactLivingEntity，接受四个参数：一个ItemStack对象，一个Player对象，一个LivingEntity对象和一个InteractionHand对象。这个方法返回一个InteractionResult对象。</span></span><br><span class="line">   <span class="keyword">public</span> InteractionResult <span class="title function_">interactLivingEntity</span><span class="params">(ItemStack p_41398_, Player p_41399_, LivingEntity p_41400_, InteractionHand p_41401_)</span> &#123;</span><br><span class="line">       <span class="comment">//代码返回InteractionResult.PASS，表示物品与生物的交互操作被跳过。</span></span><br><span class="line">      <span class="keyword">return</span> InteractionResult.PASS;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//代码定义了一个公共的方法，这个方法的名字是getDescription，没有参数，返回一个Component对象。</span></span><br><span class="line">   <span class="keyword">public</span> Component <span class="title function_">getDescription</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> Component.translatable(<span class="built_in">this</span>.getDescriptionId());</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这段代码定义了一个toString方法，这个方法返回物品的注册表键的字符串表示。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> BuiltInRegistries.ITEM.getKey(<span class="built_in">this</span>).toString();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个getOrCreateDescriptionId方法，这个方法首先检查descriptionId是否为null。如果descriptionId为null，那么它就使用Util.makeDescriptionId方法创建一个新的描述ID，并将其赋值给descriptionId。然后，这个方法返回descriptionId。</span></span><br><span class="line">   <span class="keyword">protected</span> String <span class="title function_">getOrCreateDescriptionId</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.descriptionId == <span class="literal">null</span>) &#123;</span><br><span class="line">         <span class="built_in">this</span>.descriptionId = Util.makeDescriptionId(<span class="string">&quot;item&quot;</span>, BuiltInRegistries.ITEM.getKey(<span class="built_in">this</span>));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.descriptionId;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个getDescriptionId方法，这个方法调用getOrCreateDescriptionId方法并返回结果。</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getDescriptionId</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.getOrCreateDescriptionId();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//段代码定义了一个getDescriptionId方法，这个方法接受一个ItemStack对象作为参数，但实际上并没有使用这个参数，而是简单地调用另一个getDescriptionId方法并返回结果。</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getDescriptionId</span><span class="params">(ItemStack p_41455_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.getDescriptionId();</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//段代码定义了一个shouldOverrideMultiplayerNbt方法，这个方法返回true，表示在多人游戏中，这个物品应该覆盖NBT（Named Binary Tag）数据。</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldOverrideMultiplayerNbt</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 定义了一个公共的最终方法，这个方法的名字是getCraftingRemainingItem，没有参数，返回一个Item对象。这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。注释也提示应该使用物品堆叠对象敏感的版本。</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">// Use ItemStack sensitive version.</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">final</span> Item <span class="title function_">getCraftingRemainingItem</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 获得合成后保留物品</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.craftingRemainingItem;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是hasCraftingRemainingItem，没有参数，返回一个布尔值。这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。注释也提示应该使用物品堆叠对象敏感的版本。</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">// Use ItemStack sensitive version.</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasCraftingRemainingItem</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 是否具有合成保留物品</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.craftingRemainingItem != <span class="literal">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> <span class="comment">// 这个方法的名字是inventoryTick，接受五个参数：一个ItemStack对象，一个Level对象，一个Entity对象，一个整数和一个布尔值。这个方法没有返回值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inventoryTick</span><span class="params">(ItemStack p_41404_, Level p_41405_, Entity p_41406_, <span class="type">int</span> p_41407_, <span class="type">boolean</span> p_41408_)</span> &#123;</span><br><span class="line">       <span class="comment">// 背包中每tick回调</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 这个方法的名字是onCraftedBy，接受三个参数：一个ItemStack对象，一个Level对象和一个Player对象。这个方法没有返回值</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCraftedBy</span><span class="params">(ItemStack p_41447_, Level p_41448_, Player p_41449_)</span> &#123;</span><br><span class="line">       <span class="comment">//方法的作用是处理物品被玩家制作后的行为</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//代码定义了一个公共的方法，这个方法的名字是isComplex，没有参数，返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isComplex</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//代码定义了一个公共的方法，这个方法的名字是getUseAnimation，接受一个ItemStack对象作为参数，返回一个UseAnim对象。</span></span><br><span class="line">   <span class="keyword">public</span> UseAnim <span class="title function_">getUseAnimation</span><span class="params">(ItemStack p_41452_)</span> &#123;</span><br><span class="line">       <span class="comment">//代码返回p_41452_.getItem().isEdible() ? UseAnim.EAT : UseAnim.NONE，表示物品使用的动画。如果物品是可食用的，那么这个物品的使用动画是UseAnim.EAT；否则，这个物品的使用动画是UseAnim.NONE。</span></span><br><span class="line">      <span class="keyword">return</span> p_41452_.getItem().isEdible() ? UseAnim.EAT : UseAnim.NONE;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是getUseDuration，接受一个ItemStack对象作为参数，返回一个整数。</span></span><br><span class="line">    <span class="comment">//返回使用的持续时间</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUseDuration</span><span class="params">(ItemStack p_41454_)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (p_41454_.getItem().isEdible()) &#123;</span><br><span class="line">         <span class="keyword">return</span> p_41454_.getFoodProperties(<span class="literal">null</span>).isFastFood() ? <span class="number">16</span> : <span class="number">32</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//代码定义了一个公共的方法，这个方法的名字是releaseUsing，接受四个参数：一个ItemStack对象，一个Level对象，一个LivingEntity对象和一个整数。这个方法没有返回值。</span></span><br><span class="line">    <span class="comment">//方法的作用是处理物品停止使用后的行为。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">releaseUsing</span><span class="params">(ItemStack p_41412_, Level p_41413_, LivingEntity p_41414_, <span class="type">int</span> p_41415_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是appendHoverText，接受四个参数：一个ItemStack对象，一个可能为null的Level对象，一个Component对象的列表和一个TooltipFlag对象。这个方法没有返回值。</span></span><br><span class="line">    <span class="comment">//这个方法的作用是添加物品的悬停文本</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">appendHoverText</span><span class="params">(ItemStack p_41421_, <span class="meta">@Nullable</span> Level p_41422_, List&lt;Component&gt; p_41423_, TooltipFlag p_41424_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这行代码定义了一个公共的方法，这个方法的名字是getTooltipImage，接受一个ItemStack对象作为参数，返回一个Optional&lt;TooltipComponent&gt;对象。</span></span><br><span class="line">   <span class="keyword">public</span> Optional&lt;TooltipComponent&gt; <span class="title function_">getTooltipImage</span><span class="params">(ItemStack p_150902_)</span> &#123;</span><br><span class="line">       <span class="comment">//代码返回Optional.empty()，表示物品的工具提示图片是空的。</span></span><br><span class="line">      <span class="keyword">return</span> Optional.empty();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这行代码定义了一个公共的方法，这个方法的名字是getName，接受一个ItemStack对象作为参数，返回一个Component对象。</span></span><br><span class="line">   <span class="keyword">public</span> Component <span class="title function_">getName</span><span class="params">(ItemStack p_41458_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> Component.translatable(<span class="built_in">this</span>.getDescriptionId(p_41458_));</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是isFoil，接受一个ItemStack对象作为参数，返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFoil</span><span class="params">(ItemStack p_41453_)</span> &#123;</span><br><span class="line">       <span class="comment">//表示物品是否有附魔效果。如果物品有附魔效果，那么这个物品就是镀金的；否则，这个物品就不是镀金的</span></span><br><span class="line">      <span class="keyword">return</span> p_41453_.isEnchanted();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是getRarity，接受一个ItemStack对象作为参数，返回一个Rarity对象。</span></span><br><span class="line">   <span class="keyword">public</span> Rarity <span class="title function_">getRarity</span><span class="params">(ItemStack p_41461_)</span> &#123;</span><br><span class="line">       <span class="comment">//首先检查物品是否有附魔效果。如果物品没有附魔效果，那么这个方法返回物品的稀有度；如果物品有附魔效果，那么这个方法根据物品的稀有度返回新的稀有度。</span></span><br><span class="line">      <span class="keyword">if</span> (!p_41461_.isEnchanted()) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">this</span>.rarity;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">switch</span>(<span class="built_in">this</span>.rarity) &#123;</span><br><span class="line">            <span class="keyword">case</span> COMMON:</span><br><span class="line">            <span class="keyword">case</span> UNCOMMON:</span><br><span class="line">               <span class="keyword">return</span> Rarity.RARE;</span><br><span class="line">            <span class="keyword">case</span> RARE:</span><br><span class="line">               <span class="keyword">return</span> Rarity.EPIC;</span><br><span class="line">            <span class="keyword">case</span> EPIC:</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">               <span class="keyword">return</span> <span class="built_in">this</span>.rarity;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是isEnchantable，接受一个ItemStack对象作为参数，返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEnchantable</span><span class="params">(ItemStack p_41456_)</span> &#123;</span><br><span class="line">       <span class="comment">//表示物品是否可以附魔。如果物品的最大堆叠数是1且物品是可损坏的，那么这个物品就可以附魔；否则，这个物品就不可以附魔</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.getMaxStackSize(p_41456_) == <span class="number">1</span> &amp;&amp; <span class="built_in">this</span>.isDamageable(p_41456_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是getPlayerPOVHitResult，接受三个参数：一个Level对象，一个Player对象和一个ClipContext.Fluid对象，返回一个BlockHitResult对象。</span></span><br><span class="line">    <span class="comment">//个方法的作用是获取玩家的视角点击结果。</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">static</span> BlockHitResult <span class="title function_">getPlayerPOVHitResult</span><span class="params">(Level p_41436_, Player p_41437_, ClipContext.Fluid p_41438_)</span> &#123;</span><br><span class="line">       <span class="comment">//这个方法获取了玩家的视角旋转角度和位置</span></span><br><span class="line">      <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> p_41437_.getXRot();</span><br><span class="line">      <span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> p_41437_.getYRot();</span><br><span class="line">      <span class="type">Vec3</span> <span class="variable">vec3</span> <span class="operator">=</span> p_41437_.getEyePosition();</span><br><span class="line">       <span class="comment">//然后计算出了玩家的视角方向向量,这个向量用于确定玩家正在看向哪个方向</span></span><br><span class="line">      <span class="type">float</span> <span class="variable">f2</span> <span class="operator">=</span> Mth.cos(-f1 * (<span class="type">float</span>) (Math.PI / <span class="number">180.0</span>) - (<span class="type">float</span>) Math.PI);</span><br><span class="line">      <span class="type">float</span> <span class="variable">f3</span> <span class="operator">=</span> Mth.sin(-f1 * (<span class="type">float</span>) (Math.PI / <span class="number">180.0</span>) - (<span class="type">float</span>) Math.PI);</span><br><span class="line">      <span class="type">float</span> <span class="variable">f4</span> <span class="operator">=</span> -Mth.cos(-f * (<span class="type">float</span>) (Math.PI / <span class="number">180.0</span>));</span><br><span class="line">      <span class="type">float</span> <span class="variable">f5</span> <span class="operator">=</span> Mth.sin(-f * (<span class="type">float</span>) (Math.PI / <span class="number">180.0</span>));</span><br><span class="line">      <span class="type">float</span> <span class="variable">f6</span> <span class="operator">=</span> f3 * f4;</span><br><span class="line">      <span class="type">float</span> <span class="variable">f7</span> <span class="operator">=</span> f2 * f4;</span><br><span class="line">      <span class="type">double</span> <span class="variable">d0</span> <span class="operator">=</span> p_41437_.getBlockReach();</span><br><span class="line">      <span class="type">Vec3</span> <span class="variable">vec31</span> <span class="operator">=</span> vec3.add((<span class="type">double</span>)f6 * d0, (<span class="type">double</span>)f5 * d0, (<span class="type">double</span>)f7 * d0);</span><br><span class="line">       <span class="comment">//这个方法返回了玩家的视角点击结果。这个结果可以用于判断玩家的视角点击到的方块和位置，以及玩家是否点击到了方块。</span></span><br><span class="line">       <span class="comment">//这个结果是一个BlockHitResult对象，表示玩家的视角点击到的方块和位置。</span></span><br><span class="line">      <span class="keyword">return</span> p_41436_.clip(<span class="keyword">new</span> <span class="title class_">ClipContext</span>(vec3, vec31, ClipContext.Block.OUTLINE, p_41438_, p_41437_));</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是getEnchantmentValue，没有参数，返回一个整数。这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。</span></span><br><span class="line">   <span class="comment">/** Forge: Use ItemStack sensitive version. */</span></span><br><span class="line">   <span class="meta">@Deprecated</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getEnchantmentValue</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//这个方法的作用是获取这个物品的附魔值</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是isValidRepairItem，接受两个ItemStack对象作为参数，返回一个布尔值</span></span><br><span class="line">    <span class="comment">//这个物品不是有效的修理物品。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValidRepairItem</span><span class="params">(ItemStack p_41402_, ItemStack p_41403_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是getDefaultAttributeModifiers，接受一个EquipmentSlot对象作为参数，返回一个Multimap&lt;Attribute, AttributeModifier&gt;对象。这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">// Use ItemStack sensitive version.</span></span><br><span class="line">   <span class="keyword">public</span> Multimap&lt;Attribute, AttributeModifier&gt; <span class="title function_">getDefaultAttributeModifiers</span><span class="params">(EquipmentSlot p_41388_)</span> &#123;</span><br><span class="line">       <span class="comment">//代码返回一个不可变的多值映射，这个映射是空的。</span></span><br><span class="line">      <span class="keyword">return</span> ImmutableMultimap.of();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//代码定义了一个受保护的最终的布尔变量，这个变量的名字是canRepair。</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">final</span> <span class="type">boolean</span> canRepair;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是isRepairable，接受一个ItemStack对象作为参数，返回一个布尔值。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isRepairable</span><span class="params">(ItemStack stack)</span> &#123;</span><br><span class="line">       <span class="comment">//果这个物品可以修理且是可损坏的，那么这个物品就可以修理；否则，这个物品就不可以修理。</span></span><br><span class="line">      <span class="keyword">return</span> canRepair &amp;&amp; isDamageable(stack);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是useOnRelease，接受一个ItemStack对象作为参数，返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">useOnRelease</span><span class="params">(ItemStack p_41464_)</span> &#123;</span><br><span class="line">       <span class="comment">//表示这个物品是否在释放时使用。如果这个物品是一个十字弓，那么这个物品就在释放时使用；否则，这个物品就不在释放时使用。</span></span><br><span class="line">      <span class="keyword">return</span> p_41464_.getItem() == Items.CROSSBOW;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是getDefaultInstance，没有参数，返回一个ItemStack对象。</span></span><br><span class="line">   <span class="keyword">public</span> ItemStack <span class="title function_">getDefaultInstance</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ItemStack</span>(<span class="built_in">this</span>);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这行代码定义了一个公共的方法，这个方法的名字是isEdible，没有参数，返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEdible</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//表示这个物品是否可以食用。如果这个物品有食物属性，那么这个物品就可以食用；否则，这个物品就不可以食用。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.foodProperties != <span class="literal">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//码定义了一个公共的方法，这个方法的名字是getFoodProperties，没有参数，返回一个FoodProperties对象。这个方法被@Deprecated和@Nullable注解标记，表示这个方法已经被弃用，不建议再使用，且可能返回null。</span></span><br><span class="line">   <span class="comment">// Use IForgeItem#getFoodProperties(ItemStack, LivingEntity) in favour of this.</span></span><br><span class="line">   <span class="meta">@Deprecated</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">public</span> FoodProperties <span class="title function_">getFoodProperties</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//行代码返回this.foodProperties，表示这个物品的食物属性。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.foodProperties;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是getDrinkingSound，没有参数，返回一个SoundEvent对象。</span></span><br><span class="line">   <span class="keyword">public</span> SoundEvent <span class="title function_">getDrinkingSound</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//返回SoundEvents.GENERIC_DRINK，表示这个物品的饮用声音。</span></span><br><span class="line">      <span class="keyword">return</span> SoundEvents.GENERIC_DRINK;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> SoundEvent <span class="title function_">getEatingSound</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> SoundEvents.GENERIC_EAT;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是isFireResistant，没有参数，返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFireResistant</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.isFireResistant;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是canBeHurtBy，接受一个DamageSource对象作为参数，返回一个布尔值</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canBeHurtBy</span><span class="params">(DamageSource p_41387_)</span> &#123;</span><br><span class="line">       <span class="comment">//如果这个物品不对火有抵抗力，或者伤害源不是火伤害，那么这个物品就可以被伤害；否则，这个物品就不可以被伤害</span></span><br><span class="line">      <span class="keyword">return</span> !<span class="built_in">this</span>.isFireResistant || !p_41387_.is(DamageTypeTags.IS_FIRE);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//表示这个物品可以放入容器中。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canFitInsideContainerItems</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是requiredFeatures，没有参数，返回一个FeatureFlagSet对象。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> FeatureFlagSet <span class="title function_">requiredFeatures</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//示这个物品需要的特性标志集。</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.requiredFeatures;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// FORGE START</span></span><br><span class="line">    <span class="comment">//代码定义了一个私有的对象变量，这个变量的名字是renderProperties。</span></span><br><span class="line">   <span class="keyword">private</span> Object renderProperties;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">      DO NOT CALL, IT WILL DISAPPEAR IN THE FUTURE</span></span><br><span class="line"><span class="comment">      Call RenderProperties.get instead</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//这行代码定义了一个公共的方法，这个方法的名字是getRenderPropertiesInternal，没有参数，返回一个Object对象。</span></span><br><span class="line">   <span class="keyword">public</span> Object <span class="title function_">getRenderPropertiesInternal</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//代码返回renderProperties，表示这个物品的渲染属性。</span></span><br><span class="line">      <span class="keyword">return</span> renderProperties;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//代码定义了一个私有的方法，这个方法的名字是initClient，没有参数。</span></span><br><span class="line">    <span class="comment">//方法的作用是初始化客户端</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initClient</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">// Minecraft instance isn&#x27;t available in datagen, so don&#x27;t call initializeClient if in datagen</span></span><br><span class="line">      <span class="keyword">if</span> (net.neoforged.fml.loading.FMLEnvironment.dist == net.neoforged.api.distmarker.Dist.CLIENT &amp;&amp; !net.neoforged.fml.loading.FMLLoader.getLaunchHandler().isData()) &#123;</span><br><span class="line">         initializeClient(properties -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (properties == <span class="built_in">this</span>)</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Don&#x27;t extend IItemRenderProperties in your item, use an anonymous class instead.&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.renderProperties = properties;</span><br><span class="line">         &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是initializeClient，接受一个java.util.function.Consumer&lt;net.neoforged.neoforge.client.extensions.common.IClientItemExtensions&gt;对象作为参数。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initializeClient</span><span class="params">(java.util.function.Consumer&lt;net.neoforged.neoforge.client.extensions.common.IClientItemExtensions&gt; consumer)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// END FORGE</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Properties</span> &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">maxStackSize</span> <span class="operator">=</span> <span class="number">64</span>; <span class="comment">//物品的最大堆叠数量</span></span><br><span class="line">      <span class="type">int</span> maxDamage; <span class="comment">// 最大耐久度</span></span><br><span class="line">      <span class="meta">@Nullable</span></span><br><span class="line">      Item craftingRemainingItem; <span class="comment">// 制作时是否保留物品</span></span><br><span class="line">      <span class="type">Rarity</span> <span class="variable">rarity</span> <span class="operator">=</span> Rarity.COMMON; <span class="comment">//物品的稀有度</span></span><br><span class="line">      <span class="meta">@Nullable</span></span><br><span class="line">      FoodProperties foodProperties; <span class="comment">//物品的食物属性</span></span><br><span class="line">      <span class="type">boolean</span> isFireResistant; <span class="comment">//物品是否对火有抵抗力</span></span><br><span class="line">       <span class="comment">//物品需要的特性标志集</span></span><br><span class="line">      <span class="type">FeatureFlagSet</span> <span class="variable">requiredFeatures</span> <span class="operator">=</span> FeatureFlags.VANILLA_SET;</span><br><span class="line">      <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">canRepair</span> <span class="operator">=</span> <span class="literal">true</span>;<span class="comment">//是否可以修理。</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> Item.Properties <span class="title function_">food</span><span class="params">(FoodProperties p_41490_)</span> &#123;</span><br><span class="line">          <span class="comment">//这个方法的作用是设置物品的食物属性。</span></span><br><span class="line">         <span class="built_in">this</span>.foodProperties = p_41490_;</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//这两行代码检查了物品的最大耐久度是否大于0，如果是，那么抛出一个异常；否则，设置物品的最大堆叠数量，并返回Item.Properties对象。</span></span><br><span class="line">      <span class="keyword">public</span> Item.Properties <span class="title function_">stacksTo</span><span class="params">(<span class="type">int</span> p_41488_)</span> &#123;</span><br><span class="line">         <span class="keyword">if</span> (<span class="built_in">this</span>.maxDamage &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Unable to have damage AND stack.&quot;</span>);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.maxStackSize = p_41488_;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//行代码返回this.maxDamage == 0 ? this.durability(p_41500_) : this，表示如果物品的最大耐久度为0，那么设置物品的耐久度，并返回Item.Properties对象；否则，直接返回Item.Properties对象。</span></span><br><span class="line">      <span class="keyword">public</span> Item.Properties <span class="title function_">defaultDurability</span><span class="params">(<span class="type">int</span> p_41500_)</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">this</span>.maxDamage == <span class="number">0</span> ? <span class="built_in">this</span>.durability(p_41500_) : <span class="built_in">this</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//两行代码设置了物品的最大耐久度和最大堆叠数量，并返回了Item.Properties对象。</span></span><br><span class="line">      <span class="keyword">public</span> Item.Properties <span class="title function_">durability</span><span class="params">(<span class="type">int</span> p_41504_)</span> &#123;</span><br><span class="line">         <span class="built_in">this</span>.maxDamage = p_41504_;</span><br><span class="line">         <span class="built_in">this</span>.maxStackSize = <span class="number">1</span>;</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//这两行代码设置了物品在制作时剩余的物品，并返回了Item.Properties对象。</span></span><br><span class="line">      <span class="keyword">public</span> Item.Properties <span class="title function_">craftRemainder</span><span class="params">(Item p_41496_)</span> &#123;</span><br><span class="line">         <span class="built_in">this</span>.craftingRemainingItem = p_41496_;</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//设置稀有度</span></span><br><span class="line">      <span class="keyword">public</span> Item.Properties <span class="title function_">rarity</span><span class="params">(Rarity p_41498_)</span> &#123;</span><br><span class="line">         <span class="built_in">this</span>.rarity = p_41498_;</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">// 设置扛火</span></span><br><span class="line">      <span class="keyword">public</span> Item.Properties <span class="title function_">fireResistant</span><span class="params">()</span> &#123;</span><br><span class="line">         <span class="built_in">this</span>.isFireResistant = <span class="literal">true</span>;</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">// 设置不可修复</span></span><br><span class="line">      <span class="keyword">public</span> Item.Properties <span class="title function_">setNoRepair</span><span class="params">()</span> &#123;</span><br><span class="line">         canRepair = <span class="literal">false</span>;</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//这个方法的名字是requiredFeatures，接受一个FeatureFlag数组作为参数，返回Item.Properties对象。</span></span><br><span class="line">      <span class="keyword">public</span> Item.Properties <span class="title function_">requiredFeatures</span><span class="params">(FeatureFlag... p_250948_)</span> &#123;</span><br><span class="line">          <span class="comment">//设置了物品需要的特性标志集，并返回了Item.Properties对象。</span></span><br><span class="line">         <span class="built_in">this</span>.requiredFeatures = FeatureFlags.REGISTRY.subset(p_250948_);</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07-pytorch-save and load model</title>
      <link href="/2023/11/12/07-pytorch-save-and-load-model/"/>
      <url>/2023/11/12/07-pytorch-save-and-load-model/</url>
      
        <content type="html"><![CDATA[<h1 id="SAVE-AND-LOAD-THE-MODEL"><a href="#SAVE-AND-LOAD-THE-MODEL" class="headerlink" title="SAVE AND LOAD THE MODEL"></a>SAVE AND LOAD THE MODEL</h1><p>在本节中，我们将了解如何通过保存、加载和运行模型预测来持久保存模型状态。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision.models <span class="keyword">as</span> models</span><br></pre></td></tr></table></figure><h2 id="Saving-and-Loading-Model-Weights"><a href="#Saving-and-Loading-Model-Weights" class="headerlink" title="Saving and Loading Model Weights"></a>Saving and Loading Model Weights</h2><p>PyTorch 模型将学习到的参数存储在内部状态字典中，称为 <code>state_dict</code> 。这些可以通过 <code>torch.save</code> 方法保存：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = models.vgg16(weights=<span class="string">&#x27;IMAGENET1K_V1&#x27;</span>)</span><br><span class="line">torch.save(model.state_dict(), <span class="string">&#x27;model_weights.pth&#x27;</span>)</span><br></pre></td></tr></table></figure><p>要加载模型权重，您需要先创建同一模型的实例，然后使用 <code>load_state_dict()</code> 方法加载参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model = models.vgg16() <span class="comment"># we do not specify ``weights``, i.e. create untrained model</span></span><br><span class="line">model.load_state_dict(torch.load(<span class="string">&#x27;model_weights.pth&#x27;</span>))</span><br><span class="line">model.<span class="built_in">eval</span>()</span><br></pre></td></tr></table></figure><blockquote><p>请务必在推理之前调用 <code>model.eval()</code> 方法，将 dropout 和批量归一化层设置为评估模式。如果不这样做将会产生不一致的推理结果。</p></blockquote><h2 id="Saving-and-Loading-Models-with-Shapes"><a href="#Saving-and-Loading-Models-with-Shapes" class="headerlink" title="Saving and Loading Models with Shapes"></a>Saving and Loading Models with Shapes</h2><p>加载模型权重时，我们需要首先实例化模型类，因为该类定义了网络的结构。我们可能希望将此类的结构与模型一起保存，在这种情况下，我们可以将 <code>model</code> （而不是 <code>model.state_dict()</code> ）传递给保存函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.save(model, <span class="string">&#x27;model.pth&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后我们可以像这样加载模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = torch.load(<span class="string">&#x27;model.pth&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>此方法在序列化模型时使用 Python pickle 模块，因此它依赖于加载模型时可用的实际类定义。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> save load model </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06-pytorch-optimizing model parameters</title>
      <link href="/2023/11/10/06-pytorch-optimizing-model-parameters/"/>
      <url>/2023/11/10/06-pytorch-optimizing-model-parameters/</url>
      
        <content type="html"><![CDATA[<h1 id="OPTIMIZING-MODEL-PARAMETERS"><a href="#OPTIMIZING-MODEL-PARAMETERS" class="headerlink" title="OPTIMIZING MODEL PARAMETERS"></a>OPTIMIZING MODEL PARAMETERS</h1><p>现在我们有了模型和数据，是时候通过优化数据上的参数来训练、验证和测试我们的模型了。训练模型是一个迭代过程；在每次迭代中，模型都会对输出进行猜测，计算其猜测的误差（损失），收集误差相对于其参数的导数（如我们在上一节中看到的），并使用梯度下降优化这些参数。有关此过程的更详细演练，请观看 3Blue1Brown 的有关反向传播的<br><a href="https://www.youtube.com/watch?v=tIeHLnjs5U8">视频</a></p><h2 id="Prerequisite-Code"><a href="#Prerequisite-Code" class="headerlink" title="Prerequisite Code"></a>Prerequisite Code</h2><p>我们加载前面有关数据集和数据加载器以及构建模型部分的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> torchvision.transforms <span class="keyword">import</span> ToTensor</span><br><span class="line"></span><br><span class="line">training_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">train_dataloader = DataLoader(training_data, batch_size=<span class="number">64</span>)</span><br><span class="line">test_dataloader = DataLoader(test_data, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NeuralNetwork</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.flatten = nn.Flatten()</span><br><span class="line">        self.linear_relu_stack = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">28</span>*<span class="number">28</span>, <span class="number">512</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">512</span>, <span class="number">512</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">512</span>, <span class="number">10</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.flatten(x)</span><br><span class="line">        logits = self.linear_relu_stack(x)</span><br><span class="line">        <span class="keyword">return</span> logits</span><br><span class="line"></span><br><span class="line">model = NeuralNetwork()</span><br></pre></td></tr></table></figure><h2 id="Hyperparameters"><a href="#Hyperparameters" class="headerlink" title="Hyperparameters"></a>Hyperparameters</h2><p>超参数是可调整的参数，可让您控制模型优化过程。不同的超参数值会影响模型训练和收敛速度（阅读有关超参数调整的更多信息）</p><p>我们定义以下训练超参数：</p><ul><li>Number of Epochs - 迭代数据集的次数</li><li>Batch Size - 参数更新之前通过网络传播的数据样本数量</li><li>学习率 - 每个批次&#x2F;时期更新模型参数的量。较小的值会导致学习速度较慢，而较大的值可能会导致训练期间出现不可预测的行为。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">learning_rate = <span class="number">1e-3</span></span><br><span class="line">batch_size = <span class="number">64</span></span><br><span class="line">epochs = <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="Optimization-Loop"><a href="#Optimization-Loop" class="headerlink" title="Optimization Loop"></a>Optimization Loop</h2><p>一旦我们设置了超参数，我们就可以使用优化循环来训练和优化我们的模型。优化循环的每次迭代称为一个时期epoch。</p><p>每个时期epoch由两个主要部分组成：</p><ul><li>The Train Loop:迭代训练数据集并尝试收敛到最佳参数。</li><li>The Validation&#x2F;Test Loop:迭代测试数据集以检查模型性能是否有所改善。</li></ul><p>让我们简单熟悉一下训练循环中使用的一些概念。向前跳转查看优化循环的完整实现。</p><h3 id="Loss-Function"><a href="#Loss-Function" class="headerlink" title="Loss Function"></a>Loss Function</h3><p>当提供一些训练数据时，我们未经训练的网络可能不会给出正确的答案。损失函数衡量的是得到的结果与目标值的不相似程度，它是我们在训练时想要最小化的损失函数。为了计算损失，我们使用给定数据样本的输入进行预测，并将其与真实数据标签值进行比较。</p><p>常见的损失函数包括用于回归任务的 nn.MSELoss（均方误差）和用于分类的 nn.NLLLoss（负对数似然）。 nn.CrossEntropyLoss 结合了 <code>nn.LogSoftmax</code> 和 <code>nn.NLLLoss</code> 。</p><p>我们将模型的输出 logits 传递给 <code>nn.CrossEntropyLoss</code> ，这将标准化 logits 并计算预测误差。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Initialize the loss function</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br></pre></td></tr></table></figure><h3 id="Optimizer"><a href="#Optimizer" class="headerlink" title="Optimizer"></a>Optimizer</h3><p>优化是调整模型参数以减少每个训练步骤中模型误差的过程。优化算法定义了如何执行此过程（在本例中我们使用随机梯度下降）。所有优化逻辑都封装在 <code>optimizer</code> 对象中。这里，我们使用SGD优化器；此外，PyTorch 中还有许多不同的优化器，例如 ADAM 和 RMSProp，它们可以更好地处理不同类型的模型和数据。</p><p>我们通过注册需要训练的模型参数并传入学习率超参数来初始化优化器。</p><p>在训练循环中，优化分三个步骤进行：</p><ul><li>调用 <code>optimizer.zero_grad()</code> 重置模型参数的梯度。默认情况下渐变相加；为了防止重复计算，我们在每次迭代时明确地将它们归零。</li><li>通过调用 <code>loss.backward()</code> 反向传播预测损失。 PyTorch 存储损失的梯度。每个参数。</li><li>一旦我们有了梯度，我们就调用 optimizer.step() 通过向后传递中收集的梯度来调整参数。</li></ul><h2 id="Full-Implementation"><a href="#Full-Implementation" class="headerlink" title="Full Implementation"></a>Full Implementation</h2><p>我们定义了循环优化代码的 <code>train_loop</code> 和根据测试数据评估模型性能的 <code>test_loop</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">train_loop</span>(<span class="params">dataloader, model, loss_fn, optimizer</span>):</span><br><span class="line">    size = <span class="built_in">len</span>(dataloader.dataset)</span><br><span class="line">    <span class="comment"># Set the model to training mode - important for batch normalization and dropout layers</span></span><br><span class="line">    <span class="comment"># Unnecessary in this situation but added for best practices</span></span><br><span class="line">    model.train()</span><br><span class="line">    <span class="keyword">for</span> batch, (X, y) <span class="keyword">in</span> <span class="built_in">enumerate</span>(dataloader):</span><br><span class="line">        <span class="comment"># Compute prediction and loss</span></span><br><span class="line">        pred = model(X)</span><br><span class="line">        loss = loss_fn(pred, y)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Backpropagation</span></span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> batch % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">            loss, current = loss.item(), (batch + <span class="number">1</span>) * <span class="built_in">len</span>(X)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;loss: <span class="subst">&#123;loss:&gt;7f&#125;</span>  [<span class="subst">&#123;current:&gt;5d&#125;</span>/<span class="subst">&#123;size:&gt;5d&#125;</span>]&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_loop</span>(<span class="params">dataloader, model, loss_fn</span>):</span><br><span class="line">    <span class="comment"># Set the model to evaluation mode - important for batch normalization and dropout layers</span></span><br><span class="line">    <span class="comment"># Unnecessary in this situation but added for best practices</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    size = <span class="built_in">len</span>(dataloader.dataset)</span><br><span class="line">    num_batches = <span class="built_in">len</span>(dataloader)</span><br><span class="line">    test_loss, correct = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Evaluating the model with torch.no_grad() ensures that no gradients are computed during test mode</span></span><br><span class="line">    <span class="comment"># also serves to reduce unnecessary gradient computations and memory usage for tensors with requires_grad=True</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> X, y <span class="keyword">in</span> dataloader:</span><br><span class="line">            pred = model(X)</span><br><span class="line">            test_loss += loss_fn(pred, y).item()</span><br><span class="line">            correct += (pred.argmax(<span class="number">1</span>) == y).<span class="built_in">type</span>(torch.<span class="built_in">float</span>).<span class="built_in">sum</span>().item()</span><br><span class="line"></span><br><span class="line">    test_loss /= num_batches</span><br><span class="line">    correct /= size</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Test Error: \n Accuracy: <span class="subst">&#123;(<span class="number">100</span>*correct):&gt;<span class="number">0.1</span>f&#125;</span>%, Avg loss: <span class="subst">&#123;test_loss:&gt;8f&#125;</span> \n&quot;</span>)</span><br></pre></td></tr></table></figure><p>我们初始化损失函数和优化器，并将其传递给 <code>train_loop</code> 和 <code>test_loop</code> 。您可以随意增加纪元数来跟踪模型性能的改进。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br><span class="line">optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)</span><br><span class="line"></span><br><span class="line">epochs = <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Epoch <span class="subst">&#123;t+<span class="number">1</span>&#125;</span>\n-------------------------------&quot;</span>)</span><br><span class="line">    train_loop(train_dataloader, model, loss_fn, optimizer)</span><br><span class="line">    test_loop(test_dataloader, model, loss_fn)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Done!&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> optimizing model parameters </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05_pytorch_AUTOMATIC_DIFFERENTIATION</title>
      <link href="/2023/11/10/05-pytorch-AUTOMATIC-DIFFERENTIATION/"/>
      <url>/2023/11/10/05-pytorch-AUTOMATIC-DIFFERENTIATION/</url>
      
        <content type="html"><![CDATA[<h1 id="AUTOMATIC-DIFFERENTIATION-WITH-TORCH-AUTOGRAD"><a href="#AUTOMATIC-DIFFERENTIATION-WITH-TORCH-AUTOGRAD" class="headerlink" title="AUTOMATIC DIFFERENTIATION WITH TORCH.AUTOGRAD"></a>AUTOMATIC DIFFERENTIATION WITH <code>TORCH.AUTOGRAD</code></h1><p>在训练神经网络时，最常用的算法是反向传播。在该算法中，根据损失函数相对于给定参数的梯度来调整参数（模型权重）。</p><p>为了计算这些梯度，PyTorch 有一个名为 <code>torch.autograd</code> 的内置微分引擎。它支持任何计算图的梯度自动计算。</p><p>考虑最简单的单层神经网络，具有输入 <code>x</code> 、参数 <code>w</code> 和 <code>b</code> 以及一些损失函数。它可以通过以下方式在 PyTorch 中定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x = torch.ones(<span class="number">5</span>)  <span class="comment"># input tensor</span></span><br><span class="line">y = torch.zeros(<span class="number">3</span>)  <span class="comment"># expected output</span></span><br><span class="line">w = torch.randn(<span class="number">5</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">b = torch.randn(<span class="number">3</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">z = torch.matmul(x, w)+b</span><br><span class="line">loss = torch.nn.functional.binary_cross_entropy_with_logits(z, y)</span><br></pre></td></tr></table></figure><h2 id="Tensors-Functions-and-Computational-graph"><a href="#Tensors-Functions-and-Computational-graph" class="headerlink" title="Tensors, Functions and Computational graph"></a>Tensors, Functions and Computational graph</h2><p>该代码定义了以下计算图：</p><p><img src="https://s2.loli.net/2023/11/10/sPfwv1i3QHr7kte.png" alt="img"></p><p>在这个网络中， <code>w</code> 和 <code>b</code> 是我们需要优化的参数。因此，我们需要能够计算损失函数相对于这些变量的梯度。为此，我们设置这些张量的 <code>requires_grad</code> 属性。</p><blockquote><p>您可以在创建张量时设置 <code>requires_grad</code> 的值，或者稍后使用 <code>x.requires_grad_(True)</code> 方法设置。</p></blockquote><p>我们应用于张量来构造计算图的函数实际上是类 <code>Function</code> 的对象。该对象知道如何向前计算函数，以及如何在向后传播步骤中计算其导数。对反向传播函数的引用存储在张量的 <code>grad_fn</code> 属性中。您可以在<a href="https://pytorch.org/docs/stable/autograd.html#function">文档</a>中找到 <code>Function</code> 的更多信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Gradient function for z = <span class="subst">&#123;z.grad_fn&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Gradient function for loss = <span class="subst">&#123;loss.grad_fn&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Computing-Gradients"><a href="#Computing-Gradients" class="headerlink" title="Computing Gradients"></a>Computing Gradients</h2><p>为了优化神经网络中参数的权重，我们需要计算损失函数相对于参数的导数，即，我们需要在&lt;的一些固定值下的 $$ \frac{loss}{w} 和 \frac{loss}{b} $$  b2&gt; 和 <code>y</code> 。为了计算这些导数，我们调用 <code>loss.backward()</code> ，然后从 <code>w.grad</code> 和 <code>b.grad</code> 检索值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">loss.backward()</span><br><span class="line"><span class="built_in">print</span>(w.grad)</span><br><span class="line"><span class="built_in">print</span>(b.grad)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([[<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>],</span><br><span class="line">        [<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>],</span><br><span class="line">        [<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>],</span><br><span class="line">        [<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>],</span><br><span class="line">        [<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>]])</span><br><span class="line">tensor([<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>])</span><br></pre></td></tr></table></figure><blockquote><ul><li>我们只能获取计算图的叶节点的 <code>grad</code> 属性，其中 <code>requires_grad</code> 属性设置为 <code>True</code> 。对于我们图中的所有其他节点，梯度将不可用。</li><li>出于性能原因，我们只能在给定图上使用 <code>backward</code> 执行一次梯度计算。如果我们需要在同一个图表上执行多个 <code>backward</code> 调用，则需要将 <code>retain_graph=True</code> 传递给 <code>backward</code> 调用。</li></ul></blockquote><h2 id="Disabling-Gradient-Tracking"><a href="#Disabling-Gradient-Tracking" class="headerlink" title="Disabling Gradient Tracking"></a>Disabling Gradient Tracking</h2><p>默认情况下，所有具有 <code>requires_grad=True</code> 的张量都会跟踪其计算历史并支持梯度计算。然而，在某些情况下，我们不需要这样做，例如，当我们训练了模型并且只想将其应用于某些输入数据时，即我们只想通过网络进行前向计算。我们可以通过用 <code>torch.no_grad()</code> 块包围我们的计算代码来停止跟踪计算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">z = torch.matmul(x, w)+b</span><br><span class="line"><span class="built_in">print</span>(z.requires_grad)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    z = torch.matmul(x, w)+b</span><br><span class="line"><span class="built_in">print</span>(z.requires_grad)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>获得相同结果的另一种方法是在张量上使用 <code>detach()</code> 方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">z = torch.matmul(x, w)+b</span><br><span class="line">z_det = z.detach()</span><br><span class="line"><span class="built_in">print</span>(z_det.requires_grad)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False</span><br></pre></td></tr></table></figure><p>您可能想要禁用梯度跟踪的原因有：</p><ul><li>将神经网络中的某些参数标记为冻结参数。</li><li>当您仅进行前向传递时加快计算速度，因为对不跟踪梯度的张量进行计算会更有效。</li></ul><h2 id="More-on-Computational-Graphs"><a href="#More-on-Computational-Graphs" class="headerlink" title="More on Computational Graphs"></a>More on Computational Graphs</h2><p>从概念上讲，autograd 在由 Function 对象组成的有向无环图 (DAG) 中保存数据（张量）和所有执行的操作（以及生成的新张量）的记录。在这个 DAG 中，叶子是输入张量，根是输出张量。通过从根到叶追踪该图，您可以使用链式法则自动计算梯度。</p><p>在前向传递中，autograd 同时执行两件事：</p><ul><li>运行请求的操作来计算结果张量</li><li>在 DAG 中维护操作的梯度函数.</li></ul><p>当在 DAG 根上调用 <code>.backward()</code> 时，向后传递开始。 <code>autograd</code> 然后：</p><ul><li>计算每个 <code>.grad_fn</code> 的梯度，</li><li>将它们累积到相应张量的 <code>.grad</code> 属性中</li><li>使用链式法则，一直传播到叶张量。</li></ul><p>DAG 在 PyTorch 中是动态的需要注意的重要一点是图是从头开始重新创建的；每次 <code>.backward()</code> 调用后，autograd 开始填充新图表。这正是允许您在模型中使用控制流语句的原因；如果需要，您可以在每次迭代时更改形状、大小和操作。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 自动求导 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04_pytorch_build_the_neural_network</title>
      <link href="/2023/11/10/04-pytorch-build-the-neural-network/"/>
      <url>/2023/11/10/04-pytorch-build-the-neural-network/</url>
      
        <content type="html"><![CDATA[<h1 id="BUILD-THE-NEURAL-NETWORK"><a href="#BUILD-THE-NEURAL-NETWORK" class="headerlink" title="BUILD THE NEURAL NETWORK"></a>BUILD THE NEURAL NETWORK</h1><p><strong>神经网络的构成是什么？</strong></p><p>神经网络由对数据执行操作的层&#x2F;模块组成。 </p><p><strong>层和模块在哪里？</strong></p><p>torch.nn 命名空间提供了构建您自己的神经网络所需的所有构建块。</p><p> PyTorch 中的每个模块都是 nn.Module 的子类。</p><p><strong>神经网络的的嵌套构成</strong></p><p>神经网络本身就是一个模块，由其他模块（层）组成。</p><p><strong>嵌套结构的好处</strong></p><p>这种嵌套结构允许轻松构建和管理复杂的架构。</p><p>在以下部分中，我们将构建一个神经网络来对 FashionMNIST 数据集中的图像进行分类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets, transforms</span><br></pre></td></tr></table></figure><h2 id="Get-Device-for-Training"><a href="#Get-Device-for-Training" class="headerlink" title="Get Device for Training"></a>Get Device for Training</h2><p>如果我们在具有GPU的设备上，可以使用GPU加速。</p><p><strong>如何使用GPU？</strong></p><p>我们希望能够在 GPU 或 MPS 等硬件加速器（如果可用）上训练我们的模型。让我们检查一下  <a href="https://pytorch.org/docs/stable/notes/cuda.html">torch.cuda</a> 或者 <a href="https://pytorch.org/docs/stable/notes/mps.html">torch.backends.mps</a>是否可用，否则我们使用 CPU。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">device = (</span><br><span class="line">    <span class="string">&quot;cuda&quot;</span></span><br><span class="line">    <span class="keyword">if</span> torch.cuda.is_available()</span><br><span class="line">    <span class="keyword">else</span> <span class="string">&quot;mps&quot;</span></span><br><span class="line">    <span class="keyword">if</span> torch.backends.mps.is_available()</span><br><span class="line">    <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Using <span class="subst">&#123;device&#125;</span> device&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Define-the-Class"><a href="#Define-the-Class" class="headerlink" title="Define the Class"></a>Define the Class</h2><p>依照我们之前的说法，神经网络本身就是一个module，所以我们需要继承nn.Module。</p><p>我们通过子类化 <code>nn.Module</code> 来定义神经网络，并初始化 <code>__init__</code> 中的神经网络层。每个 <code>nn.Module</code> 子类都实现 <code>forward</code> 方法中对输入数据的操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NeuralNetwork</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.flatten = nn.Flatten()</span><br><span class="line">        self.linear_relu_stack = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">28</span>*<span class="number">28</span>, <span class="number">512</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">512</span>, <span class="number">512</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">512</span>, <span class="number">10</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.flatten(x)</span><br><span class="line">        logits = self.linear_relu_stack(x)</span><br><span class="line">        <span class="keyword">return</span> logits</span><br></pre></td></tr></table></figure><p>我们创建 <code>NeuralNetwork</code> 的实例，并将其移动到 <code>device</code> ，并打印其结构。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = NeuralNetwork().to(device)</span><br><span class="line"><span class="built_in">print</span>(model)</span><br></pre></td></tr></table></figure><p>为了使用该模型，我们将输入数据传递给它。这将执行模型的 <code>forward</code> 以及一些<a href="https://github.com/pytorch/pytorch/blob/270111b7b611d174967ed204776985cefca9c144/torch/nn/modules/module.py#L866">background operations</a>。不要直接调用 <code>model.forward()</code> ！</p><p>在输入上调用模型会返回一个二维张量，其中 dim&#x3D;0 对应于每个类的 10 个原始预测值的每个输出，dim&#x3D;1 对应于每个输出的各个值。我们通过将预测概率传递给 <code>nn.Softmax</code> 模块的实例来获取预测概率。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X = torch.rand(<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, device=device)</span><br><span class="line">logits = model(X)</span><br><span class="line">pred_probab = nn.Softmax(dim=<span class="number">1</span>)(logits)</span><br><span class="line">y_pred = pred_probab.argmax(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Predicted class: <span class="subst">&#123;y_pred&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Model-Layers"><a href="#Model-Layers" class="headerlink" title="Model Layers"></a>Model Layers</h2><p>让我们分解 FashionMNIST 模型中的各个层。为了说明这一点，我们将采用 3 张大小为 28x28 的图像的小批量样本，看看当我们将其传递到网络时会发生什么。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input_image = torch.rand(<span class="number">3</span>,<span class="number">28</span>,<span class="number">28</span>)</span><br><span class="line"><span class="built_in">print</span>(input_image.size())</span><br></pre></td></tr></table></figure><h3 id="nn-Flatten"><a href="#nn-Flatten" class="headerlink" title="nn.Flatten"></a>nn.Flatten</h3><p>我们初始化 <a href="https://pytorch.org/docs/stable/generated/torch.nn.Flatten.html">nn.Flatten</a>  层，将每个 2D 28x28 图像转换为 784 个像素值的连续数组（维持小批量维度（在 dim&#x3D;0 时））。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flatten = nn.Flatten()</span><br><span class="line">flat_image = flatten(input_image)</span><br><span class="line"><span class="built_in">print</span>(flat_image.size())</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.Size([3, 784])</span><br></pre></td></tr></table></figure><h3 id="nn-Linear"><a href="#nn-Linear" class="headerlink" title="nn.Linear"></a>nn.Linear</h3><p> <a href="https://pytorch.org/docs/stable/generated/torch.nn.Linear.html">linear layer</a>是一个使用其存储的权重和偏差对输入变量线性变换的模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layer1 = nn.Linear(in_features=<span class="number">28</span>*<span class="number">28</span>, out_features=<span class="number">20</span>)</span><br><span class="line">hidden1 = layer1(flat_image)</span><br><span class="line"><span class="built_in">print</span>(hidden1.size())</span><br></pre></td></tr></table></figure><h3 id="nn-ReLU"><a href="#nn-ReLU" class="headerlink" title="nn.ReLU"></a>nn.ReLU</h3><p>非线性激活在模型的输入和输出之间创建复杂的映射。它们在线性变换后应用以引入非线性，帮助神经网络学习各种现象。</p><p>在此模型中，我们在线性层之间使用 nn.ReLU，但还有其他激活可以在模型中引入非线性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Before ReLU: <span class="subst">&#123;hidden1&#125;</span>\n\n&quot;</span>)</span><br><span class="line">hidden1 = nn.ReLU()(hidden1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;After ReLU: <span class="subst">&#123;hidden1&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Before ReLU: tensor([[ 0.4158, -0.0130, -0.1144,  0.3960,  0.1476, -0.0690, -0.0269,  0.2690,</span><br><span class="line">          0.1353,  0.1975,  0.4484,  0.0753,  0.4455,  0.5321, -0.1692,  0.4504,</span><br><span class="line">          0.2476, -0.1787, -0.2754,  0.2462],</span><br><span class="line">        [ 0.2326,  0.0623, -0.2984,  0.2878,  0.2767, -0.5434, -0.5051,  0.4339,</span><br><span class="line">          0.0302,  0.1634,  0.5649, -0.0055,  0.2025,  0.4473, -0.2333,  0.6611,</span><br><span class="line">          0.1883, -0.1250,  0.0820,  0.2778],</span><br><span class="line">        [ 0.3325,  0.2654,  0.1091,  0.0651,  0.3425, -0.3880, -0.0152,  0.2298,</span><br><span class="line">          0.3872,  0.0342,  0.8503,  0.0937,  0.1796,  0.5007, -0.1897,  0.4030,</span><br><span class="line">          0.1189, -0.3237,  0.2048,  0.4343]], grad_fn=&lt;AddmmBackward0&gt;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">After ReLU: tensor([[0.4158, 0.0000, 0.0000, 0.3960, 0.1476, 0.0000, 0.0000, 0.2690, 0.1353,</span><br><span class="line">         0.1975, 0.4484, 0.0753, 0.4455, 0.5321, 0.0000, 0.4504, 0.2476, 0.0000,</span><br><span class="line">         0.0000, 0.2462],</span><br><span class="line">        [0.2326, 0.0623, 0.0000, 0.2878, 0.2767, 0.0000, 0.0000, 0.4339, 0.0302,</span><br><span class="line">         0.1634, 0.5649, 0.0000, 0.2025, 0.4473, 0.0000, 0.6611, 0.1883, 0.0000,</span><br><span class="line">         0.0820, 0.2778],</span><br><span class="line">        [0.3325, 0.2654, 0.1091, 0.0651, 0.3425, 0.0000, 0.0000, 0.2298, 0.3872,</span><br><span class="line">         0.0342, 0.8503, 0.0937, 0.1796, 0.5007, 0.0000, 0.4030, 0.1189, 0.0000,</span><br><span class="line">         0.2048, 0.4343]], grad_fn=&lt;ReluBackward0&gt;)</span><br></pre></td></tr></table></figure><h3 id="nn-Sequential"><a href="#nn-Sequential" class="headerlink" title="nn.Sequential"></a>nn.Sequential</h3><p><a href="https://pytorch.org/docs/stable/generated/torch.nn.Sequential.html">nn.Sequential</a>  是模块的有序容器。数据按照定义的相同顺序传递通过所有模块。您可以使用顺序容器来组合一个快速网络，例如 <code>seq_modules</code> .</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">seq_modules = nn.Sequential(</span><br><span class="line">    flatten,</span><br><span class="line">    layer1,</span><br><span class="line">    nn.ReLU(),</span><br><span class="line">    nn.Linear(<span class="number">20</span>, <span class="number">10</span>)</span><br><span class="line">)</span><br><span class="line">input_image = torch.rand(<span class="number">3</span>,<span class="number">28</span>,<span class="number">28</span>)</span><br><span class="line">logits = seq_modules(input_image)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="nn-Softmax"><a href="#nn-Softmax" class="headerlink" title="nn.Softmax"></a>nn.Softmax</h3><p>神经网络的最后一个线性层返回 logits - [-infty, infty] 中的原始值 - 被传递到 nn.Softmax 模块。 Logits 缩放为值 [0, 1]，表示模型对每个类别的预测概率。 <code>dim</code> 参数指示维度，沿该维度值的总和必须为 1。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">softmax = nn.Softmax(dim=<span class="number">1</span>)</span><br><span class="line">pred_probab = softmax(logits)</span><br></pre></td></tr></table></figure><h2 id="Model-Parameters"><a href="#Model-Parameters" class="headerlink" title="Model Parameters"></a>Model Parameters</h2><p>神经网络内的许多层都是参数化的，即具有在训练期间优化的相关权重和偏差。子类化 <code>nn.Module</code> 自动跟踪模型对象内定义的所有字段，并使所有参数可使用模型的 <code>parameters()</code> 或 <code>named_parameters()</code> 方法访问。</p><p>在此示例中，我们迭代每个参数，并打印其大小及其值的预览。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Model structure: <span class="subst">&#123;model&#125;</span>\n\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, param <span class="keyword">in</span> model.named_parameters():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Layer: <span class="subst">&#123;name&#125;</span> | Size: <span class="subst">&#123;param.size()&#125;</span> | Values : <span class="subst">&#123;param[:<span class="number">2</span>]&#125;</span> \n&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> neural network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03_pytorch_Transforms</title>
      <link href="/2023/11/10/03-pytorch-Transforms/"/>
      <url>/2023/11/10/03-pytorch-Transforms/</url>
      
        <content type="html"><![CDATA[<h1 id="TRANSFORMS"><a href="#TRANSFORMS" class="headerlink" title="TRANSFORMS"></a>TRANSFORMS</h1><p><strong>Transforms是什么？</strong></p><p>数据并不总是以训练机器学习算法所需的最终处理形式出现。我们使用转换来对数据执行一些操作并使其适合训练。</p><p><strong>应该如何转化？</strong></p><p>所有 TorchVision 数据集都有两个参数 - 用于修改功能的 <code>transform</code> 和用于修改标签的 <code>target_transform</code> - 接受包含转换逻辑的可调用对象。 <a href="https://pytorch.org/vision/stable/transforms.html">torchvision.transforms</a>  模块提供了几种开箱即用的常用转换。</p><p>例如:</p><p>FashionMNIST特征采用PIL图像格式，标签为整数。对于训练，我们需要将特征作为归一化张量，将标签作为单热编码张量。为了进行这些转换，我们使用 <code>ToTensor</code> 和 <code>Lambda</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> torchvision.transforms <span class="keyword">import</span> ToTensor, Lambda</span><br><span class="line"></span><br><span class="line">ds = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor(),</span><br><span class="line">    target_transform=Lambda(<span class="keyword">lambda</span> y: torch.zeros(<span class="number">10</span>, dtype=torch.<span class="built_in">float</span>).scatter_(<span class="number">0</span>, torch.tensor(y), value=<span class="number">1</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to data/FashionMNIST/raw/train-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/26421880 [00:00&lt;?, ?it/s]</span><br><span class="line">  0%|          | 65536/26421880 [00:00&lt;01:12, 361134.05it/s]</span><br><span class="line">  1%|          | 229376/26421880 [00:00&lt;00:38, 678664.07it/s]</span><br><span class="line">  3%|2         | 753664/26421880 [00:00&lt;00:12, 2053982.29it/s]</span><br><span class="line">  5%|5         | 1409024/26421880 [00:00&lt;00:08, 2875069.78it/s]</span><br><span class="line"> 12%|#2        | 3244032/26421880 [00:00&lt;00:03, 6812170.26it/s]</span><br><span class="line"> 21%|##1       | 5570560/26421880 [00:00&lt;00:02, 9643810.01it/s]</span><br><span class="line"> 30%|##9       | 7897088/26421880 [00:01&lt;00:01, 12668660.86it/s]</span><br><span class="line"> 39%|###9      | 10354688/26421880 [00:01&lt;00:01, 13567884.70it/s]</span><br><span class="line"> 47%|####7     | 12517376/26421880 [00:01&lt;00:00, 15107192.72it/s]</span><br><span class="line"> 57%|#####7    | 15138816/26421880 [00:01&lt;00:00, 15464642.87it/s]</span><br><span class="line"> 65%|######4   | 17170432/26421880 [00:01&lt;00:00, 16205991.36it/s]</span><br><span class="line"> 75%|#######5  | 19922944/26421880 [00:01&lt;00:00, 16485428.61it/s]</span><br><span class="line"> 83%|########2 | 21823488/26421880 [00:01&lt;00:00, 16620077.17it/s]</span><br><span class="line"> 94%|#########3| 24739840/26421880 [00:02&lt;00:00, 17125086.87it/s]</span><br><span class="line">100%|##########| 26421880/26421880 [00:02&lt;00:00, 12608239.78it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/train-images-idx3-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw/train-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/29515 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 29515/29515 [00:00&lt;00:00, 327666.12it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/4422102 [00:00&lt;?, ?it/s]</span><br><span class="line">  1%|1         | 65536/4422102 [00:00&lt;00:12, 360810.29it/s]</span><br><span class="line">  5%|5         | 229376/4422102 [00:00&lt;00:06, 676632.69it/s]</span><br><span class="line"> 19%|#8        | 819200/4422102 [00:00&lt;00:01, 2275103.44it/s]</span><br><span class="line"> 33%|###2      | 1441792/4422102 [00:00&lt;00:01, 2899610.49it/s]</span><br><span class="line"> 74%|#######4  | 3276800/4422102 [00:00&lt;00:00, 6877973.06it/s]</span><br><span class="line">100%|##########| 4422102/4422102 [00:00&lt;00:00, 5392190.04it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/5148 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 5148/5148 [00:00&lt;00:00, 36597079.65it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw</span><br></pre></td></tr></table></figure><h2 id="ToTensor"><a href="#ToTensor" class="headerlink" title="ToTensor()"></a>ToTensor()</h2><p>ToTensor 将 PIL 图像或 NumPy <code>ndarray</code> 转换为 <code>FloatTensor</code> 。并在 [0., 1.] 范围内缩放图像的像素强度值</p><h2 id="Lambda-Transforms"><a href="#Lambda-Transforms" class="headerlink" title="Lambda Transforms"></a>Lambda Transforms</h2><p>Lambda 转换应用任何用户定义的 lambda 函数。在这里，我们定义一个函数将整数转换为 one-hot 编码张量。它首先创建一个大小为 10 的零张量（数据集中的标签数量）并调用 scatter_ ，它在标签 <code>y</code> 给出的索引上分配 <code>value=1</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">target_transform = Lambda(<span class="keyword">lambda</span> y: torch.zeros(</span><br><span class="line">    <span class="number">10</span>, dtype=torch.<span class="built_in">float</span>).scatter_(dim=<span class="number">0</span>, index=torch.tensor(y), value=<span class="number">1</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> transforms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02_pytorch_datasets_DataLoaders</title>
      <link href="/2023/11/10/02-pytorch-datasets-DataLoaders/"/>
      <url>/2023/11/10/02-pytorch-datasets-DataLoaders/</url>
      
        <content type="html"><![CDATA[<h1 id="DATASETS-DATALOADERS"><a href="#DATASETS-DATALOADERS" class="headerlink" title="DATASETS &amp; DATALOADERS"></a>DATASETS &amp; DATALOADERS</h1><p><strong>DATASETS是什么？</strong></p><p>torch.utils.data.Dataset，</p><p><code>Dataset</code>允许您使用预加载的数据集以及您自己的数据</p><p><code>Dataset</code> 存储样本及其相应的标签</p><p><strong>DATALOADERS是什么？</strong></p><p>torch.utils.data.DataLoader</p><p><code>DataLoader</code> 在 <code>Dataset</code> 周围包装一个迭代，以便轻松访问样本。</p><p><strong>解决什么问题？</strong></p><p>用于处理数据样本的代码可能会变得混乱且难以维护</p><p>理想情况下，我们希望数据集代码与模型训练代码分离，以获得更好的可读性和模块化性</p><p><strong>PyTorch 提供了什么数据集，有什么用</strong></p><p>提供了许多预加载的数据集（例如 FashionMNIST）。</p><p>它们对 <code>torch.utils.data.Dataset</code> 进行子类化并实现特定于特定数据的函数</p><blockquote><p>给我们提示，如果要构建自己的数据集同样应该继承Dataset</p></blockquote><p>可以做什么：对您的模型进行原型设计和基准测试。</p><p>在哪里找到：<a href="https://pytorch.org/vision/stable/datasets.html">Image Datasets</a>, <a href="https://pytorch.org/text/stable/datasets.html">Text Datasets</a>, and <a href="https://pytorch.org/audio/stable/datasets.html">Audio Datasets</a></p><h2 id="Loading-a-Dataset-加载数据集"><a href="#Loading-a-Dataset-加载数据集" class="headerlink" title="Loading a Dataset 加载数据集"></a>Loading a Dataset 加载数据集</h2><p><strong>Fashion-MNIST是什么数据集？</strong></p><p> <a href="https://research.zalando.com/project/fashion_mnist/fashion_mnist/">Fashion-MNIST</a> 是 Zalando 文章图像的数据集，由 60,000 个训练示例和 10,000 个测试示例组成。每个示例包含一个 28×28 灰度图像和来自 10 个类别之一的关联标签。</p><p> <strong>如何加载<a href="https://pytorch.org/vision/stable/datasets.html#fashion-mnist">FashionMNIST Dataset</a> 数据集？</strong></p><ul><li><code>root</code> 是存储训练&#x2F;测试数据的路径，</li><li><code>train</code> 指定训练或测试数据集，</li><li>如果 <code>root</code> 上没有数据，则 <code>download=True</code> 会从 Internet 下载数据。</li><li>transform 和 target_transform 指定特征和标签转换</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> torchvision.transforms <span class="keyword">import</span> ToTensor</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">training_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to data/FashionMNIST/raw/train-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/26421880 [00:00&lt;?, ?it/s]</span><br><span class="line">  0%|          | 65536/26421880 [00:00&lt;01:12, 365336.26it/s]</span><br><span class="line">  1%|          | 229376/26421880 [00:00&lt;00:38, 685596.52it/s]</span><br><span class="line">  3%|3         | 851968/26421880 [00:00&lt;00:10, 2415122.44it/s]</span><br><span class="line">  7%|7         | 1900544/26421880 [00:00&lt;00:06, 4075765.30it/s]</span><br><span class="line"> 18%|#8        | 4882432/26421880 [00:00&lt;00:01, 10855436.54it/s]</span><br><span class="line"> 25%|##4       | 6586368/26421880 [00:00&lt;00:01, 11527877.37it/s]</span><br><span class="line"> 31%|###1      | 8257536/26421880 [00:00&lt;00:01, 12111293.67it/s]</span><br><span class="line"> 43%|####2     | 11337728/26421880 [00:01&lt;00:00, 16825176.39it/s]</span><br><span class="line"> 50%|####9     | 13205504/26421880 [00:01&lt;00:00, 14645303.60it/s]</span><br><span class="line"> 62%|######1   | 16252928/26421880 [00:01&lt;00:00, 18391128.94it/s]</span><br><span class="line"> 69%|######9   | 18284544/26421880 [00:01&lt;00:00, 16056294.06it/s]</span><br><span class="line"> 80%|########  | 21266432/26421880 [00:01&lt;00:00, 19223679.44it/s]</span><br><span class="line"> 89%|########8 | 23396352/26421880 [00:01&lt;00:00, 16815978.59it/s]</span><br><span class="line"> 99%|#########9| 26279936/26421880 [00:01&lt;00:00, 19554902.51it/s]</span><br><span class="line">100%|##########| 26421880/26421880 [00:01&lt;00:00, 13595820.68it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/train-images-idx3-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw/train-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/29515 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 29515/29515 [00:00&lt;00:00, 325785.44it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/4422102 [00:00&lt;?, ?it/s]</span><br><span class="line">  1%|1         | 65536/4422102 [00:00&lt;00:12, 362766.41it/s]</span><br><span class="line">  5%|5         | 229376/4422102 [00:00&lt;00:06, 682006.25it/s]</span><br><span class="line"> 20%|##        | 884736/4422102 [00:00&lt;00:01, 2511806.30it/s]</span><br><span class="line"> 44%|####3     | 1933312/4422102 [00:00&lt;00:00, 4114396.78it/s]</span><br><span class="line">100%|##########| 4422102/4422102 [00:00&lt;00:00, 6090778.97it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/5148 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 5148/5148 [00:00&lt;00:00, 65830112.78it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw</span><br></pre></td></tr></table></figure><h2 id="Iterating-and-Visualizing-the-Dataset"><a href="#Iterating-and-Visualizing-the-Dataset" class="headerlink" title="Iterating and Visualizing the Dataset"></a>Iterating and Visualizing the Dataset</h2><p>如何可视化查看数据集？</p><p>虽然我们可以切片的方式查看数据集，但是这样有些麻烦和不直观。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">training_data[index]</span><br></pre></td></tr></table></figure><p>我们使用 <code>matplotlib</code> 来可视化训练数据中的一些样本。</p><blockquote><p>给我们的一种可视化的方式</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">labels_map = &#123;</span><br><span class="line">    <span class="number">0</span>: <span class="string">&quot;T-Shirt&quot;</span>,</span><br><span class="line">    <span class="number">1</span>: <span class="string">&quot;Trouser&quot;</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">&quot;Pullover&quot;</span>,</span><br><span class="line">    <span class="number">3</span>: <span class="string">&quot;Dress&quot;</span>,</span><br><span class="line">    <span class="number">4</span>: <span class="string">&quot;Coat&quot;</span>,</span><br><span class="line">    <span class="number">5</span>: <span class="string">&quot;Sandal&quot;</span>,</span><br><span class="line">    <span class="number">6</span>: <span class="string">&quot;Shirt&quot;</span>,</span><br><span class="line">    <span class="number">7</span>: <span class="string">&quot;Sneaker&quot;</span>,</span><br><span class="line">    <span class="number">8</span>: <span class="string">&quot;Bag&quot;</span>,</span><br><span class="line">    <span class="number">9</span>: <span class="string">&quot;Ankle Boot&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">figure = plt.figure(figsize=(<span class="number">8</span>, <span class="number">8</span>))</span><br><span class="line">cols, rows = <span class="number">3</span>, <span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, cols * rows + <span class="number">1</span>):</span><br><span class="line">    sample_idx = torch.randint(<span class="built_in">len</span>(training_data), size=(<span class="number">1</span>,)).item()</span><br><span class="line">    img, label = training_data[sample_idx]</span><br><span class="line">    figure.add_subplot(rows, cols, i)</span><br><span class="line">    plt.title(labels_map[label])</span><br><span class="line">    plt.axis(<span class="string">&quot;off&quot;</span>)</span><br><span class="line">    plt.imshow(img.squeeze(), cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/11/10/4yYK3lGWcBizCPD.png" alt="Ankle Boot, Shirt, Bag, Ankle Boot, Trouser, Sandal, Coat, Sandal, Pullover"></p><h2 id="Creating-a-Custom-Dataset-for-your-files"><a href="#Creating-a-Custom-Dataset-for-your-files" class="headerlink" title="Creating a Custom Dataset for your files"></a>Creating a Custom Dataset for your files</h2><p><strong>怎么自定义自己的数据集?</strong></p><p>自定义 Dataset 类必须实现三个函数,__init__、__len__ 和__getitem__.</p><p>可以参考FashionMNIST的实现，下面是例子：</p><p>图像存储在目录 <code>img_dir</code> 中，它们的标签单独存储在 CSV 文件 <code>annotations_file</code> 中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> torchvision.io <span class="keyword">import</span> read_image</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomImageDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, annotations_file, img_dir, transform=<span class="literal">None</span>, target_transform=<span class="literal">None</span></span>):</span><br><span class="line">        self.img_labels = pd.read_csv(annotations_file)</span><br><span class="line">        self.img_dir = img_dir</span><br><span class="line">        self.transform = transform</span><br><span class="line">        self.target_transform = target_transform</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.img_labels)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, idx</span>):</span><br><span class="line">        img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, <span class="number">0</span>])</span><br><span class="line">        image = read_image(img_path)</span><br><span class="line">        label = self.img_labels.iloc[idx, <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> self.transform:</span><br><span class="line">            image = self.transform(image)</span><br><span class="line">        <span class="keyword">if</span> self.target_transform:</span><br><span class="line">            label = self.target_transform(label)</span><br><span class="line">        <span class="keyword">return</span> image, label</span><br></pre></td></tr></table></figure><h3 id="init"><a href="#init" class="headerlink" title="__init__"></a>__init__</h3><p><strong>在__init__方法中我需要做什么？</strong></p><p><strong>init</strong> 函数在实例化 Dataset 对象时运行一次。我们初始化包含图像、注释文件和两种转换的目录（下一节将更详细地介绍）。</p><p>labels.csv 文件如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tshirt1.jpg, 0</span><br><span class="line">tshirt2.jpg, 0</span><br><span class="line">......</span><br><span class="line">ankleboot999.jpg, 9</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, annotations_file, img_dir, transform=<span class="literal">None</span>, target_transform=<span class="literal">None</span></span>):</span><br><span class="line">    self.img_labels = pd.read_csv(annotations_file)</span><br><span class="line">    self.img_dir = img_dir</span><br><span class="line">    self.transform = transform</span><br><span class="line">    self.target_transform = target_transform</span><br></pre></td></tr></table></figure><h3 id="len"><a href="#len" class="headerlink" title="_len_"></a>_<em>len</em>_</h3><p><strong>__len__方法中我需要完成什么工作?</strong></p><p>_<em>len</em>_ 函数返回数据集中的样本数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def __len__(self):</span><br><span class="line">    return len(self.img_labels)</span><br></pre></td></tr></table></figure><h3 id="getitem"><a href="#getitem" class="headerlink" title="_getitem_"></a>_<em>getitem</em>_</h3><p>_<em>getitem</em>_ 函数加载并返回给定索引 <code>idx</code> 处的数据集的样本。</p><ol><li>基于索引，它识别图像在磁盘上的位置，</li><li>使用 <code>read_image</code> 将其转换为张量，</li><li>从 <code>self.img_labels</code> 中的 csv 数据中检索相应的标签，</li><li>对其调用转换函数（如果适用），</li><li>并返回元组中的张量图像和相应的标签。</li></ol><h2 id="Preparing-your-data-for-training-with-DataLoaders"><a href="#Preparing-your-data-for-training-with-DataLoaders" class="headerlink" title="Preparing your data for training with DataLoaders"></a>Preparing your data for training with DataLoaders</h2><p><strong>为什么使用DataLoaders ？DataSet不够用吗？</strong></p><p><code>Dataset</code> 检索数据集的特征并一次标记一个样本。在训练模型时，我们通常希望以“小批量”的方式传递样本，在每个时期重新整理数据以减少模型过度拟合，并使用 Python 的 <code>multiprocessing</code> 来加速数据检索。</p><p><strong>基于上述我们的需求，希望有一种可以通用的API帮我我们获得数据。</strong></p><p><code>DataLoader</code> 是一个可迭代对象，它通过一个简单的 API 为我们抽象了这种复杂性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line">train_dataloader = DataLoader(training_data, batch_size=<span class="number">64</span>, shuffle=<span class="literal">True</span>)</span><br><span class="line">test_dataloader = DataLoader(test_data, batch_size=<span class="number">64</span>, shuffle=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="Iterate-through-the-DataLoader"><a href="#Iterate-through-the-DataLoader" class="headerlink" title="Iterate through the DataLoader"></a>Iterate through the DataLoader</h2><p><strong>我们应该如何通过DataLoader获得数据和标签？</strong></p><p>我们已将该数据集加载到 <code>DataLoader</code> 中，并且可以根据需要迭代数据集。下面的每次迭代都会返回一批 <code>train_features</code> 和 <code>train_labels</code> （分别包含 <code>batch_size=64</code> 特征和标签）。因为我们指定了 <code>shuffle=True</code> ，所以在迭代所有批次后，数据会被打乱（为了更细粒度地控制数据加载顺序，请查看 Samplers）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Display image and label.</span></span><br><span class="line">train_features, train_labels = <span class="built_in">next</span>(<span class="built_in">iter</span>(train_dataloader))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Feature batch shape: <span class="subst">&#123;train_features.size()&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Labels batch shape: <span class="subst">&#123;train_labels.size()&#125;</span>&quot;</span>)</span><br><span class="line">img = train_features[<span class="number">0</span>].squeeze()</span><br><span class="line">label = train_labels[<span class="number">0</span>]Feature batch shape: torch.Size([<span class="number">64</span>, <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>])</span><br><span class="line">Labels batch shape: torch.Size([<span class="number">64</span>])</span><br><span class="line">Label: <span class="number">5</span></span><br><span class="line">plt.imshow(img, cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Label: <span class="subst">&#123;label&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Feature batch shape: torch.Size([64, 1, 28, 28])</span><br><span class="line">Labels batch shape: torch.Size([64])</span><br><span class="line">Label: 5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01_pytorch_tensors</title>
      <link href="/2023/11/10/01_pytorch_tensors/"/>
      <url>/2023/11/10/01_pytorch_tensors/</url>
      
        <content type="html"><![CDATA[<h1 id="Tensors"><a href="#Tensors" class="headerlink" title="Tensors"></a>Tensors</h1><h2 id="Tensors是什么"><a href="#Tensors是什么" class="headerlink" title="Tensors是什么"></a>Tensors是什么</h2><p>张量是一种特殊的数据结构，与数组和矩阵非常相似。</p><h2 id="Tensors什么作用"><a href="#Tensors什么作用" class="headerlink" title="Tensors什么作用"></a>Tensors什么作用</h2><p>张量对模型的输入和输出以及模型的参数进行编码</p><h2 id="Tensors-和-NumPy的ndarrays对比"><a href="#Tensors-和-NumPy的ndarrays对比" class="headerlink" title="Tensors 和 NumPy的ndarrays对比"></a>Tensors 和 <a href="https://numpy.org/">NumPy</a>的ndarrays对比</h2><p>不同：</p><ol><li>张量可以在 GPU 或其他硬件加速器上运行</li><li>张量还针对自动微分进行了优化</li></ol><h2 id="Tensors-和Numpy的ndarrays联系"><a href="#Tensors-和Numpy的ndarrays联系" class="headerlink" title="Tensors 和Numpy的ndarrays联系"></a>Tensors 和Numpy的ndarrays联系</h2><p>张量和 NumPy 数组通常可以共享相同的底层内存，从而无需复制数据。</p><h2 id="Initializing-a-Tensor"><a href="#Initializing-a-Tensor" class="headerlink" title="Initializing a Tensor"></a>Initializing a Tensor</h2><p>1.通过数据创建，类型可以自动推导</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="number">1</span>, <span class="number">2</span>],[<span class="number">3</span>, <span class="number">4</span>]]</span><br><span class="line">x_data = torch.tensor(data)</span><br></pre></td></tr></table></figure><p>2.通过numpy创建</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np_array = np.array(data)</span><br><span class="line">x_np = torch.from_numpy(np_array)</span><br></pre></td></tr></table></figure><p>3.从另一个Tensor创建,新Tensor保留参数Tensor的属性（<strong>形状、数据类型</strong>），除非显式覆盖。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x_ones = torch.ones_like(x_data) <span class="comment"># retains the properties of x_data</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Ones Tensor: \n <span class="subst">&#123;x_ones&#125;</span> \n&quot;</span>)</span><br><span class="line"><span class="comment"># 显示覆盖类型</span></span><br><span class="line">x_rand = torch.rand_like(x_data, dtype=torch.<span class="built_in">float</span>) <span class="comment"># overrides the datatype of x_data</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Random Tensor: \n <span class="subst">&#123;x_rand&#125;</span> \n&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Ones Tensor:</span><br><span class="line"> tensor([[1, 1],</span><br><span class="line">        [1, 1]])</span><br><span class="line"></span><br><span class="line">Random Tensor:</span><br><span class="line"> tensor([[0.8823, 0.9150],</span><br><span class="line">        [0.3829, 0.9593]])</span><br></pre></td></tr></table></figure><h2 id="With-random-or-constant-values"><a href="#With-random-or-constant-values" class="headerlink" title="With random or constant values:"></a><strong>With random or constant values:</strong></h2><p><code>shape</code> 是张量维度的元组。在下面的函数中，它确定输出张量的维数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">shape = (<span class="number">2</span>,<span class="number">3</span>,)</span><br><span class="line">rand_tensor = torch.rand(shape)</span><br><span class="line">ones_tensor = torch.ones(shape)</span><br><span class="line">zeros_tensor = torch.zeros(shape)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Random Tensor: \n <span class="subst">&#123;rand_tensor&#125;</span> \n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Ones Tensor: \n <span class="subst">&#123;ones_tensor&#125;</span> \n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Zeros Tensor: \n <span class="subst">&#123;zeros_tensor&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Random Tensor:</span><br><span class="line"> tensor([[0.3904, 0.6009, 0.2566],</span><br><span class="line">        [0.7936, 0.9408, 0.1332]])</span><br><span class="line"></span><br><span class="line">Ones Tensor:</span><br><span class="line"> tensor([[1., 1., 1.],</span><br><span class="line">        [1., 1., 1.]])</span><br><span class="line"></span><br><span class="line">Zeros Tensor:</span><br><span class="line"> tensor([[0., 0., 0.],</span><br><span class="line">        [0., 0., 0.]])</span><br></pre></td></tr></table></figure><h2 id="Attributes-of-a-Tensor"><a href="#Attributes-of-a-Tensor" class="headerlink" title="Attributes of a Tensor"></a>Attributes of a Tensor</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tensor = torch.rand(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Shape of tensor: <span class="subst">&#123;tensor.shape&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Datatype of tensor: <span class="subst">&#123;tensor.dtype&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Device tensor is stored on: <span class="subst">&#123;tensor.device&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Shape of tensor: torch.Size([3, 4])</span><br><span class="line">Datatype of tensor: torch.float32</span><br><span class="line">Device tensor is stored on: cpu</span><br></pre></td></tr></table></figure><h2 id="Operations-on-Tensors"><a href="#Operations-on-Tensors" class="headerlink" title="Operations on Tensors"></a>Operations on Tensors</h2><h3 id="有哪些运算"><a href="#有哪些运算" class="headerlink" title="有哪些运算"></a>有哪些运算</h3><p> 100 多种<a href="https://pytorch.org/docs/stable/torch.html">张量运算</a>，包括算术、线性代数、矩阵操作（转置、索引、切片）、采样等。</p><h3 id="和一般的计算库相比有哪些优点"><a href="#和一般的计算库相比有哪些优点" class="headerlink" title="和一般的计算库相比有哪些优点"></a>和一般的计算库相比有哪些优点</h3><p>这些操作中的每一个都可以在 GPU 上运行</p><blockquote><p>如果使用Colab如何使用GPU：</p><p>请通过转至运行时 &gt; 更改运行时类型 &gt; GPU 来分配 GPU</p></blockquote><h3 id="为什么我创建后在cpu上？"><a href="#为什么我创建后在cpu上？" class="headerlink" title="为什么我创建后在cpu上？"></a>为什么我创建后在cpu上？</h3><p>默认情况下，张量是在 CPU 上创建的。我们需要使用 <code>.to</code> 方法显式地将张量移动到 GPU</p><blockquote><p>请记住，跨设备复制大张量在时间和内存方面可能会很昂贵！</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># We move our tensor to the GPU if available</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    tensor = tensor.to(<span class="string">&quot;cuda&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="对tensor的切片索引修改"><a href="#对tensor的切片索引修改" class="headerlink" title="对tensor的切片索引修改"></a>对tensor的切片索引修改</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor = torch.ones(<span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;First row: <span class="subst">&#123;tensor[<span class="number">0</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;First column: <span class="subst">&#123;tensor[:, <span class="number">0</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Last column: <span class="subst">&#123;tensor[..., -<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">tensor[:,<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(tensor)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">First row: tensor([1., 1., 1., 1.])</span><br><span class="line">First column: tensor([1., 1., 1., 1.])</span><br><span class="line">Last column: tensor([1., 1., 1., 1.])</span><br><span class="line">tensor([[1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.]])</span><br></pre></td></tr></table></figure><h3 id="tensor的拼接，维度扩大"><a href="#tensor的拼接，维度扩大" class="headerlink" title="tensor的拼接，维度扩大"></a>tensor的拼接，维度扩大</h3><p>连接张量 您可以使用 <code>torch.cat</code> 沿给定维度连接一系列张量。</p><p>另请参见 torch.stack，这是另一个与 <code>torch.cat</code> 略有不同的张量连接运算符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t1 = torch.cat([tensor, tensor, tensor], dim=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(t1)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor([[1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.]])</span><br></pre></td></tr></table></figure><h3 id="Arithmetic-operations"><a href="#Arithmetic-operations" class="headerlink" title="Arithmetic operations"></a><strong>Arithmetic operations</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This computes the matrix multiplication between two tensors. y1, y2, y3 will have the same value</span></span><br><span class="line"><span class="comment"># ``tensor.T`` returns the transpose of a tensor</span></span><br><span class="line">y1 = tensor @ tensor.T <span class="comment"># tensor 矩阵乘 tesnor的转置</span></span><br><span class="line">y2 = tensor.matmul(tensor.T) <span class="comment"># 同上</span></span><br><span class="line"></span><br><span class="line">y3 = torch.rand_like(y1)</span><br><span class="line">torch.matmul(tensor, tensor.T, out=y3) <span class="comment"># 矩阵乘，结果输出给y3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># This computes the element-wise product. z1, z2, z3 will have the same value</span></span><br><span class="line">z1 = tensor * tensor <span class="comment"># 计算元素的乘积，下同</span></span><br><span class="line">z2 = tensor.mul(tensor)</span><br><span class="line"></span><br><span class="line">z3 = torch.rand_like(tensor)</span><br><span class="line">torch.mul(tensor, tensor, out=z3)</span><br></pre></td></tr></table></figure><h3 id="如何将单一数值的tensor和python的数值类型进行转化"><a href="#如何将单一数值的tensor和python的数值类型进行转化" class="headerlink" title="如何将单一数值的tensor和python的数值类型进行转化"></a>如何将单一数值的tensor和python的数值类型进行转化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">agg = tensor.<span class="built_in">sum</span>()</span><br><span class="line">agg_item = agg.item()</span><br><span class="line"><span class="built_in">print</span>(agg_item, <span class="built_in">type</span>(agg_item))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12.0 &lt;class &#x27;float&#x27;&gt;</span><br></pre></td></tr></table></figure><h3 id="tensors的In-place-operations"><a href="#tensors的In-place-operations" class="headerlink" title="tensors的In-place operations"></a>tensors的<strong>In-place operations</strong></h3><p>就地运算 将结果存储到操作数中的操作称为就地运算。它们由 <code>_</code> 后缀表示。例如： <code>x.copy_(y)</code> 、 <code>x.t_()</code> 会更改 <code>x</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;tensor&#125;</span> \n&quot;</span>)</span><br><span class="line">tensor.add_(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(tensor)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tensor([[1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.]])</span><br><span class="line"></span><br><span class="line">tensor([[6., 5., 6., 6.],</span><br><span class="line">        [6., 5., 6., 6.],</span><br><span class="line">        [6., 5., 6., 6.],</span><br><span class="line">        [6., 5., 6., 6.]])</span><br></pre></td></tr></table></figure><blockquote><p>确保你的数据没用了，再采取就地运算(In-place operations)</p></blockquote><h2 id="和numpy的联系"><a href="#和numpy的联系" class="headerlink" title="和numpy的联系"></a>和numpy的联系</h2><ol><li>CPU上时，NumPy 数组上的张量可以共享其底层内存位置。</li></ol><h3 id="Tensor-to-NumPy-array"><a href="#Tensor-to-NumPy-array" class="headerlink" title="Tensor to NumPy array"></a>Tensor to NumPy array</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t = torch.ones(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;t: <span class="subst">&#123;t&#125;</span>&quot;</span>)</span><br><span class="line">n = t.numpy()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;n: <span class="subst">&#123;n&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t: tensor([1., 1., 1., 1., 1.])</span><br><span class="line">n: [1. 1. 1. 1. 1.]</span><br></pre></td></tr></table></figure><p>当t数据变化时候，对应的n也发生变化，简单理解就是n是对t的引用（指针）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t.add_(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;t: <span class="subst">&#123;t&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;n: <span class="subst">&#123;n&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t: tensor([2., 2., 2., 2., 2.])</span><br><span class="line">n: [2. 2. 2. 2. 2.]</span><br></pre></td></tr></table></figure><h3 id="NumPy-array-to-Tensor"><a href="#NumPy-array-to-Tensor" class="headerlink" title="NumPy array to Tensor"></a>NumPy array to Tensor</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n = np.ones(5)</span><br><span class="line">t = torch.from_numpy(n)</span><br></pre></td></tr></table></figure><p>NumPy 数组中的变化反映在张量中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.add(n, 1, out=n)</span><br><span class="line">print(f&quot;t: &#123;t&#125;&quot;)</span><br><span class="line">print(f&quot;n: &#123;n&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t: tensor([2., 2., 2., 2., 2.], dtype=torch.float64)</span><br><span class="line">n: [2. 2. 2. 2. 2.]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SDCDNet:一种用于遥感图像的超弱标签半对偶变化检测网络框架</title>
      <link href="/2023/11/09/SDCDNet-%E4%B8%80%E7%A7%8D%E7%94%A8%E4%BA%8E%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E7%9A%84%E8%B6%85%E5%BC%B1%E6%A0%87%E7%AD%BE%E5%8D%8A%E5%AF%B9%E5%81%B6%E5%8F%98%E5%8C%96%E6%A3%80%E6%B5%8B%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/"/>
      <url>/2023/11/09/SDCDNet-%E4%B8%80%E7%A7%8D%E7%94%A8%E4%BA%8E%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E7%9A%84%E8%B6%85%E5%BC%B1%E6%A0%87%E7%AD%BE%E5%8D%8A%E5%AF%B9%E5%81%B6%E5%8F%98%E5%8C%96%E6%A3%80%E6%B5%8B%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="SDCDNet是指什么"><a href="#SDCDNet是指什么" class="headerlink" title="SDCDNet是指什么"></a>SDCDNet是指什么</h1><p>SDCDNet 全称 Semi-Dual Change Detection Network 。其中Semi-Dual是半对偶， Change Detection是变化检测，Network是神经网络模型。</p><h2 id="变化检测-Change-Detection"><a href="#变化检测-Change-Detection" class="headerlink" title="变化检测 Change Detection"></a>变化检测 Change Detection</h2><p>变化检测是从不同时期的遥感数据中定量分析和确定地表变化的特征与过程；</p><p>遥感变化检测是一个确定和评价各种地表现象随时间发生变化的过程；</p><p>遥感变化检测是遥感瞬时视场中地表特征随时间发生的变化引起两个时期影像像元光谱响应的变化；</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>更新地理数据的关键技术</li><li>评估灾害、预测灾害发展趋势的关键技术</li><li>土地覆盖&#x2F;利用监测的关键技术</li><li>新一代智能型对地观测卫星的关键技术</li></ul><h3 id="传统经典方法"><a href="#传统经典方法" class="headerlink" title="传统经典方法"></a>传统经典方法</h3><p>先获得两幅同一地点不同时间图像的差异图像，再对差异图像进行处理，将像素点分成变化和无变化两类。</p><p>差异图的获得有很多方法：</p><ul><li>直接相减法</li><li>log法</li><li><a href="https://baike.baidu.com/item/%E5%8F%98%E5%8C%96%E5%90%91%E9%87%8F%E5%88%86%E6%9E%90%E6%B3%95/8636415?fromModule=lemma_inlink">变化向量分析法</a>（CVA）</li></ul><p>差异图的处理方法：</p><ul><li>贝叶斯理论的无监督法（像素之间独立）</li><li>马尔科夫随机场理论的无监督法（像素之间独立）</li><li>自动获取阈值的方法（考虑像素之间的上下文信息）</li></ul><h1 id="一般的变化检测的问题"><a href="#一般的变化检测的问题" class="headerlink" title="一般的变化检测的问题"></a>一般的变化检测的问题</h1><p>大多数的变化检测方法需要大量的标记数据来训练参数。</p><h1 id="本文要解决的问题"><a href="#本文要解决的问题" class="headerlink" title="本文要解决的问题"></a>本文要解决的问题</h1><p>打破这变化检测方法需要大量的标记数据这一限制。</p><p>本文提出了一种用了遥感变化检测的新型半监督学习semi-supervised learning(SSL).称之为半对偶变化检测网络（SDCDNet）。</p><h1 id="SDCDNet网络的大概模型是什么样子"><a href="#SDCDNet网络的大概模型是什么样子" class="headerlink" title="SDCDNet网络的大概模型是什么样子"></a>SDCDNet网络的大概模型是什么样子</h1><p>SDCDNet网络由双共享网络和双分支网络组成。此外，自适应模块(AWM)增强了弱分支的特征。掩模约束模块（MCM）增加网络提取前景特征的能力。</p><h2 id="双共享网路的作用"><a href="#双共享网路的作用" class="headerlink" title="双共享网路的作用"></a>双共享网路的作用</h2><p>双共享网络旨在发挥数据的潜力</p><h2 id="双分支网络的作用"><a href="#双分支网络的作用" class="headerlink" title="双分支网络的作用"></a>双分支网络的作用</h2><p>区分标记数据的种类并消除不同类型数据之间的干扰。</p><h2 id="AWM作用和MCM作用"><a href="#AWM作用和MCM作用" class="headerlink" title="AWM作用和MCM作用"></a>AWM作用和MCM作用</h2><p>增强了弱分支的特征</p><p>增加网络提取前景特征的能力</p><h2 id="如何解决标签这个复杂问题"><a href="#如何解决标签这个复杂问题" class="headerlink" title="如何解决标签这个复杂问题"></a>如何解决标签这个复杂问题</h2><p>提出了一种基于补丁（patch-based）的弱标签构建方法来构建超弱（super method）标签。</p><h1 id="效果怎么样"><a href="#效果怎么样" class="headerlink" title="效果怎么样"></a>效果怎么样</h1><p>实验表明，所提出的 SDCDNet 在两个遥感图像变化检测数据集上取得了优异的结果。</p><h1 id="测试用的数据集"><a href="#测试用的数据集" class="headerlink" title="测试用的数据集"></a>测试用的数据集</h1><p>遥感图像变化检测数据集，下文由详细介绍</p><h1 id="本文的特征词是"><a href="#本文的特征词是" class="headerlink" title="本文的特征词是"></a>本文的特征词是</h1><ul><li>变化检测（Change detection）</li><li>双分支网络（dual branch network）</li><li>遥感图像（remote sensing image）</li><li>半监督学习（semi-supervised learning (SSL))</li></ul><h1 id="变化检测"><a href="#变化检测" class="headerlink" title="变化检测"></a>变化检测</h1><p>遥感领域的一个重要研究方向</p><h2 id="变化检测应用"><a href="#变化检测应用" class="headerlink" title="变化检测应用"></a>变化检测应用</h2><ul><li>建筑损坏检测</li><li>环境监测</li><li>灾害监测</li><li>城市变化等</li><li>土地覆盖监测</li></ul><h2 id="遥感图形容易获得的原因"><a href="#遥感图形容易获得的原因" class="headerlink" title="遥感图形容易获得的原因"></a>遥感图形容易获得的原因</h2><p>遥感观测技术的进步</p><p>不同平台提供的遥感数据</p><h2 id="变化检测的任务"><a href="#变化检测的任务" class="headerlink" title="变化检测的任务"></a>变化检测的任务</h2><p>分析多时间图像</p><p>为每个像素分配一个二进制标签，标签“0”表示该像素对应的表面在语义上没有变化，标签“1”表示该像素对应的表面在T0和T1之间语义上发生了变化</p><h2 id="超高分辨率（VHR）图像的变化检测的困难点"><a href="#超高分辨率（VHR）图像的变化检测的困难点" class="headerlink" title="超高分辨率（VHR）图像的变化检测的困难点"></a>超高分辨率（VHR）图像的变化检测的困难点</h2><p>季节性变化</p><p>成像条件</p><h1 id="多时相VHR遥感图像变化检测技术分类"><a href="#多时相VHR遥感图像变化检测技术分类" class="headerlink" title="多时相VHR遥感图像变化检测技术分类"></a>多时相VHR遥感图像变化检测技术分类</h1><ul><li>传统方法</li><li>深度学习的方法</li></ul><h2 id="传统方法"><a href="#传统方法" class="headerlink" title="传统方法"></a>传统方法</h2><p>图像代数和变化</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>实际应用中相对有限，容易受到传感器本身、大气和季节变化以及太阳高度的影响。导致降低变化检测的性能</li><li>依赖于手工设计的特征描述符，描述复杂和高级语义变化信息的能力有限，导致在杂乱覆盖地面具有较差的表现</li></ol><h2 id="深度学习技术"><a href="#深度学习技术" class="headerlink" title="深度学习技术"></a>深度学习技术</h2><h3 id="深度学习的特点"><a href="#深度学习的特点" class="headerlink" title="深度学习的特点"></a>深度学习的特点</h3><p>强大的数据模式建模能力</p><h3 id="深度学习能做到什么"><a href="#深度学习能做到什么" class="headerlink" title="深度学习能做到什么"></a>深度学习能做到什么</h3><p>输入图像对之间抽象、复杂、非线性的特征表示，并实现较高的变化检测性能。</p><h3 id="深度学习可以分为"><a href="#深度学习可以分为" class="headerlink" title="深度学习可以分为"></a>深度学习可以分为</h3><p>可以细分为监督方法、半监督方法和无监督方法</p><h3 id="目前深度学习在变化检测上的状况"><a href="#目前深度学习在变化检测上的状况" class="headerlink" title="目前深度学习在变化检测上的状况"></a>目前深度学习在变化检测上的状况</h3><p>现有的深度学习网络模型通常具有更多的参数，<strong>变化检测方法的有效</strong>性在很大程度上取决于<strong>标记训练数据的质量和数量</strong>，特别是对于<strong>完全监督</strong>的方法。当我们没有<strong>大量的训练数据时，变化检测模型的检测能力会大大降低</strong></p><h3 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h3><p>遥感图像的准确注释是一项非常昂贵的任务</p><h4 id="原因是："><a href="#原因是：" class="headerlink" title="原因是："></a>原因是：</h4><ul><li>标注需要具有一定专业知识的专家</li><li>不易注释的部分可能会产生额外成本</li></ul><h4 id="导致结果："><a href="#导致结果：" class="headerlink" title="导致结果："></a>导致结果：</h4><ul><li>大量精细标记的数据是不可持续的</li></ul><h4 id="在研究上的结果："><a href="#在研究上的结果：" class="headerlink" title="在研究上的结果："></a>在研究上的结果：</h4><p>许多学者将研究重点放在如何利用少量标注进行学习的问题上</p><p>例如：</p><ul><li><p>半监督学习（SSL）</p></li><li><p>弱监督学习</p></li><li><p>自监督学习</p></li><li><p>无监督学习等</p></li></ul><h1 id="半监督学习SSL"><a href="#半监督学习SSL" class="headerlink" title="半监督学习SSL"></a>半监督学习SSL</h1><p> SSL是一种结合了监督学习和无监督学习优点的学习方法</p><h2 id="SSL是怎么做的"><a href="#SSL是怎么做的" class="headerlink" title="SSL是怎么做的"></a>SSL是怎么做的</h2><p>用大量的无标签数据和尽可能少的标签数据</p><h2 id="到达了什么效果"><a href="#到达了什么效果" class="headerlink" title="到达了什么效果"></a>到达了什么效果</h2><p>不低于完全监督方法的效果</p><h1 id="目前有没有统一的框架"><a href="#目前有没有统一的框架" class="headerlink" title="目前有没有统一的框架"></a>目前有没有统一的框架</h1><p>目前还没有统一的框架将完全监督方法扩展到半监督数据条件，</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>由于其复杂性，实施此类方法可能具有挑战性</p><h1 id="本文是如何解决缺乏大量高精度标注问题的"><a href="#本文是如何解决缺乏大量高精度标注问题的" class="headerlink" title="本文是如何解决缺乏大量高精度标注问题的"></a>本文是如何解决缺乏大量高精度标注问题的</h1><p>设计了带有自适应加权模块（AWM）和掩模约束模块（MCM）的半监督双变化检测网络（SDCDNet）框架</p><h2 id="在数据集达到的效果"><a href="#在数据集达到的效果" class="headerlink" title="在数据集达到的效果"></a>在数据集达到的效果</h2><p>训练中使用非常有限的像素级标记数据（pixel-level labeled data）和大量的补丁级标记数据（patch-level labeled data ）</p><h2 id="AWM模块作用"><a href="#AWM模块作用" class="headerlink" title="AWM模块作用"></a>AWM模块作用</h2><p>自适应地对特征提取网络的不同语义级别的特征进行加权</p><h2 id="MCM模块作用"><a href="#MCM模块作用" class="headerlink" title="MCM模块作用"></a>MCM模块作用</h2><p>MCM约束输入的弱分支的特征从而更加关注变化区域</p><h2 id="结果上达到的效果"><a href="#结果上达到的效果" class="headerlink" title="结果上达到的效果"></a>结果上达到的效果</h2><p>该框架可以通过较少的精细注释实现更高精度的变化检测，并且所提出的两个模块可以有效地将网络的注意力引导到有用的变化信息，并且<em>消融实验（？）</em>在第四节中描述。</p><h1 id="本文的贡献"><a href="#本文的贡献" class="headerlink" title="本文的贡献"></a>本文的贡献</h1><ol><li>为变化检测提出了一种新颖的 SSL 框架，完美地适应了大多数完全监督的方法，在正常标记数据非常有限的情况下获得了与完全监督的方法相似的分数</li><li>提出了一种与补丁相结合的超弱标签构建方法，其大小可以自行调整，并将超弱标签与正常标签一起输入到所提出的半监督网络中进行训练</li><li>为框架的弱标记分支获得更好的前景特征，提出了AWM和MCM来提取对变化检测任务更有用的特征</li></ol><h1 id="全监督和半监督方法在变化检测领域的应用"><a href="#全监督和半监督方法在变化检测领域的应用" class="headerlink" title="全监督和半监督方法在变化检测领域的应用"></a>全监督和半监督方法在变化检测领域的应用</h1><h2 id="完全监督方法"><a href="#完全监督方法" class="headerlink" title="完全监督方法"></a>完全监督方法</h2><p>方法：一些方法使用完全卷积网络（FCN）从双时态输入生成高分辨率变化图。</p><p>用于：遥感图像理解</p><p>变种1：一部分方法将两个图像连接起来并将其输入变化检测网络，称为早期融合</p><p>变种2：使用两分支网络来提取深层特征，然后融合并生成变化图</p><h3 id="基于U-Net框架进行变化检测的FC-Siam-Diff方法"><a href="#基于U-Net框架进行变化检测的FC-Siam-Diff方法" class="headerlink" title="基于U-Net框架进行变化检测的FC-Siam-Diff方法"></a>基于U-Net框架进行变化检测的FC-Siam-Diff方法</h3><p>首先将图像对输入到siamese网络中，并利用从UNet中提取的多级特征的特征差异来生成最终的变化的地图，实现遥感影像对的变化检测。</p><h3 id="其他的论文提出的方法"><a href="#其他的论文提出的方法" class="headerlink" title="其他的论文提出的方法"></a>其他的论文提出的方法</h3><p>在[^43],提出了时空注意力神经网络来实现变化检测，时空注意力机制计算不同时间和空间的两个像素之间的注意力以生成更具区分性的特征</p><p>在[44]，使用差异增强密集注意力网络来整合低层和高层特征</p><p>在[45]，多任务学习方法来训练变化检测网络，以解决检测结果区域不完整或区域边界不规则的问题。所提出 dual-task constrained deep siamese convolutional network (DTCDSCN) 包含一个检测网络和两个语义分割网络。</p><p>在[46]，提出了具有密集连接 和通道注意的siamese 网络 用于变化检测。</p><p>在[47]，提出了遥感图像变化检测的深度监督双分支图像融合FCN。该方法提取双时态图像深层特征，并利用深度监督差分识别网络指导训练。</p><p>在 [48]，提出将孪生架构与循环神经网络（RNN）相结合，以实现多源数据的更高性能。为了获得更具判别性的特征表示。</p><p>在[49]，提出了具有双重注意机制的连体FCN</p><p>在[50]，为了提供更多有用的信息，提出了一种分层动态融合策略。</p><p>在[51]，利用自注意机制对双时态时空中任意两个像素之间的语义关系进行建模</p><p>在[52]，提出了基于Transformers的变化检测方法，该方法使用卷积神经网络（CNN）提取深层特征并将其输入双时图像转换器（BIT）。作者实现了 BIT 来学习和关联高级语义概念的全局信息，从而增强原始的双时态特征。然后生成双时态特征图减法的元素绝对值。最后，利用基于卷积的预测头来预测变化图。</p><p>[^43]: H. Chen and Z. Shi, “A spatial-temporal attention-based method and a new dataset for remote sensing image change detection,” Remote Sens. vol. 12, no. 10, p. 1662, May 2023</p><h2 id="半监督方法"><a href="#半监督方法" class="headerlink" title="半监督方法"></a>半监督方法</h2><h3 id="一些半监督方法是基于-GAN-的。"><a href="#一些半监督方法是基于-GAN-的。" class="headerlink" title="一些半监督方法是基于 GAN 的。"></a>一些半监督方法是基于 GAN 的。</h3><p>在[53]，提出了一种基于FCN和GAN的半监督变化检测网络。作者使用带有attention的UNet++作为GAN的生成器，并使用两个判别器分别奖励输出特征分布一致性和抑制未标记数据变化图中的不确定性区域。通过不断地从标记和未标记数据中学习，生成器可以生成预期的变化图。</p><p>在[54]中，提出了一种半监督语义分割网络。它由分割器和鉴别器组成，分割器和鉴别器以对抗方式进行训练，并提出自训练损失和特征匹配损失。特征匹配损失稳定了低数据训练，自训练损失平衡了分割器和鉴别器。</p><p>文献[55]提出了一种自监督条件生成对抗网络（GAN），利用生成器和判别器的相互监督信息进行训练，并利用GAN中的判别器实现双时相遥感图像的变化检测作为训练完成后变化检测的分类器。 </p><p>[56]提出了一个端到端的变化检测框架，其中包含三个基本模块：分段器、鉴别器和生成器。通过将其中的两个或两个与不同的优化策略相结合，可以在不同的监督条件下实现变化检测任务。</p><h3 id="非GAN半监督"><a href="#非GAN半监督" class="headerlink" title="非GAN半监督"></a>非GAN半监督</h3><p>由于GAN的训练难度和稳定性，基于非GAN或更稳定的半监督方法仍然是学者们的研究热点。</p><p>在[25]中，使用图卷积网络（GCN）来实现半监督变化检测。</p><p>在[57]中提出了一种用于变化检测的半监督方法。它包含两个阶段：完全监督训练和无监督训练。完全监督训练阶段是正常的图像分割训练过程。在无监督训练阶段，输入图像对没有地面真实变化掩模。然后首先对深度特征差异图应用随机扰动。因此限制输出变化图在不同扰动下保持一致。</p><p> [58] 使用 GCN 在带有少量注释数据的半监督框架中学习判别特征。</p><p>在[39]中，提出了一种标签细化方法，从低分辨率数据标签生成高分辨率变化图。</p><p> [59]在低标签数据情况下训练具有图注意力的双分支嵌套UNet，然后通过约束扭曲图像的检测结果和未标签数据的伪标签的一致性来重新训练网络。</p><p>在[60]中，双任务网络集成了城市建筑分割和变化检测，然后实现了半监督变化检测。</p><h1 id="标注存在的问题"><a href="#标注存在的问题" class="headerlink" title="标注存在的问题"></a>标注存在的问题</h1><p>由于遥感图像的复杂性，遥感图像的标注通常需要专业知识，这导致完全监督方法所需的像素级标注数据的获取非常昂贵。</p><h1 id="其他非完全监督取得的效果"><a href="#其他非完全监督取得的效果" class="headerlink" title="其他非完全监督取得的效果"></a>其他非完全监督取得的效果</h1><p>相比之下，许多非完全监督的变化检测方法仅需要一部分像素级标记数据进行训练。他们在变化检测任务中取得了类似的结果。</p><h1 id="其他的非完全监督存在的问题"><a href="#其他的非完全监督存在的问题" class="headerlink" title="其他的非完全监督存在的问题"></a>其他的非完全监督存在的问题</h1><p>现有的半监督变化检测方法通常无法充分利用所有数据的潜力[61]、[62]，导致当像素级标记数据的比例较低时变化检测往往不令人满意。</p><h1 id="现研究存在的问题"><a href="#现研究存在的问题" class="headerlink" title="现研究存在的问题"></a>现研究存在的问题</h1><p>1）全监督方法的像素级标记监督信息不容易获得。</p><p>2）现有半监督方法的框架普遍复杂，缺乏简单有效的策略。</p><p>3）监督信息挖掘不够深入，珍贵的精细标注数据中的信息没有得到很好的利用。</p><h1 id="本文如何解决这些问题"><a href="#本文如何解决这些问题" class="headerlink" title="本文如何解决这些问题"></a>本文如何解决这些问题</h1><p>该框架使用原始的完全监督方法，将像素级和补丁级注释结合起来，用于变化检测任务。通过战略性地利用监督信息，我们在训练过程中逐步增强标记数据和未标记数据之间变化特征分布的一致性，从而使网络能够学习用于变化检测的关键特征，并使用最小像素级标记数据实现高性能</p><h1 id="第三部分的结构"><a href="#第三部分的结构" class="headerlink" title="第三部分的结构"></a>第三部分的结构</h1><p>我们在第 III-A 节中介绍了我们提出的框架的一般结构，该框架利用带有像素级标签的强标记训练数据和基于补丁注释的弱标记训练数据。</p><p>我们还在第 III-B 节中描述了超弱标签的构造。</p><p>为了改善弱分支的前景特征，我们提出了 AWM 和 MCM 技术，分别在第 III-C 和 III-D 节中进行了解释。</p><p>在第III-E节中，我们介绍了该框架中使用的损失函数，</p><p>在第III-F节中，我们详细介绍了训练过程。</p><h1 id="为什么具有适用性"><a href="#为什么具有适用性" class="headerlink" title="为什么具有适用性"></a>为什么具有适用性</h1><p>1.可以简单地向原始完全添加弱分支来扩展以合并额外的弱标记训练数据的弱监督网络，不需要改变任何的结构。从而可以轻松的将半监督变化检测框架与大多数现有的编码器-解码器[63]范例集成，以实现完全监督的变化检测。</p><h1 id="模型图像"><a href="#模型图像" class="headerlink" title="模型图像"></a>模型图像</h1><p><img src="https://s2.loli.net/2023/11/09/o5vrDBUWfAjMi7J.png" alt="image-20231109163730326"></p><h1 id="模型总体结构"><a href="#模型总体结构" class="headerlink" title="模型总体结构"></a>模型总体结构</h1><h2 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h2><p>它包含五个部分：训练数据的构造、双权值共享的特征提取模块、AWM、MCM和双分支模块。</p><h2 id="A部分框架的一般结构"><a href="#A部分框架的一般结构" class="headerlink" title="A部分框架的一般结构"></a>A部分框架的一般结构</h2><p>首先，像素级强标记图像<br>$$<br>x^n<br>$$<br>和弱标记图像<br>$$<br>x^w<br>$$<br>同时发送到权重共享主干网络生成特征C，进一步将C分割为<br>$$<br>C^n<br>$$<br>和<br>$$<br>C^w<br>$$<br>。主干网络主要由全监督变化检测模型确定，例如，DSIFN[47]中的主干网络是VGG16[64]，SNUNet[46]中的主干网络是UNet++[65]的编码器等。</p><p>对于Normal Head，<br>$$<br>C^n<br>$$<br>直接输送。对于Weak Head，由于对应的弱标注缺少很多细节信息，使用AWM对特征<br>$$<br>C^w<br>$$<br>的一致性约束进行加权，在不确定性较低的区域进行更强的多尺度一致性约束，然后使用MCM使Weak Head获得更好的前景特征，从而将生成的<br>$$<br>f_x<br>$$<br>输入到Weak Head。最后，Normal Head和Weak Head生成最终的预测结果<br>$$<br>\hat{y}^n 和 \hat{y}^w<br>$$</p><p>$$<br>然后分别用像素级标注y^n和弱标注y^w计算损失L_{D_{n}}和L_{D_{w}}。<br>$$</p><p>$$<br>L_{D_{n}}+L_{D_{w}}用于反向传播训练。<br>$$</p><p>在Weak Head中，首先使用AWM自适应地提取多尺度特征。然后，为了减少信息损失并避免训练步骤中的梯度消失问题[66]，受ResNet [61]中残差连接的启发，我们在模块中添加了恒等分支。</p><p> MCM被插入到分支中以增加网络提取前景特征的能力。</p><p>最后，批量归一化[67]和丢失[68]分别用于提高网络的收敛速度和泛化能力。</p><p>如图1所示，假设<br>$$<br>F_{in}&#x3D;[F_1,F_2,…  , F_c] ∈ R^{C<em>H</em>W}<br>$$<br>其中C表示特征图中的通道数，H和W分别表示高度和宽度，<br>$$<br>F’<br>$$<br>和<br>$$<br>F_{out}<br>$$<br>可以通过以下等式获得：<br>$$<br>F’ &#x3D; AWM(F_{in}) + MCM(AWM(F_{in}))<br>$$</p><p>$$<br>F_{out} &#x3D; Conv(D(B(Conv(F’))))<br>$$</p><p>其中 D 是 dropout [68]，B 是批量归一化 [67]。</p><h2 id="B部分超弱标签的构造"><a href="#B部分超弱标签的构造" class="headerlink" title="B部分超弱标签的构造"></a>B部分超弱标签的构造</h2><p>了基于补丁的超弱标签生成方法SWL，不再局限于标记群体。</p><p><img src="https://s2.loli.net/2023/11/09/YWjvl9u3znAH4Xa.png" alt="image-20231109172900271"></p><p>首先，我们按预定义的补丁大小对输入标签进行分块。其次，对于第 k 个 patch<br>$$<br>p^k<br>$$<br>大小为 psize × psize，最终生成的弱 patch 标签定义如下：<br>$$<br>p_{weak}^{k}&#x3D;1-I(\sum_{i&#x3D;1}^{psize}\sum_{j&#x3D;1}^{psize}p_{ij}^{k}&#x3D;0)<br>$$<br>其中 I(·) 是指示函数，如果·为真，则值为 1，否则为 0。表示第 k 个补丁中第 (i, j) 个像素的值。直观上，当一个 patch 包含有变化的像素标签时，整个 patch 的值为 1；当整个patch不包含变化时，该patch中的每个像素都取值为0。在图2中，左上角的patch没有变化的像素，因此其对应的弱标签将被赋予0。相反，其余三个补丁包含变化信息，因此它们相关的弱标签将被赋值为1。最后，经过弱标签构建过程，我们得到了不精确标记的弱标签。</p><h2 id="C部分AWM"><a href="#C部分AWM" class="headerlink" title="C部分AWM"></a>C部分AWM</h2><p><img src="https://s2.loli.net/2023/11/10/M6c3hSRxyempslB.png" alt="image-20231109173154696"></p><p>如图3所示，通过特征提取获得的每个阶段的特征被输入到该模块中。首先，对于每个stage的特征，将剩余stage的特征进行卷积采样，使其大小与该stage的特征相同，并与之拼接，从而可以从每个stage中提取不同尺度的特征信息。然后不同时间序列中同一阶段的特征通过自适应空间特征融合（ASFF）模块[69]以获得每个最终阶段的附加增强特征。为一个骨干网络有n个阶段，每个阶段的具体增强特征计算表示如下：<br>$$<br>weight_1 &#x3D; CS(Concat(F_1,DS(F_2),DS(F_3),DS(F_4)))<br>$$</p><p>$$<br>weight_2 &#x3D; CS(Concat(US(F_1),F_2,DS(F_3),DS(F_4)))<br>$$</p><p>$$<br>weight_3 &#x3D; CS(Concat(US(F_1),US(F_2),F_3,DS(F_4)))<br>$$</p><p>$$<br>weight_4 &#x3D; CS(Concat(US(F_1),US(F_2),US(F_3),F_4))<br>$$</p><p>$$<br>ASFF_i &#x3D; weight_i * F_i, i &#x3D; 1,2,3,4<br>$$</p><p>其中DS和US代表下采样和上采样操作，CS表示先进行Conv，然后进行SoftMax。详细信息可以参见[69]。利用变化检测中的特征差异或特征拼接来完成后续处理。</p><h2 id="D部分MCM"><a href="#D部分MCM" class="headerlink" title="D部分MCM"></a>D部分MCM</h2><p><img src="https://s2.loli.net/2023/11/10/LXU7A5Nf84TuSd3.png" alt="image-20231110091842349"></p><p>在该模块中，</p><p>方法：将提取的变化特征与弱标签提供的变化前景掩模图相乘，使未变化区域的特征失效。</p><p>目的：使网络更关注变换区域前景的特征提取。</p><p>过程表示：<br>$$<br>ｆ＊ｐ＝ｆ＇<br>$$<br>其中f和f‘分别表示特征图和强化特征图。 P代表弱标签，白色部分为变化区域，用1表示，黑色部分用0表示。</p><h2 id="E-部分损失函数"><a href="#E-部分损失函数" class="headerlink" title="E 部分损失函数"></a>E 部分损失函数</h2><p>为了训练这个框架，我们主要使用二元交叉熵（BCE）损失[70]。<br>$$<br>L_{D_{n}}<br>$$<br>用于表示监督损失，<br>$$<br>L_{D_{w}}<br>$$<br>用d于表示弱监督损失，具体针对数据集k中的样本:<br>$$<br>L_{D_{n}} &#x3D; -\frac{1}{N^k}\sum_{m&#x3D;1}^{N^k}\sum_{i,j}(y_{i,j}^{n^{(m)}}\log_{}{\hat{y}<em>{i,j}^{n^{(m)}}}) + (1-y^{n^{m}}</em>{i,j})\log_{}{(1-\hat{y}_{i,j}^{n^{(m)}})}<br>$$</p><p>$$<br>L_{D_{w}} &#x3D; -\frac{1}{N^k}\sum_{m&#x3D;1}^{N^k}\sum_{i,j}(y_{i,j}^{w^{(m)}}\log_{}{\hat{y}<em>{i,j}^{w^{(m)}}}) + (1-y^{w^{m}}</em>{i,j})\log_{}{(1-\hat{y}<em>{i,j}^{w^{(m)}})}<br>$$<br>其中<br>$$<br>\hat{y}</em>{i,j}^{n^{(m)}}<br>$$<br>和<br>$$<br>\hat{y}_{i,j}^{w^{(m)}}<br>$$<br> 表示 SDCDNet 对样本 m 获得的在位置 (i, j) 处预测的置信度图</p><p>数据集k，<br>$$<br>y_{i,j}^{n^{(m)}}<br>$$</p><p>和<br>$$<br>y_{i,j}^{w^{(m)}}<br>$$<br>表示输入图像每个像素的标签。总损耗<br>$$<br>L_{total}<br>$$<br>可表示为<br>$$<br>L_{total} &#x3D; L_{D_w} + L_{D_n}<br>$$</p><h2 id="F-部分训练和推理细节"><a href="#F-部分训练和推理细节" class="headerlink" title="F 部分训练和推理细节"></a>F 部分训练和推理细节</h2><p><img src="https://s2.loli.net/2023/11/10/SvfVReMoFrGThg4.png" alt="image-20231110093733367"></p><p>在本节中，我们提供训练细节和拟议框架的推理细节。</p><p><strong>数据集怎么构造：</strong></p><p>在训练之前，对强标记的像素级样本进行重新采样，以平衡数据集中强标记和弱标记样本的数量。例如，如果强标记样本代表数据集的 1&#x2F;128，弱标记样本代表数据集的 127&#x2F;128，则强标记样本重复 127 次以达到平衡。</p><p><strong>训练过程</strong></p><p>如图5所示，在训练过程中，强标记数据（T1_normal 和T2_normal）和弱标记数据（T1_weak和T2_weak）同时输入到特征提取网络中，以简化训练过程。提取的特征被输入到正常分支和弱分支中以产生单独的网络输出（S_normal 和 S_weak），并且通过计算强标签和弱标签的单独损失函数来更新网络。在推理过程中，优化后的特征提取网络仅使用普通分支。</p><h1 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h1><p><strong>本节内容：</strong></p><p>在本节中，我们介绍了用于评估所提出的变化检测算法的实验设置。</p><p><strong>评价使用的数据集：</strong></p><p>我们首先描述用于评估的两个数据集，<strong>即 WHU [71] 和 SYSU-CD [72]，</strong></p><h2 id="数据集介绍"><a href="#数据集介绍" class="headerlink" title="数据集介绍"></a>数据集介绍</h2><p>1）WHU[71]：该数据集由2012年4月拍摄的航拍图像组成，覆盖面积20.5平方公里，包含12 796座建筑物（2016年版本为16 077座建筑物）。一些示例图像如图 1 所示。 6(a)。子数据集是通过手动选择 30 个地面控制点对原始数据集进行地理校正而创建的，精度为 1.6 像素。子数据集和相应的图像以及建筑矢量和栅格地图现已公开。高分辨率航空图像的尺寸为32 507 × 15 354。[71]中没有提供具体的数据分解方案但我们使用滑动窗口将图像划分为不重叠的 512 × 512 像素块，并将它们分为训练集、验证集和测试集，其中分别包含 1189、319 和 319 个图像块对。</p><p>2）SYSU-CD[72]：该数据集包含20000对2007年至2014年在香港拍摄的0.5米分辨率航空图像。样本图像如图6（b）所示。在[72]中，800个大小为1024×1024的原始图像对按照6:2:2的比例分为训练集、验证集和测试集。然后，从每个图像对中随机选择25个大小为256×256的图像子集对，并通过随机翻转和旋转进行增强，以获得总共20000对航空图像块。该数据集包括各种类型的重大变化，例如新城市建设、郊区扩张、预建地基、植被变化、道路拓宽和海洋建设。</p><h2 id="比较方法介绍"><a href="#比较方法介绍" class="headerlink" title="比较方法介绍"></a>比较方法介绍</h2><p>1）FC-Siam-Diff [42]：一种特征融合方法，使用孪生全CNN提取多级特征，并利用特征差异来融合双时态信息。</p><p>2）DTDSCN[45]：一种多尺度特征融合方法，结合了FCN中的通道注意机制和空间注意机制，以获得更具判别性的特征。</p><p>3）SNUNet [46]：用于变化检测的密集连接暹罗NestedUnet。它通过从编码器到解码器的紧凑信息传输来减轻神经网络深层的局部信息丢失。</p><p>4）DSIFN[47]：一种深度监督的图像融合网络，首先使用两分支FCN进行特征提取，然后使用深度监督的差分判别网络（DNN）进行变化检测。为了增强变化图边界和内部密度的完整性，通过注意力机制将多级语义特征与图像差分图特征混合。</p><p>5）BIT_CD[52]：一种基于Transformers的变化检测方法。它使用 CNN 提取深层特征并将其输入两个分支变压器。然后增强原始双时特征，并生成两个分支特征图之间差异的像素绝对值。最后，利用几个卷积来获得变化图。</p><p>6）s4GAN [54]：一种对抗性半监督语义分割方法。它由分割器和鉴别器组成，分割器和鉴别器以对抗方式进行训练。提出的两个损失可以稳定低数据训练并平衡分割器和鉴别器。</p><p>7）SemiCD [57]：一种用于变化检测的半监督方法。它包含完全监督的训练阶段和无监督的训练阶段。在正常的完全监督训练阶段之后，在无监督阶段，网络约束输出变化图在不同扰动下保持一致。</p><h2 id="评估指标介绍"><a href="#评估指标介绍" class="headerlink" title="评估指标介绍"></a>评估指标介绍</h2><p><strong>使用什么指标作为评价标准</strong></p><p>F1是精度和召回率的加权调和平均值，它同时考虑精度和召回率，平衡冲突，更能体现模型的变化检测能力。所以我们使用变化的平均F1分数</p><p><strong>计算方法</strong></p><p>以类别和背景为主要评价指标，公开计算如下：<br>$$<br>F1&#x3D;\frac{2<em>precision</em>recall}{precision+recall}<br>$$<br>此外，我们还使用 Precision、Recall 和 Intersection over Union（IoU）作为辅助评估指标，计算公式如下：<br>$$<br>Precision&#x3D;\frac{TP}{TP+FP}<br>$$</p><p>$$<br>Recall&#x3D;\frac{TP}{TP+FN}<br>$$</p><p>$$<br>IoU&#x3D;\frac{TP}{TP+FN+FP}<br>$$</p><p>其中，TP、FP、TN、FN分别为真阳性、假阳性、真阴性、假阴性的数量。</p><h2 id="实验设置介绍"><a href="#实验设置介绍" class="headerlink" title="实验设置介绍"></a>实验设置介绍</h2><p><strong>训练参数设置</strong>：</p><p>为了训练本文提出的 SDCDNet，我们利用了 BCE 损失函数 [70] 和随机梯度下降 (SGD) 优化器 [73]，动量设置为 0.9。我们将学习率初始化为 0.01，并采用预热策略 [61] 在前 5 个时期内逐渐将其增加到预设值。随后，我们应用余弦退火来衰减学习率并将权重衰减设置为 0.0005。这些模型使用 PyTorch [74] 深度学习框架在四个 Nvidia 2080Ti GPU 上进行了 100 个周期的训练，小批量大小为 8。</p><h2 id="消融研究"><a href="#消融研究" class="headerlink" title="消融研究"></a>消融研究</h2><p><strong>探究AWM和MCM对模型的影响：</strong></p><p>为了利用我们提出的 SDCDNet 研究 AWM 和 MCM 对遥感图像变化检测的影响，我们使用 DSIFN 作为基础模型，在 SYSU-CD 数据集上创建消融实验的基线 [72]。我们使用 128 像素的块大小和 1&#x2F;8 比例的像素级强注释。本节介绍我们的消融实验的结果，这些结果使用五个综合指标进行定量评估：精度、召回率、F1 分数、并集平均交集 (MIoU) 和参数。</p><p><strong>使用那些指标判断AWM和MCM的作用：</strong></p><p>我们的实验证实了 AWM 和 MCM 的实用性。如表一所示，AWM 的添加改善了所有四个评估指标，表明各级特征的自适应融合增强了对小变化区域的关注。另一方面，优先考虑前景信息的 MCM 相比 AWM 提高了 Precision、F1 分数和 MIoU，同时由于样本太少对变更建筑物的负面影响而略微降低了 Recall。当两个模块添加在一起时，模型的学习能力得到加强，与基线相比，Precision 提高了 1.51%，Recall 提高了 1.55%，F1 分数提高了 1.18%，MIoU 提高了 1.78%。与基线相比，AWM 和 MCM 所需的额外参数分别为 3.5M 和 2.8M。这些消融实验证明了所提出的 AWM 和 MCM 的有效性，并且计算成本的增加是可以接受的。这些模块增强了网络提取前景信息特征并进行多尺度融合的能力，从而更完整地检测变化边界并整体改善网络的缺点。</p><p><img src="https://s2.loli.net/2023/11/10/KmSqOAXsaTNG6rl.png" alt="image-20231110102402710"></p><h2 id="实验比较分析"><a href="#实验比较分析" class="headerlink" title="实验比较分析"></a>实验比较分析</h2><p><strong>使用数据集</strong>： WHU [71] 和 SYSU-CD [72] </p><p><strong>比较方法</strong>：</p><p>完全监督：</p><p> FC-Siam-Diff [42]、DTDSCN [45]、SNUNet [46]、BIT_CD [52] 和 DSIFN [47]，</p><p>半监督：</p><p>SemiCD [57] 和 s4GAN [54]（s4GAN 是在变化检测）。</p><h2 id="定性比较"><a href="#定性比较" class="headerlink" title="定性比较"></a>定性比较</h2><p>1）定性比较：</p><p>图7，表示了结果</p><p><img src="C:\Users\flan\AppData\Roaming\Typora\typora-user-images\image-20231110103959059.png" alt="image-20231110103959059"></p><p>结果：半监督 SDCDNet 框架在视觉效果方面超越了基本模型方法。</p><p>小目标：小目标检测的细节处理方面优于基本模型，显着减少了漏检和错误检测。</p><p>大目标：对于大目标，与基本模型相比，我们的方法显示出更好的检测连续性。</p><p>2）定量比较：</p><p><strong>条件</strong>：不同的SSL设置</p><p><strong>结论</strong>：</p><p>在强标记数据仅为1&#x2F;8的情况下，与基本模型相比，所提出的框架在所有SSL设置中实现了本文的最佳准确率。如表II和表III所示，当贴片尺寸变小时，改进尤其显着。</p><p>例如，在 WHU 建筑数据集上，当块大小为 128 像素时，我们提出的框架在精度、召回率、F1 和 MIoU 方面分别优于基本模型 DSIFN 9.64%、7.45%、7.44% 和 11.29%。同样，在 SYSU-CD 数据集上，与基本模型 DSIFN 相比，我们的框架在精度、召回率、F1 和 MIoU 方面分别显示出 4.3%、4.86%、6.12% 和 8.85% 的改进。当 Patch Size 减小到 16 像素时，性能进一步提高。在 WHU 建筑数据集中，我们提出框架在精度、召回率、F1 和 MIoU 方面分别实现了 11.94%、9.62%、9.59% 和 15.11% 的改进。在 SYSU-CD 数据集中，我们的方法在精度、召回率、F1 和 MIoU 方面分别显示出 5.14%、5.75%、6.85% 和 9.69% 的改进。</p><p><strong>减小块像素大小时候为什么提高准确度</strong></p><p>这是因为减少补丁大小会导致更准确的弱标签，从而帮助模型获得更好的准确性。此外。</p><p>即使仅使用 1&#x2F;4 的精细标记样本，我们的方法使用所有数据实现了不低于甚至高于基础模型的精度。</p><p><strong>和半监督SemiSANet 的比较</strong></p><p>SemiSANet 是一种简单而有效的半监督变化检测方法，采用一致性正则化和强增强 [59]。在本文的实验部分，发现在 WHU Building 数据集上，SemiSANet 取得的 F1 分数分别为 0.7808、0.7944、0.8353 和 0.8786，标记比例为 1&#x2F;40、1&#x2F;20、1&#x2F;10 和1&#x2F;5。</p><p>我们提出了一种名为 SDCDNet 的新方法，它建立在 DSIFN 的基础上。在我们的实验中，当标记比例分为 1&#x2F;64、1&#x2F;32、1&#x2F;16 和 1&#x2F;8 时，SDCDNet 在 F1 分数方面优于 SemiSANet。</p><p><strong>像素补丁大小在128像素时候</strong></p><p>为了证明我们提出的框架的优越性，我们使用 128 像素的补丁大小，将其与两个数据集（WHU 建筑数据集和 SYSU-CD 数据集）上的基本模型进行了比较。结果如表 IV 和 V 所示表明我们提出的方法在所有标记比率上都优于基本模型。此外，当标记率较低时，我们提出的框架相对于基本模型的改进更为显着，如图 8和9所示。具体来说，在 WHU 建筑数据集上，当强标记数据减少到 1&#x2F;4 时，我们的方法比基本模型 DSIFN 实现了 F1 指标上提高 4.26% 和 MIoU 指标提高 6.25%。在 SYSU-CD 数据集上，我们的方法使 F1 分数提高了 3.68%，MIoU 提高了 4.64%。值得注意的是，当仅使用 1&#x2F;128 进行强标记数据进行训练时候，我们的方法在两个数据集上的 F1 分数和 MIoU 均取得了显着改进，在 WHU 建筑数据集上分别提高了 34.28% 和 40.42%，在 SYSU-CD 数据集上分别提高了 17.91% 和 23.48%。我们的方法在两个数据集上也优于其他半监督模型 s4GAN 和 SemiCD，特别是当像素级标记样本的比例较低时。</p><p><strong>表6证明了模型和同其他模型相比下的有效性</strong></p><p>表六比较了相同条件下每个模型的参数数量和计算量。与大多数基础模型上的半监督方法相比，我们提出的方法取得了优越的性能，证明了其有效性。</p><p><strong>有效性原因分析：</strong></p><p>我们将这一显着改善归因于两个主要原因。首先，随着强标签数据量的减少，基础模型的特征分布与真实分布会有较大的误差。我们提出的框架对少量强标记数据进行重新采样，以使得正常分支获得特征分布信息，而弱分支中使用的 MCM 使模型能够从弱标记数据中提取引人注目的判别特征。其次，在训练过程中不断提高Normal和Weak分支之间特征分布的一致性，从而在极少的强标记数据和大量弱标记数据的情况下实现高精度。</p><p><strong>在其他数据集上（Google数据集）的有效性</strong></p><p>3）Google数据集中的定量分析：为了进一步验证了所提出方法在不同的数据集中的性能，我们用三种具有代表性的方法在谷歌数据集上测试，其中改变的对象在大小和形状上有所不同。如表七所示，我们提出的方法在不同的半监督设置下比其他半监督方法表现出显着的优势，证明了其高效性。</p><p><strong>当前方法的局限部分</strong></p><p>4）讨论与分析：我们提出的半监督变化检测方法可以有效地检测有限标记的变化。然而，我们的工作有两个主要限制。</p><ol><li>首先，我们的方法在很大程度上取决于所使用的完全监督的变化检测方法的性能，这可能会影响变化检测结果的质量。</li><li>其次，如第 III-F 节所述，当标记比率较低时，必须重复采样强标记样本的数量以匹配弱标记样本的数量进行对齐，这会增加训练时间并且根据不同的强标签的比例对结果产生不同的影响。</li></ol><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>标记遥感数据非常昂贵，并且在实际应用中获取这些标签既具有挑战性又乏味。为了解决这些问题，我们并没有专注于构建一个新的、特定的半监督变化检测网络模型。相反，我们提出了一种基于 SSL 的新的、通用的、方便的变更检测框架。</p><ol><li>该框架只需要少量的强标记数据和大量的弱标记数据即可实现高精度的变化检测，当训练集中强标记数据的比例较小。</li><li>如果使用现有的全监督变化检测模型作为基础模型，该框架可以在不改变基础模型结构的情况下，通过向基础模型添加Weak分支来快速实现半监督变化检测训练。</li><li>实验结果证明了所提出框架的有效性，在相同的实验数据和条件下，与现有的完全监督变化检测模型相比，观察到性能显着提高。</li></ol><p>在未来的研究中，我们将探索该框架在特征提取能力更强的基础模型上的应用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 遥感 </tag>
            
            <tag> SDCDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地狱门代码详解</title>
      <link href="/2023/11/07/%E5%9C%B0%E7%8B%B1%E9%97%A8%E4%BB%A3%E7%A0%81%E8%AF%A6%E8%A7%A3/"/>
      <url>/2023/11/07/%E5%9C%B0%E7%8B%B1%E9%97%A8%E4%BB%A3%E7%A0%81%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>通过火焰方块的放置判断当前的位置是否可以生成地狱门传送方块，其中判断是否满足生成的条件使用的PortalShape类。若可以生成EventHooks的onTrySpawnPortal方法。其中EventHooks的onTrySpawnPortal方法调用了PortalSpawnEvent事件。之后得到的结果为true的情况下。通过PortalShape类的createPortalBlocks方法创建方块。</p><h1 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h1><p>地狱门就是一个多方块结构，通过这个实现我们可以设计其他的多方块结构。</p><h1 id="PortalShape类"><a href="#PortalShape类" class="headerlink" title="PortalShape类"></a>PortalShape类</h1><p>用于处理和检测游戏中的传送门</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.minecraft.world.level.portal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.BlockUtil;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.Direction;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.server.level.ServerLevel;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.tags.BlockTags;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.Mth;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.Entity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.EntityDimensions;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.BlockGetter;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.LevelAccessor;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Blocks;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.NetherPortalBlock;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockBehaviour;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.properties.BlockStateProperties;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.AABB;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.Vec3;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.shapes.Shapes;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.shapes.VoxelShape;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PortalShape</span> &#123; <span class="comment">// 处理游戏中的传送门的形状</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MIN_WIDTH</span> <span class="operator">=</span> <span class="number">2</span>; <span class="comment">// 最小宽度</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_WIDTH</span> <span class="operator">=</span> <span class="number">21</span>; <span class="comment">// 最大宽度</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MIN_HEIGHT</span> <span class="operator">=</span> <span class="number">3</span>; <span class="comment">// 最小高度</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_HEIGHT</span> <span class="operator">=</span> <span class="number">21</span>; <span class="comment">// 最大高度</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> BlockBehaviour.<span class="type">StatePredicate</span> <span class="variable">FRAME</span> <span class="operator">=</span> net.neoforged.neoforge.common.extensions.IBlockStateExtension::isPortalFrame; <span class="comment">// 传送门框架判断函数</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">float</span> <span class="variable">SAFE_TRAVEL_MAX_ENTITY_XY</span> <span class="operator">=</span> <span class="number">4.0F</span>; <span class="comment">// </span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">double</span> <span class="variable">SAFE_TRAVEL_MAX_VERTICAL_DELTA</span> <span class="operator">=</span> <span class="number">1.0</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> LevelAccessor level;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> Direction.Axis axis;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> Direction rightDir;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> numPortalBlocks;</span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">private</span> BlockPos bottomLeft;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> height;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> width;</span><br><span class="line"><span class="comment">// 用于给定位置和方向上寻找符合条件的传送门形状</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> Optional&lt;PortalShape&gt; <span class="title function_">findEmptyPortalShape</span><span class="params">(LevelAccessor p_77709_, BlockPos p_77710_, Direction.Axis p_77711_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> findPortalShape(p_77709_, p_77710_, p_77727_ -&gt; p_77727_.isValid() &amp;&amp; p_77727_.numPortalBlocks == <span class="number">0</span>, p_77711_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 在给定的环境中寻找一个符合条件的传送门的形状</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> Optional&lt;PortalShape&gt; <span class="title function_">findPortalShape</span><span class="params">(LevelAccessor p_77713_, BlockPos p_77714_, Predicate&lt;PortalShape&gt; p_77715_, Direction.Axis p_77716_)</span> &#123;</span><br><span class="line">       <span class="comment">// 创建一个传送门形状，调用谓词进行过滤。</span></span><br><span class="line">      Optional&lt;PortalShape&gt; optional = Optional.of(<span class="keyword">new</span> <span class="title class_">PortalShape</span>(p_77713_, p_77714_, p_77716_)).filter(p_77715_);</span><br><span class="line">      <span class="keyword">if</span> (optional.isPresent()) &#123;</span><br><span class="line">         <span class="keyword">return</span> optional;<span class="comment">// 如果存在就返回</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         Direction.<span class="type">Axis</span> <span class="variable">direction$axis</span> <span class="operator">=</span> p_77716_ == Direction.Axis.X ? Direction.Axis.Z : Direction.Axis.X;</span><br><span class="line">          <span class="comment">// 否则就创建一个新的optional对象，其轴的方向和原来不同，继续过滤。</span></span><br><span class="line">         <span class="keyword">return</span> Optional.of(<span class="keyword">new</span> <span class="title class_">PortalShape</span>(p_77713_, p_77714_, direction$axis)).filter(p_77715_);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 初始化一个新的传送门的形状</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">PortalShape</span><span class="params">(LevelAccessor p_77695_, BlockPos p_77696_, Direction.Axis p_77697_)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.level = p_77695_;<span class="comment">// level</span></span><br><span class="line">      <span class="built_in">this</span>.axis = p_77697_; <span class="comment">// 方向</span></span><br><span class="line">      <span class="built_in">this</span>.rightDir = p_77697_ == Direction.Axis.X ? Direction.WEST : Direction.SOUTH;</span><br><span class="line">      <span class="built_in">this</span>.bottomLeft = <span class="built_in">this</span>.calculateBottomLeft(p_77696_);<span class="comment">// 调用calculateBottomLeft计算</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.bottomLeft == <span class="literal">null</span>) &#123;<span class="comment">//如果计算为空</span></span><br><span class="line">         <span class="built_in">this</span>.bottomLeft = p_77696_;<span class="comment">//赋值为blockpos</span></span><br><span class="line">         <span class="built_in">this</span>.width = <span class="number">1</span>;<span class="comment">//宽度1</span></span><br><span class="line">         <span class="built_in">this</span>.height = <span class="number">1</span>;<span class="comment">//高度1</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="built_in">this</span>.width = <span class="built_in">this</span>.calculateWidth();<span class="comment">//计算宽度</span></span><br><span class="line">         <span class="keyword">if</span> (<span class="built_in">this</span>.width &gt; <span class="number">0</span>) &#123;<span class="comment">// 如果宽度&gt;0</span></span><br><span class="line">            <span class="built_in">this</span>.height = <span class="built_in">this</span>.calculateHeight();<span class="comment">//计算高度</span></span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 计算传送门底部左边的位置</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">private</span> BlockPos <span class="title function_">calculateBottomLeft</span><span class="params">(BlockPos p_77734_)</span> &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> Math.max(<span class="built_in">this</span>.level.getMinBuildHeight(), p_77734_.getY() - <span class="number">21</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">while</span>(p_77734_.getY() &gt; i &amp;&amp; isEmpty(<span class="built_in">this</span>.level.getBlockState(p_77734_.below()))) &#123;</span><br><span class="line">         p_77734_ = p_77734_.below();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="type">Direction</span> <span class="variable">direction</span> <span class="operator">=</span> <span class="built_in">this</span>.rightDir.getOpposite();</span><br><span class="line">      <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="built_in">this</span>.getDistanceUntilEdgeAboveFrame(p_77734_, direction) - <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">return</span> j &lt; <span class="number">0</span> ? <span class="literal">null</span> : p_77734_.relative(direction, j);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 计算宽度</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">calculateWidth</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="built_in">this</span>.getDistanceUntilEdgeAboveFrame(<span class="built_in">this</span>.bottomLeft, <span class="built_in">this</span>.rightDir);</span><br><span class="line">      <span class="keyword">return</span> i &gt;= <span class="number">2</span> &amp;&amp; i &lt;= <span class="number">21</span> ? i : <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 计算传送门到边缘的位置</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getDistanceUntilEdgeAboveFrame</span><span class="params">(BlockPos p_77736_, Direction p_77737_)</span> &#123;</span><br><span class="line">      BlockPos.<span class="type">MutableBlockPos</span> <span class="variable">blockpos$mutableblockpos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlockPos</span>.MutableBlockPos();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">21</span>; ++i) &#123;</span><br><span class="line">         blockpos$mutableblockpos.set(p_77736_).move(p_77737_, i);</span><br><span class="line">         <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> <span class="built_in">this</span>.level.getBlockState(blockpos$mutableblockpos);</span><br><span class="line">         <span class="keyword">if</span> (!isEmpty(blockstate)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (FRAME.test(blockstate, <span class="built_in">this</span>.level, blockpos$mutableblockpos)) &#123;</span><br><span class="line">               <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="type">BlockState</span> <span class="variable">blockstate1</span> <span class="operator">=</span> <span class="built_in">this</span>.level.getBlockState(blockpos$mutableblockpos.move(Direction.DOWN));</span><br><span class="line">         <span class="keyword">if</span> (!FRAME.test(blockstate1, <span class="built_in">this</span>.level, blockpos$mutableblockpos)) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 计算高度</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">calculateHeight</span><span class="params">()</span> &#123;</span><br><span class="line">      BlockPos.<span class="type">MutableBlockPos</span> <span class="variable">blockpos$mutableblockpos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlockPos</span>.MutableBlockPos();</span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="built_in">this</span>.getDistanceUntilTop(blockpos$mutableblockpos);</span><br><span class="line">      <span class="keyword">return</span> i &gt;= <span class="number">3</span> &amp;&amp; i &lt;= <span class="number">21</span> &amp;&amp; <span class="built_in">this</span>.hasTopFrame(blockpos$mutableblockpos, i) ? i : <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">hasTopFrame</span><span class="params">(BlockPos.MutableBlockPos p_77731_, <span class="type">int</span> p_77732_)</span> &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.width; ++i) &#123;</span><br><span class="line">         BlockPos.<span class="type">MutableBlockPos</span> <span class="variable">blockpos$mutableblockpos</span> <span class="operator">=</span> p_77731_.set(<span class="built_in">this</span>.bottomLeft).move(Direction.UP, p_77732_).move(<span class="built_in">this</span>.rightDir, i);</span><br><span class="line">         <span class="keyword">if</span> (!FRAME.test(<span class="built_in">this</span>.level.getBlockState(blockpos$mutableblockpos), <span class="built_in">this</span>.level, blockpos$mutableblockpos)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 计算传送门顶部的位置</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getDistanceUntilTop</span><span class="params">(BlockPos.MutableBlockPos p_77729_)</span> &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">21</span>; ++i) &#123;</span><br><span class="line">         p_77729_.set(<span class="built_in">this</span>.bottomLeft).move(Direction.UP, i).move(<span class="built_in">this</span>.rightDir, -<span class="number">1</span>);</span><br><span class="line">         <span class="keyword">if</span> (!FRAME.test(<span class="built_in">this</span>.level.getBlockState(p_77729_), <span class="built_in">this</span>.level, p_77729_)) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         p_77729_.set(<span class="built_in">this</span>.bottomLeft).move(Direction.UP, i).move(<span class="built_in">this</span>.rightDir, <span class="built_in">this</span>.width);</span><br><span class="line">         <span class="keyword">if</span> (!FRAME.test(<span class="built_in">this</span>.level.getBlockState(p_77729_), <span class="built_in">this</span>.level, p_77729_)) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="built_in">this</span>.width; ++j) &#123;</span><br><span class="line">            p_77729_.set(<span class="built_in">this</span>.bottomLeft).move(Direction.UP, i).move(<span class="built_in">this</span>.rightDir, j);</span><br><span class="line">            <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> <span class="built_in">this</span>.level.getBlockState(p_77729_);</span><br><span class="line">            <span class="keyword">if</span> (!isEmpty(blockstate)) &#123;</span><br><span class="line">               <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (blockstate.is(Blocks.NETHER_PORTAL)) &#123;</span><br><span class="line">               ++<span class="built_in">this</span>.numPortalBlocks;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="number">21</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 判断一个位置是否是空的</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">(BlockState p_77718_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> p_77718_.isAir() || p_77718_.is(BlockTags.FIRE) || p_77718_.is(Blocks.NETHER_PORTAL);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 判断传送门是否是合法的</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.bottomLeft != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.width &gt;= <span class="number">2</span> &amp;&amp; <span class="built_in">this</span>.width &lt;= <span class="number">21</span> &amp;&amp; <span class="built_in">this</span>.height &gt;= <span class="number">3</span> &amp;&amp; <span class="built_in">this</span>.height &lt;= <span class="number">21</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 创建传送门方块（紫色那个）</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createPortalBlocks</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> Blocks.NETHER_PORTAL.defaultBlockState().setValue(NetherPortalBlock.AXIS, <span class="built_in">this</span>.axis);</span><br><span class="line">      BlockPos.betweenClosed(<span class="built_in">this</span>.bottomLeft, <span class="built_in">this</span>.bottomLeft.relative(Direction.UP, <span class="built_in">this</span>.height - <span class="number">1</span>).relative(<span class="built_in">this</span>.rightDir, <span class="built_in">this</span>.width - <span class="number">1</span>))</span><br><span class="line">         .forEach(p_77725_ -&gt; <span class="built_in">this</span>.level.setBlock(p_77725_, blockstate, <span class="number">18</span>));</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 传送门是否完整</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isComplete</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.isValid() &amp;&amp; <span class="built_in">this</span>.numPortalBlocks == <span class="built_in">this</span>.width * <span class="built_in">this</span>.height;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 获得相对位置</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> Vec3 <span class="title function_">getRelativePosition</span><span class="params">(BlockUtil.FoundRectangle p_77739_, Direction.Axis p_77740_, Vec3 p_77741_, EntityDimensions p_77742_)</span> &#123;</span><br><span class="line">      <span class="type">double</span> <span class="variable">d0</span> <span class="operator">=</span> (<span class="type">double</span>)p_77739_.axis1Size - (<span class="type">double</span>)p_77742_.width;</span><br><span class="line">      <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> (<span class="type">double</span>)p_77739_.axis2Size - (<span class="type">double</span>)p_77742_.height;</span><br><span class="line">      <span class="type">BlockPos</span> <span class="variable">blockpos</span> <span class="operator">=</span> p_77739_.minCorner;</span><br><span class="line">      <span class="type">double</span> d2;</span><br><span class="line">      <span class="keyword">if</span> (d0 &gt; <span class="number">0.0</span>) &#123;</span><br><span class="line">         <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> (<span class="type">float</span>)blockpos.get(p_77740_) + p_77742_.width / <span class="number">2.0F</span>;</span><br><span class="line">         d2 = Mth.clamp(Mth.inverseLerp(p_77741_.get(p_77740_) - (<span class="type">double</span>)f, <span class="number">0.0</span>, d0), <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         d2 = <span class="number">0.5</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="type">double</span> d4;</span><br><span class="line">      <span class="keyword">if</span> (d1 &gt; <span class="number">0.0</span>) &#123;</span><br><span class="line">         Direction.<span class="type">Axis</span> <span class="variable">direction$axis</span> <span class="operator">=</span> Direction.Axis.Y;</span><br><span class="line">         d4 = Mth.clamp(Mth.inverseLerp(p_77741_.get(direction$axis) - (<span class="type">double</span>)blockpos.get(direction$axis), <span class="number">0.0</span>, d1), <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         d4 = <span class="number">0.0</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      Direction.<span class="type">Axis</span> <span class="variable">direction$axis1</span> <span class="operator">=</span> p_77740_ == Direction.Axis.X ? Direction.Axis.Z : Direction.Axis.X;</span><br><span class="line">      <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> p_77741_.get(direction$axis1) - ((<span class="type">double</span>)blockpos.get(direction$axis1) + <span class="number">0.5</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Vec3</span>(d2, d4, d3);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 创建传送门信息</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> PortalInfo <span class="title function_">createPortalInfo</span><span class="params">(</span></span><br><span class="line"><span class="params">      ServerLevel p_259301_, // 世界</span></span><br><span class="line"><span class="params">      BlockUtil.FoundRectangle p_259931_,//传送门的矩形区域</span></span><br><span class="line"><span class="params">      Direction.Axis p_259901_,//传送门的轴</span></span><br><span class="line"><span class="params">      Vec3 p_259630_,//传送门的位置</span></span><br><span class="line"><span class="params">      Entity p_259166_,//实体</span></span><br><span class="line"><span class="params">      Vec3 p_260043_,//实体位置</span></span><br><span class="line"><span class="params">      <span class="type">float</span> p_259853_,//旋转角度</span></span><br><span class="line"><span class="params">      <span class="type">float</span> p_259667_//实体旋转角度</span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line">      <span class="type">BlockPos</span> <span class="variable">blockpos</span> <span class="operator">=</span> p_259931_.minCorner;<span class="comment">//给定区域获得门户的坐标</span></span><br><span class="line">      <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> p_259301_.getBlockState(blockpos);<span class="comment">//获得方块状态</span></span><br><span class="line">      Direction.<span class="type">Axis</span> <span class="variable">direction$axis</span> <span class="operator">=</span> blockstate.getOptionalValue(BlockStateProperties.HORIZONTAL_AXIS).orElse(Direction.Axis.X);<span class="comment">//从方块状态中获得传送门的轴</span></span><br><span class="line">      <span class="type">double</span> <span class="variable">d0</span> <span class="operator">=</span> (<span class="type">double</span>)p_259931_.axis1Size;</span><br><span class="line">      <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> (<span class="type">double</span>)p_259931_.axis2Size;</span><br><span class="line">      <span class="type">EntityDimensions</span> <span class="variable">entitydimensions</span> <span class="operator">=</span> p_259166_.getDimensions(p_259166_.getPose());</span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> p_259901_ == direction$axis ? <span class="number">0</span> : <span class="number">90</span>;</span><br><span class="line">      <span class="type">Vec3</span> <span class="variable">vec3</span> <span class="operator">=</span> p_259901_ == direction$axis ? p_260043_ : <span class="keyword">new</span> <span class="title class_">Vec3</span>(p_260043_.z, p_260043_.y, -p_260043_.x);</span><br><span class="line">      <span class="type">double</span> <span class="variable">d2</span> <span class="operator">=</span> (<span class="type">double</span>)entitydimensions.width / <span class="number">2.0</span> + (d0 - (<span class="type">double</span>)entitydimensions.width) * p_259630_.x();</span><br><span class="line">      <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> (d1 - (<span class="type">double</span>)entitydimensions.height) * p_259630_.y();</span><br><span class="line">      <span class="type">double</span> <span class="variable">d4</span> <span class="operator">=</span> <span class="number">0.5</span> + p_259630_.z();</span><br><span class="line">      <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> direction$axis == Direction.Axis.X;</span><br><span class="line">      <span class="type">Vec3</span> <span class="variable">vec31</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vec3</span>((<span class="type">double</span>)blockpos.getX() + (flag ? d2 : d4), (<span class="type">double</span>)blockpos.getY() + d3, (<span class="type">double</span>)blockpos.getZ() + (flag ? d4 : d2));</span><br><span class="line">      <span class="type">Vec3</span> <span class="variable">vec32</span> <span class="operator">=</span> findCollisionFreePosition(vec31, p_259301_, p_259166_, entitydimensions);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PortalInfo</span>(vec32, vec3, p_259853_ + (<span class="type">float</span>)i, p_259667_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 用于找到碰撞免疫的位置</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> Vec3 <span class="title function_">findCollisionFreePosition</span><span class="params">(Vec3 p_260315_, ServerLevel p_259704_, Entity p_259626_, EntityDimensions p_259816_)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!(p_259816_.width &gt; <span class="number">4.0F</span>) &amp;&amp; !(p_259816_.height &gt; <span class="number">4.0F</span>)) &#123;</span><br><span class="line">         <span class="type">double</span> <span class="variable">d0</span> <span class="operator">=</span> (<span class="type">double</span>)p_259816_.height / <span class="number">2.0</span>;</span><br><span class="line">         <span class="type">Vec3</span> <span class="variable">vec3</span> <span class="operator">=</span> p_260315_.add(<span class="number">0.0</span>, d0, <span class="number">0.0</span>);</span><br><span class="line">         <span class="type">VoxelShape</span> <span class="variable">voxelshape</span> <span class="operator">=</span> Shapes.create(</span><br><span class="line">            AABB.ofSize(vec3, (<span class="type">double</span>)p_259816_.width, <span class="number">0.0</span>, (<span class="type">double</span>)p_259816_.width).expandTowards(<span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>).inflate(<span class="number">1.0E-6</span>)</span><br><span class="line">         );</span><br><span class="line">         Optional&lt;Vec3&gt; optional = p_259704_.findFreePosition(</span><br><span class="line">            p_259626_, voxelshape, vec3, (<span class="type">double</span>)p_259816_.width, (<span class="type">double</span>)p_259816_.height, (<span class="type">double</span>)p_259816_.width</span><br><span class="line">         );</span><br><span class="line">         Optional&lt;Vec3&gt; optional1 = optional.map(p_259019_ -&gt; p_259019_.subtract(<span class="number">0.0</span>, d0, <span class="number">0.0</span>));</span><br><span class="line">         <span class="keyword">return</span> optional1.orElse(p_260315_);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> p_260315_;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="BaseFrieBlock类"><a href="#BaseFrieBlock类" class="headerlink" title="BaseFrieBlock类"></a>BaseFrieBlock类</h1><p>&#x2F;&#x2F; 火焰类型方块的基类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.minecraft.world.level.block;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.Direction;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.particles.ParticleTypes;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundEvents;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.RandomSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.Entity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.player.Player;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.context.BlockPlaceContext;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.BlockGetter;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockBehaviour;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.portal.PortalShape;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.shapes.CollisionContext;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.shapes.VoxelShape;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseFireBlock</span> <span class="keyword">extends</span> <span class="title class_">Block</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SECONDS_ON_FIRE</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">float</span> fireDamage;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">float</span> <span class="variable">AABB_OFFSET</span> <span class="operator">=</span> <span class="number">1.0F</span>;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">DOWN_AABB</span> <span class="operator">=</span> Block.box(<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">16.0</span>, <span class="number">1.0</span>, <span class="number">16.0</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">BaseFireBlock</span><span class="params">(BlockBehaviour.Properties p_49241_, <span class="type">float</span> p_49242_)</span> &#123;</span><br><span class="line">      <span class="built_in">super</span>(p_49241_);</span><br><span class="line">      <span class="built_in">this</span>.fireDamage = p_49242_; <span class="comment">// 火焰伤害</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据放置的位置和level决定状态</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> BlockState <span class="title function_">getStateForPlacement</span><span class="params">(BlockPlaceContext p_49244_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> getState(p_49244_.getLevel(), p_49244_.getClickedPos());</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 根据getter和blockpos决定火焰方块的状态</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> BlockState <span class="title function_">getState</span><span class="params">(BlockGetter p_49246_, BlockPos p_49247_)</span> &#123;</span><br><span class="line">      <span class="type">BlockPos</span> <span class="variable">blockpos</span> <span class="operator">=</span> p_49247_.below();</span><br><span class="line">      <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> p_49246_.getBlockState(blockpos);</span><br><span class="line">      <span class="keyword">return</span> SoulFireBlock.canSurviveOnBlock(blockstate)</span><br><span class="line">         ? Blocks.SOUL_FIRE.defaultBlockState()</span><br><span class="line">         : ((FireBlock)Blocks.FIRE).getStateForPlacement(p_49246_, p_49247_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 返回火焰方块的形状，用于碰撞检测</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> VoxelShape <span class="title function_">getShape</span><span class="params">(BlockState p_49274_, BlockGetter p_49275_, BlockPos p_49276_, CollisionContext p_49277_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> DOWN_AABB;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 每个tick会调用的方法，处理火焰动画的效果，例如播放火焰的环境音效，添加火焰的粒子效果</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">animateTick</span><span class="params">(BlockState p_220763_, Level p_220764_, BlockPos p_220765_, RandomSource p_220766_)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (p_220766_.nextInt(<span class="number">24</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">         p_220764_.playLocalSound(</span><br><span class="line">            (<span class="type">double</span>)p_220765_.getX() + <span class="number">0.5</span>,</span><br><span class="line">            (<span class="type">double</span>)p_220765_.getY() + <span class="number">0.5</span>,</span><br><span class="line">            (<span class="type">double</span>)p_220765_.getZ() + <span class="number">0.5</span>,</span><br><span class="line">            SoundEvents.FIRE_AMBIENT,</span><br><span class="line">            SoundSource.BLOCKS,</span><br><span class="line">            <span class="number">1.0F</span> + p_220766_.nextFloat(),</span><br><span class="line">            p_220766_.nextFloat() * <span class="number">0.7F</span> + <span class="number">0.3F</span>,</span><br><span class="line">            <span class="literal">false</span></span><br><span class="line">         );</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="type">BlockPos</span> <span class="variable">blockpos</span> <span class="operator">=</span> p_220765_.below();</span><br><span class="line">      <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> p_220764_.getBlockState(blockpos);</span><br><span class="line">      <span class="keyword">if</span> (!<span class="built_in">this</span>.canBurn(blockstate) &amp;&amp; !blockstate.isFaceSturdy(p_220764_, blockpos, Direction.UP)) &#123;</span><br><span class="line">         <span class="keyword">if</span> (<span class="built_in">this</span>.canBurn(p_220764_.getBlockState(p_220765_.west()))) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j) &#123;</span><br><span class="line">               <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getX() + p_220766_.nextDouble() * <span class="number">0.1F</span>;</span><br><span class="line">               <span class="type">double</span> <span class="variable">d8</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getY() + p_220766_.nextDouble();</span><br><span class="line">               <span class="type">double</span> <span class="variable">d13</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getZ() + p_220766_.nextDouble();</span><br><span class="line">               p_220764_.addParticle(ParticleTypes.LARGE_SMOKE, d3, d8, d13, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (<span class="built_in">this</span>.canBurn(p_220764_.getBlockState(p_220765_.east()))) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; <span class="number">2</span>; ++k) &#123;</span><br><span class="line">               <span class="type">double</span> <span class="variable">d4</span> <span class="operator">=</span> (<span class="type">double</span>)(p_220765_.getX() + <span class="number">1</span>) - p_220766_.nextDouble() * <span class="number">0.1F</span>;</span><br><span class="line">               <span class="type">double</span> <span class="variable">d9</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getY() + p_220766_.nextDouble();</span><br><span class="line">               <span class="type">double</span> <span class="variable">d14</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getZ() + p_220766_.nextDouble();</span><br><span class="line">               p_220764_.addParticle(ParticleTypes.LARGE_SMOKE, d4, d9, d14, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (<span class="built_in">this</span>.canBurn(p_220764_.getBlockState(p_220765_.north()))) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>; l &lt; <span class="number">2</span>; ++l) &#123;</span><br><span class="line">               <span class="type">double</span> <span class="variable">d5</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getX() + p_220766_.nextDouble();</span><br><span class="line">               <span class="type">double</span> <span class="variable">d10</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getY() + p_220766_.nextDouble();</span><br><span class="line">               <span class="type">double</span> <span class="variable">d15</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getZ() + p_220766_.nextDouble() * <span class="number">0.1F</span>;</span><br><span class="line">               p_220764_.addParticle(ParticleTypes.LARGE_SMOKE, d5, d10, d15, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (<span class="built_in">this</span>.canBurn(p_220764_.getBlockState(p_220765_.south()))) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">0</span>; i1 &lt; <span class="number">2</span>; ++i1) &#123;</span><br><span class="line">               <span class="type">double</span> <span class="variable">d6</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getX() + p_220766_.nextDouble();</span><br><span class="line">               <span class="type">double</span> <span class="variable">d11</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getY() + p_220766_.nextDouble();</span><br><span class="line">               <span class="type">double</span> <span class="variable">d16</span> <span class="operator">=</span> (<span class="type">double</span>)(p_220765_.getZ() + <span class="number">1</span>) - p_220766_.nextDouble() * <span class="number">0.1F</span>;</span><br><span class="line">               p_220764_.addParticle(ParticleTypes.LARGE_SMOKE, d6, d11, d16, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (<span class="built_in">this</span>.canBurn(p_220764_.getBlockState(p_220765_.above()))) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j1</span> <span class="operator">=</span> <span class="number">0</span>; j1 &lt; <span class="number">2</span>; ++j1) &#123;</span><br><span class="line">               <span class="type">double</span> <span class="variable">d7</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getX() + p_220766_.nextDouble();</span><br><span class="line">               <span class="type">double</span> <span class="variable">d12</span> <span class="operator">=</span> (<span class="type">double</span>)(p_220765_.getY() + <span class="number">1</span>) - p_220766_.nextDouble() * <span class="number">0.1F</span>;</span><br><span class="line">               <span class="type">double</span> <span class="variable">d17</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getZ() + p_220766_.nextDouble();</span><br><span class="line">               p_220764_.addParticle(ParticleTypes.LARGE_SMOKE, d7, d12, d17, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">d0</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getX() + p_220766_.nextDouble();</span><br><span class="line">            <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getY() + p_220766_.nextDouble() * <span class="number">0.5</span> + <span class="number">0.5</span>;</span><br><span class="line">            <span class="type">double</span> <span class="variable">d2</span> <span class="operator">=</span> (<span class="type">double</span>)p_220765_.getZ() + p_220766_.nextDouble();</span><br><span class="line">            p_220764_.addParticle(ParticleTypes.LARGE_SMOKE, d0, d1, d2, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 抽象方法，用于判断方块是否可以燃烧</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="type">boolean</span> <span class="title function_">canBurn</span><span class="params">(BlockState p_49284_)</span>;</span><br><span class="line"><span class="comment">// 处理实体进入火焰的状况，例如添加火焰伤害和燃烧效果</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">entityInside</span><span class="params">(BlockState p_49260_, Level p_49261_, BlockPos p_49262_, Entity p_49263_)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!p_49263_.fireImmune()) &#123;</span><br><span class="line">         p_49263_.setRemainingFireTicks(p_49263_.getRemainingFireTicks() + <span class="number">1</span>);</span><br><span class="line">         <span class="keyword">if</span> (p_49263_.getRemainingFireTicks() == <span class="number">0</span>) &#123;</span><br><span class="line">            p_49263_.setSecondsOnFire(<span class="number">8</span>);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      p_49263_.hurt(p_49261_.damageSources().inFire(), <span class="built_in">this</span>.fireDamage);</span><br><span class="line">      <span class="built_in">super</span>.entityInside(p_49260_, p_49261_, p_49262_, p_49263_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 处理方块被放置的情况，例如在特定的维度中，如果方块上方有足够的空间，就会尝试创建一个传送门</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPlace</span><span class="params">(BlockState p_49279_, Level p_49280_, BlockPos p_49281_, BlockState p_49282_, <span class="type">boolean</span> p_49283_)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!p_49282_.is(p_49279_.getBlock())) &#123;</span><br><span class="line">         <span class="keyword">if</span> (inPortalDimension(p_49280_)) &#123;</span><br><span class="line">            Optional&lt;PortalShape&gt; optional = PortalShape.findEmptyPortalShape(p_49280_, p_49281_, Direction.Axis.X);</span><br><span class="line">            optional = net.neoforged.neoforge.event.EventHooks.onTrySpawnPortal(p_49280_, p_49281_, optional);</span><br><span class="line">            <span class="keyword">if</span> (optional.isPresent()) &#123;</span><br><span class="line">               optional.get().createPortalBlocks();</span><br><span class="line">               <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (!p_49279_.canSurvive(p_49280_, p_49281_)) &#123;</span><br><span class="line">            p_49280_.removeBlock(p_49281_, <span class="literal">false</span>);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 判断当前维度世界是否可以创建传送门</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">inPortalDimension</span><span class="params">(Level p_49249_)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> p_49249_.dimension() == Level.OVERWORLD || p_49249_.dimension() == Level.NETHER;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 处理方块被破坏时候的粒子效果</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">spawnDestroyParticles</span><span class="params">(Level p_152139_, Player p_152140_, BlockPos p_152141_, BlockState p_152142_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 处理玩家破坏方块时候的情况</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playerWillDestroy</span><span class="params">(Level p_49251_, BlockPos p_49252_, BlockState p_49253_, Player p_49254_)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!p_49251_.isClientSide()) &#123;</span><br><span class="line">         p_49251_.levelEvent(<span class="literal">null</span>, <span class="number">1009</span>, p_49252_, <span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">super</span>.playerWillDestroy(p_49251_, p_49252_, p_49253_, p_49254_);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//它用于判断方块是否可以被放置在给定的位置。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">canBePlacedAt</span><span class="params">(Level p_49256_, BlockPos p_49257_, Direction p_49258_)</span> &#123;</span><br><span class="line">      <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> p_49256_.getBlockState(p_49257_);</span><br><span class="line">      <span class="keyword">if</span> (!blockstate.isAir()) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> getState(p_49256_, p_49257_).canSurvive(p_49256_, p_49257_) || isPortal(p_49256_, p_49257_, p_49258_);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 静态方法，用于判断给定的位置是否可以创建传送门</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPortal</span><span class="params">(Level p_49270_, BlockPos p_49271_, Direction p_49272_)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!inPortalDimension(p_49270_)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         BlockPos.<span class="type">MutableBlockPos</span> <span class="variable">blockpos$mutableblockpos</span> <span class="operator">=</span> p_49271_.mutable();</span><br><span class="line">         <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">for</span>(Direction direction : Direction.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p_49270_.getBlockState(blockpos$mutableblockpos.set(p_49271_).move(direction)).isPortalFrame(p_49270_, blockpos$mutableblockpos)) &#123;</span><br><span class="line">               flag = <span class="literal">true</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Direction.<span class="type">Axis</span> <span class="variable">direction$axis</span> <span class="operator">=</span> p_49272_.getAxis().isHorizontal()</span><br><span class="line">               ? p_49272_.getCounterClockWise().getAxis()</span><br><span class="line">               : Direction.Plane.HORIZONTAL.getRandomAxis(p_49270_.random);</span><br><span class="line">            <span class="keyword">return</span> PortalShape.findEmptyPortalShape(p_49270_, p_49271_, direction$axis).isPresent();</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自然辩证法习题</title>
      <link href="/2023/11/06/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95%E9%A2%98/"/>
      <url>/2023/11/06/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h1><p>简答题四选三</p><p>论述题 2个</p><h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><h2 id="机械唯物主义自然观，缺陷，什么是机械唯物主义自然观"><a href="#机械唯物主义自然观，缺陷，什么是机械唯物主义自然观" class="headerlink" title="机械唯物主义自然观，缺陷，什么是机械唯物主义自然观"></a>机械唯物主义自然观，缺陷，什么是机械唯物主义自然观</h2><p>机械唯物主义自然观是什么：机械唯物主义自然观是16-18世纪的自然科学家和哲学家们根据牛顿经典力学等自然成果，概况和总结自然界及其与人类的关系形成的机械唯物主义和形而上学的自然观。</p><p>与马克思自然观的关系是：重要的思想渊源</p><p>机械唯物主义自然观的观点：</p><ul><li>自然界由物质构成，物质由不可再分的微粒构成。</li><li>自然界具有绝对不变性，自然物和时间，空间都是不变的。</li><li>自然界的物质运动是受外力的作用，遵循因果规律的机械运动，宇宙的过程可以用简单的数学方程式表示。</li><li>自然界受到上帝的“目的性”支配。</li><li>以形而上学的思维方式认识自然界，即它先把整体分割为若干孤立的部分要素进行研究，再把这些部分合为一体；他是与辩证法相对的，是用孤立，静止的观点观察世界的思维方式；这种思维方式在研究方法方面超过古希腊，但是在自然观方面却低于过古希腊。</li><li>人和自然界都是机器，并且是分立的。</li></ul><p>机械唯物主义自然观的额缺陷：</p><p>主要体现：以机械决定论的观点认识自然界的存在及其规律，并以形而上学方法开展具体研究；以因果决定论的观点推测自然界的未来发展。</p><ul><li>以机械决定论认识自然界。（1）它把自然界和人都看作机器，并把人排斥与自然界之外，割裂其固有联系。（2）它以机械运动穷尽物质的所有运动，抹杀物质运动形式及其性质的多样性。（3）它用量的差异说明一切质的差异，用物质的量规定其质，忽视了质和量的辩证关系。</li><li>以因果决定论看待自然界。它主张自然界的存在和发展都在遵循因果规律，提倡“关于自然界的安排的合目的性的思想”。其结果，“还是没有摆脱神学自然观的束缚”。</li><li>以孤立和静止的方法研究自然界。它主张“在绝对不相容的对立中思维”，“企图用一种模式来改造整个世界”，虽然“在个别问题上胜过朴素唯物主义，但对世界的联系和发展的理解却低于朴素唯物主义”。</li></ul><h2 id="默顿科学，四条规范，科学的四条规范"><a href="#默顿科学，四条规范，科学的四条规范" class="headerlink" title="默顿科学，四条规范，科学的四条规范"></a>默顿科学，四条规范，科学的四条规范</h2><p>提出者：默顿在《论科学与民主》中提出</p><p>时间：1942年</p><p>作用：系统阐述科学活动的规范结构（科学共同体的内部行为规范）</p><p>目的：凸显科学独有的文化和精神气质。</p><p>内容：普遍主义，公有性，无私利性，有组织的怀疑主义。</p><ul><li>普遍主义规范强调学科内容和科学评价标准的客观性，普遍性</li><li>公有主义规范强调科学知识的公有性，强调科学知识是人类共同的财富。</li><li>无私利性规范要求科学家不应以科学活动谋取私利。</li><li>有条理的怀疑精神强调科学永恒的批判精神。</li><li>独创性规范要求科学家只有发现了前人未发现的东西，做出了前人未曾做出的成果，其工作才会被认为对科学的发展具有实质性的意义。</li></ul><h2 id="怎么理解科学始于问题"><a href="#怎么理解科学始于问题" class="headerlink" title="怎么理解科学始于问题"></a>怎么理解科学始于问题</h2><p>做科学研究，首先要从问题出发。抓住了问题就抓住了具体与关键。习近平特别强调问题意识与问题导向，他指出：“理论创新只能从问题开始。”习近平在《关于&lt;中共中央关于全面深化改革若干重大问题的决定&gt;的说明》中所明确提出的“要有强烈的问题意识，以重大问题为导向”的思想也适用于科学研究。以问题为导向，是科学研究的重要方法，也是辩证思维首先需要考虑的基本点。</p><p>科学研究从问题出发，是以科学技术哲学中长期坚持的基本方法，现在需要注意将问题意识与把握机遇相结合。科学研究从问题出发，也需要抓住机会。有了问题意识，才能抓住研究问题的机遇。</p><h2 id="怎么理解数学方法与科学实验方法"><a href="#怎么理解数学方法与科学实验方法" class="headerlink" title="怎么理解数学方法与科学实验方法"></a>怎么理解数学方法与科学实验方法</h2><p>数学方法是一种关注事物的形式和抽象结构的思维和科学方法，它抽象地表达事物的空间关系和数量关系。</p><p>数学方法和数学思维，是一种把不确定性尽量转为确定性的方法，是追求精准思维的具体方法。</p><p>精准思维不仅追求一种数学化的精确性，而且是一种兼具理论和务实的思维方法，它强调具体和准确，要求研究精准，分析精准。</p><p>系统思维是把事物视为系统来处理的思维方法。系统思维是一种整体性和关联性很强的思维方法。</p><p>数学方法注重抽象，模式化，是我们可以把自然研究对象高度抽象，转化为人工模型，抽象其中的因果关系的基本方法。数学方法包括多种形式，如数学方程方法，数学建模方法，数学统计方法，数学实验方法。</p><ul><li>数学方程方法：事物的关键关系抽象出来，建立某种关于事物的数学模型。</li><li>数学建模方法：科学家考察和介入自然事物的中介和桥梁。反映事物内在属性的抽象关系</li><li>数学统计方法：对事物总体数量，类型及其关系的认识方法。是在统计资料的基础上研究，整理和分析统计资料的方法。对认识事物总体状况，分布状态及其相互关系有重要意义。</li><li>数学实验方法：计算机技术和数学结合起来，在计算机上以数学方法设计实现理想实验。有助于更加精确和在整体上认识事物内部要素和事物之间的理想关系。是一种理想化的数学实践。</li></ul><h1 id="论述题"><a href="#论述题" class="headerlink" title="论述题"></a>论述题</h1><h2 id="习近平的科技创新观"><a href="#习近平的科技创新观" class="headerlink" title="习近平的科技创新观"></a>习近平的科技创新观</h2><p>（1）加快建设创新型国家，建设设计科技强国。</p><p>（2）创新是引领发展的第一动力</p><p>（3）实施创新驱动发展战略，推进以科技创新为核心的全面创新。</p><p>（4）走中国特色自主创新道路。</p><p>（5）坚持融入全国科技创新网络，深度参与全球科技治理</p><p>（6）加快科技体制改革步伐</p><p>（7）加强科技文化建设，发展创新文化。</p><h2 id="怎么理解现代化，谈谈对中国式现代化的理解"><a href="#怎么理解现代化，谈谈对中国式现代化的理解" class="headerlink" title="怎么理解现代化，谈谈对中国式现代化的理解"></a>怎么理解现代化，谈谈对中国式现代化的理解</h2><p>现代化是指发展中的社会为了获得发达的工业社会所具有的一些特点，而经历的文化与社会变迁的全球性过程。</p><p>一般来说现代化包含</p><ul><li>学术知识上的科学化</li><li>法律政治上的民主化</li><li>经济上额标准工业化</li><li>思想作品多元自由化</li><li>生活文化领域的个人化</li><li>宗教色彩褪去的世俗化</li></ul><p>中国式现代化是指中国共产党领导的社会主义现代化。既有各国现代化的共同特征，又有基于自己国情的中国特色。</p><p>中国式现代化的特色：</p><ul><li>人口规模最大的现代化</li><li>全体人民共同富裕的现代化</li><li>物质文明和精神文明相协调的现代化</li><li>人与自然和谐共生的现代化</li><li>和平发展道路的现代化</li></ul><p>中国式现代化的本质要求是：</p><ul><li>坚持中国共产党领导</li><li>坚持中国特色社会主义</li><li>实现高质量发展</li><li>发展全过程人民民主</li><li>丰富人民精神世界</li><li>实现全体人民共同富裕</li><li>促进人与自然和谐共生</li><li>构建人类命运共同体</li><li>创造人类文明新形态</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 自然辩证法概论 </tag>
            
            <tag> 习题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建该blog的你可能需要的相关资料</title>
      <link href="/2023/11/05/%E6%90%AD%E5%BB%BA%E8%AF%A5blog%E7%9A%84%E4%BD%A0%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E7%9A%84%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/"/>
      <url>/2023/11/05/%E6%90%AD%E5%BB%BA%E8%AF%A5blog%E7%9A%84%E4%BD%A0%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E7%9A%84%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>这里罗列下搭建本blog时候用到了那些文档方便想要自己的搭建一个的去用。</p><h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><p>hexo博客的搭建教程，其中第三步域名绑定可选做。</p><p><a href="https://zhuanlan.zhihu.com/p/137476045">Hexo搭建个人博客-并部署到Github上托管(Windows) - 知乎 (zhihu.com)</a></p><h2 id="主题使用"><a href="#主题使用" class="headerlink" title="主题使用"></a>主题使用</h2><p>这里简单介绍了怎么配置使用主题，并给出了一部分主题的配置，详细的主题配置还是推荐看作者给的内容。</p><p><a href="https://www.cnblogs.com/ncphoton/p/16950595.html">Hexo-Butterfly主题配置 - NcPhoton - 博客园 (cnblogs.com)</a></p><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>这里是作者官网给出的配置文档，写的比较详细，也导致你需要的和不需要的很多，需要耐心阅读找到你需要的。</p><p>其中不仅仅是一，还请翻阅其他的篇幅。</p><p><a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安裝文檔(一) 快速開始 | Butterfly</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于自己写一个简单模组的想法</title>
      <link href="/2023/10/31/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E6%A8%A1%E7%BB%84%E7%9A%84%E6%83%B3%E6%B3%95/"/>
      <url>/2023/10/31/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E6%A8%A1%E7%BB%84%E7%9A%84%E6%83%B3%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h1><p>做一个能够直接破坏矿物的爆炸的物品，类似于匠魂2的EPLE物品，可以直接用来挖矿，并再这个基础上做一些拓展</p><h1 id="灵感"><a href="#灵感" class="headerlink" title="灵感"></a>灵感</h1><p>来自匠魂的[EFLN - <a href="https://www.mcmod.cn/item/157578.html">TiC2]匠魂2 (Tinkers’ Construct 2) - MC百科|最大的Minecraft中文MOD百科 (mcmod.cn)</a>。</p><h1 id="实现的内容"><a href="#实现的内容" class="headerlink" title="实现的内容"></a>实现的内容</h1><ol><li>实现匠魂物品的基础功能。</li><li>实现不同的范爆炸范围，通过木头，石头，铁，钻石，下届合金（之后也可以加入金和铜不过目前没想到什么特性）合成具有不同的爆炸范围。</li><li>加入一种圆石进行的合成，可以爆炸后仅保留矿物。</li><li>加入一种末影珍珠合成的物品，可以爆炸后将所有物品传到玩家背包中，而不是掉落在地上。</li><li>添加一套新的火药的获的途径</li></ol><h1 id="目前想法开发过程"><a href="#目前想法开发过程" class="headerlink" title="目前想法开发过程"></a>目前想法开发过程</h1><ol><li>实现匠魂代码的运行，保证和原物品一样的功能</li><li>在此基础上添加具有不同范围的“物品”。 <a href="%E8%BF%99%E9%87%8C%E7%9A%84%E7%89%A9%E5%93%81%E6%8C%87%E7%9A%84%E6%98%AF%E6%9C%AC%E6%A8%A1%E7%BB%84%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9A%84%E7%89%A9%E5%93%81%E4%B8%8B%E5%90%8C">^1</a></li><li>在此基础上添加受到时运效果影响的“物品”</li><li>在此基础上添加能够传送掉落物品的“物品”</li></ol><h1 id="关于该模组命名"><a href="#关于该模组命名" class="headerlink" title="关于该模组命名"></a>关于该模组命名</h1><p>暂定Mine helper吧。挖矿小助手。欢迎各位想想啥中二名字。</p><p>也欢迎给该模组提供能，我会选择考虑是否加入。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>没啥结论。之后在更新。</p><h1 id="目前存在进度和存在问题"><a href="#目前存在进度和存在问题" class="headerlink" title="目前存在进度和存在问题"></a>目前存在进度和存在问题</h1><h2 id="进度"><a href="#进度" class="headerlink" title="进度"></a>进度</h2><p>开发了一个物品wooditem和一个实体woodentity，添加了爆炸和爆炸帮助类。</p><h2 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h2><ul><li>没有系统设计每个物品的名称</li><li>需要对系统的架构进行设计对代码进行设计</li><li>没有美术</li><li>整个内容写的比较随意，还是测试代码阶段。</li></ul><h2 id="考虑"><a href="#考虑" class="headerlink" title="考虑"></a>考虑</h2><ol><li>作为正式开发的前置研究。完成基本功能后考虑进行详细的设计在进行开发。</li><li>目前需要进行对结构的设计了。</li><li>还有部分的代码不明白具体什么意思之后再说。</li></ol><h1 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h1><ul><li>11.3</li></ul><p>爆炸不会破坏方块不知道什么鬼bug，完全复制的匠魂的代码。明天看看怎么回事</p><ul><li>11.5</li></ul><p>修复了为什么爆炸不会破坏方块，对代码进行了注解。以下贴出来</p><p>exploer类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.examplemod.entity.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.particles.ParticleTypes;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.server.level.ServerLevel;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.server.level.ServerPlayer;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundEvents;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.Entity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.EntitySelector;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.entity.BlockEntity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.material.FluidState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.LootParams;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.parameters.LootContextParams;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.AABB;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.Vec3;</span><br><span class="line"><span class="keyword">import</span> net.neoforged.bus.api.SubscribeEvent;</span><br><span class="line"><span class="keyword">import</span> net.neoforged.neoforge.common.NeoForge;</span><br><span class="line"><span class="keyword">import</span> net.neoforged.neoforge.event.EventHooks;</span><br><span class="line"><span class="keyword">import</span> net.neoforged.neoforge.event.TickEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Predicate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exploder</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">double</span> r;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> rr;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> dist;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> explosionStrength;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> blocksPerIteration;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> x, y, z;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> Level world;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Entity exploder;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> WoodBallExplosion explosion;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> currentRadius;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> curX, curY, curZ;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> List&lt;ItemStack&gt; droppedItems; <span class="comment">// map containing all items dropped by the explosion and their amounts</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 构造方法</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> world 爆炸的level</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> explosion 爆炸对象的引用</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> exploder 触发爆炸的实体</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> location 爆炸的中心位置</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> r  爆炸半径</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> explosionStrength 爆炸的破坏力</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> blocksPerIteration 每次迭代处理的方块次数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">Exploder</span><span class="params">(Level world, WoodBallExplosion explosion, Entity exploder, BlockPos location, <span class="type">double</span> r, <span class="type">double</span> explosionStrength, <span class="type">int</span> blocksPerIteration)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.r = r;</span><br><span class="line">    <span class="built_in">this</span>.world = world;</span><br><span class="line">    <span class="built_in">this</span>.explosion = explosion;</span><br><span class="line">    <span class="built_in">this</span>.exploder = exploder;</span><br><span class="line">    <span class="built_in">this</span>.rr = r * r;</span><br><span class="line">    <span class="built_in">this</span>.dist = (<span class="type">int</span>) r + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">this</span>.explosionStrength = explosionStrength;</span><br><span class="line">    <span class="built_in">this</span>.blocksPerIteration = blocksPerIteration;</span><br><span class="line">    <span class="built_in">this</span>.currentRadius = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.x = location.getX();</span><br><span class="line">    <span class="built_in">this</span>.y = location.getY();</span><br><span class="line">    <span class="built_in">this</span>.z = location.getZ();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.curX = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.curY = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.curZ = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.droppedItems = Lists.newArrayList();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 启动爆炸 静态方法</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> world 爆炸的level</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> explosion 爆炸的引用</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> entity 爆炸的实体</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> location 爆炸的位置</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> r  爆炸的半径</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> explosionStrength 爆炸的强度</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">startExplosion</span><span class="params">(Level world, WoodBallExplosion explosion, Entity entity, BlockPos location, <span class="type">double</span> r, <span class="type">double</span> explosionStrength)</span> &#123;</span><br><span class="line">    <span class="comment">// 创建类</span></span><br><span class="line">    <span class="type">Exploder</span> <span class="variable">exploder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Exploder</span>(world, explosion, entity, location, r, explosionStrength, Math.max(<span class="number">50</span>, (<span class="type">int</span>) (r * r * r / <span class="number">10d</span>)));</span><br><span class="line">    <span class="comment">// 提前处理爆炸范围内的实体</span></span><br><span class="line">    exploder.handleEntities();</span><br><span class="line">    <span class="comment">// 播放爆炸的声音</span></span><br><span class="line">    world.playSound(<span class="literal">null</span>, location, SoundEvents.GENERIC_EXPLODE, SoundSource.BLOCKS, <span class="number">4.0F</span>, (<span class="number">1.0F</span> + (world.random.nextFloat() - world.random.nextFloat()) * <span class="number">0.2F</span>) * <span class="number">0.7F</span>);</span><br><span class="line">    <span class="comment">// 在事件总线上注册exploer，用于在tick时迭代处理</span></span><br><span class="line">    NeoForge.EVENT_BUS.register(exploder);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理爆炸涉及到的实体</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">handleEntities</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 定义了一个Predicate判断条件，用于过滤实体</span></span><br><span class="line">    <span class="keyword">final</span> Predicate&lt;Entity&gt; predicate = entity -&gt; entity != <span class="literal">null</span></span><br><span class="line">      &amp;&amp; !entity.ignoreExplosion()</span><br><span class="line">      &amp;&amp; EntitySelector.NO_SPECTATORS.test(entity)</span><br><span class="line">      &amp;&amp; EntitySelector.ENTITY_STILL_ALIVE.test(entity)</span><br><span class="line">      &amp;&amp; entity.position().distanceToSqr(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.z) &lt;= <span class="built_in">this</span>.r * <span class="built_in">this</span>.r;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用Predicate获得爆炸范围内的实体</span></span><br><span class="line">    <span class="comment">// damage and blast back entities</span></span><br><span class="line">    List&lt;Entity&gt; list = <span class="built_in">this</span>.world.getEntities(<span class="built_in">this</span>.exploder,</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">AABB</span>(<span class="built_in">this</span>.x - <span class="built_in">this</span>.r - <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.y - <span class="built_in">this</span>.r - <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.z - <span class="built_in">this</span>.r - <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.x + <span class="built_in">this</span>.r + <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.y + <span class="built_in">this</span>.r + <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.z + <span class="built_in">this</span>.r + <span class="number">1</span>),</span><br><span class="line">      predicate</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 触发爆炸开始事件</span></span><br><span class="line">    EventHooks.onExplosionDetonate(<span class="built_in">this</span>.world, <span class="built_in">this</span>.explosion, list, <span class="built_in">this</span>.r * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Entity entity : list) &#123;</span><br><span class="line">      <span class="comment">// move it away from the center depending on distance and explosion strength</span></span><br><span class="line">      <span class="comment">// 计算爆炸中心到实体方向的向量dir</span></span><br><span class="line">      <span class="type">Vec3</span> <span class="variable">dir</span> <span class="operator">=</span> entity.position().subtract(<span class="built_in">this</span>.exploder.position().add(<span class="number">0</span>, -<span class="built_in">this</span>.r / <span class="number">2</span>, <span class="number">0</span>));</span><br><span class="line">      <span class="comment">// 计算实体距离爆炸中心的距离占爆炸半径的比例，作为震动系数str</span></span><br><span class="line">      <span class="type">double</span> <span class="variable">str</span> <span class="operator">=</span> (<span class="built_in">this</span>.r - dir.length()) / <span class="built_in">this</span>.r;</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      str = Math.max(<span class="number">0.3</span>, str);</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      dir = dir.normalize();</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      dir = dir.scale(<span class="built_in">this</span>.explosionStrength * str * <span class="number">0.3</span>);</span><br><span class="line">      <span class="comment">// 给实体添加一个dir的力</span></span><br><span class="line">      entity.push(dir.x, dir.y + <span class="number">0.5</span>, dir.z);</span><br><span class="line">      <span class="comment">// 实体受伤</span></span><br><span class="line">      entity.hurt(entity.damageSources().explosion(<span class="built_in">this</span>.explosion), (<span class="type">float</span>) (str * <span class="built_in">this</span>.explosionStrength));</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (entity <span class="keyword">instanceof</span> ServerPlayer) &#123;</span><br><span class="line"><span class="comment">//        TinkerNetwork.getInstance().sendTo(new EntityMovementChangePacket(entity), (ServerPlayer) entity);</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * tick执行</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> event 世界Tick回调事件</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@SubscribeEvent</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTick</span><span class="params">(TickEvent.LevelTickEvent event)</span> &#123;</span><br><span class="line">    <span class="comment">// 给定世界Tick结束时候回调</span></span><br><span class="line">      <span class="keyword">if</span>(event.level == <span class="built_in">this</span>.world &amp;&amp; event.phase == TickEvent.Phase.END)&#123;</span><br><span class="line">        <span class="comment">// 调用iteration进行一次爆炸迭代，返回false表示爆炸结束，放置范围过大，导致一次破坏方块过多卡死</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">this</span>.iteration())&#123;</span><br><span class="line">          <span class="comment">// 爆炸结束，调用finish</span></span><br><span class="line">          <span class="built_in">this</span>.finish();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 爆炸结束下执行</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">finish</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 爆炸半径的一半</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> (<span class="type">int</span>) <span class="built_in">this</span>.r / <span class="number">2</span>;</span><br><span class="line">    <span class="comment">// 根据爆炸中心和爆炸半径计算掉落的中心位置</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlockPos</span>(<span class="built_in">this</span>.x - d, <span class="built_in">this</span>.y - d, <span class="built_in">this</span>.z - d);</span><br><span class="line">    <span class="comment">// 创建随机数生成器</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="comment">// 创建列表存储掉落的物品</span></span><br><span class="line">    List&lt;ItemStack&gt; aggregatedDrops = Lists.newArrayList();</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">for</span> (ItemStack drop : <span class="built_in">this</span>.droppedItems) &#123;</span><br><span class="line">      <span class="type">boolean</span> <span class="variable">notInList</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// check if it&#x27;s already in our list</span></span><br><span class="line">      <span class="comment">// 检查是否在列表中，如果在则合并数量</span></span><br><span class="line">      <span class="keyword">for</span> (ItemStack stack : aggregatedDrops) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ItemStack.isSameItem(drop, stack) &amp;&amp; ItemStack.isSameItemSameTags(drop, stack)) &#123;</span><br><span class="line">          stack.grow(drop.getCount());</span><br><span class="line">          notInList = <span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (notInList) &#123;</span><br><span class="line">        aggregatedDrops.add(drop);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// actually drop the aggregated items</span></span><br><span class="line">    <span class="comment">// 遍历合在一起的物品，分批掉落</span></span><br><span class="line">    <span class="keyword">for</span> (ItemStack drop : aggregatedDrops) &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">stacksize</span> <span class="operator">=</span> drop.getCount();</span><br><span class="line">      <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">spawnPos</span> <span class="operator">=</span> pos.offset(random.nextInt((<span class="type">int</span>) <span class="built_in">this</span>.r), random.nextInt((<span class="type">int</span>) <span class="built_in">this</span>.r), random.nextInt((<span class="type">int</span>) <span class="built_in">this</span>.r));</span><br><span class="line">        <span class="type">ItemStack</span> <span class="variable">dropItemstack</span> <span class="operator">=</span> drop.copy();</span><br><span class="line">        dropItemstack.setCount(Math.min(stacksize, <span class="number">64</span>));</span><br><span class="line">        Block.popResource(<span class="built_in">this</span>.world, spawnPos, dropItemstack);</span><br><span class="line">        stacksize -= dropItemstack.getCount();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> (stacksize &gt; <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 取消事件总线上的注册</span></span><br><span class="line">    NeoForge.EVENT_BUS.unregister(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Explodes away all blocks for the current iteration</span></span><br><span class="line"><span class="comment">   * 每次迭代执行</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">iteration</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 本次迭代的方块个数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 清除上次的迭代处理的方块</span></span><br><span class="line">    <span class="built_in">this</span>.explosion.clearToBlow();</span><br><span class="line">    <span class="comment">// 当处理方块小于每次迭代方块，并且当前半径小于爆炸半径r</span></span><br><span class="line">    <span class="keyword">while</span> (count &lt; <span class="built_in">this</span>.blocksPerIteration &amp;&amp; <span class="built_in">this</span>.currentRadius &lt; (<span class="type">int</span>) <span class="built_in">this</span>.r + <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="built_in">this</span>.curX * <span class="built_in">this</span>.curX + <span class="built_in">this</span>.curY * <span class="built_in">this</span>.curY + <span class="built_in">this</span>.curZ * <span class="built_in">this</span>.curZ;</span><br><span class="line">      <span class="comment">// inside the explosion?</span></span><br><span class="line">      <span class="comment">// 当前位置是否在爆炸范围内</span></span><br><span class="line">      <span class="keyword">if</span> (d &lt;= <span class="built_in">this</span>.rr) &#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">blockpos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlockPos</span>(<span class="built_in">this</span>.x + <span class="built_in">this</span>.curX, <span class="built_in">this</span>.y + <span class="built_in">this</span>.curY, <span class="built_in">this</span>.z + <span class="built_in">this</span>.curZ);</span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">blockState</span> <span class="operator">=</span> <span class="built_in">this</span>.world.getBlockState(blockpos);</span><br><span class="line">        <span class="type">FluidState</span> <span class="variable">ifluidstate</span> <span class="operator">=</span> <span class="built_in">this</span>.world.getFluidState(blockpos);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// no air blocks</span></span><br><span class="line">        <span class="comment">// 如果不是方块 或者流体不为空。</span></span><br><span class="line">        <span class="keyword">if</span> (!blockState.isAir() || !ifluidstate.isEmpty()) &#123;</span><br><span class="line">          <span class="comment">// explosion &quot;strength&quot; at the current position</span></span><br><span class="line">          <span class="comment">// 随着爆炸范围的扩展爆炸强度减小</span></span><br><span class="line">          <span class="type">double</span> <span class="variable">f</span> <span class="operator">=</span> <span class="built_in">this</span>.explosionStrength * (<span class="number">1f</span> - d / <span class="built_in">this</span>.rr);</span><br><span class="line">          <span class="comment">// 获得方块或者液体的抗爆炸强度</span></span><br><span class="line">          <span class="type">float</span> <span class="variable">f2</span> <span class="operator">=</span> Math.max(blockState.getExplosionResistance(<span class="built_in">this</span>.world, blockpos, <span class="built_in">this</span>.explosion), ifluidstate.getExplosionResistance(<span class="built_in">this</span>.world, blockpos, <span class="built_in">this</span>.explosion));</span><br><span class="line">          <span class="comment">// 如果当前产生爆炸的实体不为空</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">this</span>.exploder != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 获得当前产生爆炸实体的抗爆炸能力</span></span><br><span class="line">            f2 = <span class="built_in">this</span>.exploder.getBlockExplosionResistance(<span class="built_in">this</span>.explosion, <span class="built_in">this</span>.world, blockpos, blockState, ifluidstate, f2);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 判断是否抗爆炸</span></span><br><span class="line">          f -= (f2 + <span class="number">0.3F</span>) * <span class="number">0.3F</span>;</span><br><span class="line">          <span class="comment">// 如果该方块应该被炸坏</span></span><br><span class="line">          <span class="keyword">if</span> (f &gt; <span class="number">0.0F</span> &amp;&amp; (<span class="built_in">this</span>.exploder == <span class="literal">null</span> || <span class="built_in">this</span>.exploder.shouldBlockExplode(<span class="built_in">this</span>.explosion, <span class="built_in">this</span>.world, blockpos, blockState, (<span class="type">float</span>) f))) &#123;</span><br><span class="line">            <span class="comment">// block should be exploded</span></span><br><span class="line">            <span class="comment">// 爆炸方块++</span></span><br><span class="line">            count++;</span><br><span class="line">            <span class="comment">// 将该方块添加到列表中</span></span><br><span class="line">            <span class="built_in">this</span>.explosion.addAffectedBlock(blockpos);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// get next coordinate;</span></span><br><span class="line">      <span class="built_in">this</span>.step();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 触发爆炸事件</span></span><br><span class="line">    EventHooks.onExplosionDetonate(<span class="built_in">this</span>.world, <span class="built_in">this</span>.explosion, Collections.emptyList(), <span class="built_in">this</span>.r * <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 对每个记录的方块处理</span></span><br><span class="line">    <span class="built_in">this</span>.explosion.getToBlow().forEach(<span class="built_in">this</span>::explodeBlock);</span><br><span class="line">    <span class="comment">// 处理方块是否达到上限</span></span><br><span class="line">    <span class="keyword">return</span> count == <span class="built_in">this</span>.blocksPerIteration; <span class="comment">// can lead to 1 more call where nothing is done, but that&#x27;s ok</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// get the next coordinate</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 计算下一个block坐标</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">step</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// we go X/Z plane wise from top to bottom</span></span><br><span class="line">    <span class="keyword">if</span> (++<span class="built_in">this</span>.curX &gt; <span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">      <span class="built_in">this</span>.curX = -<span class="built_in">this</span>.currentRadius;</span><br><span class="line">      <span class="keyword">if</span> (++<span class="built_in">this</span>.curZ &gt; <span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">        <span class="built_in">this</span>.curZ = -<span class="built_in">this</span>.currentRadius;</span><br><span class="line">        <span class="keyword">if</span> (--<span class="built_in">this</span>.curY &lt; -<span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">          <span class="built_in">this</span>.currentRadius++;</span><br><span class="line">          <span class="built_in">this</span>.curX = <span class="built_in">this</span>.curZ = -<span class="built_in">this</span>.currentRadius;</span><br><span class="line">          <span class="built_in">this</span>.curY = <span class="built_in">this</span>.currentRadius;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// we skip the internals</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.curY != -<span class="built_in">this</span>.currentRadius &amp;&amp; <span class="built_in">this</span>.curY != <span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">      <span class="comment">// we&#x27;re not in the top or bottom plane</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.curZ != -<span class="built_in">this</span>.currentRadius &amp;&amp; <span class="built_in">this</span>.curZ != <span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">        <span class="comment">// we&#x27;re not in the X/Y planes of the cube, we can therefore skip the x to the end if we&#x27;re inside</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.curX &gt; -<span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">          <span class="built_in">this</span>.curX = <span class="built_in">this</span>.currentRadius;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理单个爆炸方块</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> blockpos</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">explodeBlock</span><span class="params">(BlockPos blockpos)</span> &#123;</span><br><span class="line">    <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> <span class="built_in">this</span>.world.getBlockState(blockpos);</span><br><span class="line">    <span class="comment">// 将该方块的掉落物添加到list中</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.world.isClientSide &amp;&amp; blockstate.canDropFromExplosion(<span class="built_in">this</span>.world, blockpos, <span class="built_in">this</span>.explosion)) &#123;</span><br><span class="line">      <span class="type">BlockEntity</span> <span class="variable">tileentity</span> <span class="operator">=</span> blockstate.hasBlockEntity() ? <span class="built_in">this</span>.world.getBlockEntity(blockpos) : <span class="literal">null</span>;</span><br><span class="line">      LootParams.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">LootParams</span>.Builder((ServerLevel) <span class="built_in">this</span>.world)).withParameter(LootContextParams.ORIGIN, Vec3.atCenterOf(blockpos)).withParameter(LootContextParams.TOOL, ItemStack.EMPTY).withOptionalParameter(LootContextParams.BLOCK_ENTITY, tileentity);</span><br><span class="line"></span><br><span class="line">      <span class="built_in">this</span>.droppedItems.addAll(blockstate.getDrops(builder));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 在该方块位置生成粒子效果</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.world <span class="keyword">instanceof</span> ServerLevel) &#123;</span><br><span class="line">      <span class="keyword">for</span> (ServerPlayer serverplayerentity : ((ServerLevel) <span class="built_in">this</span>.world).players()) &#123;</span><br><span class="line">        ((ServerLevel) <span class="built_in">this</span>.world).sendParticles(serverplayerentity, ParticleTypes.POOF, <span class="literal">true</span>, blockpos.getX(), blockpos.getY(), blockpos.getZ(), <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0d</span>);</span><br><span class="line">        ((ServerLevel) <span class="built_in">this</span>.world).sendParticles(serverplayerentity, ParticleTypes.SMOKE, <span class="literal">true</span>, blockpos.getX(), blockpos.getY(), blockpos.getZ(), <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0d</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 方块爆炸</span></span><br><span class="line">    blockstate.onBlockExploded(<span class="built_in">this</span>.world, blockpos, <span class="built_in">this</span>.explosion);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该类进行了修改，添加了两个方法，修复了为什么爆炸不破坏的原因。</p><p>explosion类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.examplemod.entity.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.ImmutableSet;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> com.mojang.datafixers.util.Pair;</span><br><span class="line"><span class="keyword">import</span> it.unimi.dsi.fastutil.objects.ObjectArrayList;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.Util;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.particles.ParticleTypes;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.server.level.ServerLevel;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundEvents;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.RandomSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.damagesource.DamageSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.Entity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.item.ItemEntity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.player.Player;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.EntityBasedExplosionDamageCalculator;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Explosion;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.ExplosionDamageCalculator;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.entity.BlockEntity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.material.FluidState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.LootContext;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.LootParams;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.parameters.LootContextParamSets;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.parameters.LootContextParams;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.Vec3;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.core.jmx.Server;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WoodBallExplosion</span> <span class="keyword">extends</span> <span class="title class_">Explosion</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">ExplosionDamageCalculator</span> <span class="variable">EXPLOSION_DAMAGE_CALCULATOR</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExplosionDamageCalculator</span>();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_DROPS_PER_COMBINED_STACK</span> <span class="operator">=</span> <span class="number">16</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> fire;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Explosion.BlockInteraction blockInteraction;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">RandomSource</span> <span class="variable">random</span> <span class="operator">=</span> RandomSource.create();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Level level;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> x;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> y;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> z;</span><br><span class="line">  <span class="meta">@Nullable</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Entity source;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">float</span> radius;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> DamageSource damageSource;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ExplosionDamageCalculator damageCalculator;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ObjectArrayList&lt;BlockPos&gt; toBlow = <span class="keyword">new</span> <span class="title class_">ObjectArrayList</span>&lt;&gt;();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Player, Vec3&gt; hitPlayers = Maps.newHashMap();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Vec3 position;</span><br><span class="line">  <span class="keyword">protected</span> ImmutableSet&lt;BlockPos&gt; affectedBlockPositionsInternal;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">WoodBallExplosion</span><span class="params">(Level world, <span class="meta">@Nullable</span> Entity entity, <span class="meta">@Nullable</span> DamageSource damage, <span class="meta">@Nullable</span> ExplosionDamageCalculator context, <span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> z, <span class="type">float</span> size, <span class="type">boolean</span> causesFire, Explosion.BlockInteraction mode)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(world, entity, damage, context, x, y, z, size, causesFire, mode);</span><br><span class="line">    <span class="built_in">this</span>.level = world;</span><br><span class="line">    <span class="built_in">this</span>.source = entity;</span><br><span class="line">    <span class="built_in">this</span>.radius = size;</span><br><span class="line">    <span class="built_in">this</span>.x = x;</span><br><span class="line">    <span class="built_in">this</span>.y = y;</span><br><span class="line">    <span class="built_in">this</span>.z = z;</span><br><span class="line">    <span class="built_in">this</span>.fire = causesFire;</span><br><span class="line">    <span class="built_in">this</span>.blockInteraction = mode;</span><br><span class="line">    <span class="built_in">this</span>.damageSource = damage == <span class="literal">null</span> ? world.damageSources().explosion(<span class="built_in">this</span>) : damage;</span><br><span class="line">    <span class="built_in">this</span>.damageCalculator = context == <span class="literal">null</span> ? <span class="built_in">this</span>.makeDamageCalculator(entity) : context;</span><br><span class="line">    <span class="built_in">this</span>.position = <span class="keyword">new</span> <span class="title class_">Vec3</span>(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.z);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> ExplosionDamageCalculator <span class="title function_">makeDamageCalculator</span><span class="params">(<span class="meta">@Nullable</span> Entity p_46063_)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (ExplosionDamageCalculator)(p_46063_ == <span class="literal">null</span> ? EXPLOSION_DAMAGE_CALCULATOR : <span class="keyword">new</span> <span class="title class_">EntityBasedExplosionDamageCalculator</span>(p_46063_));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Does the first part of the explosion (destroy blocks)</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">explode</span><span class="params">()</span> &#123; <span class="comment">// 未执行</span></span><br><span class="line">    ImmutableSet.Builder&lt;BlockPos&gt; builder = ImmutableSet.builder();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we do a sphere of a certain radius, and check if the blockpos is inside the radius</span></span><br><span class="line">    <span class="type">float</span> <span class="variable">r</span> <span class="operator">=</span> <span class="built_in">this</span>.radius * <span class="built_in">this</span>.radius;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> (<span class="type">int</span>) r + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> -i; j &lt; i; ++j) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> -i; k &lt; i; ++k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -i; l &lt; i; ++l) &#123;</span><br><span class="line">          <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> j * j + k * k + l * l;</span><br><span class="line">          <span class="comment">// inside the sphere?</span></span><br><span class="line">          <span class="keyword">if</span> (d &lt;= r) &#123;</span><br><span class="line">            <span class="type">BlockPos</span> <span class="variable">blockpos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlockPos</span>(j, k, l).offset((<span class="type">int</span>) <span class="built_in">this</span>.x, (<span class="type">int</span>) <span class="built_in">this</span>.y, (<span class="type">int</span>) <span class="built_in">this</span>.z);</span><br><span class="line">            <span class="comment">// no air blocks</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.level.isEmptyBlock(blockpos)) &#123;</span><br><span class="line">              <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// explosion &quot;strength&quot; at the current position</span></span><br><span class="line">            <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="built_in">this</span>.radius * (<span class="number">1f</span> - d / (r));</span><br><span class="line">            <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> <span class="built_in">this</span>.level.getBlockState(blockpos);</span><br><span class="line"></span><br><span class="line">            <span class="type">FluidState</span> <span class="variable">ifluidstate</span> <span class="operator">=</span> <span class="built_in">this</span>.level.getFluidState(blockpos);</span><br><span class="line">            <span class="type">float</span> <span class="variable">f2</span> <span class="operator">=</span> Math.max(blockstate.getExplosionResistance(<span class="built_in">this</span>.level, blockpos, <span class="built_in">this</span>), ifluidstate.getExplosionResistance(<span class="built_in">this</span>.level, blockpos, <span class="built_in">this</span>));</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.source != <span class="literal">null</span>) &#123;</span><br><span class="line">              f2 = <span class="built_in">this</span>.source.getBlockExplosionResistance(<span class="built_in">this</span>, <span class="built_in">this</span>.level, blockpos, blockstate, ifluidstate, f2);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            f -= (f2 + <span class="number">0.3F</span>) * <span class="number">0.3F</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (f &gt; <span class="number">0.0F</span> &amp;&amp; (<span class="built_in">this</span>.source == <span class="literal">null</span> || <span class="built_in">this</span>.source.shouldBlockExplode(<span class="built_in">this</span>, <span class="built_in">this</span>.level, blockpos, blockstate, f))) &#123;</span><br><span class="line">              builder.add(blockpos);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.affectedBlockPositionsInternal = builder.build();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">finalizeExplosion</span><span class="params">(<span class="type">boolean</span> spawnParticles)</span> &#123;  <span class="comment">// 未执行</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.level.isClientSide) &#123;</span><br><span class="line">      <span class="built_in">this</span>.level.playLocalSound(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.z, SoundEvents.GENERIC_EXPLODE, SoundSource.BLOCKS, <span class="number">4.0F</span>, (<span class="number">1.0F</span> + (<span class="built_in">this</span>.level.random.nextFloat() - <span class="built_in">this</span>.level.random.nextFloat()) * <span class="number">0.2F</span>) * <span class="number">0.7F</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.level.addParticle(ParticleTypes.EXPLOSION, <span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.z, <span class="number">1.0D</span>, <span class="number">0.0D</span>, <span class="number">0.0D</span>);</span><br><span class="line"></span><br><span class="line">    ObjectArrayList&lt;Pair&lt;ItemStack, BlockPos&gt;&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ObjectArrayList</span>&lt;&gt;();</span><br><span class="line">    Util.shuffle(<span class="built_in">this</span>.toBlow, <span class="built_in">this</span>.level.random);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (BlockPos blockpos : <span class="built_in">this</span>.toBlow) &#123;</span><br><span class="line">      <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> <span class="built_in">this</span>.level.getBlockState(blockpos);</span><br><span class="line">      <span class="type">Block</span> <span class="variable">block</span> <span class="operator">=</span> blockstate.getBlock();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!blockstate.isAir()) &#123;</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">blockpos1</span> <span class="operator">=</span> blockpos.immutable();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.level.getProfiler().push(<span class="string">&quot;explosion_blocks&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (blockstate.canDropFromExplosion(<span class="built_in">this</span>.level, blockpos, <span class="built_in">this</span>) &amp;&amp; <span class="built_in">this</span>.level <span class="keyword">instanceof</span> ServerLevel) &#123;</span><br><span class="line">          <span class="type">BlockEntity</span> <span class="variable">tileentity</span> <span class="operator">=</span> blockstate.hasBlockEntity() ? <span class="built_in">this</span>.level.getBlockEntity(blockpos) : <span class="literal">null</span>;</span><br><span class="line">          LootParams.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">LootParams</span>.Builder((ServerLevel) level)).withParameter(LootContextParams.ORIGIN, Vec3.atCenterOf(blockpos)).withParameter(LootContextParams.TOOL, ItemStack.EMPTY).withOptionalParameter(LootContextParams.BLOCK_ENTITY, tileentity).withOptionalParameter(LootContextParams.THIS_ENTITY, <span class="built_in">this</span>.source);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">this</span>.blockInteraction == Explosion.BlockInteraction.DESTROY) &#123;</span><br><span class="line">            builder.withParameter(LootContextParams.EXPLOSION_RADIUS, <span class="built_in">this</span>.radius);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          blockstate.getDrops(builder).forEach((stack) -&gt; addStack(arrayList, stack, blockpos1));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        blockstate.onBlockExploded(<span class="built_in">this</span>.level, blockpos, <span class="built_in">this</span>);</span><br><span class="line">        <span class="built_in">this</span>.level.getProfiler().pop();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAffectedBlock</span><span class="params">(BlockPos blockPos)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.toBlow.add(blockPos);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStack</span><span class="params">(ObjectArrayList&lt;Pair&lt;ItemStack, BlockPos&gt;&gt; arrayList, ItemStack merge, BlockPos blockPos)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> arrayList.size();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; ++j) &#123;</span><br><span class="line">      Pair&lt;ItemStack, BlockPos&gt; pair = arrayList.get(j);</span><br><span class="line">      <span class="type">ItemStack</span> <span class="variable">itemstack</span> <span class="operator">=</span> pair.getFirst();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ItemEntity.areMergable(itemstack, merge)) &#123;</span><br><span class="line">        <span class="type">ItemStack</span> <span class="variable">itemstack1</span> <span class="operator">=</span> ItemEntity.merge(itemstack, merge, <span class="number">16</span>);</span><br><span class="line">        arrayList.set(j, Pair.of(itemstack1, pair.getSecond()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (merge.isEmpty()) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    arrayList.add(Pair.of(merge, blockPos));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> List&lt;BlockPos&gt; <span class="title function_">getToBlow</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.toBlow;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clearToBlow</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.toBlow.clear();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>考虑到尽可能的复用代码，需要对该项目的架构进行设计。需要在考虑下。</p><ul><li>11.8</li></ul><p>基本上想到的几个物品都写出来了，不过还是没采用高代码的复用，而且还希望加如对时运和精准采集的支持，没有复用代码可能导致之后需要改动较多的重复代码。</p><p>还不知道怎么支持时运和精准采集</p><p>其次还需要画贴图和加入合成表。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-09-添加村民，添加村民交易</title>
      <link href="/2023/10/29/Architectury-09-%E6%B7%BB%E5%8A%A0%E6%9D%91%E6%B0%91%EF%BC%8C%E6%B7%BB%E5%8A%A0%E6%9D%91%E6%B0%91%E4%BA%A4%E6%98%93/"/>
      <url>/2023/10/29/Architectury-09-%E6%B7%BB%E5%8A%A0%E6%9D%91%E6%B0%91%EF%BC%8C%E6%B7%BB%E5%8A%A0%E6%9D%91%E6%B0%91%E4%BA%A4%E6%98%93/</url>
      
        <content type="html"><![CDATA[<h1 id="添加村民"><a href="#添加村民" class="headerlink" title="添加村民"></a>添加村民</h1><p><img src="https://s2.loli.net/2023/11/01/gFCvuDV3jacRL2w.png" alt="image-20231101192249502"></p><p><img src="https://s2.loli.net/2023/11/01/84FLulXN1qeEf6H.png" alt="image-20231101192306590"></p><p><img src="https://s2.loli.net/2023/11/01/5rITKJ6wH4Q7Wlo.png" alt="image-20231101192318126"></p><p><img src="https://s2.loli.net/2023/11/01/arsgJvw8TetW59S.png" alt="image-20231101192327155"></p><h1 id="添加村民职业和工作方块"><a href="#添加村民职业和工作方块" class="headerlink" title="添加村民职业和工作方块"></a>添加村民职业和工作方块</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.villager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.ImmutableSet;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.resources.ResourceKey;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.resources.ResourceLocation;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundEvents;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.ai.village.poi.PoiType;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerProfession;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerType;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModVillagers</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ResourceKey&lt;PoiType&gt; JUMPY_MASTER_KEY = createKey(<span class="string">&quot;jumpy_block_poi&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;VillagerProfession&gt; VILLAGER_PROFESSIONS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.VILLAGER_PROFESSION);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;PoiType&gt; POI_TYPES = DeferredRegister.create(TutorialMod.MOD_ID, Registries.POINT_OF_INTEREST_TYPE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;PoiType&gt; JUMPY_BLOCK_POI = POI_TYPES.register(<span class="string">&quot;jumpy_block_poi&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">PoiType</span>(ImmutableSet.copyOf(ModBlock.JUMPY_BLOCK.get().getStateDefinition().getPossibleStates()),</span><br><span class="line">                    <span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;VillagerProfession&gt; JUMP_MASTER = VILLAGER_PROFESSIONS.register(<span class="string">&quot;jumpy_master&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">VillagerProfession</span>(<span class="string">&quot;jumpy_master&quot;</span>, x -&gt; x.value() == JUMPY_BLOCK_POI.get(),</span><br><span class="line">                    x -&gt; x.value() == JUMPY_BLOCK_POI.get(), ImmutableSet.of(), ImmutableSet.of(),</span><br><span class="line">                    SoundEvents.VILLAGER_WORK_ARMORER));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ResourceKey&lt;PoiType&gt; <span class="title function_">createKey</span><span class="params">(String pName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResourceKey.create(Registries.POINT_OF_INTEREST_TYPE, <span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(TutorialMod.MOD_ID,pName));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span> &#123;</span><br><span class="line">        POI_TYPES.register();</span><br><span class="line">        VILLAGER_PROFESSIONS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Suppliers;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.CreativeTabRegistry;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrarManager;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.CreativeModeTab;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.painting.ModPainting;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.villager.ModVillagers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialMod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MOD_ID</span> <span class="operator">=</span> <span class="string">&quot;tutorialmod&quot;</span>;</span><br><span class="line">    <span class="comment">// We can use this if we don&#x27;t want to use DeferredRegister</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Supplier&lt;RegistrarManager&gt; REGISTRIES = Suppliers.memoize(() -&gt; RegistrarManager.get(MOD_ID));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        ModCreativeTab.register();</span><br><span class="line">        ModBlock.register();</span><br><span class="line">        ModItem.register();</span><br><span class="line">        ModPainting.register();</span><br><span class="line">        ModVillagers.register();</span><br><span class="line"></span><br><span class="line">        System.out.println(TutorialModExpectPlatform.getConfigDirectory().toAbsolutePath().normalize().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="添加村民交易内容"><a href="#添加村民交易内容" class="headerlink" title="添加村民交易内容"></a>添加村民交易内容</h1><p>fabric</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.fabric.villager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.fabricmc.fabric.api.object.builder.v1.trade.TradeOfferHelper;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerProfession;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Items;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.trading.MerchantOffer;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.villager.ModVillagers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModFabricVillager</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">registerVillagerTrades</span><span class="params">()</span>&#123;</span><br><span class="line">        TradeOfferHelper.registerVillagerOffers(ModVillagers.JUMP_MASTER.get(),<span class="number">1</span>,</span><br><span class="line">                factories-&gt;&#123;</span><br><span class="line">                    factories.add((entity, randomSource) -&gt; <span class="keyword">new</span> <span class="title class_">MerchantOffer</span>(</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Items.EMERALD,<span class="number">3</span>),</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.EXAMPLE_ITEM.get()),</span><br><span class="line">                            <span class="number">6</span>,<span class="number">2</span>,<span class="number">0.02f</span></span><br><span class="line">                    ));</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        TradeOfferHelper.registerVillagerOffers(VillagerProfession.ARMORER,<span class="number">1</span>,</span><br><span class="line">                factories-&gt;&#123;</span><br><span class="line">                    factories.add((entity, randomSource) -&gt; <span class="keyword">new</span> <span class="title class_">MerchantOffer</span>(</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Items.EMERALD,<span class="number">3</span>),</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.BLUEBERRY.get()),</span><br><span class="line">                            <span class="number">6</span>,<span class="number">2</span>,<span class="number">0.02f</span></span><br><span class="line">                    ));</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.fabric;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.fabricmc.api.ModInitializer;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.fabric.villager.ModFabricVillager;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.villager.ModVillagers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialModFabric</span> <span class="keyword">implements</span> <span class="title class_">ModInitializer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onInitialize</span><span class="params">()</span> &#123;</span><br><span class="line">        TutorialMod.init();</span><br><span class="line">        ModFabricVillager.registerVillagerTrades();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>forge</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.forge.event;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> it.unimi.dsi.fastutil.ints.Int2ObjectMap;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerProfession;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerTrades;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Items;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.trading.MerchantOffer;</span><br><span class="line"><span class="keyword">import</span> net.minecraftforge.event.village.VillagerTradesEvent;</span><br><span class="line"><span class="keyword">import</span> net.minecraftforge.eventbus.api.SubscribeEvent;</span><br><span class="line"><span class="keyword">import</span> net.minecraftforge.fml.common.Mod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.villager.ModVillagers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModEvents</span> &#123;</span><br><span class="line">    <span class="meta">@Mod</span>.EventBusSubscriber(modid = TutorialMod.MOD_ID)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ForgeEvent</span>&#123;</span><br><span class="line">        <span class="meta">@SubscribeEvent</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addCustomTrades</span><span class="params">(VillagerTradesEvent event)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(event.getType() == VillagerProfession.TOOLSMITH) &#123;</span><br><span class="line">                Int2ObjectMap&lt;List&lt;VillagerTrades.ItemListing&gt;&gt; trades = event.getTrades();</span><br><span class="line">                <span class="type">ItemStack</span> <span class="variable">stack</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.EXAMPLE_ITEM.get(), <span class="number">1</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">villagerLevel</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                trades.get(villagerLevel).add((trader, rand) -&gt; <span class="keyword">new</span> <span class="title class_">MerchantOffer</span>(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Items.EMERALD, <span class="number">2</span>),</span><br><span class="line">                        stack,<span class="number">10</span>,<span class="number">8</span>,<span class="number">0.02F</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(event.getType() == ModVillagers.JUMP_MASTER.get()) &#123;</span><br><span class="line">                Int2ObjectMap&lt;List&lt;VillagerTrades.ItemListing&gt;&gt; trades = event.getTrades();</span><br><span class="line">                <span class="type">ItemStack</span> <span class="variable">stack</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.BLUEBERRY.get(), <span class="number">15</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">villagerLevel</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                trades.get(villagerLevel).add((trader, rand) -&gt; <span class="keyword">new</span> <span class="title class_">MerchantOffer</span>(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Items.EMERALD, <span class="number">5</span>),</span><br><span class="line">                        stack,<span class="number">10</span>,<span class="number">8</span>,<span class="number">0.02F</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="添加tag"><a href="#添加tag" class="headerlink" title="添加tag"></a>添加tag</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:jumpy_block_poi&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="添加贴图"><a href="#添加贴图" class="headerlink" title="添加贴图"></a>添加贴图</h1><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-08-添加画</title>
      <link href="/2023/10/29/Architectury-08-%E6%B7%BB%E5%8A%A0%E7%94%BB/"/>
      <url>/2023/10/29/Architectury-08-%E6%B7%BB%E5%8A%A0%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="添加画"><a href="#添加画" class="headerlink" title="添加画"></a>添加画</h1><p><img src="https://s2.loli.net/2023/10/29/eLszt2JiVmAb9dR.png" alt="image-20231029172543488"></p><p><img src="https://s2.loli.net/2023/10/29/XT6xNVYCc7jUlwq.png" alt="image-20231029172640107"></p><h2 id="添加画-1"><a href="#添加画-1" class="headerlink" title="添加画"></a>添加画</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.painting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.decoration.PaintingVariant;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModPainting</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;PaintingVariant&gt; PAINTING_VARIANTS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.PAINTING_VARIANT);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;PaintingVariant&gt; PLANT = PAINTING_VARIANTS.register(<span class="string">&quot;plant&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">PaintingVariant</span>(<span class="number">16</span>, <span class="number">16</span>));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;PaintingVariant&gt; WANDERER = PAINTING_VARIANTS.register(<span class="string">&quot;wanderer&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">PaintingVariant</span>(<span class="number">16</span>, <span class="number">32</span>));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;PaintingVariant&gt; SUNSET = PAINTING_VARIANTS.register(<span class="string">&quot;sunset&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">PaintingVariant</span>(<span class="number">32</span>, <span class="number">16</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        PAINTING_VARIANTS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Suppliers;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.CreativeTabRegistry;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrarManager;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.CreativeModeTab;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.painting.ModPainting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialMod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MOD_ID</span> <span class="operator">=</span> <span class="string">&quot;tutorialmod&quot;</span>;</span><br><span class="line">    <span class="comment">// We can use this if we don&#x27;t want to use DeferredRegister</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Supplier&lt;RegistrarManager&gt; REGISTRIES = Suppliers.memoize(() -&gt; RegistrarManager.get(MOD_ID));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        ModCreativeTab.register();</span><br><span class="line">        ModBlock.register();</span><br><span class="line">        ModItem.register();</span><br><span class="line">        ModPainting.register();</span><br><span class="line"></span><br><span class="line">        System.out.println(TutorialModExpectPlatform.getConfigDirectory().toAbsolutePath().normalize().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加tags"><a href="#添加tags" class="headerlink" title="添加tags"></a>添加tags</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:wanderer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:plant&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:sunset&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加贴图"><a href="#添加贴图" class="headerlink" title="添加贴图"></a>添加贴图</h2><p><img src="https://s2.loli.net/2023/10/29/EvGjHSUJ1V2ZYrn.png" alt="image-20231029172554282"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-07-添加作物</title>
      <link href="/2023/10/29/Architectury-07-%E6%B7%BB%E5%8A%A0%E4%BD%9C%E7%89%A9/"/>
      <url>/2023/10/29/Architectury-07-%E6%B7%BB%E5%8A%A0%E4%BD%9C%E7%89%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="添加作物"><a href="#添加作物" class="headerlink" title="添加作物"></a>添加作物</h1><p><img src="https://s2.loli.net/2023/10/29/nREwbAS2OBrNJhc.png" alt="image-20231029165918514"></p><p><img src="https://s2.loli.net/2023/10/29/4lGTQFCU3JWouwI.png" alt="image-20231029165957820"></p><p><img src="https://s2.loli.net/2023/10/29/SjVHUfM84Fy9OWh.png"></p><p><img src="https://s2.loli.net/2023/10/29/NTMytBC3ulbKspw.png" alt="image-20231029170008472"></p><p><img src="https://s2.loli.net/2023/10/29/Dqp7zUBsE8rul1O.png" alt="image-20231029170019289"></p><h2 id="添加作物方块"><a href="#添加作物方块" class="headerlink" title="添加作物方块"></a>添加作物方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.ItemLike;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.CropBlock;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.StateDefinition;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.properties.IntegerProperty;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlueberryCropBlock</span> <span class="keyword">extends</span> <span class="title class_">CropBlock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">IntegerProperty</span> <span class="variable">AGE</span> <span class="operator">=</span> IntegerProperty.create(<span class="string">&quot;age&quot;</span>,<span class="number">0</span>,<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlueberryCropBlock</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> ItemLike <span class="title function_">getBaseSeedId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModItem.BLUEBERRY_SEEDS.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> IntegerProperty <span class="title function_">getAgeProperty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> AGE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMaxAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">createBlockStateDefinition</span><span class="params">(StateDefinition.Builder&lt;Block, BlockState&gt; builder)</span> &#123;</span><br><span class="line">        builder.add(AGE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加作物种子和果实"><a href="#添加作物种子和果实" class="headerlink" title="添加作物种子和果实"></a>添加作物种子和果实</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; BLUEBERRY_SEEDS = ITEMS.register(<span class="string">&quot;blueberry_seeds&quot;</span>,</span><br><span class="line">         () -&gt; <span class="keyword">new</span> <span class="title class_">ItemNameBlockItem</span>(ModBlock.BLUEBERRY_CROP.get(),</span><br><span class="line">                 <span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; BLUEBERRY = ITEMS.register(<span class="string">&quot;blueberry&quot;</span>,</span><br><span class="line">         () -&gt; <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)</span><br><span class="line">                 .food(<span class="keyword">new</span> <span class="title class_">FoodProperties</span>.Builder().nutrition(<span class="number">2</span>).saturationMod(<span class="number">2f</span>).build())));</span><br></pre></td></tr></table></figure><h2 id="注册作物方块"><a href="#注册作物方块" class="headerlink" title="注册作物方块"></a>注册作物方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; BLUEBERRY_CROP = BLOCKS.register(<span class="string">&quot;blueberry_crop&quot;</span>,</span><br><span class="line">        () -&gt; <span class="keyword">new</span> <span class="title class_">BlueberryCropBlock</span>(BlockBehaviour.Properties.copy(Blocks.WHEAT)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加blockstate"><a href="#添加blockstate" class="headerlink" title="添加blockstate"></a>添加blockstate</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;variants&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;age=0&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage0&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=1&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage1&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=2&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage2&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=3&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage3&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=4&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage4&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=5&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage5&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=6&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage6&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加方块model"><a href="#添加方块model" class="headerlink" title="添加方块model"></a>添加方块model</h2><p>这里示例一个，其他一样只是改了序号</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block/crop&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;render_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:cutout&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加物品model"><a href="#添加物品model" class="headerlink" title="添加物品model"></a>添加物品model</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item/generated&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;layer0&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:item/blueberry&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item/generated&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;layer0&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:item/blueberry_seeds&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加贴图"><a href="#添加贴图" class="headerlink" title="添加贴图"></a>添加贴图</h2><p>略，可在github中下载。</p><h2 id="添加loottable掉落物品表"><a href="#添加loottable掉落物品表" class="headerlink" title="添加loottable掉落物品表"></a>添加loottable掉落物品表</h2><p>每个字段具体含义请查阅wiki，或者翻往期视频，或者使用data generater</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;functions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:explosion_decay&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:alternatives&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;block&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry_crop&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block_state_property&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry_seeds&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;block&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry_crop&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block_state_property&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;functions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:fortune&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;formula&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:binomial_with_bonus_count&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:apply_bonus&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;extra&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;probability&quot;</span><span class="punctuation">:</span> <span class="number">0.5714286</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry_seeds&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;random_sequence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blocks/blueberry_crop&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="补充，fabric的渲染如何调整为cutout"><a href="#补充，fabric的渲染如何调整为cutout" class="headerlink" title="补充，fabric的渲染如何调整为cutout"></a>补充，fabric的渲染如何调整为cutout</h2><p><img src="https://s2.loli.net/2023/10/29/yfZWNVOoHzB3rcM.png" alt="image-20231029173431149"></p><p><img src="https://s2.loli.net/2023/10/29/lLi21k9zHKUgoVv.png" alt="image-20231029173439330"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;entrypoints&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;net.tutorialmod.fabric.TutorialModFabric&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;client&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;net.tutorialmod.fabric.TutorialModFabricClient&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.fabric;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.fabricmc.api.ClientModInitializer;</span><br><span class="line"><span class="keyword">import</span> net.fabricmc.fabric.api.blockrenderlayer.v1.BlockRenderLayerMap;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.client.renderer.RenderType;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialModFabricClient</span> <span class="keyword">implements</span> <span class="title class_">ClientModInitializer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onInitializeClient</span><span class="params">()</span> &#123;</span><br><span class="line">        BlockRenderLayerMap.INSTANCE.putBlock(ModBlock.BLUEBERRY_CROP.get(), RenderType.cutout());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> 教程 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-06-添加多状态方块</title>
      <link href="/2023/10/29/Architectury-06-%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%8A%B6%E6%80%81%E6%96%B9%E5%9D%97/"/>
      <url>/2023/10/29/Architectury-06-%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%8A%B6%E6%80%81%E6%96%B9%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="添加多状态的方块"><a href="#添加多状态的方块" class="headerlink" title="添加多状态的方块"></a>添加多状态的方块</h1><p><img src="https://s2.loli.net/2023/10/29/lp8zAY4c3G5fRqS.png" alt="image-20231029162325525"></p><p><img src="https://s2.loli.net/2023/10/29/MjznaZoV3GFNYQq.png" alt="image-20231029162337992"></p><h2 id="添加方块"><a href="#添加方块" class="headerlink" title="添加方块"></a>添加方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionHand;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionResult;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.player.Player;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.StateDefinition;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.properties.BooleanProperty;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.BlockHitResult;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZirconLampBlock</span> <span class="keyword">extends</span> <span class="title class_">Block</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">BooleanProperty</span> <span class="variable">LIT</span> <span class="operator">=</span> BooleanProperty.create(<span class="string">&quot;lit&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ZirconLampBlock</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> InteractionResult <span class="title function_">use</span><span class="params">(BlockState blockState, Level level, BlockPos blockPos, Player player, InteractionHand interactionHand, BlockHitResult blockHitResult)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!level.isClientSide() &amp;&amp; interactionHand == InteractionHand.MAIN_HAND) &#123;</span><br><span class="line">            level.setBlock(blockPos, blockState.cycle(LIT),<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> InteractionResult.SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">createBlockStateDefinition</span><span class="params">(StateDefinition.Builder&lt;Block, BlockState&gt; builder)</span> &#123;</span><br><span class="line">        builder.add(LIT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注册方块"><a href="#注册方块" class="headerlink" title="注册方块"></a>注册方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//lamp</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_LAMP = registerBlock(<span class="string">&quot;zircon_lamp&quot;</span>,</span><br><span class="line">        () -&gt; <span class="keyword">new</span> <span class="title class_">ZirconLampBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                .strength(<span class="number">6f</span>).requiresCorrectToolForDrops()</span><br><span class="line">                .lightLevel(state -&gt; state.getValue(ZirconLampBlock.LIT) ? <span class="number">15</span> : <span class="number">0</span>)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加blockstate"><a href="#添加blockstate" class="headerlink" title="添加blockstate"></a>添加blockstate</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;variants&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;lit=false&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_off&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lit=true&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_on&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加方块model"><a href="#添加方块model" class="headerlink" title="添加方块model"></a>添加方块model</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block/cube_all&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;all&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_off&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block/cube_all&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;all&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_on&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加物品model"><a href="#添加物品model" class="headerlink" title="添加物品model"></a>添加物品model</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_off&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加贴图"><a href="#添加贴图" class="headerlink" title="添加贴图"></a>添加贴图</h2><p>略</p><h2 id="添加语言文件"><a href="#添加语言文件" class="headerlink" title="添加语言文件"></a>添加语言文件</h2><p>略</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> 教程 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-05-添加合成表和LootTable以及方块挖掘正确工具的挖掘等级</title>
      <link href="/2023/10/29/Architectury-05-%E6%B7%BB%E5%8A%A0%E5%90%88%E6%88%90%E8%A1%A8%E5%92%8CLootTable%E4%BB%A5%E5%8F%8A%E6%96%B9%E5%9D%97%E6%8C%96%E6%8E%98%E6%AD%A3%E7%A1%AE%E5%B7%A5%E5%85%B7%E7%9A%84%E6%8C%96%E6%8E%98%E7%AD%89%E7%BA%A7/"/>
      <url>/2023/10/29/Architectury-05-%E6%B7%BB%E5%8A%A0%E5%90%88%E6%88%90%E8%A1%A8%E5%92%8CLootTable%E4%BB%A5%E5%8F%8A%E6%96%B9%E5%9D%97%E6%8C%96%E6%8E%98%E6%AD%A3%E7%A1%AE%E5%B7%A5%E5%85%B7%E7%9A%84%E6%8C%96%E6%8E%98%E7%AD%89%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="添加合成表Recipes，掉落物品表LootTable，方块挖掘等级，方块正确挖掘工具"><a href="#添加合成表Recipes，掉落物品表LootTable，方块挖掘等级，方块正确挖掘工具" class="headerlink" title="添加合成表Recipes，掉落物品表LootTable，方块挖掘等级，方块正确挖掘工具"></a>添加合成表Recipes，掉落物品表LootTable，方块挖掘等级，方块正确挖掘工具</h1><p>先添加了几个方块在ModBlock和ModItem下面</p><p><img src="https://s2.loli.net/2023/10/29/AOgi2lBfhboz3yW.png" alt="image-20231029110107898"></p><p>添加对应方块的物品和贴图</p><p><img src="https://s2.loli.net/2023/10/29/bLjucy4IoSOaFKw.png" alt="image-20231029110147533"></p><p>添加对应的方块正确挖掘工具，挖掘等级，掉落物表，合成表</p><p><img src="https://s2.loli.net/2023/10/29/ZNgmxABOy1uSola.png" alt="image-20231029110221433"></p><h2 id="添加方块"><a href="#添加方块" class="headerlink" title="添加方块"></a>添加方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.valueproviders.UniformInt;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.BlockItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Blocks;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.DropExperienceBlock;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockBehaviour;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.custom.JumpyBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModBlock</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Block&gt; BLOCKS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.BLOCK);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public static final RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = BLOCKS.register(&quot;zircon_block&quot;,()-&gt;new Block(BlockBehaviour.Properties.copy(Blocks.STONE)));</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = registerBlock(<span class="string">&quot;zircon_block&quot;</span>,()-&gt;<span class="keyword">new</span> <span class="title class_">Block</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; JUMPY_BLOCK = registerBlock(<span class="string">&quot;jumpy_block&quot;</span>,()-&gt; <span class="keyword">new</span> <span class="title class_">JumpyBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="comment">//ore</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_ORE = registerBlock(<span class="string">&quot;zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; DEEPSLATE_ZIRCON_ORE = registerBlock(<span class="string">&quot;deepslate_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ENDSTONE_ZIRCON_ORE = registerBlock(<span class="string">&quot;endstone_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; NETHERRACK_ZIRCON_ORE = registerBlock(<span class="string">&quot;netherrack_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;T&gt; <span class="title function_">registerBlock</span><span class="params">(String name, Supplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        RegistrySupplier&lt;T&gt; toReturn = BLOCKS.register(name, block);</span><br><span class="line">        registerBlockItem(name, toReturn);</span><br><span class="line">        <span class="keyword">return</span> toReturn;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;Item&gt; <span class="title function_">registerBlockItem</span><span class="params">(String name, RegistrySupplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModItem.ITEMS.register(name, () -&gt; <span class="keyword">new</span> <span class="title class_">BlockItem</span>(block.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        BLOCKS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.valueproviders.UniformInt;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.BlockItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Blocks;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.DropExperienceBlock;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockBehaviour;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.custom.JumpyBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModBlock</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Block&gt; BLOCKS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.BLOCK);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public static final RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = BLOCKS.register(&quot;zircon_block&quot;,()-&gt;new Block(BlockBehaviour.Properties.copy(Blocks.STONE)));</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = registerBlock(<span class="string">&quot;zircon_block&quot;</span>,()-&gt;<span class="keyword">new</span> <span class="title class_">Block</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; JUMPY_BLOCK = registerBlock(<span class="string">&quot;jumpy_block&quot;</span>,()-&gt; <span class="keyword">new</span> <span class="title class_">JumpyBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="comment">//ore</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_ORE = registerBlock(<span class="string">&quot;zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; DEEPSLATE_ZIRCON_ORE = registerBlock(<span class="string">&quot;deepslate_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ENDSTONE_ZIRCON_ORE = registerBlock(<span class="string">&quot;endstone_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; NETHERRACK_ZIRCON_ORE = registerBlock(<span class="string">&quot;netherrack_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;T&gt; <span class="title function_">registerBlock</span><span class="params">(String name, Supplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        RegistrySupplier&lt;T&gt; toReturn = BLOCKS.register(name, block);</span><br><span class="line">        registerBlockItem(name, toReturn);</span><br><span class="line">        <span class="keyword">return</span> toReturn;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;Item&gt; <span class="title function_">registerBlockItem</span><span class="params">(String name, RegistrySupplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModItem.ITEMS.register(name, () -&gt; <span class="keyword">new</span> <span class="title class_">BlockItem</span>(block.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        BLOCKS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加物品"><a href="#添加物品" class="headerlink" title="添加物品"></a>添加物品</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.EggItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.custom.EightBallItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModItem</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Item&gt; ITEMS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.ITEM);</span><br><span class="line">    <span class="comment">// 皓石</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EXAMPLE_ITEM = ITEMS.register(<span class="string">&quot;zircon&quot;</span>, () -&gt;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    <span class="comment">// 高级物品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EIGHT_BALL_ITEM = ITEMS.register(<span class="string">&quot;eight_ball&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">EightBallItem</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB).stacksTo(<span class="number">1</span>)));</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; RAW_ZIRCON = ITEMS.register(<span class="string">&quot;raw_zircon&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        ITEMS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加方块state和方块物品以及贴图等略过"><a href="#添加方块state和方块物品以及贴图等略过" class="headerlink" title="添加方块state和方块物品以及贴图等略过"></a>添加方块state和方块物品以及贴图等略过</h2><h2 id="添加正确的挖掘工具"><a href="#添加正确的挖掘工具" class="headerlink" title="添加正确的挖掘工具"></a>添加正确的挖掘工具</h2><p>pickaxe.json  (在mineable下面，其他的工具同理例如斧头axe.json)</p><p>相关的工具可以在我的世界包下找到，详细可以去看视频。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:zircon_block&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:zircon_ore&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:deepslate_zircon_ore&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="掉落物表"><a href="#掉落物表" class="headerlink" title="掉落物表"></a>掉落物表</h2><p>这里json的意思就不详细介绍了，可以去看往期视频，或者去找对应wiki有介绍</p><p>wiki搜索minecraftwiki就可以了。</p><p>deepslate_zircon_ore.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:alternatives&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:match_tool&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;predicate&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;enchantments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                      <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:silk_touch&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;levels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                          <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                        <span class="punctuation">&#125;</span></span><br><span class="line">                      <span class="punctuation">&#125;</span></span><br><span class="line">                    <span class="punctuation">]</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_ore&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;functions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;add&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:uniform&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;max&quot;</span><span class="punctuation">:</span> <span class="number">9.0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">2.0</span></span><br><span class="line">                  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:set_count&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:fortune&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;formula&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:uniform_bonus_count&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:apply_bonus&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;bonusMultiplier&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:explosion_decay&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:raw_zircon&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;random_sequence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blocks/zircon_ore&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_block.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:survives_explosion&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_block&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;random_sequence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blocks/zircon_block&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_ore.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:alternatives&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:match_tool&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;predicate&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;enchantments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                      <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:silk_touch&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;levels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                          <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                        <span class="punctuation">&#125;</span></span><br><span class="line">                      <span class="punctuation">&#125;</span></span><br><span class="line">                    <span class="punctuation">]</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_ore&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;functions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;add&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:uniform&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;max&quot;</span><span class="punctuation">:</span> <span class="number">9.0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">2.0</span></span><br><span class="line">                  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:set_count&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:fortune&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;formula&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:uniform_bonus_count&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:apply_bonus&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;bonusMultiplier&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:explosion_decay&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:raw_zircon&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;random_sequence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blocks/zircon_ore&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加合成表"><a href="#添加合成表" class="headerlink" title="添加合成表"></a>添加合成表</h2><p>zircon.json</p><p>使用9个zircon合成一个block</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:crafting_shapeless&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;misc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ingredients&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_block&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_block.json</p><p>使用block合成9个zircon</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:crafting_shaped&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;misc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;#&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pattern&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;###&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;###&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;###&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_block&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;show_notification&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_from_sme****.json</p><p>raw 熔炉 烧</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:smelting&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;misc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cookingtime&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;experience&quot;</span><span class="punctuation">:</span> <span class="number">0.7</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ingredient&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:raw_zircon&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_from_bl**.json</p><p>raw 高炉 烧</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:blasting&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;misc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cookingtime&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;experience&quot;</span><span class="punctuation">:</span> <span class="number">0.7</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ingredient&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:raw_zircon&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>具体字段含义查询wiki，不过看英语大概也能看懂把。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-04-高级方块</title>
      <link href="/2023/10/28/Architectury-04-%E9%AB%98%E7%BA%A7%E6%96%B9%E5%9D%97/"/>
      <url>/2023/10/28/Architectury-04-%E9%AB%98%E7%BA%A7%E6%96%B9%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="添加一个高级方块"><a href="#添加一个高级方块" class="headerlink" title="添加一个高级方块"></a>添加一个高级方块</h1><p><img src="https://s2.loli.net/2023/10/29/ct5BRLgM9qGo1fe.png" alt="image-20231029150618990"></p><h2 id="添加方块代码"><a href="#添加方块代码" class="headerlink" title="添加方块代码"></a>添加方块代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionHand;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionResult;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.effect.MobEffectInstance;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.effect.MobEffects;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.Entity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.LivingEntity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.player.Player;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.BlockHitResult;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JumpyBlock</span> <span class="keyword">extends</span> <span class="title class_">Block</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JumpyBlock</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> InteractionResult <span class="title function_">use</span><span class="params">(BlockState blockState, Level level, BlockPos blockPos, Player player, InteractionHand interactionHand, BlockHitResult blockHitResult)</span> &#123;</span><br><span class="line">        player.sendSystemMessage(Component.literal(<span class="string">&quot;Right Clicked this!&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> InteractionResult.SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stepOn</span><span class="params">(Level level, BlockPos blockPos, BlockState blockState, Entity entity)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(entity <span class="keyword">instanceof</span> LivingEntity entity1)&#123;</span><br><span class="line">            entity1.addEffect(<span class="keyword">new</span> <span class="title class_">MobEffectInstance</span>(<span class="keyword">new</span> <span class="title class_">MobEffectInstance</span>(MobEffects.JUMP,<span class="number">200</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">super</span>.stepOn(level, blockPos, blockState, entity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注册方块"><a href="#注册方块" class="headerlink" title="注册方块"></a>注册方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; JUMPY_BLOCK = registerBlock(<span class="string">&quot;jumpy_block&quot;</span>,()-&gt; <span class="keyword">new</span> <span class="title class_">JumpyBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加blockstate"><a href="#添加blockstate" class="headerlink" title="添加blockstate"></a>添加blockstate</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;variants&quot;: &#123;</span><br><span class="line">    &quot;&quot;: &#123;</span><br><span class="line">      &quot;model&quot;: &quot;tutorialmod:block/jumpy_block&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加方块model"><a href="#添加方块model" class="headerlink" title="添加方块model"></a>添加方块model</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block/cube_all&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;all&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/jumpy_block&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加方块item"><a href="#添加方块item" class="headerlink" title="添加方块item"></a>添加方块item</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/jumpy_block&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加方块贴图"><a href="#添加方块贴图" class="headerlink" title="添加方块贴图"></a>添加方块贴图</h2><p>略</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> Java </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-03-高级物品</title>
      <link href="/2023/10/28/Architectury-03-%E9%AB%98%E7%BA%A7%E7%89%A9%E5%93%81/"/>
      <url>/2023/10/28/Architectury-03-%E9%AB%98%E7%BA%A7%E7%89%A9%E5%93%81/</url>
      
        <content type="html"><![CDATA[<h1 id="添加高级物品"><a href="#添加高级物品" class="headerlink" title="添加高级物品"></a>添加高级物品</h1><p><img src="https://s2.loli.net/2023/10/28/R28V6rfXhaKlyGs.png" alt="image-20231028215814333"></p><h2 id="添加自定义物品"><a href="#添加自定义物品" class="headerlink" title="添加自定义物品"></a>添加自定义物品</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.item.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.RandomSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionHand;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionResult;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionResultHolder;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.player.Player;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EightBallItem</span> <span class="keyword">extends</span> <span class="title class_">Item</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EightBallItem</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> InteractionResultHolder&lt;ItemStack&gt; <span class="title function_">use</span><span class="params">(Level level, Player player, InteractionHand interactionHand)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!level.isClientSide() &amp;&amp; interactionHand == InteractionHand.MAIN_HAND) &#123;</span><br><span class="line">            outputRandomNumber(player);</span><br><span class="line">            player.getCooldowns().addCooldown(<span class="built_in">this</span>, <span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> InteractionResultHolder.success(<span class="keyword">new</span> <span class="title class_">ItemStack</span>(<span class="built_in">this</span>,<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">outputRandomNumber</span><span class="params">(Player player)</span> &#123;</span><br><span class="line">        player.sendSystemMessage(Component.literal(<span class="string">&quot;Your Number is &quot;</span> + getRandomNumber()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getRandomNumber</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> RandomSource.createNewThreadLocalInstance().nextInt(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.EggItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.custom.EightBallItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModItem</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Item&gt; ITEMS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.ITEM);</span><br><span class="line">    <span class="comment">// 皓石</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EXAMPLE_ITEM = ITEMS.register(<span class="string">&quot;zircon&quot;</span>, () -&gt;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    <span class="comment">// 高级物品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EIGHT_BALL_ITEM = ITEMS.register(<span class="string">&quot;eight_ball&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">EightBallItem</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB).stacksTo(<span class="number">1</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        ITEMS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加model"><a href="#添加model" class="headerlink" title="添加model"></a>添加model</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;minecraft:item/generated&quot;</span>,</span><br><span class="line">  <span class="string">&quot;textures&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;layer0&quot;</span>: <span class="string">&quot;tutorialmod:item/eight_ball&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加-lang"><a href="#添加-lang" class="headerlink" title="添加 lang"></a>添加 lang</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">略</span><br></pre></td></tr></table></figure><h2 id="添加textures"><a href="#添加textures" class="headerlink" title="添加textures"></a>添加textures</h2><p>略</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-02-添加方块</title>
      <link href="/2023/10/28/Architectury-02-%E6%B7%BB%E5%8A%A0%E6%96%B9%E5%9D%97/"/>
      <url>/2023/10/28/Architectury-02-%E6%B7%BB%E5%8A%A0%E6%96%B9%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="添加方块"><a href="#添加方块" class="headerlink" title="添加方块"></a>添加方块</h1><p><img src="https://s2.loli.net/2023/10/28/wqLaZK1WGzPrnVF.png" alt="image-20231028212405539"></p><h2 id="添加方块-1"><a href="#添加方块-1" class="headerlink" title="添加方块"></a>添加方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.block;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.BlockItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Blocks;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockBehaviour;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModBlock</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Block&gt; BLOCKS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.BLOCK);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = registerBlock(<span class="string">&quot;zircon_block&quot;</span>,()-&gt;<span class="keyword">new</span> <span class="title class_">Block</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;T&gt; <span class="title function_">registerBlock</span><span class="params">(String name, Supplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        RegistrySupplier&lt;T&gt; toReturn = BLOCKS.register(name, block);</span><br><span class="line">        registerBlockItem(name, toReturn);</span><br><span class="line">        <span class="keyword">return</span> toReturn;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;Item&gt; <span class="title function_">registerBlockItem</span><span class="params">(String name, RegistrySupplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModItem.ITEMS.register(name, () -&gt; <span class="keyword">new</span> <span class="title class_">BlockItem</span>(block.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        BLOCKS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改TutorialMod类"><a href="#修改TutorialMod类" class="headerlink" title="修改TutorialMod类"></a>修改TutorialMod类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Suppliers;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.CreativeTabRegistry;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrarManager;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.CreativeModeTab;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialMod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MOD_ID</span> <span class="operator">=</span> <span class="string">&quot;tutorialmod&quot;</span>;</span><br><span class="line">    <span class="comment">// We can use this if we don&#x27;t want to use DeferredRegister</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Supplier&lt;RegistrarManager&gt; REGISTRIES = Suppliers.memoize(() -&gt; RegistrarManager.get(MOD_ID));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123; <span class="comment">// 这里线注册方块，在注册Item，不可以反过来</span></span><br><span class="line">        ModCreativeTab.register();</span><br><span class="line">        ModBlock.register();</span><br><span class="line">        ModItem.register();</span><br><span class="line"></span><br><span class="line">        System.out.println(TutorialModExpectPlatform.getConfigDirectory().toAbsolutePath().normalize().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加blockstate"><a href="#添加blockstate" class="headerlink" title="添加blockstate"></a>添加blockstate</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;variants&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;model&quot;</span>: <span class="string">&quot;tutorialmod:block/zircon_block&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加model"><a href="#添加model" class="headerlink" title="添加model"></a>添加model</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;minecraft:block/cube_all&quot;</span>,</span><br><span class="line">  <span class="string">&quot;textures&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;all&quot;</span>: <span class="string">&quot;tutorialmod:block/zircon_block&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加item-model"><a href="#添加item-model" class="headerlink" title="添加item model"></a>添加item model</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;tutorialmod:block/zircon_block&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加texture"><a href="#添加texture" class="headerlink" title="添加texture"></a>添加texture</h2><h2 id="添加lang"><a href="#添加lang" class="headerlink" title="添加lang"></a>添加lang</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;item.tutorialmod.zircon&quot;</span>: <span class="string">&quot;Zircon&quot;</span>,</span><br><span class="line">  <span class="string">&quot;itemGroup.tutorialmod.example_tab&quot;</span>: <span class="string">&quot;TutoriablTab&quot;</span>,</span><br><span class="line">  <span class="string">&quot;block.tutorialmod.zircon_block&quot;</span>: <span class="string">&quot;Zircon Block&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-01-添加物品</title>
      <link href="/2023/10/28/Architectury-01-%E6%B7%BB%E5%8A%A0%E7%89%A9%E5%93%81/"/>
      <url>/2023/10/28/Architectury-01-%E6%B7%BB%E5%8A%A0%E7%89%A9%E5%93%81/</url>
      
        <content type="html"><![CDATA[<h1 id="添加方块"><a href="#添加方块" class="headerlink" title="添加方块"></a>添加方块</h1><p><img src="https://s2.loli.net/2023/10/28/9Y1U3PzImcJWT8x.png" alt="image-20231028204614315"></p><h2 id="添加方块-1"><a href="#添加方块-1" class="headerlink" title="添加方块"></a>添加方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModItem</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Item&gt; ITEMS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.ITEM);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EXAMPLE_ITEM = ITEMS.register(<span class="string">&quot;zircon&quot;</span>, () -&gt;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        ITEMS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加创造物品栏"><a href="#添加创造物品栏" class="headerlink" title="添加创造物品栏"></a>添加创造物品栏</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.CreativeTabRegistry;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.CreativeModeTab;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModCreativeTab</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;CreativeModeTab&gt; TABS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.CREATIVE_MODE_TAB);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;CreativeModeTab&gt; EXAMPLE_TAB = TABS.register(<span class="string">&quot;example_tab&quot;</span>, () -&gt;</span><br><span class="line">            CreativeTabRegistry.create(Component.translatable(<span class="string">&quot;itemGroup.&quot;</span> + TutorialMod.MOD_ID + <span class="string">&quot;.example_tab&quot;</span>),</span><br><span class="line">                    () -&gt; <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.EXAMPLE_ITEM.get())));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        TABS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建语言文件"><a href="#创建语言文件" class="headerlink" title="创建语言文件"></a>创建语言文件</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;item.tutorialmod.zircon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Zircon&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;itemGroup.tutorialmod.example_tab&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TutoriablTab&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="创建models-item"><a href="#创建models-item" class="headerlink" title="创建models-item"></a>创建models-item</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;minecraft:item/generated&quot;</span>,</span><br><span class="line">  <span class="string">&quot;textures&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;layer0&quot;</span>: <span class="string">&quot;tutorialmod:item/zircon&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建贴图"><a href="#创建贴图" class="headerlink" title="创建贴图"></a>创建贴图</h2><p><img src="https://s2.loli.net/2023/10/28/IH5BTa4WK9s6tCF.png" alt="image-20231028204651340"></p><h2 id="进入游戏测试"><a href="#进入游戏测试" class="headerlink" title="进入游戏测试"></a>进入游戏测试</h2><p><img src="https://s2.loli.net/2023/10/28/u1m32KvjzM9NDgb.png" alt="image-20231028204958179"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typro自动上传图片到图床</title>
      <link href="/2023/10/28/typro%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0%E5%9B%BE%E5%BA%8A/"/>
      <url>/2023/10/28/typro%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="声明本文转载自知乎，仅作留存，侵删"><a href="#声明本文转载自知乎，仅作留存，侵删" class="headerlink" title="声明本文转载自知乎，仅作留存，侵删"></a>声明本文转载自知乎，仅作留存，侵删</h1><p><a href="https://zhuanlan.zhihu.com/p/378892917">Typora 中设置PicGo 图床实现图片自动上传 - 知乎 (zhihu.com)</a></p><h1 id="关于补充内容"><a href="#关于补充内容" class="headerlink" title="关于补充内容"></a>关于补充内容</h1><p>因为smsm图床貌似ban掉了测试用的上传图片，所以会显示失败，可以自己尝试插入图片看看，是否上传成功。我这里是没有问题的。不过冒失smsm图传会有限制5gb，这个问题满了再说。</p><p>以下是报错内容,可见是被blocked了。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Error: This image has been blocked, please contact webmaster for more information.</span><br><span class="line">at Object.We [as handle] </span><br><span class="line">-------Error Stack End-------</span><br><span class="line">2023-10-28 09:45:49 [PicGo INFO] [PicGo Server] upload result</span><br><span class="line">2023-10-28 09:45:49 [PicGo WARN] [PicGo Server] upload failed, see picgo.log for more detail ↑</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="以下是原文内容"><a href="#以下是原文内容" class="headerlink" title="以下是原文内容"></a>以下是原文内容</h1><hr><p>在众多 md 编辑器中，Typora 是大家公认的体验较好的写作软件之一，它最大的特点就是：所见即所得，无须分屏预览，或者开启新页面预览。那么Typora 中能不能直接粘贴图片后，就自动上传到图床呢？下面就来介绍如何配置，以及 PicGo 的使用。实现图片的自动上传。</p><p><a href="https://link.zhihu.com/?target=http://kogoal.com/">Kogoal</a>介绍了使用 SM.MS 这一种图床，其他图床的配置可以参考PicGo。</p><h2 id="使用到的工具"><a href="#使用到的工具" class="headerlink" title="使用到的工具"></a><strong>使用到的工具</strong></h2><p><strong><code>SM.MS</code></strong>: <strong>免费</strong>图床。</p><p><strong><code>PicGo</code></strong> 开源的图片管理工具，可以自己上传图片到各种图床。</p><p><strong><code>Typora</code></strong>: 写Markdown的神器，轻便简洁的Markdown编辑器，支持<strong>即时渲染</strong>技术。</p><p>安装步骤不分先后，建议按照上面顺序安装，因为存在token或者设置需要在后续的安装中用到。</p><h2 id="1-注册SM-MS"><a href="#1-注册SM-MS" class="headerlink" title="1.注册SM.MS"></a><strong>1.注册SM.MS</strong></h2><p>SM.MS 图床用户注册，注册网站：<a href="https://link.zhihu.com/?target=https://sm.ms/">https://sm.ms/</a></p><p>免费的用户空间是5G,如果是土豪朋友可以选择premium 价格是399 USD</p><p><img src="https://pic4.zhimg.com/v2-7394dd1dd68b7eb2048eb84c6d3b4413_b.jpg"></p><p>新注册用户登录之后，点击左侧 API Token 点击 Generate Secret Token 然后复制保存，这个Secret Token 会在第二步PicGo中用到。</p><p><img src="https://pic4.zhimg.com/v2-14217baea54f13efa2e0a1ae5de6abbb_b.jpg"></p><h2 id="2、安装配置-PicGo"><a href="#2、安装配置-PicGo" class="headerlink" title="2、安装配置 PicGo"></a><strong>2、安装配置 PicGo</strong></h2><h3 id="2-1-安装PicGo"><a href="#2-1-安装PicGo" class="headerlink" title="2.1 安装PicGo"></a><strong>2.1 安装PicGo</strong></h3><p>点击此处下载PicGo <a href="https://link.zhihu.com/?target=https://github.com/Molunerfinn/PicGo/releases">应用</a></p><p><strong>Windows</strong> Windows 用户请下载最新版本的 <code>exe</code> 文件。</p><p><strong>macOS</strong> macOS 用户请下载最新版本的 <code>dmg</code> 文件。</p><p><strong>Linux</strong> Linux 用户请下载 <code>AppImage</code> 文件。</p><p>一路next后，安装完成后如下。</p><p><img src="https://pic1.zhimg.com/v2-94118be84cb59d9f2eb00311b01b16f4_b.jpg"></p><h3 id="2-2-配置PicGo"><a href="#2-2-配置PicGo" class="headerlink" title="2.2 配置PicGo"></a><strong>2.2 配置PicGo</strong></h3><h3 id="设定token值"><a href="#设定token值" class="headerlink" title="设定token值"></a><strong>设定token值</strong></h3><p>此处的Token值就是在SM.MS 上生成的Secret Token。点击确定。</p><p><img src="https://pic1.zhimg.com/v2-72836bb9ebf9cdd5f8890aec57c26bb8_b.jpg"></p><h3 id="2-3-安装插件"><a href="#2-3-安装插件" class="headerlink" title="2.3 安装插件"></a><strong>2.3 安装插件</strong></h3><p>再安装插件之前，确保你已经安装了 Node.js，因为 PicGo 是使用 npm 来安装的。地址：<a href="https://link.zhihu.com/?target=https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></p><p>到 PicGo-插件设置里面搜索一个插件：<strong>picgo-plugin-smms-user</strong>，点击安装。</p><p><img src="https://pic2.zhimg.com/v2-3495f468126a28712cfd970bb68eddd1_b.jpg"></p><h2 id="3、安装配置Typora"><a href="#3、安装配置Typora" class="headerlink" title="3、安装配置Typora"></a><strong>3、安装配置Typora</strong></h2><h3 id="3-1-下载最新版本的-Typora"><a href="#3-1-下载最新版本的-Typora" class="headerlink" title="3.1 下载最新版本的 Typora"></a><strong>3.1 下载最新版本的 Typora</strong></h3><p>下载地址：<a href="https://link.zhihu.com/?target=https://www.typora.io/">https://www.typora.io/</a></p><h3 id="3-2-设置图像上传"><a href="#3-2-设置图像上传" class="headerlink" title="3.2 设置图像上传"></a><strong>3.2 设置图像上传</strong></h3><p>根据个人喜好，我把 Typora 的语言设置为简体中文。</p><p><img src="https://pic3.zhimg.com/v2-58aa217dd6792bed040aec70739bcf2e_b.jpg"></p><p>Typora配置图床选项这里标注了三个红框：</p><ul><li>第一默认不是 上传图片 选项，下拉选择它；</li><li>第二个红框建议两个都选择，这样你写作所用到的图片无论是本地上传还是网络图片，都会直接上传到你的图床；</li><li>第三个红框是图床工具，选择刚过安装的PicGo的安装目录。</li></ul><p><img src="https://s2.loli.net/2023/10/28/tIRNkbTHCQVKJwL.jpg"></p><p>点击<strong>验证图片上传</strong>选项，会自动上传一张测试图片，如果提示成功上传图片并获得新的URL。证明上传成功。</p><p><img src="https://s2.loli.net/2023/10/28/bymavDKTY9EtlXx.jpg"></p><h2 id="Typora-中测试上传图片"><a href="#Typora-中测试上传图片" class="headerlink" title="Typora 中测试上传图片"></a><strong>Typora 中测试上传图片</strong></h2><p>在markdown文件中需要使用图片的地方，右键选择上传图片。点击后即可上传图片至图床。如果仔细看markdown的图片路径，就会发现已经从本地的路径变成了网页的路径。到这里说明我们的图床工具上传图片已经没有问题了，现在就可以在 Typora 中安心的码字了。</p><p>（本文为Typora完成）</p><p><img src="https://s2.loli.net/2023/10/28/pzrZJ8YCcdyxvbA.jpg"></p><p><em>KO Goal，Goal OK. 专注于提升工作效率。点击了解<a href="https://link.zhihu.com/?target=http://kogoal.com/">Kogoal</a>更多。</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的世界Forge ep5：添加线缆</title>
      <link href="/2023/10/27/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8Cep5%E6%B7%BB%E5%8A%A0%E7%94%B5%E7%BC%86%E6%95%99%E7%A8%8B/"/>
      <url>/2023/10/27/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8Cep5%E6%B7%BB%E5%8A%A0%E7%94%B5%E7%BC%86%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="ep5"><a href="#ep5" class="headerlink" title="ep5"></a>ep5</h1><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>本文章翻译自mcjty的教程，<a href="https://www.mcjty.eu/docs/1.20/ep5#introduction">源地址</a>,侵删</p><h2 id="link"><a href="#link" class="headerlink" title="link"></a>link</h2><ul><li><a href="https://youtu.be/WUhet8dOlAs">视频</a></li><li><a href="https://github.com/McJty/Tut4_3Power">Github地址</a></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本章是ep4的继续，在ep4中，增加了能发电的发电机和一个消耗电量的方块。如果你把他们彼此放在一起，你就可以让发电机给电池充电，然而，我们还没有办法远距离传输电量，在这节中，我们增加一种简单的电缆系统，它可以将电力从任何的发电机或者电池传输到任意需要电力的机器上。这不是一个完整的系统，这是一个简单的系统达到我们的目的。同时我们希望这个线缆是一个含水方块</p><ul><li>烘焙模型</li><li>自定义模型加载器</li><li>复杂的形状</li><li>含水方块</li></ul><h2 id="烘焙模型"><a href="#烘焙模型" class="headerlink" title="烘焙模型"></a>烘焙模型</h2><p>可以使用一个简单的json制作一个线缆系统，然而，这样会导致生成很多的json组合，同时我们希望可以模拟其他的方块，这是Json模型无法做到的，所以我们使用烘焙模型，烘焙模型是一个我们可以使用代码生成模型的系统，在这一系统，这样做会有更多的工作量，但是也更加灵活</p><h3 id="线缆"><a href="#线缆" class="headerlink" title="线缆"></a>线缆</h3><p><img src="https://picst.sunbangyan.cn/2023/10/27/805bccded2b6f545898a4a05a2b24f44.png" alt="cables-1e682971f988e084ee146460c1910911"></p><h4 id="连接类型枚举"><a href="#连接类型枚举" class="headerlink" title="连接类型枚举"></a>连接类型枚举</h4><p>这是一个枚举类，用于表示某个方向上的链接类型，有以下三种类型的数值:<code>CABLE</code>,<code>BLOCK</code>,<code>NONE</code></p><ul><li><code>CABLE</code>:表示这个方向有一个电缆</li><li><code>BLOCK</code>:表示这个方向有一个有一个方块</li><li><code>NONE</code>:表示这个方向什么也没有</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ConnectorType</span> <span class="keyword">implements</span> <span class="title class_">StringRepresentable</span> &#123;</span><br><span class="line">    NONE,</span><br><span class="line">    CABLE,</span><br><span class="line">    BLOCK;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ConnectorType[] VALUES = values();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSerializedName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name().toLowerCase();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="线缆方块"><a href="#线缆方块" class="headerlink" title="线缆方块"></a>线缆方块</h4><p>电缆也是一个方块，所以我们需要添加一个新的方块，我们叫他CableBlock，这个类中有比较多的带， 所以这里我们分为几个部分讲。</p><p>首先需要6个枚举用于指明某个方向上是由含有线缆或者方块，<code>FACEDID</code>是一个特殊的模型属性，我们使用这个属性指出我们正在模仿另一个块的面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CableBlock</span> <span class="keyword">extends</span> <span class="title class_">Block</span> <span class="keyword">implements</span> <span class="title class_">SimpleWaterloggedBlock</span>, EntityBlock &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Properties that indicate if there is the same block in a certain direction.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; NORTH = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;north&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; SOUTH = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;south&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; WEST = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;west&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; EAST = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;east&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; UP = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;up&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; DOWN = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;down&quot;</span>, ConnectorType.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ModelProperty&lt;BlockState&gt; FACADEID = <span class="keyword">new</span> <span class="title class_">ModelProperty</span>&lt;&gt;();</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>下一部分是我们方块的形状，我们希望方块的模型和我们实际的电缆模型一致，这也是为什么当特定方向上是线缆的时候具有六个形状，当特定方向是方块时候有两个形状，因为我们的getShape（）必须是高效的， 所以我们有一个ShapeCache，存储了所有可能的形状。</p><p> makeShapes（）负责创建缓存，他由构造函数调用。calculateShapeIndex（）函数根据六个方向上的连接类型计算缓存中的索引。makeShape（）是基于六个方向创建形状。combineShape（）函数将和特定的形状形成组合。如果电缆连接的是电缆我们只需要简单的显示电缆，如果连接的是块，则需要显示电缆和块连接的形状。</p><p>updateShape（）是当临近方块改变时候回调的方法，这种情况下，我们选哟重新计算形状。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> VoxelShape[] shapeCache = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_NORTH</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">.4</span>, <span class="number">0</span>, <span class="number">.6</span>, <span class="number">.6</span>, <span class="number">.4</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_SOUTH</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.6</span>, <span class="number">.6</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_WEST</span> <span class="operator">=</span> Shapes.box(<span class="number">0</span>, <span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.6</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_EAST</span> <span class="operator">=</span> Shapes.box(<span class="number">.6</span>, <span class="number">.4</span>, <span class="number">.4</span>, <span class="number">1</span>, <span class="number">.6</span>, <span class="number">.6</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_UP</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">1</span>, <span class="number">.6</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_DOWN</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">0</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.4</span>, <span class="number">.6</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_NORTH</span> <span class="operator">=</span> Shapes.box(<span class="number">.2</span>, <span class="number">.2</span>, <span class="number">0</span>, <span class="number">.8</span>, <span class="number">.8</span>, <span class="number">.1</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_SOUTH</span> <span class="operator">=</span> Shapes.box(<span class="number">.2</span>, <span class="number">.2</span>, <span class="number">.9</span>, <span class="number">.8</span>, <span class="number">.8</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_WEST</span> <span class="operator">=</span> Shapes.box(<span class="number">0</span>, <span class="number">.2</span>, <span class="number">.2</span>, <span class="number">.1</span>, <span class="number">.8</span>, <span class="number">.8</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_EAST</span> <span class="operator">=</span> Shapes.box(<span class="number">.9</span>, <span class="number">.2</span>, <span class="number">.2</span>, <span class="number">1</span>, <span class="number">.8</span>, <span class="number">.8</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_UP</span> <span class="operator">=</span> Shapes.box(<span class="number">.2</span>, <span class="number">.9</span>, <span class="number">.2</span>, <span class="number">.8</span>, <span class="number">1</span>, <span class="number">.8</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_DOWN</span> <span class="operator">=</span> Shapes.box(<span class="number">.2</span>, <span class="number">0</span>, <span class="number">.2</span>, <span class="number">.8</span>, <span class="number">.1</span>, <span class="number">.8</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">calculateShapeIndex</span><span class="params">(ConnectorType north, ConnectorType south, ConnectorType west, ConnectorType east, ConnectorType up, ConnectorType down)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> ConnectorType.values().length;</span><br><span class="line">    <span class="keyword">return</span> ((((south.ordinal() * l + north.ordinal()) * l + west.ordinal()) * l + east.ordinal()) * l + up.ordinal()) * l + down.ordinal();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeShapes</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (shapeCache == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> ConnectorType.values().length;</span><br><span class="line">        shapeCache = <span class="keyword">new</span> <span class="title class_">VoxelShape</span>[length * length * length * length * length * length];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (ConnectorType up : ConnectorType.VALUES) &#123;</span><br><span class="line">            <span class="keyword">for</span> (ConnectorType down : ConnectorType.VALUES) &#123;</span><br><span class="line">                <span class="keyword">for</span> (ConnectorType north : ConnectorType.VALUES) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (ConnectorType south : ConnectorType.VALUES) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (ConnectorType east : ConnectorType.VALUES) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (ConnectorType west : ConnectorType.VALUES) &#123;</span><br><span class="line">                                <span class="type">int</span> <span class="variable">idx</span> <span class="operator">=</span> calculateShapeIndex(north, south, west, east, up, down);</span><br><span class="line">                                shapeCache[idx] = makeShape(north, south, west, east, up, down);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> VoxelShape <span class="title function_">makeShape</span><span class="params">(ConnectorType north, ConnectorType south, ConnectorType west, ConnectorType east, ConnectorType up, ConnectorType down)</span> &#123;</span><br><span class="line">    <span class="type">VoxelShape</span> <span class="variable">shape</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.6</span>, <span class="number">.6</span>);</span><br><span class="line">    shape = combineShape(shape, north, SHAPE_CABLE_NORTH, SHAPE_BLOCK_NORTH);</span><br><span class="line">    shape = combineShape(shape, south, SHAPE_CABLE_SOUTH, SHAPE_BLOCK_SOUTH);</span><br><span class="line">    shape = combineShape(shape, west, SHAPE_CABLE_WEST, SHAPE_BLOCK_WEST);</span><br><span class="line">    shape = combineShape(shape, east, SHAPE_CABLE_EAST, SHAPE_BLOCK_EAST);</span><br><span class="line">    shape = combineShape(shape, up, SHAPE_CABLE_UP, SHAPE_BLOCK_UP);</span><br><span class="line">    shape = combineShape(shape, down, SHAPE_CABLE_DOWN, SHAPE_BLOCK_DOWN);</span><br><span class="line">    <span class="keyword">return</span> shape;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">private</span> VoxelShape <span class="title function_">combineShape</span><span class="params">(VoxelShape shape, ConnectorType connectorType, VoxelShape cableShape, VoxelShape blockShape)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (connectorType == ConnectorType.CABLE) &#123;</span><br><span class="line">        <span class="keyword">return</span> Shapes.join(shape, cableShape, BooleanOp.OR);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (connectorType == ConnectorType.BLOCK) &#123;</span><br><span class="line">        <span class="keyword">return</span> Shapes.join(shape, Shapes.join(blockShape, cableShape, BooleanOp.OR), BooleanOp.OR);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> shape;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@Nonnull</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> VoxelShape <span class="title function_">getShape</span><span class="params">(<span class="meta">@Nonnull</span> BlockState state, <span class="meta">@Nonnull</span> BlockGetter world, <span class="meta">@Nonnull</span> BlockPos pos, <span class="meta">@Nonnull</span> CollisionContext context)</span> &#123;</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">north</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.NORTH);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">south</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.SOUTH);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">west</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.WEST);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">east</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.EAST);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">up</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.UP);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">down</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.DOWN);</span><br><span class="line">    <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> calculateShapeIndex(north, south, west, east, up, down);</span><br><span class="line">    <span class="keyword">return</span> shapeCache[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Nonnull</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> BlockState <span class="title function_">updateShape</span><span class="params">(BlockState state, <span class="meta">@Nonnull</span> Direction direction, <span class="meta">@Nonnull</span> BlockState neighbourState, <span class="meta">@Nonnull</span> LevelAccessor world, <span class="meta">@Nonnull</span> BlockPos current, <span class="meta">@Nonnull</span> BlockPos offset)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (state.getValue(WATERLOGGED)) &#123;</span><br><span class="line">        world.getFluidTicks().schedule(<span class="keyword">new</span> <span class="title class_">ScheduledTick</span>&lt;&gt;(Fluids.WATER, current, Fluids.WATER.getTickDelay(world), <span class="number">0L</span>));   <span class="comment">// @todo 1.18 what is this last parameter exactly?</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> calculateState(world, current, state);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们有了构造方法（在这里调用makeShapes（））我们设置含水方块是false，我们还需要为block entity 和block entity tiker实现相应的功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">CableBlock</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(Properties.of()</span><br><span class="line">            .strength(<span class="number">1.0f</span>)</span><br><span class="line">            .sound(SoundType.METAL)</span><br><span class="line">            .noOcclusion()</span><br><span class="line">    );</span><br><span class="line">    makeShapes();</span><br><span class="line">    registerDefaultState(defaultBlockState().setValue(WATERLOGGED, <span class="literal">false</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> BlockEntity <span class="title function_">newBlockEntity</span><span class="params">(BlockPos blockPos, BlockState blockState)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CableBlockEntity</span>(blockPos, blockState);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">BlockEntity</span>&gt; BlockEntityTicker&lt;T&gt; <span class="title function_">getTicker</span><span class="params">(Level level, BlockState state, BlockEntityType&lt;T&gt; type)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (level.isClientSide) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (lvl, pos, st, be) -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (be <span class="keyword">instanceof</span> CableBlockEntity cable) &#123;</span><br><span class="line">                cable.tickServer();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>neighborChanged()和setPlacedBy用于标记实体的脏位，当某些东西改变的时候。这是为了让我们方块可以更新电缆网络（之后会介绍）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">neighborChanged</span><span class="params">(BlockState state, Level level, BlockPos pos, Block block, BlockPos fromPos, <span class="type">boolean</span> isMoving)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.neighborChanged(state, level, pos, block, fromPos, isMoving);</span><br><span class="line">    <span class="keyword">if</span> (!level.isClientSide &amp;&amp; level.getBlockEntity(pos) <span class="keyword">instanceof</span> CableBlockEntity cable) &#123;</span><br><span class="line">        cable.markDirty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPlacedBy</span><span class="params">(<span class="meta">@Nonnull</span> Level level, <span class="meta">@Nonnull</span> BlockPos pos, <span class="meta">@Nonnull</span> BlockState state, <span class="meta">@Nullable</span> LivingEntity placer, <span class="meta">@Nonnull</span> ItemStack stack)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.setPlacedBy(level, pos, state, placer, stack);</span><br><span class="line">    <span class="keyword">if</span> (!level.isClientSide &amp;&amp; level.getBlockEntity(pos) <span class="keyword">instanceof</span> CableBlockEntity cable) &#123;</span><br><span class="line">        cable.markDirty();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">BlockState</span> <span class="variable">blockState</span> <span class="operator">=</span> calculateState(level, pos, state);</span><br><span class="line">    <span class="keyword">if</span> (state != blockState) &#123;</span><br><span class="line">        level.setBlockAndUpdate(pos, blockState);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>getConnectorType()和isConnectable()方法用于确定在某个方向上的连接类型。这用于计算线缆的形状。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Return the connector type for the given position and facing direction</span></span><br><span class="line"><span class="keyword">private</span> ConnectorType <span class="title function_">getConnectorType</span><span class="params">(BlockGetter world, BlockPos connectorPos, Direction facing)</span> &#123;</span><br><span class="line">    <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> connectorPos.relative(facing);</span><br><span class="line">    <span class="type">BlockState</span> <span class="variable">state</span> <span class="operator">=</span> world.getBlockState(pos);</span><br><span class="line">    <span class="type">Block</span> <span class="variable">block</span> <span class="operator">=</span> state.getBlock();</span><br><span class="line">    <span class="keyword">if</span> (block <span class="keyword">instanceof</span> CableBlock) &#123;</span><br><span class="line">        <span class="keyword">return</span> ConnectorType.CABLE;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isConnectable(world, connectorPos, facing)) &#123;</span><br><span class="line">        <span class="keyword">return</span> ConnectorType.BLOCK;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ConnectorType.NONE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Return true if the block at the given position is connectable to a cable. This is the</span></span><br><span class="line"><span class="comment">// case if the block supports forge energy</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isConnectable</span><span class="params">(BlockGetter world, BlockPos connectorPos, Direction facing)</span> &#123;</span><br><span class="line">    <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> connectorPos.relative(facing);</span><br><span class="line">    <span class="type">BlockState</span> <span class="variable">state</span> <span class="operator">=</span> world.getBlockState(pos);</span><br><span class="line">    <span class="keyword">if</span> (state.isAir()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> world.getBlockEntity(pos);</span><br><span class="line">    <span class="keyword">if</span> (te == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> te.getCapability(ForgeCapabilities.ENERGY).isPresent();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>剩余的功能是定义和设置方块的状态，是必须要的。支持含水方块很简单，仅选哟台南佳WATERLOGGED属性，并重写getFluidState（）方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">createBlockStateDefinition</span><span class="params">(<span class="meta">@Nonnull</span> StateDefinition.Builder&lt;Block, BlockState&gt; builder)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.createBlockStateDefinition(builder);</span><br><span class="line">        builder.add(WATERLOGGED, NORTH, SOUTH, EAST, WEST, UP, DOWN);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> BlockState <span class="title function_">getStateForPlacement</span><span class="params">(BlockPlaceContext context)</span> &#123;</span><br><span class="line">        <span class="type">Level</span> <span class="variable">world</span> <span class="operator">=</span> context.getLevel();</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> context.getClickedPos();</span><br><span class="line">        <span class="keyword">return</span> calculateState(world, pos, defaultBlockState())</span><br><span class="line">                .setValue(WATERLOGGED, world.getFluidState(pos).getType() == Fluids.WATER);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="keyword">private</span> BlockState <span class="title function_">calculateState</span><span class="params">(LevelAccessor world, BlockPos pos, BlockState state)</span> &#123;</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">north</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.NORTH);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">south</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.SOUTH);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">west</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.WEST);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">east</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.EAST);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">up</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.UP);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">down</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.DOWN);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> state</span><br><span class="line">                .setValue(NORTH, north)</span><br><span class="line">                .setValue(SOUTH, south)</span><br><span class="line">                .setValue(WEST, west)</span><br><span class="line">                .setValue(EAST, east)</span><br><span class="line">                .setValue(UP, up)</span><br><span class="line">                .setValue(DOWN, down);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FluidState <span class="title function_">getFluidState</span><span class="params">(BlockState state)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> state.getValue(WATERLOGGED) ? Fluids.WATER.getSource(<span class="literal">false</span>) : <span class="built_in">super</span>.getFluidState(state);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Cable-Block-Entity"><a href="#Cable-Block-Entity" class="headerlink" title="Cable Block Entity"></a>Cable Block Entity</h4><p>Cable Block Entity负责追踪线缆网络。还负责追踪流过线缆的电量，电缆的网络简单的由一组具有能量接收器的坐标表示。当任意一个相邻的方块改变时候都需要重新计算网络。当方块放置或者移除的时候也需要重新计算网络。</p><ul><li>WARN：这里给出的网络的实现是可行的，但是并不完美。这只是一个简单的实现，对我们的目的有效。更先进的mod（例如XNet）具有更先进的有线网络，并将其网络数据缓存在SavedData结构中。</li></ul><p>这个block entity的第一部分和之前的一样，因为线缆也是一个energy handler，所以需要这种capability。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CableBlockEntity</span> <span class="keyword">extends</span> <span class="title class_">BlockEntity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ENERGY_TAG</span> <span class="operator">=</span> <span class="string">&quot;Energy&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAXTRANSFER</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CAPACITY</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">EnergyStorage</span> <span class="variable">energy</span> <span class="operator">=</span> createEnergyStorage();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LazyOptional&lt;IEnergyStorage&gt; energyHandler = LazyOptional.of(() -&gt; <span class="keyword">new</span> <span class="title class_">AdaptedEnergyStorage</span>(energy) &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">extractEnergy</span><span class="params">(<span class="type">int</span> maxExtract, <span class="type">boolean</span> simulate)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">receiveEnergy</span><span class="params">(<span class="type">int</span> maxReceive, <span class="type">boolean</span> simulate)</span> &#123;</span><br><span class="line">            setChanged();</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.receiveEnergy(maxReceive, simulate);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canExtract</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canReceive</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">CableBlockEntity</span><span class="params">(BlockEntityType&lt;?&gt; type, BlockPos pos, BlockState state)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(type, pos, state);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CableBlockEntity</span><span class="params">(BlockPos pos, BlockState state)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(Registration.CABLE_BLOCK_ENTITY.get(), pos, state);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>以下的block负责缓存输出，对于连接到网络的所有能量接收者，他们所接受的能量是一个懒惰计算集。checkOutputs（）函数计算此合集。他将遍历连接到该电缆，然后检查该线缆连接的所有能量接收器。markDirty（）函数将使得当前电缆和所有连接的电缆的输出缓存无效化。当电缆网络发生变化的时候需要这样做。</p><p>traverse（）方法是一个通用的方法，他将会遍历所有连接到此电缆的电缆并调用他们的comsumer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Cached outputs</span></span><br><span class="line"><span class="keyword">private</span> Set&lt;BlockPos&gt; outputs = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This function will cache all outputs for this cable network. It will do this</span></span><br><span class="line"><span class="comment">// by traversing all cables connected to this cable and then check for all energy</span></span><br><span class="line"><span class="comment">// receivers around those cables.</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">checkOutputs</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (outputs == <span class="literal">null</span>) &#123;</span><br><span class="line">        outputs = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        traverse(worldPosition, cable -&gt; &#123;</span><br><span class="line">            <span class="comment">// Check for all energy receivers around this position (ignore cables)</span></span><br><span class="line">            <span class="keyword">for</span> (Direction direction : Direction.values()) &#123;</span><br><span class="line">                <span class="type">BlockPos</span> <span class="variable">p</span> <span class="operator">=</span> cable.getBlockPos().relative(direction);</span><br><span class="line">                <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> level.getBlockEntity(p);</span><br><span class="line">                <span class="keyword">if</span> (te != <span class="literal">null</span> &amp;&amp; !(te <span class="keyword">instanceof</span> CableBlockEntity)) &#123;</span><br><span class="line">                    te.getCapability(ForgeCapabilities.ENERGY).ifPresent(handler -&gt; &#123;</span><br><span class="line">                        <span class="keyword">if</span> (handler.canReceive()) &#123;</span><br><span class="line">                            outputs.add(p);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">markDirty</span><span class="params">()</span> &#123;</span><br><span class="line">    traverse(worldPosition, cable -&gt; cable.outputs = <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is a generic function that will traverse all cables connected to this cable</span></span><br><span class="line"><span class="comment">// and call the given consumer for each cable.</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">traverse</span><span class="params">(BlockPos pos, Consumer&lt;CableBlockEntity&gt; consumer)</span> &#123;</span><br><span class="line">    Set&lt;BlockPos&gt; traversed = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    traversed.add(pos);</span><br><span class="line">    consumer.accept(<span class="built_in">this</span>);</span><br><span class="line">    traverse(pos, traversed, consumer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">traverse</span><span class="params">(BlockPos pos, Set&lt;BlockPos&gt; traversed, Consumer&lt;CableBlockEntity&gt; consumer)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (Direction direction : Direction.values()) &#123;</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">p</span> <span class="operator">=</span> pos.relative(direction);</span><br><span class="line">        <span class="keyword">if</span> (!traversed.contains(p)) &#123;</span><br><span class="line">            traversed.add(p);</span><br><span class="line">            <span class="keyword">if</span> (level.getBlockEntity(p) <span class="keyword">instanceof</span> CableBlockEntity cable) &#123;</span><br><span class="line">                consumer.accept(cable);</span><br><span class="line">                cable.traverse(p, traversed, consumer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>tickServer()方法在服务器上的每个tick都会回调。他将会将能量分发给所有的outputs。首先他会检查电缆中是否存在能量，如果没有能量，那么我们什么也不需要做。如果由能量，之后我们需要检查是否存在输出，如果没有任何输出，我们什么也不需要做。如果存在输出，那么我们分发能量到每一个outputs上。我们通过将能量除于所有的outpus来实现，然后对于每一个output我们检查它是否可以接受能量，如果可以接受我们就将能量发送给这个output。我们通过获得output的energy capability调用receiveEnergy（）方法，这个方法将会返回机器所接受的能量，我们之后减去线缆中对应的能量。</p><ul><li>WARN：同样，这不是一个完美的算法，按照这样的实现方式，一些接收器接受到能量可能会比其他的少。这是因为我们将能量除以了所有的outputs，然后一个一个的将能量发送给他们，如果第一个output不能接受能量，我们需要将能量发送给第二个output。如果第二个output可以接受能量，之后它将获得所有能量。如果第二个output不能接受能量，我们需要将能量发送给第三个output，以此类推。这意味第一个output获得的能量比第二个少。这对于我们的目的并不是一个问题，但是我们仍需要了解。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tickServer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (energy.getEnergyStored() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// Only do something if we have energy</span></span><br><span class="line">            checkOutputs();</span><br><span class="line">            <span class="keyword">if</span> (!outputs.isEmpty()) &#123;</span><br><span class="line">                <span class="comment">// Distribute energy over all outputs</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">amount</span> <span class="operator">=</span> energy.getEnergyStored() / outputs.size();</span><br><span class="line">                <span class="keyword">for</span> (BlockPos p : outputs) &#123;</span><br><span class="line">                    <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> level.getBlockEntity(p);</span><br><span class="line">                    <span class="keyword">if</span> (te != <span class="literal">null</span>) &#123;</span><br><span class="line">                        te.getCapability(ForgeCapabilities.ENERGY).ifPresent(handler -&gt; &#123;</span><br><span class="line">                            <span class="keyword">if</span> (handler.canReceive()) &#123;</span><br><span class="line">                                <span class="type">int</span> <span class="variable">received</span> <span class="operator">=</span> handler.receiveEnergy(amount, <span class="literal">false</span>);</span><br><span class="line">                                energy.extractEnergy(received, <span class="literal">false</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">saveAdditional</span><span class="params">(CompoundTag tag)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.saveAdditional(tag);</span><br><span class="line">        tag.put(ENERGY_TAG, energy.serializeNBT());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">load</span><span class="params">(CompoundTag tag)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.load(tag);</span><br><span class="line">        <span class="keyword">if</span> (tag.contains(ENERGY_TAG)) &#123;</span><br><span class="line">            energy.deserializeNBT(tag.get(ENERGY_TAG));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="keyword">private</span> EnergyStorage <span class="title function_">createEnergyStorage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">EnergyStorage</span>(CAPACITY, MAXTRANSFER, MAXTRANSFER);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; LazyOptional&lt;T&gt; <span class="title function_">getCapability</span><span class="params">(<span class="meta">@NotNull</span> Capability&lt;T&gt; cap, <span class="meta">@Nullable</span> Direction side)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (cap == ForgeCapabilities.ENERGY) &#123;</span><br><span class="line">            <span class="keyword">return</span> energyHandler.cast();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.getCapability(cap, side);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="The-Facade"><a href="#The-Facade" class="headerlink" title="The Facade"></a>The Facade</h3><p>The Facade 是一个 block，它可以用于模仿另一个方块，facade 实际上是一个特殊的电缆。这意味着FacadeBlock应该继承CableBlock，同样FacadeBlockEntity继承CableBlockEntity，让我们复习下代码：</p><h4 id="The-Facade-Block"><a href="#The-Facade-Block" class="headerlink" title="The Facade Block"></a>The Facade Block</h4><p>Facade Block和电缆方块类似，除此之外还有一些逻辑，当facade方块被破坏，应该回复到原本的线缆，此外我们还需要覆盖getShape方法，以便返回模拟块的形状。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FacadeBlock</span> <span class="keyword">extends</span> <span class="title class_">CableBlock</span> <span class="keyword">implements</span> <span class="title class_">EntityBlock</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FacadeBlock</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> BlockEntity <span class="title function_">newBlockEntity</span><span class="params">(<span class="meta">@NotNull</span> BlockPos pos, <span class="meta">@NotNull</span> BlockState state)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FacadeBlockEntity</span>(pos, state);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> VoxelShape <span class="title function_">getShape</span><span class="params">(<span class="meta">@NotNull</span> BlockState state, <span class="meta">@NotNull</span> BlockGetter world, <span class="meta">@NotNull</span> BlockPos pos, <span class="meta">@NotNull</span> CollisionContext context)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (world.getBlockEntity(pos) <span class="keyword">instanceof</span> FacadeBlockEntity facade) &#123;</span><br><span class="line">            <span class="type">BlockState</span> <span class="variable">mimicBlock</span> <span class="operator">=</span> facade.getMimicBlock();</span><br><span class="line">            <span class="keyword">if</span> (mimicBlock != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> mimicBlock.getShape(world, pos, context);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getShape(state, world, pos, context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This function is called when the facade block is succesfully harvested by the player</span></span><br><span class="line">    <span class="comment">// When the player destroys the facade we need to drop the facade block item with the correct mimiced block</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playerDestroy</span><span class="params">(<span class="meta">@Nonnull</span> Level level, <span class="meta">@Nonnull</span> Player player, <span class="meta">@Nonnull</span> BlockPos pos, <span class="meta">@Nonnull</span> BlockState state, <span class="meta">@Nullable</span> BlockEntity te, <span class="meta">@Nonnull</span> ItemStack stack)</span> &#123;</span><br><span class="line">        <span class="type">ItemStack</span> <span class="variable">item</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Registration.FACADE_BLOCK.get());</span><br><span class="line">        BlockState mimicBlock;</span><br><span class="line">        <span class="keyword">if</span> (te <span class="keyword">instanceof</span> FacadeBlockEntity) &#123;</span><br><span class="line">            mimicBlock = ((FacadeBlockEntity) te).getMimicBlock();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mimicBlock = Blocks.COBBLESTONE.defaultBlockState();</span><br><span class="line">        &#125;</span><br><span class="line">        FacadeBlockItem.setMimicBlock(item, mimicBlock);</span><br><span class="line">        popResource(level, pos, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// When the player destroys the facade we need to restore the cable block</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onDestroyedByPlayer</span><span class="params">(BlockState state, Level world, BlockPos pos, Player player, <span class="type">boolean</span> willHarvest, FluidState fluid)</span> &#123;</span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">defaultState</span> <span class="operator">=</span> Registration.CABLE_BLOCK.get().defaultBlockState();</span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">newState</span> <span class="operator">=</span> CableBlock.calculateState(world, pos, defaultState);</span><br><span class="line">        <span class="keyword">return</span> ((LevelAccessor) world).setBlock(pos, newState, ((LevelAccessor) world).isClientSide()</span><br><span class="line">                ? Block.UPDATE_ALL + Block.UPDATE_IMMEDIATE</span><br><span class="line">                : Block.UPDATE_ALL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="The-Facade-Block-Entity"><a href="#The-Facade-Block-Entity" class="headerlink" title="The Facade Block Entity"></a>The Facade Block Entity</h4><p>Facade Block Entity类似线缆的block entity，不过Facade Block Entity 还需要追踪模仿的方块，它应该拓展于CableBlockEntity，所以它也需要被识别为传输电力的有效方块。</p><p>需要值得注意的是烘焙模型不能访问level，因为没法访问方块实体。这意味着我们不能通过方块实体获得模拟的方块，相反，我们需要通过模型数据系统传达信息。</p><p>查看代码中的注释，了解每个方法详细是做什么的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FacadeBlockEntity</span> <span class="keyword">extends</span> <span class="title class_">CableBlockEntity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MIMIC_TAG</span> <span class="operator">=</span> <span class="string">&quot;mimic&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span> <span class="keyword">private</span> <span class="type">BlockState</span> <span class="variable">mimicBlock</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FacadeBlockEntity</span><span class="params">(BlockPos pos, BlockState state)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(Registration.FACADE_BLOCK_ENTITY.get(), pos, state);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The default onDataPacket() will call load() to load the data from the packet.</span></span><br><span class="line">    <span class="comment">// In addition to that we send a block update to the client</span></span><br><span class="line">    <span class="comment">// and also request a model data update (for the cable baked model)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDataPacket</span><span class="params">(Connection net, ClientboundBlockEntityDataPacket packet)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDataPacket(net, packet);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (level.isClientSide) &#123;</span><br><span class="line">            level.sendBlockUpdated(worldPosition, getBlockState(), getBlockState(), Block.UPDATE_ALL);</span><br><span class="line">            requestModelDataUpdate();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getUpdatePacket() is called on the server when a block is placed or updated.</span></span><br><span class="line">    <span class="comment">// It should return a packet containing all information needed to render this block on the client.</span></span><br><span class="line">    <span class="comment">// In our case this is the block mimic information. On the client side onDataPacket() is called</span></span><br><span class="line">    <span class="comment">// with this packet.</span></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ClientboundBlockEntityDataPacket <span class="title function_">getUpdatePacket</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">nbtTag</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CompoundTag</span>();</span><br><span class="line">        saveMimic(nbtTag);</span><br><span class="line">        <span class="keyword">return</span> ClientboundBlockEntityDataPacket.create(<span class="built_in">this</span>, (BlockEntity entity) -&gt; &#123;<span class="keyword">return</span> nbtTag;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getUpdateTag() is called on the server on initial load of the chunk. It will cause</span></span><br><span class="line">    <span class="comment">// the packet to be sent to the client and handleUpdateTag() will be called on the client.</span></span><br><span class="line">    <span class="comment">// The default implementation of handleUpdateTag() will call load() to load the data from the packet.</span></span><br><span class="line">    <span class="comment">// In our case this is sufficient</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CompoundTag <span class="title function_">getUpdateTag</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">updateTag</span> <span class="operator">=</span> <span class="built_in">super</span>.getUpdateTag();</span><br><span class="line">        saveMimic(updateTag);</span><br><span class="line">        <span class="keyword">return</span> updateTag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@Nullable</span> BlockState <span class="title function_">getMimicBlock</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mimicBlock;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This is used to build the model data for the cable baked model.</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ModelData <span class="title function_">getModelData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModelData.builder()</span><br><span class="line">                .with(CableBlock.FACADEID, mimicBlock)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMimicBlock</span><span class="params">(BlockState mimicBlock)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mimicBlock = mimicBlock;</span><br><span class="line">        setChanged();</span><br><span class="line">        getLevel().sendBlockUpdated(getBlockPos(), getBlockState(), getBlockState(), Block.UPDATE_CLIENTS + Block.UPDATE_NEIGHBORS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">load</span><span class="params">(CompoundTag tagCompound)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.load(tagCompound);</span><br><span class="line">        loadMimic(tagCompound);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadMimic</span><span class="params">(CompoundTag tagCompound)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (tagCompound.contains(MIMIC_TAG)) &#123;</span><br><span class="line">            mimicBlock = NbtUtils.readBlockState(BuiltInRegistries.BLOCK.asLookup(), tagCompound.getCompound(MIMIC_TAG));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mimicBlock = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAdditional</span><span class="params">(<span class="meta">@Nonnull</span> CompoundTag tagCompound)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.saveAdditional(tagCompound);</span><br><span class="line">        saveMimic(tagCompound);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">saveMimic</span><span class="params">(<span class="meta">@NotNull</span> CompoundTag tagCompound)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mimicBlock != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">CompoundTag</span> <span class="variable">tag</span> <span class="operator">=</span> NbtUtils.writeBlockState(mimicBlock);</span><br><span class="line">            tagCompound.put(MIMIC_TAG, tag);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="The-Facade-Block-Item"><a href="#The-Facade-Block-Item" class="headerlink" title="The Facade Block Item"></a>The Facade Block Item</h4><p>由于当facade Block放置的时候我们需要一些特殊的处理，我们需要为他创建一个自定义的block item，FacadeBlockItme，负责放置Facade时候设置模拟方块。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FacadeBlockItem</span> <span class="keyword">extends</span> <span class="title class_">BlockItem</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FACADE_IS_MIMICING</span> <span class="operator">=</span> <span class="string">&quot;tutorial.facade.is_mimicing&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getMimickingString</span><span class="params">(ItemStack stack)</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">tag</span> <span class="operator">=</span> stack.getTag();</span><br><span class="line">        <span class="keyword">if</span> (tag != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">CompoundTag</span> <span class="variable">mimic</span> <span class="operator">=</span> tag.getCompound(<span class="string">&quot;mimic&quot;</span>);</span><br><span class="line">            <span class="type">Block</span> <span class="variable">value</span> <span class="operator">=</span> ForgeRegistries.BLOCKS.getValue(<span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(mimic.getString(<span class="string">&quot;Name&quot;</span>)));</span><br><span class="line">            <span class="keyword">if</span> (value != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">ItemStack</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemStack</span>(value, <span class="number">1</span>);</span><br><span class="line">                s.getItem();</span><br><span class="line">                <span class="keyword">return</span> s.getHoverName().getString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;unset&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FacadeBlockItem</span><span class="params">(FacadeBlock block, Item.Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(block, properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">userSetMimicBlock</span><span class="params">(<span class="meta">@Nonnull</span> ItemStack item, BlockState mimicBlock, UseOnContext context)</span> &#123;</span><br><span class="line">        <span class="type">Level</span> <span class="variable">world</span> <span class="operator">=</span> context.getLevel();</span><br><span class="line">        <span class="type">Player</span> <span class="variable">player</span> <span class="operator">=</span> context.getPlayer();</span><br><span class="line">        setMimicBlock(item, mimicBlock);</span><br><span class="line">        <span class="keyword">if</span> (world.isClientSide) &#123;</span><br><span class="line">            player.displayClientMessage(Component.translatable(FACADE_IS_MIMICING, mimicBlock.getBlock().getDescriptionId()), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setMimicBlock</span><span class="params">(<span class="meta">@Nonnull</span> ItemStack item, BlockState mimicBlock)</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">tagCompound</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CompoundTag</span>();</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">nbt</span> <span class="operator">=</span> NbtUtils.writeBlockState(mimicBlock);</span><br><span class="line">        tagCompound.put(<span class="string">&quot;mimic&quot;</span>, nbt);</span><br><span class="line">        item.setTag(tagCompound);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlockState <span class="title function_">getMimicBlock</span><span class="params">(Level level, <span class="meta">@Nonnull</span> ItemStack stack)</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">tagCompound</span> <span class="operator">=</span> stack.getTag();</span><br><span class="line">        <span class="keyword">if</span> (tagCompound == <span class="literal">null</span> || !tagCompound.contains(<span class="string">&quot;mimic&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Blocks.COBBLESTONE.defaultBlockState();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> NbtUtils.readBlockState(BuiltInRegistries.BLOCK.asLookup(), tagCompound.getCompound(<span class="string">&quot;mimic&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">canPlace</span><span class="params">(<span class="meta">@Nonnull</span> BlockPlaceContext context, <span class="meta">@Nonnull</span> BlockState state)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This function is called when our block item is right clicked on something. When this happens</span></span><br><span class="line">    <span class="comment">// we want to either set the minic block or place the facade block</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> InteractionResult <span class="title function_">useOn</span><span class="params">(UseOnContext context)</span> &#123;</span><br><span class="line">        <span class="type">Level</span> <span class="variable">world</span> <span class="operator">=</span> context.getLevel();</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> context.getClickedPos();</span><br><span class="line">        <span class="type">Player</span> <span class="variable">player</span> <span class="operator">=</span> context.getPlayer();</span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">state</span> <span class="operator">=</span> world.getBlockState(pos);</span><br><span class="line">        <span class="type">Block</span> <span class="variable">block</span> <span class="operator">=</span> state.getBlock();</span><br><span class="line"></span><br><span class="line">        <span class="type">ItemStack</span> <span class="variable">itemstack</span> <span class="operator">=</span> context.getItemInHand();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!itemstack.isEmpty()) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (block == Registration.CABLE_BLOCK.get()) &#123;</span><br><span class="line">                <span class="comment">// We are hitting a cable block. We want to replace it with a facade block</span></span><br><span class="line">                <span class="type">FacadeBlock</span> <span class="variable">facadeBlock</span> <span class="operator">=</span> (FacadeBlock) <span class="built_in">this</span>.getBlock();</span><br><span class="line">                <span class="type">BlockPlaceContext</span> <span class="variable">blockContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReplaceBlockItemUseContext</span>(context);</span><br><span class="line">                <span class="type">BlockState</span> <span class="variable">placementState</span> <span class="operator">=</span> facadeBlock.getStateForPlacement(blockContext)</span><br><span class="line">                        .setValue(NORTH, state.getValue(NORTH))</span><br><span class="line">                        .setValue(SOUTH, state.getValue(SOUTH))</span><br><span class="line">                        .setValue(WEST, state.getValue(WEST))</span><br><span class="line">                        .setValue(EAST, state.getValue(EAST))</span><br><span class="line">                        .setValue(UP, state.getValue(UP))</span><br><span class="line">                        .setValue(DOWN, state.getValue(DOWN))</span><br><span class="line">                        ;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (placeBlock(blockContext, placementState)) &#123;</span><br><span class="line">                    <span class="type">SoundType</span> <span class="variable">soundtype</span> <span class="operator">=</span> world.getBlockState(pos).getBlock().getSoundType(world.getBlockState(pos), world, pos, player);</span><br><span class="line">                    world.playSound(player, pos, soundtype.getPlaceSound(), SoundSource.BLOCKS, (soundtype.getVolume() + <span class="number">1.0F</span>) / <span class="number">2.0F</span>, soundtype.getPitch() * <span class="number">0.8F</span>);</span><br><span class="line">                    <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> world.getBlockEntity(pos);</span><br><span class="line">                    <span class="keyword">if</span> (te <span class="keyword">instanceof</span> FacadeBlockEntity) &#123;</span><br><span class="line">                        ((FacadeBlockEntity) te).setMimicBlock(getMimicBlock(world, itemstack));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">amount</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">                    itemstack.grow(amount);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (block == Registration.FACADE_BLOCK.get()) &#123;</span><br><span class="line">                <span class="comment">// We are hitting a facade block. We want to copy the block it is mimicing</span></span><br><span class="line">                <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> world.getBlockEntity(pos);</span><br><span class="line">                <span class="keyword">if</span> (!(te <span class="keyword">instanceof</span> FacadeBlockEntity facade)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> InteractionResult.FAIL;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (facade.getMimicBlock() == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> InteractionResult.FAIL;</span><br><span class="line">                &#125;</span><br><span class="line">                userSetMimicBlock(itemstack, facade.getMimicBlock(), context);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// We are hitting something else. We want to set that block as what we are going to mimic</span></span><br><span class="line">                userSetMimicBlock(itemstack, state, context);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> InteractionResult.SUCCESS;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> InteractionResult.FAIL;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">appendHoverText</span><span class="params">(<span class="meta">@Nonnull</span> ItemStack stack, <span class="meta">@Nullable</span> Level level, <span class="meta">@Nonnull</span> List&lt;Component&gt; tooltip, <span class="meta">@Nonnull</span> TooltipFlag flag)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.appendHoverText(stack, level, tooltip, flag);</span><br><span class="line">        <span class="keyword">if</span> (stack.hasTag()) &#123;</span><br><span class="line">            tooltip.add(Component.translatable(FACADE_IS_MIMICING, getMimickingString(stack)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要一个类帮助我们进行右键的处理，ReplaceBlockItemUseContext，BlockPlaceContext会将replaceClicked设置为True，这将保证我们的facade放置的时候会替换cable。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReplaceBlockItemUseContext</span> <span class="keyword">extends</span> <span class="title class_">BlockPlaceContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ReplaceBlockItemUseContext</span><span class="params">(UseOnContext context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        replaceClicked = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册Registration"><a href="#注册Registration" class="headerlink" title="注册Registration"></a>注册Registration</h3><p>在这里注册我们的cable  和 facade方块</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Registration</span> &#123;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;CableBlock&gt; CABLE_BLOCK = BLOCKS.register(<span class="string">&quot;cable&quot;</span>, CableBlock::<span class="keyword">new</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;Item&gt; CABLE_BLOCK_ITEM = ITEMS.register(<span class="string">&quot;cable&quot;</span>, () -&gt; <span class="keyword">new</span> <span class="title class_">BlockItem</span>(CABLE_BLOCK.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties()));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;BlockEntityType&lt;CableBlockEntity&gt;&gt; CABLE_BLOCK_ENTITY = BLOCK_ENTITIES.register(<span class="string">&quot;cable&quot;</span>,</span><br><span class="line">            () -&gt; BlockEntityType.Builder.of(CableBlockEntity::<span class="keyword">new</span>, CABLE_BLOCK.get()).build(<span class="literal">null</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;FacadeBlock&gt; FACADE_BLOCK = BLOCKS.register(<span class="string">&quot;facade&quot;</span>, FacadeBlock::<span class="keyword">new</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;Item&gt; FACADE_BLOCK_ITEM = ITEMS.register(<span class="string">&quot;facade&quot;</span>, () -&gt; <span class="keyword">new</span> <span class="title class_">FacadeBlockItem</span>(FACADE_BLOCK.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties()));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;BlockEntityType&lt;FacadeBlockEntity&gt;&gt; FACADE_BLOCK_ENTITY = BLOCK_ENTITIES.register(<span class="string">&quot;facade&quot;</span>,</span><br><span class="line">            () -&gt; BlockEntityType.Builder.of(FacadeBlockEntity::<span class="keyword">new</span>, FACADE_BLOCK.get()).build(<span class="literal">null</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> RegistryObject&lt;CreativeModeTab&gt; TAB = TABS.register(<span class="string">&quot;tutpower&quot;</span>, () -&gt; CreativeModeTab.builder()</span><br><span class="line">            .title(Component.translatable(<span class="string">&quot;tab.tutpower&quot;</span>))</span><br><span class="line">            .icon(() -&gt; <span class="keyword">new</span> <span class="title class_">ItemStack</span>(GENERATOR_BLOCK.get()))</span><br><span class="line">            .withTabsBefore(CreativeModeTabs.SPAWN_EGGS)</span><br><span class="line">            .displayItems((featureFlags, output) -&gt; &#123;</span><br><span class="line">                output.accept(GENERATOR_BLOCK.get());</span><br><span class="line">                output.accept(CHARGER_BLOCK.get());</span><br><span class="line">                output.accept(CABLE_BLOCK.get());</span><br><span class="line">                output.accept(FACADE_BLOCK.get());</span><br><span class="line">            &#125;)</span><br><span class="line">            .build());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="烘焙模型Baked-Model"><a href="#烘焙模型Baked-Model" class="headerlink" title="烘焙模型Baked Model"></a>烘焙模型Baked Model</h3><p>烘焙模型负责生成电缆的实际的模型，通过查看六个方向和六个方向上的类型然后生成适当的立体方块实现此目的，电缆方块和facade方块都使用相同的烘焙模型</p><h4 id="烘焙模型加载器The-Baked-Model-Loader"><a href="#烘焙模型加载器The-Baked-Model-Loader" class="headerlink" title="烘焙模型加载器The Baked Model Loader"></a>烘焙模型加载器The Baked Model Loader</h4><p>要实现烘焙模型，你首先需要实现模型加载器。该加载器负责从json中加载模型，在我们的例子中，我们有一个json文件，用于电缆方块和facade方块，因此我们需要区分两者，我们在接送文件中添加facade属性。对于facade方块，该属性为true，对于电缆方块，该属性为fasle，加载器读取此属性，然后创建适当的CableBakeModel</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CableModelLoader</span> <span class="keyword">implements</span> <span class="title class_">IGeometryLoader</span>&lt;CableModelLoader.CableModelGeometry&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">ResourceLocation</span> <span class="variable">GENERATOR_LOADER</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(TutorialPower.MODID, <span class="string">&quot;cableloader&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(ModelEvent.RegisterGeometryLoaders event)</span> &#123;</span><br><span class="line">        event.register(<span class="string">&quot;cableloader&quot;</span>, <span class="keyword">new</span> <span class="title class_">CableModelLoader</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CableModelGeometry <span class="title function_">read</span><span class="params">(JsonObject jsonObject, JsonDeserializationContext deserializationContext)</span> <span class="keyword">throws</span> JsonParseException &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">facade</span> <span class="operator">=</span> jsonObject.has(<span class="string">&quot;facade&quot;</span>) &amp;&amp; jsonObject.get(<span class="string">&quot;facade&quot;</span>).getAsBoolean();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CableModelGeometry</span>(facade);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CableModelGeometry</span> <span class="keyword">implements</span> <span class="title class_">IUnbakedGeometry</span>&lt;CableModelGeometry&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> facade;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">CableModelGeometry</span><span class="params">(<span class="type">boolean</span> facade)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.facade = facade;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> BakedModel <span class="title function_">bake</span><span class="params">(IGeometryBakingContext context, ModelBaker baker, Function&lt;Material, TextureAtlasSprite&gt; spriteGetter, ModelState modelState, ItemOverrides overrides, ResourceLocation modelLocation)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CableBakedModel</span>(context, facade);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>register()</code>方法需要在<code>ModelEvent.RegisterGeometryLoaders</code>事件中调用，我们在<code>ClientSetup</code>中做到这一点，我们还需要注册方块颜色处理器，之后会介绍，这个颜色处理器确保我们在模仿类似草方块时候可以正确的从生物群系中获得颜色。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mod</span>.EventBusSubscriber(modid = MODID, bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClientSetup</span> &#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SubscribeEvent</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">modelInit</span><span class="params">(ModelEvent.RegisterGeometryLoaders event)</span> &#123;</span><br><span class="line">        CableModelLoader.register(event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SubscribeEvent</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">registerBlockColor</span><span class="params">(RegisterColorHandlersEvent.Block event)</span> &#123;</span><br><span class="line">        event.register(<span class="keyword">new</span> <span class="title class_">FacadeBlockColor</span>(), Registration.FACADE_BLOCK.get());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方块颜色处理器The-block-color-handler"><a href="#方块颜色处理器The-block-color-handler" class="headerlink" title="方块颜色处理器The block color handler"></a>方块颜色处理器The block color handler</h4><p>当我们模仿另一个方块的时候需要确保方块的颜色是正确的，例如，我们模仿草方块，需要确保草方块颜色和当前的生物群系颜色是一致的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FacadeBlockColor</span> <span class="keyword">implements</span> <span class="title class_">BlockColor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getColor</span><span class="params">(<span class="meta">@Nonnull</span> BlockState blockState, <span class="meta">@Nullable</span> BlockAndTintGetter world, <span class="meta">@Nullable</span> BlockPos pos, <span class="type">int</span> tint)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (world != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> world.getBlockEntity(pos);</span><br><span class="line">            <span class="keyword">if</span> (te <span class="keyword">instanceof</span> FacadeBlockEntity facade) &#123;</span><br><span class="line">                <span class="type">BlockState</span> <span class="variable">mimic</span> <span class="operator">=</span> facade.getMimicBlock();</span><br><span class="line">                <span class="keyword">if</span> (mimic != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Minecraft.getInstance().getBlockColors().getColor(mimic, world, pos, tint);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="烘焙模型The-Baked-Model"><a href="#烘焙模型The-Baked-Model" class="headerlink" title="烘焙模型The Baked Model"></a>烘焙模型The Baked Model</h4><p>烘焙模型负责生成电缆的实际模型。它通过六个方向和六个方向行上的线缆类型来生成对应的四边形，电缆方块和facade方块使用相同的烘焙模型。</p><p>代码使用CablePatterns辅助类生成四边形，该类知道如何将特定的连接器转为正确的四边形。</p><p>这个类最总要的就是线程就是getQuads（）线程，该线程被渲染器调用获得线缆的四边形。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CableBakedModel</span> <span class="keyword">implements</span> <span class="title class_">IDynamicBakedModel</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IGeometryBakingContext context;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> facade;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteConnector;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteNoneCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteNormalCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteEndCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteCornerCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteThreeCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteCrossCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteSide;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// For all possible patterns we define the sprite to use and the rotation. Note that each</span></span><br><span class="line">        <span class="comment">// pattern looks at the existance of a cable section for each of the four directions</span></span><br><span class="line">        <span class="comment">// excluding the one we are looking at.</span></span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_NONE, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_END, <span class="number">3</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_END, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_END, <span class="number">1</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_END, <span class="number">2</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_CORNER, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_CORNER, <span class="number">1</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_CORNER, <span class="number">2</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_CORNER, <span class="number">3</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_STRAIGHT, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_STRAIGHT, <span class="number">1</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_THREE, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_THREE, <span class="number">1</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_THREE, <span class="number">2</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_THREE, <span class="number">3</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_CROSS, <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CableBakedModel</span><span class="params">(IGeometryBakingContext context, <span class="type">boolean</span> facade)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.facade = facade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initTextures</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (spriteConnector == <span class="literal">null</span>) &#123;</span><br><span class="line">            spriteConnector = getTexture(<span class="string">&quot;block/cable/connector&quot;</span>);</span><br><span class="line">            spriteNormalCable = getTexture(<span class="string">&quot;block/cable/normal&quot;</span>);</span><br><span class="line">            spriteNoneCable = getTexture(<span class="string">&quot;block/cable/none&quot;</span>);</span><br><span class="line">            spriteEndCable = getTexture(<span class="string">&quot;block/cable/end&quot;</span>);</span><br><span class="line">            spriteCornerCable = getTexture(<span class="string">&quot;block/cable/corner&quot;</span>);</span><br><span class="line">            spriteThreeCable = getTexture(<span class="string">&quot;block/cable/three&quot;</span>);</span><br><span class="line">            spriteCrossCable = getTexture(<span class="string">&quot;block/cable/cross&quot;</span>);</span><br><span class="line">            spriteSide = getTexture(<span class="string">&quot;block/cable/side&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// All textures are baked on a big texture atlas. This function gets the texture from that atlas</span></span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite <span class="title function_">getTexture</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Minecraft.getInstance().getTextureAtlas(InventoryMenu.BLOCK_ATLAS).apply(<span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(TutorialPower.MODID, path));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite <span class="title function_">getSpriteNormal</span><span class="params">(CablePatterns.SpriteIdx idx)</span> &#123;</span><br><span class="line">        initTextures();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">switch</span> (idx) &#123;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_NONE -&gt; spriteNoneCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_END -&gt; spriteEndCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_STRAIGHT -&gt; spriteNormalCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_CORNER -&gt; spriteCornerCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_THREE -&gt; spriteThreeCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_CROSS -&gt; spriteCrossCable;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">usesBlockLight</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;BakedQuad&gt; <span class="title function_">getQuads</span><span class="params">(<span class="meta">@Nullable</span> BlockState state, <span class="meta">@Nullable</span> Direction side, <span class="meta">@NotNull</span> RandomSource rand, <span class="meta">@NotNull</span> ModelData extraData, <span class="meta">@Nullable</span> RenderType layer)</span> &#123;</span><br><span class="line">        initTextures();</span><br><span class="line">        List&lt;BakedQuad&gt; quads = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="literal">null</span> &amp;&amp; (layer == <span class="literal">null</span> || layer.equals(RenderType.solid()))) &#123;</span><br><span class="line">            <span class="comment">// Called with the blockstate from our block. Here we get the values of the six properties and pass that to</span></span><br><span class="line">            <span class="comment">// our baked model implementation. If state == null we are called from the inventory and we use the default</span></span><br><span class="line">            <span class="comment">// values for the properties</span></span><br><span class="line">            ConnectorType north, south, west, east, up, down;</span><br><span class="line">            <span class="keyword">if</span> (state != <span class="literal">null</span>) &#123;</span><br><span class="line">                north = state.getValue(CableBlock.NORTH);</span><br><span class="line">                south = state.getValue(CableBlock.SOUTH);</span><br><span class="line">                west = state.getValue(CableBlock.WEST);</span><br><span class="line">                east = state.getValue(CableBlock.EAST);</span><br><span class="line">                up = state.getValue(CableBlock.UP);</span><br><span class="line">                down = state.getValue(CableBlock.DOWN);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// If we are a facade and we are an item then we render as the &#x27;side&#x27; texture as a full block</span></span><br><span class="line">                <span class="keyword">if</span> (facade) &#123;</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>), v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), spriteSide));</span><br><span class="line">                    <span class="keyword">return</span> quads;</span><br><span class="line">                &#125;</span><br><span class="line">                north = south = west = east = up = down = NONE;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">TextureAtlasSprite</span> <span class="variable">spriteCable</span> <span class="operator">=</span> spriteNormalCable;</span><br><span class="line">            Function&lt;CablePatterns.SpriteIdx, TextureAtlasSprite&gt; spriteGetter = <span class="built_in">this</span>::getSpriteNormal;</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">o</span> <span class="operator">=</span> <span class="number">.4</span>;      <span class="comment">// Thickness of the cable. .0 would be full block, .5 is infinitely thin.</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">p</span> <span class="operator">=</span> <span class="number">.1</span>;      <span class="comment">// Thickness of the connector as it is put on the connecting block</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">q</span> <span class="operator">=</span> <span class="number">.2</span>;      <span class="comment">// The wideness of the connector</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// For each side we either cap it off if there is no similar block adjacent on that side</span></span><br><span class="line">            <span class="comment">// or else we extend so that we touch the adjacent block:</span></span><br><span class="line">            <span class="keyword">if</span> (up == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, <span class="number">1</span>, o), v(<span class="number">1</span> - o, <span class="number">1</span>, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span>, <span class="number">1</span> - o), v(o, <span class="number">1</span>, o), v(o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span>, o), v(<span class="number">1</span> - o, <span class="number">1</span>, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span>, <span class="number">1</span> - o), v(o, <span class="number">1</span>, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (up == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, <span class="number">1</span> - p, o), v(<span class="number">1</span> - o, <span class="number">1</span> - p, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - p, <span class="number">1</span> - o), v(o, <span class="number">1</span> - p, o), v(o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - p, o), v(<span class="number">1</span> - o, <span class="number">1</span> - p, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - p, <span class="number">1</span> - o), v(o, <span class="number">1</span> - p, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - q, <span class="number">1</span> - p, q), v(<span class="number">1</span> - q, <span class="number">1</span>, q), v(<span class="number">1</span> - q, <span class="number">1</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - p, <span class="number">1</span> - q), v(q, <span class="number">1</span>, <span class="number">1</span> - q), v(q, <span class="number">1</span>, q), v(q, <span class="number">1</span> - p, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span>, q), v(<span class="number">1</span> - q, <span class="number">1</span>, q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, q), v(q, <span class="number">1</span> - p, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span>, <span class="number">1</span> - q), v(q, <span class="number">1</span>, <span class="number">1</span> - q), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - p, q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, <span class="number">1</span> - q), v(q, <span class="number">1</span> - p, <span class="number">1</span> - q), spriteConnector));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span>, q), v(q, <span class="number">1</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span>, q), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(west, south, east, north);</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (down == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">0</span>, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">0</span>, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, o, o), v(o, <span class="number">0</span>, o), v(o, <span class="number">0</span>, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, <span class="number">0</span>, o), v(o, <span class="number">0</span>, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">0</span>, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">0</span>, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (down == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, p, <span class="number">1</span> - o), v(<span class="number">1</span> - o, p, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, o, o), v(o, p, o), v(o, p, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, p, o), v(o, p, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, p, <span class="number">1</span> - o), v(<span class="number">1</span> - o, p, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - q, <span class="number">0</span>, q), v(<span class="number">1</span> - q, p, q), v(<span class="number">1</span> - q, p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">0</span>, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">0</span>, <span class="number">1</span> - q), v(q, p, <span class="number">1</span> - q), v(q, p, q), v(q, <span class="number">0</span>, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, p, q), v(<span class="number">1</span> - q, p, q), v(<span class="number">1</span> - q, <span class="number">0</span>, q), v(q, <span class="number">0</span>, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">0</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">0</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, p, <span class="number">1</span> - q), v(q, p, <span class="number">1</span> - q), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, p, q), v(q, p, q), spriteConnector));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">0</span>, <span class="number">1</span> - q), v(q, <span class="number">0</span>, q), v(<span class="number">1</span> - q, <span class="number">0</span>, q), v(<span class="number">1</span> - q, <span class="number">0</span>, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(west, north, east, south);</span><br><span class="line">                quads.add(quad(v(o, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (east == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span>, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, o, o), v(<span class="number">1</span>, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, <span class="number">1</span> - o, o), v(<span class="number">1</span>, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, o, <span class="number">1</span> - o), v(<span class="number">1</span>, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (east == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - p, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, o, o), v(<span class="number">1</span> - p, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, <span class="number">1</span> - o, o), v(<span class="number">1</span> - p, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, o, <span class="number">1</span> - o), v(<span class="number">1</span> - p, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">1</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">1</span>, <span class="number">1</span> - q, q), v(<span class="number">1</span> - p, <span class="number">1</span> - q, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, q, q), v(<span class="number">1</span>, q, q), v(<span class="number">1</span>, q, <span class="number">1</span> - q), v(<span class="number">1</span> - p, q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, <span class="number">1</span> - q, q), v(<span class="number">1</span>, <span class="number">1</span> - q, q), v(<span class="number">1</span>, q, q), v(<span class="number">1</span> - p, q, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, q, <span class="number">1</span> - q), v(<span class="number">1</span>, q, <span class="number">1</span> - q), v(<span class="number">1</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">1</span> - p, <span class="number">1</span> - q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, q, <span class="number">1</span> - q), v(<span class="number">1</span> - p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">1</span> - p, <span class="number">1</span> - q, q), v(<span class="number">1</span> - p, q, q), spriteConnector));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, q, <span class="number">1</span> - q), v(<span class="number">1</span>, q, q), v(<span class="number">1</span>, <span class="number">1</span> - q, q), v(<span class="number">1</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(down, north, up, south);</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (west == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, o), v(<span class="number">0</span>, <span class="number">1</span> - o, o), v(<span class="number">0</span>, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(o, o, <span class="number">1</span> - o), v(<span class="number">0</span>, o, <span class="number">1</span> - o), v(<span class="number">0</span>, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(o, o, o), v(<span class="number">0</span>, o, o), v(<span class="number">0</span>, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">0</span>, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">0</span>, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (west == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, o), v(p, <span class="number">1</span> - o, o), v(p, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(o, o, <span class="number">1</span> - o), v(p, o, <span class="number">1</span> - o), v(p, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(o, o, o), v(p, o, o), v(p, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(p, <span class="number">1</span> - o, <span class="number">1</span> - o), v(p, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), v(p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(p, <span class="number">1</span> - q, q), v(<span class="number">0</span>, <span class="number">1</span> - q, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, q, q), v(p, q, q), v(p, q, <span class="number">1</span> - q), v(<span class="number">0</span>, q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, <span class="number">1</span> - q, q), v(p, <span class="number">1</span> - q, q), v(p, q, q), v(<span class="number">0</span>, q, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, q, <span class="number">1</span> - q), v(p, q, <span class="number">1</span> - q), v(p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">0</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(p, q, q), v(p, <span class="number">1</span> - q, q), v(p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(p, q, <span class="number">1</span> - q), spriteConnector));</span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, q, q), v(<span class="number">0</span>, q, <span class="number">1</span> - q), v(<span class="number">0</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">0</span>, <span class="number">1</span> - q, q), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(down, south, up, north);</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, o), v(o, o, o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (north == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">0</span>), v(o, <span class="number">1</span> - o, <span class="number">0</span>), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">0</span>), v(<span class="number">1</span> - o, o, <span class="number">0</span>), v(<span class="number">1</span> - o, o, o), v(o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, <span class="number">0</span>), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">0</span>), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, <span class="number">0</span>), v(o, o, <span class="number">0</span>), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (north == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, p), v(o, <span class="number">1</span> - o, p), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, p), v(<span class="number">1</span> - o, o, p), v(<span class="number">1</span> - o, o, o), v(o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, p), v(<span class="number">1</span> - o, <span class="number">1</span> - o, p), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, p), v(o, o, p), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - q, p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">0</span>), v(q, <span class="number">1</span> - q, <span class="number">0</span>), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, q, <span class="number">0</span>), v(<span class="number">1</span> - q, q, <span class="number">0</span>), v(<span class="number">1</span> - q, q, p), v(q, q, p), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - q, q, <span class="number">0</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">0</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, p), v(<span class="number">1</span> - q, q, p), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, q, p), v(q, <span class="number">1</span> - q, p), v(q, <span class="number">1</span> - q, <span class="number">0</span>), v(q, q, <span class="number">0</span>), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, q, p), v(<span class="number">1</span> - q, q, p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, p), v(q, <span class="number">1</span> - q, p), spriteConnector));</span><br><span class="line">                quads.add(quad(v(q, q, <span class="number">0</span>), v(q, <span class="number">1</span> - q, <span class="number">0</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">0</span>), v(<span class="number">1</span> - q, q, <span class="number">0</span>), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(west, up, east, down);</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, o, o), v(o, o, o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (south == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span>), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span>), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span>), v(o, o, <span class="number">1</span>), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span>), v(<span class="number">1</span> - o, o, <span class="number">1</span>), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span>), v(o, <span class="number">1</span> - o, <span class="number">1</span>), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (south == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - p), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - p), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - p), v(o, o, <span class="number">1</span> - p), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - p), v(<span class="number">1</span> - o, o, <span class="number">1</span> - p), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - p), v(o, <span class="number">1</span> - o, <span class="number">1</span> - p), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - q, <span class="number">1</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(q, <span class="number">1</span> - q, <span class="number">1</span> - p), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, q, <span class="number">1</span>), v(q, q, <span class="number">1</span>), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - q, q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span>), v(<span class="number">1</span> - q, q, <span class="number">1</span>), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, q, <span class="number">1</span>), v(q, <span class="number">1</span> - q, <span class="number">1</span>), v(q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(q, q, <span class="number">1</span> - p), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, q, <span class="number">1</span> - p), v(q, q, <span class="number">1</span> - p), spriteConnector));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - q, <span class="number">1</span>), v(q, q, <span class="number">1</span>), v(<span class="number">1</span> - q, q, <span class="number">1</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span>), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(west, down, east, up);</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Render the facade if we have one in addition to the cable above. Note that the facade comes from the model data property</span></span><br><span class="line">        <span class="comment">// (FACADEID)</span></span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">facadeId</span> <span class="operator">=</span> extraData.get(CableBlock.FACADEID);</span><br><span class="line">        <span class="keyword">if</span> (facadeId != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">BakedModel</span> <span class="variable">model</span> <span class="operator">=</span> Minecraft.getInstance().getBlockRenderer().getBlockModelShaper().getBlockModel(facadeId);</span><br><span class="line">            <span class="type">ChunkRenderTypeSet</span> <span class="variable">renderTypes</span> <span class="operator">=</span> model.getRenderTypes(facadeId, rand, extraData);</span><br><span class="line">            <span class="keyword">if</span> (layer == <span class="literal">null</span> || renderTypes.contains(layer)) &#123; <span class="comment">// always render in the null layer or the block-breaking textures don&#x27;t show up</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    quads.addAll(model.getQuads(state, side, rand, ModelData.EMPTY, layer));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception ignored) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> quads;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">useAmbientOcclusion</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isGui3d</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCustomRenderer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Because we can potentially mimic other blocks we need to render on all render types</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="keyword">public</span> ChunkRenderTypeSet <span class="title function_">getRenderTypes</span><span class="params">(<span class="meta">@NotNull</span> BlockState state, <span class="meta">@NotNull</span> RandomSource rand, <span class="meta">@NotNull</span> ModelData data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChunkRenderTypeSet.all();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> TextureAtlasSprite <span class="title function_">getParticleIcon</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> spriteNormalCable == <span class="literal">null</span></span><br><span class="line">                ? Minecraft.getInstance().getTextureAtlas(InventoryMenu.BLOCK_ATLAS).apply((<span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(<span class="string">&quot;minecraft&quot;</span>, <span class="string">&quot;missingno&quot;</span>)))</span><br><span class="line">                : spriteNormalCable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// To let our cable/facade render correctly as an item (both in inventory and on the ground) we</span></span><br><span class="line">    <span class="comment">// get the correct transforms from the context</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ItemTransforms <span class="title function_">getTransforms</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> context.getTransforms();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ItemOverrides <span class="title function_">getOverrides</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ItemOverrides.EMPTY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="The-CablePatterns-helper"><a href="#The-CablePatterns-helper" class="headerlink" title="The CablePatterns helper"></a>The CablePatterns helper</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CablePatterns</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This map takes a pattern of four directions (excluding the one we are looking at) and returns the sprite index</span></span><br><span class="line">    <span class="comment">// and rotation for the quad that we are looking at.</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Pattern, QuadSetting&gt; PATTERNS = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Given a pattern of four directions (excluding the one we are looking at) we return the sprite index and rotation</span></span><br><span class="line">    <span class="comment">// for the quad that we are looking at.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> QuadSetting <span class="title function_">findPattern</span><span class="params">(ConnectorType s1, ConnectorType s2, ConnectorType s3, ConnectorType s4)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> PATTERNS.get(<span class="keyword">new</span> <span class="title class_">Pattern</span>(s1 != NONE, s2 != NONE, s3 != NONE, s4 != NONE));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This enum represents the type of sprite (texture)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">SpriteIdx</span> &#123;</span><br><span class="line">        SPRITE_NONE,</span><br><span class="line">        SPRITE_END,</span><br><span class="line">        SPRITE_STRAIGHT,</span><br><span class="line">        SPRITE_CORNER,</span><br><span class="line">        SPRITE_THREE,</span><br><span class="line">        SPRITE_CROSS</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This enum represents the type of sprite (texture) as well as the rotation for that sprite</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">record</span> <span class="title class_">QuadSetting</span><span class="params">(SpriteIdx sprite, <span class="type">int</span> rotation)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> QuadSetting <span class="title function_">of</span><span class="params">(SpriteIdx sprite, <span class="type">int</span> rotation)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">QuadSetting</span>(sprite, rotation);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A pattern represents a configuration (cable or no cable) for the four directions excluding the one we are looking at</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">record</span> <span class="title class_">Pattern</span><span class="params">(<span class="type">boolean</span> s1, <span class="type">boolean</span> s2, <span class="type">boolean</span> s3, <span class="type">boolean</span> s4)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> Pattern <span class="title function_">of</span><span class="params">(<span class="type">boolean</span> s1, <span class="type">boolean</span> s2, <span class="type">boolean</span> s3, <span class="type">boolean</span> s4)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Pattern</span>(s1, s2, s3, s4);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="The-BakedModelHelper"><a href="#The-BakedModelHelper" class="headerlink" title="The BakedModelHelper"></a>The BakedModelHelper</h4><p>BakedModelHelper是一个辅助类，有一些创建四边形的辅助方法，我们使用这个类来创建线缆的四边形模型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BakedModelHelper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BakedQuad <span class="title function_">quad</span><span class="params">(Vec3 v1, Vec3 v2, Vec3 v3, Vec3 v4, TextureAtlasSprite sprite, <span class="type">int</span> rotation)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">switch</span> (rotation) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span> -&gt; quad(v1, v2, v3, v4, sprite);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span> -&gt; quad(v2, v3, v4, v1, sprite);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span> -&gt; quad(v3, v4, v1, v2, sprite);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span> -&gt; quad(v4, v1, v2, v3, sprite);</span><br><span class="line">            <span class="keyword">default</span> -&gt; quad(v1, v2, v3, v4, sprite);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BakedQuad <span class="title function_">quad</span><span class="params">(Vec3 v1, Vec3 v2, Vec3 v3, Vec3 v4, TextureAtlasSprite sprite)</span> &#123;</span><br><span class="line">        <span class="type">Vec3</span> <span class="variable">normal</span> <span class="operator">=</span> v3.subtract(v2).cross(v1.subtract(v2)).normalize();</span><br><span class="line"></span><br><span class="line">        BakedQuad[] quad = <span class="keyword">new</span> <span class="title class_">BakedQuad</span>[<span class="number">1</span>];</span><br><span class="line">        <span class="type">QuadBakingVertexConsumer</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QuadBakingVertexConsumer</span>(q -&gt; quad[<span class="number">0</span>] = q);</span><br><span class="line">        builder.setSprite(sprite);</span><br><span class="line">        builder.setDirection(Direction.getNearest(normal.x, normal.y, normal.z));</span><br><span class="line">        putVertex(builder, normal, v1.x, v1.y, v1.z, <span class="number">0</span>, <span class="number">0</span>, sprite);</span><br><span class="line">        putVertex(builder, normal, v2.x, v2.y, v2.z, <span class="number">0</span>, <span class="number">16</span>, sprite);</span><br><span class="line">        putVertex(builder, normal, v3.x, v3.y, v3.z, <span class="number">16</span>, <span class="number">16</span>, sprite);</span><br><span class="line">        putVertex(builder, normal, v4.x, v4.y, v4.z, <span class="number">16</span>, <span class="number">0</span>, sprite);</span><br><span class="line">        <span class="keyword">return</span> quad[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">putVertex</span><span class="params">(VertexConsumer builder, Position normal,</span></span><br><span class="line"><span class="params">                                 <span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> z, <span class="type">float</span> u, <span class="type">float</span> v,</span></span><br><span class="line"><span class="params">                                 TextureAtlasSprite sprite)</span> &#123;</span><br><span class="line">        <span class="type">float</span> <span class="variable">iu</span> <span class="operator">=</span> sprite.getU(u);</span><br><span class="line">        <span class="type">float</span> <span class="variable">iv</span> <span class="operator">=</span> sprite.getV(v);</span><br><span class="line">        builder.vertex(x, y, z)</span><br><span class="line">                .uv(iu, iv)</span><br><span class="line">                .uv2(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">                .color(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>)</span><br><span class="line">                .normal((<span class="type">float</span>) normal.x(), (<span class="type">float</span>) normal.y(), (<span class="type">float</span>) normal.z())</span><br><span class="line">                .endVertex();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Vec3 <span class="title function_">v</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> z)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Vec3</span>(x, y, z);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据生成Data-Generation"><a href="#数据生成Data-Generation" class="headerlink" title="数据生成Data Generation"></a>数据生成Data Generation</h3><p>最后一件我们需要解释的事情是Data Generation。我们不会在这里进行详细的介绍，因为你应该知道它是如何工作的。你可以在github查看详细的代码。然而，然而我想解释一下关于我们使用的烘焙模型系统的模型如何进行数据生成。</p><p>为了生成电缆和facade方块的json，我们可以在<code>TutBlockStates</code>中使用以下的代码，因为我们需要一个为我们模型自定义的builder，所以创建了一个builder的类，这个类叫做CableLoaderBuilder继承自CustomLoaderBuilder，CableLoaderBuilder使用ResourceLocation 作为加载id，BlockModelBuilder是其父类，ExistingFileHelper和一个布尔值指出我们是否生成一个facade方块，CableLoaderBuilder需要重写toJson的方法增加facade的属性，facade属性用于CableModelLoader中决定我们是否生成一个电缆或者facade方块。</p><p>在registerCable（）和registerFacade（）中，我们创建了一个BlockModelBuilder，父类为cube。然后，我们将自定义加载器设置为我们的CableLoaderBuilder，并设置facade属性，最后我们在BlockModelBuilder和block中调用simpleBlock 。</p><p>因为我们使用了原版的cube作为父模型，所以我们将会继承该项目的正确转化，这意味着电缆方块和facade方块将会在背包和地面上得到正确的渲染（也是因为我们在烘焙模型中使用content来获取变换）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutBlockStates</span> <span class="keyword">extends</span> <span class="title class_">BlockStateProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">registerStatesAndModels</span><span class="params">()</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        registerCable();</span><br><span class="line">        registerFacade();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">registerCable</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">BlockModelBuilder</span> <span class="variable">model</span> <span class="operator">=</span> models().getBuilder(<span class="string">&quot;cable&quot;</span>)</span><br><span class="line">                .parent(models().getExistingFile(mcLoc(<span class="string">&quot;cube&quot;</span>)))</span><br><span class="line">                .customLoader((builder, helper) -&gt; <span class="keyword">new</span> <span class="title class_">CableLoaderBuilder</span>(CableModelLoader.GENERATOR_LOADER, builder, helper, <span class="literal">false</span>))</span><br><span class="line">                .end();</span><br><span class="line">        simpleBlock(Registration.CABLE_BLOCK.get(), model);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">registerFacade</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">BlockModelBuilder</span> <span class="variable">model</span> <span class="operator">=</span> models().getBuilder(<span class="string">&quot;facade&quot;</span>)</span><br><span class="line">                .parent(models().getExistingFile(mcLoc(<span class="string">&quot;cube&quot;</span>)))</span><br><span class="line">                .customLoader((builder, helper) -&gt; <span class="keyword">new</span> <span class="title class_">CableLoaderBuilder</span>(CableModelLoader.GENERATOR_LOADER, builder, helper, <span class="literal">true</span>))</span><br><span class="line">                .end();</span><br><span class="line">        simpleBlock(Registration.FACADE_BLOCK.get(), model);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CableLoaderBuilder</span> <span class="keyword">extends</span> <span class="title class_">CustomLoaderBuilder</span>&lt;BlockModelBuilder&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> facade;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">CableLoaderBuilder</span><span class="params">(ResourceLocation loader, BlockModelBuilder parent, ExistingFileHelper existingFileHelper,</span></span><br><span class="line"><span class="params">                                  <span class="type">boolean</span> facade)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(loader, parent, existingFileHelper);</span><br><span class="line">            <span class="built_in">this</span>.facade = facade;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> JsonObject <span class="title function_">toJson</span><span class="params">(JsonObject json)</span> &#123;</span><br><span class="line">            <span class="type">JsonObject</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="built_in">super</span>.toJson(json);</span><br><span class="line">            obj.addProperty(<span class="string">&quot;facade&quot;</span>, facade);</span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello world</title>
      <link href="/2023/10/24/hello-world/"/>
      <url>/2023/10/24/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-00-环境搭建</title>
      <link href="/2023/10/24/Architectury-00-%E5%89%8D%E8%A8%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/10/24/Architectury-00-%E5%89%8D%E8%A8%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Architectury是什么东西"><a href="#Architectury是什么东西" class="headerlink" title="Architectury是什么东西"></a>Architectury是什么东西</h1><p>Architectury是一个工具链。<br>目的是：为了简化开发多平台mod<br>什么用：可以让你开发一次，发布forge和fabric平台。</p><h1 id="怎么开始"><a href="#怎么开始" class="headerlink" title="怎么开始"></a>怎么开始</h1><h2 id="如何开始使用"><a href="#如何开始使用" class="headerlink" title="如何开始使用"></a>如何开始使用</h2><ol><li>下载<a href="https://github.com/architectury/architectury-templates/releases/">架构模板</a>并将其导入为Gradle项目</li><li>使用模板生成器生成更新模板。</li></ol><p>这里采用第一种方法</p><h2 id="使用Architectury模板构建自己项目"><a href="#使用Architectury模板构建自己项目" class="headerlink" title="使用Architectury模板构建自己项目"></a>使用Architectury模板构建自己项目</h2><h3 id="如何选择模板"><a href="#如何选择模板" class="headerlink" title="如何选择模板"></a>如何选择模板</h3><p>要选择模板需要搞清楚几个概念</p><h4 id="简介mixin"><a href="#简介mixin" class="headerlink" title="简介mixin"></a>简介mixin</h4><p>Mixins是一个在Forge和Fabric上都可以使用的修改系统。由于Forge一般提供了对游戏的修改方法，所以可能不需要知道Mixins，但是对于Fabric是必须的。</p><h4 id="怎么了解Mixins"><a href="#怎么了解Mixins" class="headerlink" title="怎么了解Mixins"></a>怎么了解Mixins</h4><p><a href="https://fabricmc.net/wiki/tutorial:mixin_introduction">Fabric Wiki</a>是一个很好的资源。如果你只是添加一些简单方块物品，那么不需要用到Mixins，Fabric提供了这样的功能，但是如果你添加负责的功能，这是必要的。</p><h4 id="搞清楚我是否需要Quilt"><a href="#搞清楚我是否需要Quilt" class="headerlink" title="搞清楚我是否需要Quilt"></a>搞清楚我是否需要Quilt</h4><h4 id="当前由那些模板变体"><a href="#当前由那些模板变体" class="headerlink" title="当前由那些模板变体"></a>当前由那些模板变体</h4><ul><li>Forge：Forge子项目用于调用特定的Forge代码，处理ForgeInit，此子项目可以执行Forge</li><li>Fabric-Like Intermedinary：调用Fabric API绑定类Fabric项目，可用于调用不特定的Fabric和Quilt代码，例如Fabric和Quilt都支持的钩子，此子项目不可执行。</li><li>Fabric：Fabric子项目用于调用特定的Fabric代码，处理Fabirc Init。此子项目可执行Fabric代码</li><li>Quilt：同上</li></ul><p>支持的子项目</p><p><img src="https://s2.loli.net/2023/10/28/PUbjzWpSDyFr8ns.png" alt="1698156270904"></p><p>根据你需求选择不同的模板，我这里选择Forge-Fabric 需要mixin</p><p><img src="https://s2.loli.net/2023/10/28/xpuNgvHWCFs5GP1.png" alt="1698156452676"></p><h4 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h4><p>下载解压后用idea打开文件夹即可。<br>它会自动构建项目，等待successful即可。</p><p><img src="https://s2.loli.net/2023/10/28/pA7oEWru4QBOq5e.png" alt="1698156741346"></p><p>构建完成后</p><p><img src="https://s2.loli.net/2023/10/28/3seGOlJqFmZjSVX.png" alt="1698158356631"></p><h3 id="有哪些内容是我需要配置的"><a href="#有哪些内容是我需要配置的" class="headerlink" title="有哪些内容是我需要配置的"></a>有哪些内容是我需要配置的</h3><p>你需要配置的文件具有如下（如果存在的话）：</p><ul><li>gradle.properties</li><li>fabric.mod.json</li><li>META-INF&#x2F;mods.toml</li><li>quilt.mod.json</li><li>architectury.common.json</li><li>examplemod.accesswidener</li><li>examplemod-common.mixins.json</li></ul><p>并且需要配置类的定位，还需要更改common&#x2F;build.gradle中的访问加宽器。</p><p><img src="https://s2.loli.net/2023/10/28/RW4TLxKpVlyCeUS.png" alt="image-20231028183829928"></p><p><img src="https://s2.loli.net/2023/10/28/FqJOWrSav9sHLA1.png" alt="image-20231028183838837"></p><p><img src="https://s2.loli.net/2023/10/28/uOdJmYSHgPtcwfp.png" alt="image-20231028183848321"></p><p><img src="https://s2.loli.net/2023/10/28/kXyzLxlgbKh6vNS.png" alt="image-20231028194831201"></p><p>修改之后重新reload下项目，启动游戏查看是否正常显示为你的mod了。</p><h2 id="如果我不想使用Architectury-API"><a href="#如果我不想使用Architectury-API" class="headerlink" title="如果我不想使用Architectury API"></a>如果我不想使用Architectury API</h2><h2 id="你可以更换什么api"><a href="#你可以更换什么api" class="headerlink" title="你可以更换什么api"></a>你可以更换什么api</h2><ul><li>yarn</li><li>ParchmentMC</li></ul><h3 id="我应该怎么操作"><a href="#我应该怎么操作" class="headerlink" title="我应该怎么操作"></a>我应该怎么操作</h3><p>请见[官网](<a href="https://docs.architectury.dev/plugin:get_started">plugin:get_started | Architectury Documentation</a>)，我直接用了原本的api</p><h2 id="如何将先有个的项目转化为Architectury项目"><a href="#如何将先有个的项目转化为Architectury项目" class="headerlink" title="如何将先有个的项目转化为Architectury项目"></a>如何将先有个的项目转化为Architectury项目</h2><p>官网教程显示已过期，没找到其他的教程，待补充</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>接下来我们看如何添加物品方块等游戏内容</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
