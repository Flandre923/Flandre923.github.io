<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>fgo2023圣诞活动翻译</title>
      <link href="/2023/12/20/fgo2023%E5%9C%A3%E8%AF%9E%E6%B4%BB%E5%8A%A8%E7%BF%BB%E8%AF%91/"/>
      <url>/2023/12/20/fgo2023%E5%9C%A3%E8%AF%9E%E6%B4%BB%E5%8A%A8%E7%BF%BB%E8%AF%91/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>opengl14模型加载</title>
      <link href="/2023/12/17/opengl14%E6%A8%A1%E5%9E%8B%E5%8A%A0%E8%BD%BD/"/>
      <url>/2023/12/17/opengl14%E6%A8%A1%E5%9E%8B%E5%8A%A0%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>opengl13投光物</title>
      <link href="/2023/12/16/opengl13%E6%8A%95%E5%85%89%E7%89%A9/"/>
      <url>/2023/12/16/opengl13%E6%8A%95%E5%85%89%E7%89%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="平行光"><a href="#平行光" class="headerlink" title="平行光"></a>平行光</h1><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"></span><br><span class="line">struct Material&#123;</span><br><span class="line">    <span class="type">sampler2D</span> diffuse;</span><br><span class="line">    <span class="type">sampler2D</span> specular;</span><br><span class="line">    <span class="type">float</span> shininess;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct Light&#123;</span><br><span class="line"><span class="comment">//    vec3 position;</span></span><br><span class="line">    <span class="type">vec3</span> direction;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> amnbien;</span><br><span class="line">    <span class="type">vec3</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> viewPos;</span><br><span class="line"><span class="keyword">uniform</span> Material material;</span><br><span class="line"><span class="keyword">uniform</span> Light light;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="type">vec3</span> ambient = light.amnbien  * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 漫反射</span></span><br><span class="line">    <span class="type">vec3</span> norm = <span class="built_in">normalize</span>(Normal);</span><br><span class="line">    <span class="type">vec3</span> lightDir = <span class="built_in">normalize</span>(-light.direction);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm,lightDir),<span class="number">0.0</span>);</span><br><span class="line">    <span class="type">vec3</span> diffuse = light.diffuse * diff * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//镜面</span></span><br><span class="line">    <span class="type">vec3</span> viewDir = <span class="built_in">normalize</span>(viewPos - FragPos);</span><br><span class="line">    <span class="type">vec3</span> reflectDir = <span class="built_in">reflect</span>(-lightDir,norm);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir,reflectDir),<span class="number">0.0</span>),material.shininess);</span><br><span class="line">    <span class="type">vec3</span> specular = light.specular * spec * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.specular,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> result = ambient + diffuse + specular;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(result,<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>片段着色器</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"></span><br><span class="line">struct Material&#123;</span><br><span class="line">    <span class="type">sampler2D</span> diffuse;</span><br><span class="line">    <span class="type">sampler2D</span> specular;</span><br><span class="line">    <span class="type">float</span> shininess;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct Light&#123;</span><br><span class="line"><span class="comment">//    vec3 position;</span></span><br><span class="line">    <span class="type">vec3</span> direction;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> amnbien;</span><br><span class="line">    <span class="type">vec3</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> viewPos;</span><br><span class="line"><span class="keyword">uniform</span> Material material;</span><br><span class="line"><span class="keyword">uniform</span> Light light;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="type">vec3</span> ambient = light.amnbien  * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 漫反射</span></span><br><span class="line">    <span class="type">vec3</span> norm = <span class="built_in">normalize</span>(Normal);</span><br><span class="line">    <span class="type">vec3</span> lightDir = <span class="built_in">normalize</span>(-light.direction);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm,lightDir),<span class="number">0.0</span>);</span><br><span class="line">    <span class="type">vec3</span> diffuse = light.diffuse * diff * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//镜面</span></span><br><span class="line">    <span class="type">vec3</span> viewDir = <span class="built_in">normalize</span>(viewPos - FragPos);</span><br><span class="line">    <span class="type">vec3</span> reflectDir = <span class="built_in">reflect</span>(-lightDir,norm);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir,reflectDir),<span class="number">0.0</span>),material.shininess);</span><br><span class="line">    <span class="type">vec3</span> specular = light.specular * spec * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.specular,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> result = ambient + diffuse + specular;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(result,<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顶点着色器</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">0</span>) <span class="keyword">in</span> <span class="type">vec3</span> aPos;</span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">1</span>) <span class="keyword">in</span> <span class="type">vec3</span> aNormal;</span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">2</span>) <span class="keyword">in</span> <span class="type">vec2</span> aTexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">out</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">out</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> model;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> view;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> projection;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">gl_Position</span> = projection * view * model * <span class="type">vec4</span>(aPos, <span class="number">1.0</span>);</span><br><span class="line">    FragPos = <span class="type">vec3</span>(model * <span class="type">vec4</span>(aPos, <span class="number">1.0</span>));</span><br><span class="line">    Normal = <span class="type">mat3</span>(<span class="built_in">transpose</span>(<span class="built_in">inverse</span>(model))) * aNormal;</span><br><span class="line">    TexCoords = aTexCoords;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="点光源"><a href="#点光源" class="headerlink" title="点光源"></a>点光源</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastX</span> <span class="operator">=</span> SCR_WIDTH/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastY</span> <span class="operator">=</span> SCR_HEIGHT/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">firstMouse</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Camera</span> <span class="variable">camera</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Camera</span>(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>),<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1.2f</span>,<span class="number">1.0f</span>,<span class="number">2.0f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Vector3f[] cubePosition = &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.0f</span>,  <span class="number">5.0f</span>, -<span class="number">15.0f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.5f</span>, -<span class="number">2.2f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">3.8f</span>, -<span class="number">2.0f</span>, -<span class="number">12.3f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.4f</span>, -<span class="number">0.4f</span>, -<span class="number">3.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.7f</span>,  <span class="number">3.0f</span>, -<span class="number">7.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.3f</span>, -<span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">0.2f</span>, -<span class="number">1.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.3f</span>,  <span class="number">1.0f</span>, -<span class="number">1.5f</span>)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetInputMode(window, GLFW.GLFW_CURSOR, GLFW.GLFW_CURSOR_DISABLED);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GLFW.glfwSetCursorPosCallback(window, Main::mouseCallback);</span><br><span class="line">        GLFW.glfwSetScrollCallback(window, Main::scrollCallback);</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">lightShader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(<span class="string">&quot;lightcube.vert&quot;</span>,<span class="string">&quot;lightcube.frag&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">lightCubeVAO</span>  <span class="operator">=</span> glGenVertexArrays();</span><br><span class="line">        glBindVertexArray(lightCubeVAO);</span><br><span class="line">        <span class="comment">// we only need to bind to the VBO (to link it with glVertexAttribPointer), no need to fill it; the VBO&#x27;s data already contains all we need (it&#x27;s already bound, but we do it again for educational purposes)</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> *Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">diffuseMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2.png&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">specularMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2_specular.png&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> (<span class="type">float</span>) (<span class="number">20</span> * GLFW.glfwGetTime());</span><br><span class="line">            <span class="type">float</span> <span class="variable">radius</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">            <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(</span><br><span class="line">                    (<span class="type">float</span>) (Math.sin(Math.toRadians(angle)) * radius),</span><br><span class="line">                    <span class="number">1.0f</span>,</span><br><span class="line">                    (<span class="type">float</span>) (Math.cos(Math.toRadians(angle)) * radius)</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.diffuse&quot;</span>,   <span class="number">0</span>);</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.specular&quot;</span>, <span class="number">1</span>);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;material.shininess&quot;</span>, <span class="number">32.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.ambient&quot;</span>,  <span class="number">0.2f</span>, <span class="number">0.2f</span>, <span class="number">0.2f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.diffuse&quot;</span>,  <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>); <span class="comment">// 将光照调暗了一些以搭配场景</span></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.specular&quot;</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.position&quot;</span>, lightPos);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;light.constant&quot;</span>, <span class="number">1f</span>);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;light.linear&quot;</span>, <span class="number">0.09f</span>);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;light.quadratic&quot;</span>, <span class="number">0.032f</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;lightColor&quot;</span>,  <span class="number">1f</span>,<span class="number">1f</span>,<span class="number">1f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;viewPos&quot;</span>, camera.position);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective((<span class="type">float</span>) Math.toRadians(camera.zoom),SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span>  camera.getViewMatrix();</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line"><span class="comment">//            shaderProgram.setMat4(&quot;model&quot;,new Matrix4f().translate(0f,1f,0f));</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// bind diffuse map</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, diffuseMap);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, specularMap);</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">                <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>();</span><br><span class="line">                model.translate(cubePosition[i]);</span><br><span class="line">                <span class="type">float</span> <span class="variable">angle2</span> <span class="operator">=</span> <span class="number">20</span> * i;</span><br><span class="line">                model.rotate((<span class="type">float</span>) Math.toRadians(angle2),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1.0f</span>,<span class="number">0.3f</span>,<span class="number">0.5f</span>));</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>,model);</span><br><span class="line">                glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            lightShader.use();</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;projection&quot;</span>,projection);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;model&quot;</span>,<span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(lightPos).scale(<span class="number">0.2f</span>));</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(lightCubeVAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.FORWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.BACKWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.LEFT, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.RIGHT, deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mouseCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">double</span> xpos,<span class="type">double</span> ypos)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(firstMouse) <span class="comment">// 这个bool变量初始时是设定为true的</span></span><br><span class="line">        &#123;</span><br><span class="line">            lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">            lastY = (<span class="type">float</span>) ypos;</span><br><span class="line">            firstMouse = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">xoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (xpos - lastX);</span><br><span class="line">        <span class="type">float</span> <span class="variable">yoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (lastY - ypos); <span class="comment">// 注意这里是相反的，因为y坐标是从底部往顶部依次增大的</span></span><br><span class="line">        lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">        lastY = (<span class="type">float</span>) ypos;</span><br><span class="line"></span><br><span class="line">        camera.processMouseMovement(xoffset,yoffset,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">scrollCallback</span><span class="params">(<span class="type">long</span> window, <span class="type">double</span> xoffset, <span class="type">double</span> yoffset)</span></span><br><span class="line">    &#123;</span><br><span class="line">        camera.processMouseScroll((<span class="type">float</span>) yoffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">loadTexture</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">int</span> textureID;</span><br><span class="line">        textureID = glGenTextures();</span><br><span class="line"></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">imageData</span> <span class="operator">=</span> ImageReader.ReadImage(path);</span><br><span class="line">        <span class="keyword">if</span>(imageData != <span class="literal">null</span>)&#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D,textureID);</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D,<span class="number">0</span>,GL_RGBA,imageData.width,imageData.height,<span class="number">0</span>,GL_RGBA,GL_UNSIGNED_BYTE,imageData.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;fail load path&quot;</span>+path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> textureID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>片段着色器</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"></span><br><span class="line">struct Material&#123;</span><br><span class="line">    <span class="type">sampler2D</span> diffuse;</span><br><span class="line">    <span class="type">sampler2D</span> specular;</span><br><span class="line">    <span class="type">float</span> shininess;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct Light&#123;</span><br><span class="line">    <span class="type">vec3</span> position;</span><br><span class="line"><span class="comment">//    vec3 direction;</span></span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> amnbien;</span><br><span class="line">    <span class="type">vec3</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> constant;</span><br><span class="line">    <span class="type">float</span> linear;</span><br><span class="line">    <span class="type">float</span> quadratic;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> viewPos;</span><br><span class="line"><span class="keyword">uniform</span> Material material;</span><br><span class="line"><span class="keyword">uniform</span> Light light;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> <span class="built_in">distance</span> = <span class="built_in">length</span>(light.position - FragPos);</span><br><span class="line">    <span class="type">float</span> attenuation = <span class="number">1.0</span> / (light.constant + light.linear * <span class="built_in">distance</span> + light.quadratic * (<span class="built_in">distance</span> * <span class="built_in">distance</span>));</span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="type">vec3</span> ambient = light.amnbien  * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 漫反射</span></span><br><span class="line">    <span class="type">vec3</span> norm = <span class="built_in">normalize</span>(Normal);</span><br><span class="line">    <span class="type">vec3</span> lightDir = <span class="built_in">normalize</span>(light.position - FragPos);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm,lightDir),<span class="number">0.0</span>);</span><br><span class="line">    <span class="type">vec3</span> diffuse = light.diffuse * diff * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//镜面</span></span><br><span class="line">    <span class="type">vec3</span> viewDir = <span class="built_in">normalize</span>(viewPos - FragPos);</span><br><span class="line">    <span class="type">vec3</span> reflectDir = <span class="built_in">reflect</span>(-lightDir,norm);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir,reflectDir),<span class="number">0.0</span>),material.shininess);</span><br><span class="line">    <span class="type">vec3</span> specular = light.specular * spec * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.specular,TexCoords));</span><br><span class="line"></span><br><span class="line">    ambient *= attenuation;</span><br><span class="line">    diff *= attenuation;</span><br><span class="line">    specular *= attenuation;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> result = ambient + diffuse + specular;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(result,<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="聚光"><a href="#聚光" class="headerlink" title="聚光"></a>聚光</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastX</span> <span class="operator">=</span> SCR_WIDTH/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastY</span> <span class="operator">=</span> SCR_HEIGHT/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">firstMouse</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Camera</span> <span class="variable">camera</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Camera</span>(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>),<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1.2f</span>,<span class="number">1.0f</span>,<span class="number">2.0f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Vector3f[] cubePosition = &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.0f</span>,  <span class="number">5.0f</span>, -<span class="number">15.0f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.5f</span>, -<span class="number">2.2f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">3.8f</span>, -<span class="number">2.0f</span>, -<span class="number">12.3f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.4f</span>, -<span class="number">0.4f</span>, -<span class="number">3.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.7f</span>,  <span class="number">3.0f</span>, -<span class="number">7.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.3f</span>, -<span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">0.2f</span>, -<span class="number">1.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.3f</span>,  <span class="number">1.0f</span>, -<span class="number">1.5f</span>)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetInputMode(window, GLFW.GLFW_CURSOR, GLFW.GLFW_CURSOR_DISABLED);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GLFW.glfwSetCursorPosCallback(window, Main::mouseCallback);</span><br><span class="line">        GLFW.glfwSetScrollCallback(window, Main::scrollCallback);</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">lightShader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(<span class="string">&quot;lightcube.vert&quot;</span>,<span class="string">&quot;lightcube.frag&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">lightCubeVAO</span>  <span class="operator">=</span> glGenVertexArrays();</span><br><span class="line">        glBindVertexArray(lightCubeVAO);</span><br><span class="line">        <span class="comment">// we only need to bind to the VBO (to link it with glVertexAttribPointer), no need to fill it; the VBO&#x27;s data already contains all we need (it&#x27;s already bound, but we do it again for educational purposes)</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> *Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">diffuseMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2.png&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">specularMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2_specular.png&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> (<span class="type">float</span>) (<span class="number">20</span> * GLFW.glfwGetTime());</span><br><span class="line">            <span class="type">float</span> <span class="variable">radius</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">            <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(</span><br><span class="line">                    (<span class="type">float</span>) (Math.sin(Math.toRadians(angle)) * radius),</span><br><span class="line">                    <span class="number">1.0f</span>,</span><br><span class="line">                    (<span class="type">float</span>) (Math.cos(Math.toRadians(angle)) * radius)</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.diffuse&quot;</span>,   <span class="number">0</span>);</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.specular&quot;</span>, <span class="number">1</span>);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;material.shininess&quot;</span>, <span class="number">32.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.ambient&quot;</span>,  <span class="number">0.2f</span>, <span class="number">0.2f</span>, <span class="number">0.2f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.diffuse&quot;</span>,  <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>); <span class="comment">// 将光照调暗了一些以搭配场景</span></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.specular&quot;</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.position&quot;</span>, camera.position);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.direction&quot;</span>, camera.front);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;light.cutoff&quot;</span>, (<span class="type">float</span>) Math.cos(Math.toRadians(<span class="number">12.5f</span>)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;lightColor&quot;</span>,  <span class="number">1f</span>,<span class="number">1f</span>,<span class="number">1f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;viewPos&quot;</span>, camera.position);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective((<span class="type">float</span>) Math.toRadians(camera.zoom),SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span>  camera.getViewMatrix();</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line"><span class="comment">//            shaderProgram.setMat4(&quot;model&quot;,new Matrix4f().translate(0f,1f,0f));</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// bind diffuse map</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, diffuseMap);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, specularMap);</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">                <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>();</span><br><span class="line">                model.translate(cubePosition[i]);</span><br><span class="line">                <span class="type">float</span> <span class="variable">angle2</span> <span class="operator">=</span> <span class="number">20</span> * i;</span><br><span class="line">                model.rotate((<span class="type">float</span>) Math.toRadians(angle2),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1.0f</span>,<span class="number">0.3f</span>,<span class="number">0.5f</span>));</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>,model);</span><br><span class="line">                glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            lightShader.use();</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;projection&quot;</span>,projection);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;model&quot;</span>,<span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(lightPos).scale(<span class="number">0.2f</span>));</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(lightCubeVAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.FORWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.BACKWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.LEFT, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.RIGHT, deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mouseCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">double</span> xpos,<span class="type">double</span> ypos)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(firstMouse) <span class="comment">// 这个bool变量初始时是设定为true的</span></span><br><span class="line">        &#123;</span><br><span class="line">            lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">            lastY = (<span class="type">float</span>) ypos;</span><br><span class="line">            firstMouse = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">xoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (xpos - lastX);</span><br><span class="line">        <span class="type">float</span> <span class="variable">yoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (lastY - ypos); <span class="comment">// 注意这里是相反的，因为y坐标是从底部往顶部依次增大的</span></span><br><span class="line">        lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">        lastY = (<span class="type">float</span>) ypos;</span><br><span class="line"></span><br><span class="line">        camera.processMouseMovement(xoffset,yoffset,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">scrollCallback</span><span class="params">(<span class="type">long</span> window, <span class="type">double</span> xoffset, <span class="type">double</span> yoffset)</span></span><br><span class="line">    &#123;</span><br><span class="line">        camera.processMouseScroll((<span class="type">float</span>) yoffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">loadTexture</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">int</span> textureID;</span><br><span class="line">        textureID = glGenTextures();</span><br><span class="line"></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">imageData</span> <span class="operator">=</span> ImageReader.ReadImage(path);</span><br><span class="line">        <span class="keyword">if</span>(imageData != <span class="literal">null</span>)&#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D,textureID);</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D,<span class="number">0</span>,GL_RGBA,imageData.width,imageData.height,<span class="number">0</span>,GL_RGBA,GL_UNSIGNED_BYTE,imageData.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;fail load path&quot;</span>+path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> textureID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"></span><br><span class="line">struct Material&#123;</span><br><span class="line">    <span class="type">sampler2D</span> diffuse;</span><br><span class="line">    <span class="type">sampler2D</span> specular;</span><br><span class="line">    <span class="type">float</span> shininess;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct Light&#123;</span><br><span class="line">    <span class="type">vec3</span> position;</span><br><span class="line">    <span class="type">vec3</span> direction;</span><br><span class="line">    <span class="type">float</span> cutoff;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> amnbien;</span><br><span class="line">    <span class="type">vec3</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> viewPos;</span><br><span class="line"><span class="keyword">uniform</span> Material material;</span><br><span class="line"><span class="keyword">uniform</span> Light light;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="type">vec3</span> ambient = light.amnbien  * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 漫反射</span></span><br><span class="line">    <span class="type">vec3</span> norm = <span class="built_in">normalize</span>(Normal);</span><br><span class="line">    <span class="type">vec3</span> lightDir = <span class="built_in">normalize</span>(light.position - FragPos);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm,lightDir),<span class="number">0.0</span>);</span><br><span class="line">    <span class="type">vec3</span> diffuse = light.diffuse * diff * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//镜面</span></span><br><span class="line">    <span class="type">vec3</span> viewDir = <span class="built_in">normalize</span>(viewPos - FragPos);</span><br><span class="line">    <span class="type">vec3</span> reflectDir = <span class="built_in">reflect</span>(-lightDir,norm);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir,reflectDir),<span class="number">0.0</span>),material.shininess);</span><br><span class="line">    <span class="type">vec3</span> specular = light.specular * spec * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.specular,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">float</span> theta = <span class="built_in">dot</span>(lightDir,<span class="built_in">normalize</span>(-light.direction));</span><br><span class="line">    <span class="keyword">if</span>(theta &gt; light.cutoff)&#123;</span><br><span class="line">        <span class="type">vec3</span> result = ambient + diffuse + specular;</span><br><span class="line">        FragColor = <span class="type">vec4</span>(result,<span class="number">1.0</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">        FragColor = <span class="type">vec4</span>(light.amnbien * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse, TexCoords)), <span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模糊边缘"><a href="#模糊边缘" class="headerlink" title="模糊边缘"></a>模糊边缘</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastX</span> <span class="operator">=</span> SCR_WIDTH/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastY</span> <span class="operator">=</span> SCR_HEIGHT/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">firstMouse</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Camera</span> <span class="variable">camera</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Camera</span>(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>),<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1.2f</span>,<span class="number">1.0f</span>,<span class="number">2.0f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Vector3f[] cubePosition = &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.0f</span>,  <span class="number">5.0f</span>, -<span class="number">15.0f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.5f</span>, -<span class="number">2.2f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">3.8f</span>, -<span class="number">2.0f</span>, -<span class="number">12.3f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.4f</span>, -<span class="number">0.4f</span>, -<span class="number">3.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.7f</span>,  <span class="number">3.0f</span>, -<span class="number">7.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.3f</span>, -<span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">0.2f</span>, -<span class="number">1.5f</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.3f</span>,  <span class="number">1.0f</span>, -<span class="number">1.5f</span>)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetInputMode(window, GLFW.GLFW_CURSOR, GLFW.GLFW_CURSOR_DISABLED);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GLFW.glfwSetCursorPosCallback(window, Main::mouseCallback);</span><br><span class="line">        GLFW.glfwSetScrollCallback(window, Main::scrollCallback);</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">lightShader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(<span class="string">&quot;lightcube.vert&quot;</span>,<span class="string">&quot;lightcube.frag&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">lightCubeVAO</span>  <span class="operator">=</span> glGenVertexArrays();</span><br><span class="line">        glBindVertexArray(lightCubeVAO);</span><br><span class="line">        <span class="comment">// we only need to bind to the VBO (to link it with glVertexAttribPointer), no need to fill it; the VBO&#x27;s data already contains all we need (it&#x27;s already bound, but we do it again for educational purposes)</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> *Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">diffuseMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2.png&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">specularMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2_specular.png&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> (<span class="type">float</span>) (<span class="number">20</span> * GLFW.glfwGetTime());</span><br><span class="line">            <span class="type">float</span> <span class="variable">radius</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">            <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(</span><br><span class="line">                    (<span class="type">float</span>) (Math.sin(Math.toRadians(angle)) * radius),</span><br><span class="line">                    <span class="number">1.0f</span>,</span><br><span class="line">                    (<span class="type">float</span>) (Math.cos(Math.toRadians(angle)) * radius)</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.diffuse&quot;</span>,   <span class="number">0</span>);</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.specular&quot;</span>, <span class="number">1</span>);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;material.shininess&quot;</span>, <span class="number">32.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.ambient&quot;</span>,  <span class="number">0.2f</span>, <span class="number">0.2f</span>, <span class="number">0.2f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.diffuse&quot;</span>,  <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>); <span class="comment">// 将光照调暗了一些以搭配场景</span></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.specular&quot;</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.position&quot;</span>, camera.position);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.direction&quot;</span>, camera.front);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;light.cutoff&quot;</span>, (<span class="type">float</span>) Math.cos(Math.toRadians(<span class="number">12.5f</span>)));</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;light.outerCutOff&quot;</span>, (<span class="type">float</span>) Math.cos(Math.toRadians(<span class="number">17.5f</span>)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;lightColor&quot;</span>,  <span class="number">1f</span>,<span class="number">1f</span>,<span class="number">1f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;viewPos&quot;</span>, camera.position);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective((<span class="type">float</span>) Math.toRadians(camera.zoom),SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span>  camera.getViewMatrix();</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line"><span class="comment">//            shaderProgram.setMat4(&quot;model&quot;,new Matrix4f().translate(0f,1f,0f));</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// bind diffuse map</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, diffuseMap);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, specularMap);</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">                <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>();</span><br><span class="line">                model.translate(cubePosition[i]);</span><br><span class="line">                <span class="type">float</span> <span class="variable">angle2</span> <span class="operator">=</span> <span class="number">20</span> * i;</span><br><span class="line">                model.rotate((<span class="type">float</span>) Math.toRadians(angle2),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1.0f</span>,<span class="number">0.3f</span>,<span class="number">0.5f</span>));</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>,model);</span><br><span class="line">                glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            lightShader.use();</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;projection&quot;</span>,projection);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;model&quot;</span>,<span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(lightPos).scale(<span class="number">0.2f</span>));</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(lightCubeVAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.FORWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.BACKWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.LEFT, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.RIGHT, deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mouseCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">double</span> xpos,<span class="type">double</span> ypos)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(firstMouse) <span class="comment">// 这个bool变量初始时是设定为true的</span></span><br><span class="line">        &#123;</span><br><span class="line">            lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">            lastY = (<span class="type">float</span>) ypos;</span><br><span class="line">            firstMouse = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">xoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (xpos - lastX);</span><br><span class="line">        <span class="type">float</span> <span class="variable">yoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (lastY - ypos); <span class="comment">// 注意这里是相反的，因为y坐标是从底部往顶部依次增大的</span></span><br><span class="line">        lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">        lastY = (<span class="type">float</span>) ypos;</span><br><span class="line"></span><br><span class="line">        camera.processMouseMovement(xoffset,yoffset,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">scrollCallback</span><span class="params">(<span class="type">long</span> window, <span class="type">double</span> xoffset, <span class="type">double</span> yoffset)</span></span><br><span class="line">    &#123;</span><br><span class="line">        camera.processMouseScroll((<span class="type">float</span>) yoffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">loadTexture</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">int</span> textureID;</span><br><span class="line">        textureID = glGenTextures();</span><br><span class="line"></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">imageData</span> <span class="operator">=</span> ImageReader.ReadImage(path);</span><br><span class="line">        <span class="keyword">if</span>(imageData != <span class="literal">null</span>)&#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D,textureID);</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D,<span class="number">0</span>,GL_RGBA,imageData.width,imageData.height,<span class="number">0</span>,GL_RGBA,GL_UNSIGNED_BYTE,imageData.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;fail load path&quot;</span>+path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> textureID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"></span><br><span class="line">struct Material&#123;</span><br><span class="line">    <span class="type">sampler2D</span> diffuse;</span><br><span class="line">    <span class="type">sampler2D</span> specular;</span><br><span class="line">    <span class="type">float</span> shininess;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct Light&#123;</span><br><span class="line">    <span class="type">vec3</span> position;</span><br><span class="line">    <span class="type">vec3</span> direction;</span><br><span class="line">    <span class="type">float</span> cutoff;</span><br><span class="line">    <span class="type">float</span> outerCutOff;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> amnbien;</span><br><span class="line">    <span class="type">vec3</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> viewPos;</span><br><span class="line"><span class="keyword">uniform</span> Material material;</span><br><span class="line"><span class="keyword">uniform</span> Light light;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="type">vec3</span> ambient = light.amnbien  * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 漫反射</span></span><br><span class="line">    <span class="type">vec3</span> norm = <span class="built_in">normalize</span>(Normal);</span><br><span class="line">    <span class="type">vec3</span> lightDir = <span class="built_in">normalize</span>(light.position - FragPos);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm,lightDir),<span class="number">0.0</span>);</span><br><span class="line">    <span class="type">vec3</span> diffuse = light.diffuse * diff * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//镜面</span></span><br><span class="line">    <span class="type">vec3</span> viewDir = <span class="built_in">normalize</span>(viewPos - FragPos);</span><br><span class="line">    <span class="type">vec3</span> reflectDir = <span class="built_in">reflect</span>(-lightDir,norm);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir,reflectDir),<span class="number">0.0</span>),material.shininess);</span><br><span class="line">    <span class="type">vec3</span> specular = light.specular * spec * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.specular,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">float</span> theta = <span class="built_in">dot</span>(lightDir,<span class="built_in">normalize</span>(-light.direction));</span><br><span class="line">    <span class="type">float</span> epsilon = light.cutoff - light.outerCutOff;</span><br><span class="line">    <span class="type">float</span> intensity = <span class="built_in">clamp</span>((theta - light.outerCutOff)/epsilon,<span class="number">0.0</span>,<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">    diffuse *= intensity;</span><br><span class="line">    specular *= intensity;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> result = ambient + diffuse + specular;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(result,<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl12光照贴图</title>
      <link href="/2023/12/16/opengl12%E5%85%89%E7%85%A7%E8%B4%B4%E5%9B%BE/"/>
      <url>/2023/12/16/opengl12%E5%85%89%E7%85%A7%E8%B4%B4%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="漫反射贴图"><a href="#漫反射贴图" class="headerlink" title="漫反射贴图"></a>漫反射贴图</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastX</span> <span class="operator">=</span> SCR_WIDTH/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastY</span> <span class="operator">=</span> SCR_HEIGHT/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">firstMouse</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Camera</span> <span class="variable">camera</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Camera</span>(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>),<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1.2f</span>,<span class="number">1.0f</span>,<span class="number">2.0f</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetInputMode(window, GLFW.GLFW_CURSOR, GLFW.GLFW_CURSOR_DISABLED);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GLFW.glfwSetCursorPosCallback(window, Main::mouseCallback);</span><br><span class="line">        GLFW.glfwSetScrollCallback(window, Main::scrollCallback);</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">lightShader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(<span class="string">&quot;lightcube.vert&quot;</span>,<span class="string">&quot;lightcube.frag&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">lightCubeVAO</span>  <span class="operator">=</span> glGenVertexArrays();</span><br><span class="line">        glBindVertexArray(lightCubeVAO);</span><br><span class="line">        <span class="comment">// we only need to bind to the VBO (to link it with glVertexAttribPointer), no need to fill it; the VBO&#x27;s data already contains all we need (it&#x27;s already bound, but we do it again for educational purposes)</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> *Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">diffuseMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2.png&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> (<span class="type">float</span>) (<span class="number">20</span> * GLFW.glfwGetTime());</span><br><span class="line">            <span class="type">float</span> <span class="variable">radius</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">            <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(</span><br><span class="line">                    (<span class="type">float</span>) (Math.sin(Math.toRadians(angle)) * radius),</span><br><span class="line">                    <span class="number">1.0f</span>,</span><br><span class="line">                    (<span class="type">float</span>) (Math.cos(Math.toRadians(angle)) * radius)</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.diffuse&quot;</span>,   <span class="number">0</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;material.specular&quot;</span>, <span class="number">0.50196078f</span>, <span class="number">0.50196078f</span>, <span class="number">0.50196078f</span>);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;material.shininess&quot;</span>, <span class="number">32.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.ambient&quot;</span>,  <span class="number">0.2f</span>, <span class="number">0.2f</span>, <span class="number">0.2f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.diffuse&quot;</span>,  <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>); <span class="comment">// 将光照调暗了一些以搭配场景</span></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.specular&quot;</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.position&quot;</span>, lightPos);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;lightColor&quot;</span>,  <span class="number">1f</span>,<span class="number">1f</span>,<span class="number">1f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;viewPos&quot;</span>, camera.position);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective((<span class="type">float</span>) Math.toRadians(camera.zoom),SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span>  camera.getViewMatrix();</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>,<span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(<span class="number">0f</span>,<span class="number">1f</span>,<span class="number">0f</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// bind diffuse map</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, diffuseMap);</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>    , <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            lightShader.use();</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;projection&quot;</span>,projection);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;model&quot;</span>,<span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(lightPos).scale(<span class="number">0.2f</span>));</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(lightCubeVAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>    , <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.FORWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.BACKWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.LEFT, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.RIGHT, deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mouseCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">double</span> xpos,<span class="type">double</span> ypos)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(firstMouse) <span class="comment">// 这个bool变量初始时是设定为true的</span></span><br><span class="line">        &#123;</span><br><span class="line">            lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">            lastY = (<span class="type">float</span>) ypos;</span><br><span class="line">            firstMouse = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">xoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (xpos - lastX);</span><br><span class="line">        <span class="type">float</span> <span class="variable">yoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (lastY - ypos); <span class="comment">// 注意这里是相反的，因为y坐标是从底部往顶部依次增大的</span></span><br><span class="line">        lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">        lastY = (<span class="type">float</span>) ypos;</span><br><span class="line"></span><br><span class="line">        camera.processMouseMovement(xoffset,yoffset,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">scrollCallback</span><span class="params">(<span class="type">long</span> window, <span class="type">double</span> xoffset, <span class="type">double</span> yoffset)</span></span><br><span class="line">    &#123;</span><br><span class="line">        camera.processMouseScroll((<span class="type">float</span>) yoffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">loadTexture</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">int</span> textureID;</span><br><span class="line">        textureID = glGenTextures();</span><br><span class="line"></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">imageData</span> <span class="operator">=</span> ImageReader.ReadImage(path);</span><br><span class="line">        <span class="keyword">if</span>(imageData != <span class="literal">null</span>)&#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D,textureID);</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D,<span class="number">0</span>,GL_RGBA,imageData.width,imageData.height,<span class="number">0</span>,GL_RGBA,GL_UNSIGNED_BYTE,imageData.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;fail load path&quot;</span>+path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> textureID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"></span><br><span class="line">struct Material&#123;</span><br><span class="line">    <span class="type">sampler2D</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line">    <span class="type">float</span> shininess;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct Light&#123;</span><br><span class="line">    <span class="type">vec3</span> position;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> amnbien;</span><br><span class="line">    <span class="type">vec3</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> viewPos;</span><br><span class="line"><span class="keyword">uniform</span> Material material;</span><br><span class="line"><span class="keyword">uniform</span> Light light;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="type">vec3</span> ambient = light.amnbien  * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 漫反射</span></span><br><span class="line">    <span class="type">vec3</span> norm = <span class="built_in">normalize</span>(Normal);</span><br><span class="line">    <span class="type">vec3</span> lightDir = <span class="built_in">normalize</span>(light.position - FragPos);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm,lightDir),<span class="number">0.0</span>);</span><br><span class="line">    <span class="type">vec3</span> diffuse = light.diffuse * diff * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//镜面</span></span><br><span class="line">    <span class="type">vec3</span> viewDir = <span class="built_in">normalize</span>(viewPos - FragPos);</span><br><span class="line">    <span class="type">vec3</span> reflectDir = <span class="built_in">reflect</span>(-lightDir,norm);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir,reflectDir),<span class="number">0.0</span>),material.shininess);</span><br><span class="line">    <span class="type">vec3</span> specular = light.specular * spec * material.specular;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> result = ambient + diffuse + specular;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(result,<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">0</span>) <span class="keyword">in</span> <span class="type">vec3</span> aPos;</span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">1</span>) <span class="keyword">in</span> <span class="type">vec3</span> aNormal;</span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">2</span>) <span class="keyword">in</span> <span class="type">vec2</span> aTexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">out</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">out</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> model;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> view;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> projection;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">gl_Position</span> = projection * view * model * <span class="type">vec4</span>(aPos, <span class="number">1.0</span>);</span><br><span class="line">    FragPos = <span class="type">vec3</span>(model * <span class="type">vec4</span>(aPos, <span class="number">1.0</span>));</span><br><span class="line">    Normal = <span class="type">mat3</span>(<span class="built_in">transpose</span>(<span class="built_in">inverse</span>(model))) * aNormal;</span><br><span class="line">    TexCoords = aTexCoords;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="镜面反射"><a href="#镜面反射" class="headerlink" title="镜面反射"></a>镜面反射</h1><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"></span><br><span class="line">struct Material&#123;</span><br><span class="line">    <span class="type">sampler2D</span> diffuse;</span><br><span class="line">    <span class="type">sampler2D</span> specular;</span><br><span class="line">    <span class="type">float</span> shininess;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct Light&#123;</span><br><span class="line">    <span class="type">vec3</span> position;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> amnbien;</span><br><span class="line">    <span class="type">vec3</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> viewPos;</span><br><span class="line"><span class="keyword">uniform</span> Material material;</span><br><span class="line"><span class="keyword">uniform</span> Light light;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="type">vec3</span> ambient = light.amnbien  * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 漫反射</span></span><br><span class="line">    <span class="type">vec3</span> norm = <span class="built_in">normalize</span>(Normal);</span><br><span class="line">    <span class="type">vec3</span> lightDir = <span class="built_in">normalize</span>(light.position - FragPos);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm,lightDir),<span class="number">0.0</span>);</span><br><span class="line">    <span class="type">vec3</span> diffuse = light.diffuse * diff * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//镜面</span></span><br><span class="line">    <span class="type">vec3</span> viewDir = <span class="built_in">normalize</span>(viewPos - FragPos);</span><br><span class="line">    <span class="type">vec3</span> reflectDir = <span class="built_in">reflect</span>(-lightDir,norm);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir,reflectDir),<span class="number">0.0</span>),material.shininess);</span><br><span class="line">    <span class="type">vec3</span> specular = light.specular * spec * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.specular,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> result = ambient + diffuse + specular;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(result,<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastX</span> <span class="operator">=</span> SCR_WIDTH/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastY</span> <span class="operator">=</span> SCR_HEIGHT/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">firstMouse</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Camera</span> <span class="variable">camera</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Camera</span>(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>),<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1.2f</span>,<span class="number">1.0f</span>,<span class="number">2.0f</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetInputMode(window, GLFW.GLFW_CURSOR, GLFW.GLFW_CURSOR_DISABLED);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GLFW.glfwSetCursorPosCallback(window, Main::mouseCallback);</span><br><span class="line">        GLFW.glfwSetScrollCallback(window, Main::scrollCallback);</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">lightShader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(<span class="string">&quot;lightcube.vert&quot;</span>,<span class="string">&quot;lightcube.frag&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">lightCubeVAO</span>  <span class="operator">=</span> glGenVertexArrays();</span><br><span class="line">        glBindVertexArray(lightCubeVAO);</span><br><span class="line">        <span class="comment">// we only need to bind to the VBO (to link it with glVertexAttribPointer), no need to fill it; the VBO&#x27;s data already contains all we need (it&#x27;s already bound, but we do it again for educational purposes)</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> *Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">diffuseMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2.png&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">specularMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2_specular.png&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> (<span class="type">float</span>) (<span class="number">20</span> * GLFW.glfwGetTime());</span><br><span class="line">            <span class="type">float</span> <span class="variable">radius</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">            <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(</span><br><span class="line">                    (<span class="type">float</span>) (Math.sin(Math.toRadians(angle)) * radius),</span><br><span class="line">                    <span class="number">1.0f</span>,</span><br><span class="line">                    (<span class="type">float</span>) (Math.cos(Math.toRadians(angle)) * radius)</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.diffuse&quot;</span>,   <span class="number">0</span>);</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.specular&quot;</span>, <span class="number">1</span>);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;material.shininess&quot;</span>, <span class="number">32.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.ambient&quot;</span>,  <span class="number">0.2f</span>, <span class="number">0.2f</span>, <span class="number">0.2f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.diffuse&quot;</span>,  <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>); <span class="comment">// 将光照调暗了一些以搭配场景</span></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.specular&quot;</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.position&quot;</span>, lightPos);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;lightColor&quot;</span>,  <span class="number">1f</span>,<span class="number">1f</span>,<span class="number">1f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;viewPos&quot;</span>, camera.position);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective((<span class="type">float</span>) Math.toRadians(camera.zoom),SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span>  camera.getViewMatrix();</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>,<span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(<span class="number">0f</span>,<span class="number">1f</span>,<span class="number">0f</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// bind diffuse map</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, diffuseMap);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, specularMap);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            lightShader.use();</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;projection&quot;</span>,projection);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;model&quot;</span>,<span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(lightPos).scale(<span class="number">0.2f</span>));</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(lightCubeVAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.FORWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.BACKWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.LEFT, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.RIGHT, deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mouseCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">double</span> xpos,<span class="type">double</span> ypos)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(firstMouse) <span class="comment">// 这个bool变量初始时是设定为true的</span></span><br><span class="line">        &#123;</span><br><span class="line">            lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">            lastY = (<span class="type">float</span>) ypos;</span><br><span class="line">            firstMouse = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">xoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (xpos - lastX);</span><br><span class="line">        <span class="type">float</span> <span class="variable">yoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (lastY - ypos); <span class="comment">// 注意这里是相反的，因为y坐标是从底部往顶部依次增大的</span></span><br><span class="line">        lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">        lastY = (<span class="type">float</span>) ypos;</span><br><span class="line"></span><br><span class="line">        camera.processMouseMovement(xoffset,yoffset,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">scrollCallback</span><span class="params">(<span class="type">long</span> window, <span class="type">double</span> xoffset, <span class="type">double</span> yoffset)</span></span><br><span class="line">    &#123;</span><br><span class="line">        camera.processMouseScroll((<span class="type">float</span>) yoffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">loadTexture</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">int</span> textureID;</span><br><span class="line">        textureID = glGenTextures();</span><br><span class="line"></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">imageData</span> <span class="operator">=</span> ImageReader.ReadImage(path);</span><br><span class="line">        <span class="keyword">if</span>(imageData != <span class="literal">null</span>)&#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D,textureID);</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D,<span class="number">0</span>,GL_RGBA,imageData.width,imageData.height,<span class="number">0</span>,GL_RGBA,GL_UNSIGNED_BYTE,imageData.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;fail load path&quot;</span>+path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> textureID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>4</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastX</span> <span class="operator">=</span> SCR_WIDTH/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastY</span> <span class="operator">=</span> SCR_HEIGHT/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">firstMouse</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Camera</span> <span class="variable">camera</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Camera</span>(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>),<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1.2f</span>,<span class="number">1.0f</span>,<span class="number">2.0f</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetInputMode(window, GLFW.GLFW_CURSOR, GLFW.GLFW_CURSOR_DISABLED);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GLFW.glfwSetCursorPosCallback(window, Main::mouseCallback);</span><br><span class="line">        GLFW.glfwSetScrollCallback(window, Main::scrollCallback);</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">lightShader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(<span class="string">&quot;lightcube.vert&quot;</span>,<span class="string">&quot;lightcube.frag&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, -<span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>,  <span class="number">1.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span> * Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">lightCubeVAO</span>  <span class="operator">=</span> glGenVertexArrays();</span><br><span class="line">        glBindVertexArray(lightCubeVAO);</span><br><span class="line">        <span class="comment">// we only need to bind to the VBO (to link it with glVertexAttribPointer), no need to fill it; the VBO&#x27;s data already contains all we need (it&#x27;s already bound, but we do it again for educational purposes)</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> *Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">diffuseMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2.png&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">specularMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/container2_specular.png&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">matrixMap</span> <span class="operator">=</span> loadTexture(<span class="string">&quot;src/main/resources/matrix.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> (<span class="type">float</span>) (<span class="number">20</span> * GLFW.glfwGetTime());</span><br><span class="line">            <span class="type">float</span> <span class="variable">radius</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">            <span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(</span><br><span class="line">                    (<span class="type">float</span>) (Math.sin(Math.toRadians(angle)) * radius),</span><br><span class="line">                    <span class="number">1.0f</span>,</span><br><span class="line">                    (<span class="type">float</span>) (Math.cos(Math.toRadians(angle)) * radius)</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.diffuse&quot;</span>,   <span class="number">0</span>);</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;material.specular&quot;</span>, <span class="number">1</span>);</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;material.shininess&quot;</span>, <span class="number">32.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.ambient&quot;</span>,  <span class="number">0.2f</span>, <span class="number">0.2f</span>, <span class="number">0.2f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.diffuse&quot;</span>,  <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>); <span class="comment">// 将光照调暗了一些以搭配场景</span></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.specular&quot;</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;light.position&quot;</span>, lightPos);</span><br><span class="line">            shaderProgram.setInt(<span class="string">&quot;matrix&quot;</span>,<span class="number">2</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;matrixLight&quot;</span>,<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">1f</span>,<span class="number">1f</span>,<span class="number">1f</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;lightColor&quot;</span>,  <span class="number">1f</span>,<span class="number">1f</span>,<span class="number">1f</span>);</span><br><span class="line">            shaderProgram.setVec3(<span class="string">&quot;viewPos&quot;</span>, camera.position);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective((<span class="type">float</span>) Math.toRadians(camera.zoom),SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span>  camera.getViewMatrix();</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>,<span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(<span class="number">0f</span>,<span class="number">1f</span>,<span class="number">0f</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// bind diffuse map</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, diffuseMap);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, specularMap);</span><br><span class="line">            glActiveTexture(GL_TEXTURE2);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, matrixMap);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            lightShader.use();</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;projection&quot;</span>,projection);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;view&quot;</span>,view);</span><br><span class="line">            lightShader.setMat4(<span class="string">&quot;model&quot;</span>,<span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(lightPos).scale(<span class="number">0.2f</span>));</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(lightCubeVAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.FORWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.BACKWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.LEFT, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.RIGHT, deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mouseCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">double</span> xpos,<span class="type">double</span> ypos)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(firstMouse) <span class="comment">// 这个bool变量初始时是设定为true的</span></span><br><span class="line">        &#123;</span><br><span class="line">            lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">            lastY = (<span class="type">float</span>) ypos;</span><br><span class="line">            firstMouse = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">xoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (xpos - lastX);</span><br><span class="line">        <span class="type">float</span> <span class="variable">yoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (lastY - ypos); <span class="comment">// 注意这里是相反的，因为y坐标是从底部往顶部依次增大的</span></span><br><span class="line">        lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">        lastY = (<span class="type">float</span>) ypos;</span><br><span class="line"></span><br><span class="line">        camera.processMouseMovement(xoffset,yoffset,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">scrollCallback</span><span class="params">(<span class="type">long</span> window, <span class="type">double</span> xoffset, <span class="type">double</span> yoffset)</span></span><br><span class="line">    &#123;</span><br><span class="line">        camera.processMouseScroll((<span class="type">float</span>) yoffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">loadTexture</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">int</span> textureID;</span><br><span class="line">        textureID = glGenTextures();</span><br><span class="line"></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">imageData</span> <span class="operator">=</span> ImageReader.ReadImage(path);</span><br><span class="line">        <span class="keyword">if</span>(imageData != <span class="literal">null</span>)&#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D,textureID);</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D,<span class="number">0</span>,GL_RGBA,imageData.width,imageData.height,<span class="number">0</span>,GL_RGBA,GL_UNSIGNED_BYTE,imageData.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;fail load path&quot;</span>+path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> textureID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"></span><br><span class="line">struct Material&#123;</span><br><span class="line">    <span class="type">sampler2D</span> diffuse;</span><br><span class="line">    <span class="type">sampler2D</span> specular;</span><br><span class="line">    <span class="type">float</span> shininess;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct Light&#123;</span><br><span class="line">    <span class="type">vec3</span> position;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> amnbien;</span><br><span class="line">    <span class="type">vec3</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> FragPos;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> Normal;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoords;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> viewPos;</span><br><span class="line"><span class="keyword">uniform</span> Material material;</span><br><span class="line"><span class="keyword">uniform</span> Light light;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> matrix;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> matrixLight;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="type">vec3</span> ambient = light.amnbien  * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 漫反射</span></span><br><span class="line">    <span class="type">vec3</span> norm = <span class="built_in">normalize</span>(Normal);</span><br><span class="line">    <span class="type">vec3</span> lightDir = <span class="built_in">normalize</span>(light.position - FragPos);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm,lightDir),<span class="number">0.0</span>);</span><br><span class="line">    <span class="type">vec3</span> diffuse = light.diffuse * diff * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.diffuse,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//镜面</span></span><br><span class="line">    <span class="type">vec3</span> viewDir = <span class="built_in">normalize</span>(viewPos - FragPos);</span><br><span class="line">    <span class="type">vec3</span> reflectDir = <span class="built_in">reflect</span>(-lightDir,norm);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir,reflectDir),<span class="number">0.0</span>),material.shininess);</span><br><span class="line">    <span class="type">vec3</span> specular = light.specular * spec * <span class="type">vec3</span>(<span class="built_in">texture</span>(material.specular,TexCoords));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//matix</span></span><br><span class="line">    <span class="type">vec3</span> matrix = <span class="type">vec3</span>(<span class="built_in">texture</span>(matrix,TexCoords));</span><br><span class="line">    <span class="type">vec3</span> matrixresult = matrixLight* matrix;</span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> result = ambient + diffuse + specular + matrixresult;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(result,<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl11材质</title>
      <link href="/2023/12/15/opengl11%E6%9D%90%E8%B4%A8/"/>
      <url>/2023/12/15/opengl11%E6%9D%90%E8%B4%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="材质"><a href="#材质" class="headerlink" title="材质"></a>材质</h1><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line">struct Material &#123;</span><br><span class="line">    <span class="type">vec3</span> ambient;</span><br><span class="line">    <span class="type">vec3</span> diffuse;</span><br><span class="line">    <span class="type">vec3</span> specular;</span><br><span class="line">    <span class="type">float</span> shininess;</span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> Material material;</span><br></pre></td></tr></table></figure><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;    </span><br><span class="line">    <span class="comment">// 环境光</span></span><br><span class="line">    <span class="type">vec3</span> ambient = lightColor * material.ambient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 漫反射 </span></span><br><span class="line">    <span class="type">vec3</span> norm = <span class="built_in">normalize</span>(Normal);</span><br><span class="line">    <span class="type">vec3</span> lightDir = <span class="built_in">normalize</span>(lightPos - FragPos);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm, lightDir), <span class="number">0.0</span>);</span><br><span class="line">    <span class="type">vec3</span> diffuse = lightColor * (diff * material.diffuse);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 镜面光</span></span><br><span class="line">    <span class="type">vec3</span> viewDir = <span class="built_in">normalize</span>(viewPos - FragPos);</span><br><span class="line">    <span class="type">vec3</span> reflectDir = <span class="built_in">reflect</span>(-lightDir, norm);  </span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir, reflectDir), <span class="number">0.0</span>), material.shininess);</span><br><span class="line">    <span class="type">vec3</span> specular = lightColor * (spec * material.specular);  </span><br><span class="line"></span><br><span class="line">    <span class="type">vec3</span> result = ambient + diffuse + specular;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(result, <span class="number">1.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><p><a href="https://gist.github.com/Flandre923/e7f5b2f673d37c8bb0cb5f9b9e12876a">https://gist.github.com/Flandre923/e7f5b2f673d37c8bb0cb5f9b9e12876a</a></p><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl10基础光照</title>
      <link href="/2023/12/15/opengl10%E5%9F%BA%E7%A1%80%E5%85%89%E7%85%A7/"/>
      <url>/2023/12/15/opengl10%E5%9F%BA%E7%A1%80%E5%85%89%E7%85%A7/</url>
      
        <content type="html"><![CDATA[<ol><li><p><strong>现实光照的复杂性与OpenGL简化模型</strong>：</p><ul><li>现实世界光照复杂，受多种因素影响，难以模拟。</li><li>OpenGL使用简化模型，如冯氏光照模型，近似现实情况以便更易处理并看起来类似。</li></ul></li><li><p><strong>冯氏光照模型</strong>：</p><ul><li>由环境、漫反射和镜面光照三个分量构成。</li><li>模拟环境光照、漫反射和镜面光照对物体的影响。</li></ul></li><li><p><strong>环境光照</strong>：</p><ul><li>模拟环境中即使黑暗也存在的微弱光线，给物体一些颜色。</li><li>通过光的颜色乘以常量环境因子，再乘以物体的颜色，将结果作为片段的颜色。</li></ul></li><li><p><strong>漫反射光照</strong>：</p><ul><li>受光线方向影响，角度越接近光源，物体片段越亮。</li><li>计算漫反射光照需要法向量、光线方向和片段位置。</li><li>使用法向量和光线方向的点乘计算影响，乘以光的颜色，得到漫反射分量。</li></ul></li><li><p><strong>环境光照</strong>：</p><ul><li>模拟即使在黑暗情况下仍有一些光线存在，为物体增添常量颜色以模拟周围光线的影响。</li><li>通过乘以环境因子和物体颜色来计算片段的颜色。</li></ul></li><li><p><strong>漫反射光照</strong>：</p><ul><li>反映光源对物体方向性影响，计算光线与物体法向量之间的角度，乘以光的颜色以得到漫反射分量。</li><li>强调正对光源的部分更亮，角度越大，片段越暗。</li></ul></li><li><p><strong>法线矩阵</strong>：</p><ul><li>介绍了如何转换法向量到世界空间坐标，避免了不等比缩放对法向量造成的影响。</li><li>使用法线矩阵针对模型矩阵的左上角3x3部分的逆矩阵的转置矩阵来修复法向量的变换。</li></ul></li><li><p><strong>镜面光照</strong>：</p><ul><li>计算入射光线的反射向量和观察方向，以及两者之间的夹角来实现高光效果。</li><li>加入到环境光和漫反射光的组合中，以模拟物体表面的反射性</li></ul></li></ol><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><p>漫反射</p><p><a href="https://gist.github.com/Flandre923/e0e1c5eb1fbfd712c27b54a3c3b6dc35">https://gist.github.com/Flandre923/e0e1c5eb1fbfd712c27b54a3c3b6dc35</a></p><p>镜面光照</p><p><a href="https://gist.github.com/Flandre923/8eb43384d2f7c05f780b58f462b97788">https://gist.github.com/Flandre923/8eb43384d2f7c05f780b58f462b97788</a></p><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> (<span class="type">float</span>) (<span class="number">20</span> * GLFW.glfwGetTime());</span><br><span class="line"><span class="type">float</span> <span class="variable">radius</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">Vector3f</span> <span class="variable">lightPos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(</span><br><span class="line">        (<span class="type">float</span>) (Math.sin(Math.toRadians(angle)) * radius),</span><br><span class="line">        <span class="number">1.0f</span>,</span><br><span class="line">        (<span class="type">float</span>) (Math.cos(Math.toRadians(angle)) * radius)</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl09颜色</title>
      <link href="/2023/12/15/opengl09%E9%A2%9C%E8%89%B2/"/>
      <url>/2023/12/15/opengl09%E9%A2%9C%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h1><ol><li><strong>颜色原理</strong>：介绍了颜色在现实世界中的表现和数字化表示（RGB）。阐述了物体颜色是由其所反射的颜色构成的概念，说明了光源和物体颜色相乘得到物体最终反射的颜色。</li><li><strong>光照原理</strong>：解释了光源对物体的影响。通过不同颜色的光源照射同一物体，说明了光源的颜色如何影响最终感知到的物体颜色。</li><li><strong>创建光照场景</strong>：提供了创建光照场景的步骤。包括使用顶点着色器和片段着色器绘制箱子和灯光源，以及如何将灯光源与光照计算分离以保持其亮度。</li><li><strong>代码实现</strong>：展示了相关的OpenGL代码，从创建对象到绘制光照场景的步骤。</li><li><strong>下一步展望</strong>：指出本节内容在当前阶段可能显得平淡，但暗示将在接下来的教程中继续深入探讨，使得光照场景更加生动有趣。</li></ol><p>code:</p><p><a href="https://gist.github.com/Flandre923/28c9ba1c21682146c5f894606eabcfc3">https://gist.github.com/Flandre923/28c9ba1c21682146c5f894606eabcfc3</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft-world相关内容</title>
      <link href="/2023/12/11/Minecraft-world%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/"/>
      <url>/2023/12/11/Minecraft-world%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<p>Fabric的源码，对应的反混淆比较多。</p><p>forge和neoforge大家就自己对应下把</p><h1 id="World"><a href="#World" class="headerlink" title="World"></a>World</h1><p>字段</p><ul><li>CODEC用于将RegistryKey<World>类型对象转为二进制数据或者反之。RegistryKey用于表示注册表的类，World是一个注册表。</li><li>OVERWORLD表示世界中的主世界。</li><li>NETHER表示下届</li><li>END表示末地</li><li>HORIZONTAL_LIMIT水平边界，玩家可达到的最远坐标</li><li>MAX_UPDATE_LIMIT 最大更新深度，即每个tick最多更新的方块数量</li><li>field_30967 &#x3D;&gt; 32数值的是每个区块的大小</li><li>field_30968 &#x3D;&gt; 15的是最大关照等级</li><li>field_30969 &#x3D;&gt; 24000 一天的长度tick</li><li>MAX_Y 玩家能达到的最大高度</li><li>MIN_Y 玩家能达到的最低高度</li><li>blockEntityTickers List类型，存储每个tick更新的方块实体。</li><li>neighborUpdater 邻居更新器，用于更新周围方块</li><li>pendingBlockEntityTickers  List类型 用于存储下一个tick要更新的方块</li><li>iteratingTickingBlockEntities boolean值 表示是否在遍历方块实体列表，避免在遍历中添加或者删除元素</li><li>thread 线程：表示该世界的线程，</li><li>debugWorld 该世界是否是一个调试世界。boolean值</li><li>ambientDarkness int 表示世界的环境暗程度，影响光照的因素</li><li>lcgBlockSeed int，随机数算法，影响是随机行为，火蔓延，冰融化，植物生长</li><li>lcgBlockSeedIncrement 用于随机数算法，同上</li><li>rainGradientPrev 上一个tick的雨水渐变，受雨水影响的因素。取决时间和天气</li><li>rainGradient 当前游戏tick的雨水渐变</li><li>thunderGradientPrev  雷电</li><li>tunderGradient 雷电 同上</li><li>Random random 随机数生成器</li><li>Random threadSafeRandom 线程安全随机数生成器，可能用于方块更新，地形生成等，已过时</li><li>RegistryKey《DimensionType》dimension 表示世界的维度类型，定义世界的特性的类，例如天空的颜色，重力强度等。</li><li>RegistryEntry<DimensionType> dimensionEntry，用于表示该世界的维度类型在注册表中的条目。</li><li>MutableWorldProperties  properties 世界的属性 ，名称、难度、游戏模式、时间、天气等</li><li>profiler 监控游戏性能的类，它可以记录游戏中的各种事件的耗时和占用率，例如渲染、更新、网络、声音等。</li><li>isClient 该世界是否是一个客户端世界。它用于显示游戏的画面和声音，以及接收玩家的输入。客户端世界通常需要与服务器世界进行同步，以保证游戏的一致性。</li><li>border 它是一个WorldBorder类型的对象，用于表示该世界的边界。 世界边界是一个用于限制玩家活动范围的机制，它可以由玩家或命令控制，它可以改变大小、形状、颜色等。</li><li>biomeAccess访问该世界的生物群系。BiomeAccess是一个用于获取或缓存生物群系的接口，它可以根据不同的算法或来源提供生物群系。</li><li>registryKey RegistryKey<World>类型，表示该世界在注册表中的键</li><li>registryManager DynamicRegistryManager类型，管理该世界的动态注册表。动态注册表是一种可以在游戏运行时改变的注册表，它用于存储一些可以由玩家或数据包自定义的资源，例如生物群系、结构、特性等。</li><li>damageSources。伤害来源是一个用于定义造成伤害的原因和效果的类，例如火焰、爆炸、魔法等。DamageSources是一个用于存储或获取伤害来源的类，它包含了一些常用的伤害来源的实例。</li><li>tickOrder 它是一个长整数，表示该世界的更新顺序。</li></ul><p>方法</p><ul><li>World构造方法</li><li>isClient（）返回是否是客户端世界</li><li>getServer（）返回MinecraftServer为Null</li><li>isInBuildLimit（） 判断给出的pos位置是否具有限制</li><li>isValid（） 判断给出的pos位置的天气是否是合法</li><li>isValidHorizontally（）给出的pos 是否是在合法的范围内</li><li>isInvalidVertically（）给出的y数值方向是否是合法的范围</li><li>getWorldChunk（）给出的pos位置的区块</li><li>getChunk（）给出x，z坐标位置的区块</li><li>getChunk（）给出x，z 最低的区块状态，以及是否创建区块 返回x，z的区块</li><li>setBlockState（）设置pos位置方块的状态为state，flags</li><li>setBlockState（） 重载方法，给出方块的pos，方块的state，方块的flag和方块的最大更新深度，跟pos位置的方块为state，flag，设置最大更新深度，并更新和它周围方块的状体。flag是是一个用于控制方块的更新和通知的整数，它包含了不同的位，例如移动、通知监听器、通知邻居、强制状态等。Block.MOVED是一个常量，表示方块的移动位，如果这一位为真，表示方块是被移动的，例如被活塞推动。</li><li>onBlockChanged（）空方法，当blockstate发生改变时候调用，传入的是方块pos，oldstate，newstate</li><li>removeBlock（）传入pos，move（boolean）获得流体的状态，将当前方块设置为流体方块</li><li>breakBlock（）</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> Java </tag>
            
            <tag> Minecraft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl08摄像机</title>
      <link href="/2023/12/11/opengl08%E6%91%84%E5%83%8F%E6%9C%BA/"/>
      <url>/2023/12/11/opengl08%E6%91%84%E5%83%8F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="摄像机"><a href="#摄像机" class="headerlink" title="摄像机"></a>摄像机</h1><p>观察矩阵在OpenGL中移动场景，模拟出摄像机效果</p><p>讨论如何配置OpenGL摄像机，实现FPS风格的自由移动，并创建一个自定义摄像机类。</p><h2 id="摄像机-观察空间"><a href="#摄像机-观察空间" class="headerlink" title="摄像机&#x2F;观察空间"></a>摄像机&#x2F;观察空间</h2><ul><li>观察矩阵将世界坐标转换为相对于摄像机位置与方向的观察坐标。</li><li>定义摄像机需要位置、观察方向、右侧向量和上方向向量。</li><li>获取摄像机位置、方向向量、右向量和上向量的方法。</li><li>使用这些向量创建LookAt矩阵，将世界坐标转换到观察空间。</li><li>示例中展示了如何使用GLM库中的函数来创建观察矩阵。</li><li>最后通过一段代码展示了如何让摄像机围绕场景旋转，并使用LookAt矩阵实现视角的变化。、</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        Vector3f[] cubePositions = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.0f</span>,  <span class="number">5.0f</span>, -<span class="number">15.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.5f</span>, -<span class="number">2.2f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">3.8f</span>, -<span class="number">2.0f</span>, -<span class="number">12.3f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.4f</span>, -<span class="number">0.4f</span>, -<span class="number">3.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.7f</span>,  <span class="number">3.0f</span>, -<span class="number">7.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.3f</span>, -<span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">0.2f</span>, -<span class="number">1.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.3f</span>,  <span class="number">1.0f</span>, -<span class="number">1.5f</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">radius</span> <span class="operator">=</span> <span class="number">10.0f</span>;</span><br><span class="line">            <span class="type">float</span> <span class="variable">camX</span> <span class="operator">=</span> (<span class="type">float</span>) (Math.sin(GLFW.glfwGetTime()) * radius);</span><br><span class="line">            <span class="type">float</span> <span class="variable">camZ</span> <span class="operator">=</span> (<span class="type">float</span>) Math.cos(GLFW.glfwGetTime()) * radius;</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().lookAt(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(camX,<span class="number">0</span>,camZ),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>));</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective(<span class="number">45f</span>* <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span>,SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> <span class="number">20.0f</span> * i;</span><br><span class="line">                <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(cubePositions[i]).rotate(angle * <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span> ,<span class="number">0.5f</span>,<span class="number">1f</span>,<span class="number">0f</span>);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>, model);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>, view);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line"></span><br><span class="line">                shaderProgram.use();</span><br><span class="line">                glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="自由移动"><a href="#自由移动" class="headerlink" title="自由移动"></a>自由移动</h1><ul><li>定义摄像机变量包括位置（cameraPos）、前方向（cameraFront）和上方向（cameraUp）。</li><li>使用<code>glm::lookAt</code>函数设置视角，将摄像机定位在<code>cameraPos</code>，并使其朝向目标位置(<code>cameraPos + cameraFront</code>)，并设定上方向为<code>cameraUp</code>。</li><li>通过按键命令更新<code>cameraPos</code>向量，实现摄像机在按下W、A、S、D键时的移动操作。</li><li>按下W键会使摄像机沿着正前方向移动，S键则相反，A键和D键则实现左右移动。</li><li>根据按键的不同，对<code>cameraPos</code>进行加减操作，使用了方向向量和叉乘操作来创建摄像机移动的效果。</li><li>在移动过程中，对右向量进行了标准化处理，确保移动速度匀速，而不因摄像机朝向不同而改变速度。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraPos</span>   <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>,  <span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraFront</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>, -<span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraUp</span>    <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">1.0f</span>,  <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        Vector3f[] cubePositions = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.0f</span>,  <span class="number">5.0f</span>, -<span class="number">15.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.5f</span>, -<span class="number">2.2f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">3.8f</span>, -<span class="number">2.0f</span>, -<span class="number">12.3f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.4f</span>, -<span class="number">0.4f</span>, -<span class="number">3.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.7f</span>,  <span class="number">3.0f</span>, -<span class="number">7.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.3f</span>, -<span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">0.2f</span>, -<span class="number">1.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.3f</span>,  <span class="number">1.0f</span>, -<span class="number">1.5f</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().lookAt(cameraPos,<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraPos).add(cameraFront),cameraUp);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective(<span class="number">45f</span>* <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span>,SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> <span class="number">20.0f</span> * i;</span><br><span class="line">                <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(cubePositions[i]).rotate(angle * <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span> ,<span class="number">0.5f</span>,<span class="number">1f</span>,<span class="number">0f</span>);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>, model);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>, view);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line"></span><br><span class="line">                shaderProgram.use();</span><br><span class="line">                glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">0.05f</span>; <span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).cross(cameraUp).normalize().mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).cross(cameraUp).normalize().mul(cameraSpeed));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="移动速度"><a href="#移动速度" class="headerlink" title="移动速度"></a>移动速度</h2><ul><li>解释了由于处理器性能不同可能导致程序在不同硬件上移动速度不同的问题。</li><li>引入了时间差（deltaTime）的概念，用以追踪当前帧与上一帧之间的时间差值。</li><li>通过计算每一帧的时间差，将其考虑进速度计算中（例如，<code>cameraSpeed = 2.5f * deltaTime</code>）。</li><li>指出了使用时间差来调整速度能够确保在不同硬件上保持相同的移动速度，从而保证用户体验的一致性。</li><li>最终，指出这一技术使得摄像机系统更加流畅，无论在任何系统上都能获得相同的移动速度。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraPos</span>   <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>,  <span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraFront</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>, -<span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraUp</span>    <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">1.0f</span>,  <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        Vector3f[] cubePositions = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.0f</span>,  <span class="number">5.0f</span>, -<span class="number">15.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.5f</span>, -<span class="number">2.2f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">3.8f</span>, -<span class="number">2.0f</span>, -<span class="number">12.3f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.4f</span>, -<span class="number">0.4f</span>, -<span class="number">3.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.7f</span>,  <span class="number">3.0f</span>, -<span class="number">7.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.3f</span>, -<span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">0.2f</span>, -<span class="number">1.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.3f</span>,  <span class="number">1.0f</span>, -<span class="number">1.5f</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().lookAt(cameraPos,<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraPos).add(cameraFront),cameraUp);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective(<span class="number">45f</span>* <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span>,SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> <span class="number">20.0f</span> * i;</span><br><span class="line">                <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(cubePositions[i]).rotate(angle * <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span> ,<span class="number">0.5f</span>,<span class="number">1f</span>,<span class="number">0f</span>);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>, model);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>, view);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line"></span><br><span class="line">                shaderProgram.use();</span><br><span class="line">                glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).cross(cameraUp).normalize().mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).cross(cameraUp).normalize().mul(cameraSpeed));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="视角移动"><a href="#视角移动" class="headerlink" title="视角移动"></a>视角移动</h1><h2 id="欧拉角"><a href="#欧拉角" class="headerlink" title="欧拉角"></a>欧拉角</h2><ul><li>俯仰角描述垂直上下方向的角度变化，对应于观察者往上或往下看的程度，其方向向量的y分量为sin(俯仰角)。</li><li>俯仰角也会影响方向向量的x和z分量，它们分别为cos(俯仰角)。</li><li>偏航角描述水平左右方向的角度变化，对应观察者往左或往右看的程度，其方向向量的x分量为cos(偏航角)，z分量为sin(偏航角)。</li><li>最终，结合俯仰角和偏航角，得到了描述摄像机自由旋转视角的三维方向向量。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraPos</span>   <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>,  <span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraFront</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>, -<span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraUp</span>    <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">1.0f</span>,  <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastX</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastY</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">firstMouse</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">yaw</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">pitch</span>  <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetInputMode(window, GLFW.GLFW_CURSOR, GLFW.GLFW_CURSOR_DISABLED);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GLFW.glfwSetCursorPosCallback(window, Main::mouseCallback);</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        Vector3f[] cubePositions = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.0f</span>,  <span class="number">5.0f</span>, -<span class="number">15.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.5f</span>, -<span class="number">2.2f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">3.8f</span>, -<span class="number">2.0f</span>, -<span class="number">12.3f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.4f</span>, -<span class="number">0.4f</span>, -<span class="number">3.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.7f</span>,  <span class="number">3.0f</span>, -<span class="number">7.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.3f</span>, -<span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">0.2f</span>, -<span class="number">1.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.3f</span>,  <span class="number">1.0f</span>, -<span class="number">1.5f</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().lookAt(cameraPos,<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraPos).add(cameraFront),cameraUp);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective(<span class="number">45f</span>* <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span>,SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> <span class="number">20.0f</span> * i;</span><br><span class="line">                <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(cubePositions[i]).rotate(angle * <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span> ,<span class="number">0.5f</span>,<span class="number">1f</span>,<span class="number">0f</span>);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>, model);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>, view);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line"></span><br><span class="line">                shaderProgram.use();</span><br><span class="line">                glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).cross(cameraUp).normalize().mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).cross(cameraUp).normalize().mul(cameraSpeed));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mouseCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">double</span> xpos,<span class="type">double</span> ypos)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(firstMouse) <span class="comment">// 这个bool变量初始时是设定为true的</span></span><br><span class="line">        &#123;</span><br><span class="line">            lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">            lastY = (<span class="type">float</span>) ypos;</span><br><span class="line">            firstMouse = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">xoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (xpos - lastX);</span><br><span class="line">        <span class="type">float</span> <span class="variable">yoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (lastY - ypos); <span class="comment">// 注意这里是相反的，因为y坐标是从底部往顶部依次增大的</span></span><br><span class="line">        lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">        lastY = (<span class="type">float</span>) ypos;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">sensitivity</span> <span class="operator">=</span> <span class="number">0.05f</span>;</span><br><span class="line">        xoffset *= sensitivity;</span><br><span class="line">        yoffset *= sensitivity;</span><br><span class="line"></span><br><span class="line">        yaw   += xoffset;</span><br><span class="line">        pitch += yoffset;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(pitch &gt; <span class="number">89.0f</span>)</span><br><span class="line">            pitch =  <span class="number">89.0f</span>;</span><br><span class="line">        <span class="keyword">if</span>(pitch &lt; -<span class="number">89.0f</span>)</span><br><span class="line">            pitch = -<span class="number">89.0f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Vector3f</span> <span class="variable">front</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>();</span><br><span class="line">        front.x = (<span class="type">float</span>) (Math.cos(Math.toRadians(yaw)) * Math.cos(Math.toRadians(pitch)));</span><br><span class="line">        front.y = (<span class="type">float</span>) Math.sin(Math.toRadians(pitch));</span><br><span class="line">        front.z = (<span class="type">float</span>) (Math.sin(Math.toRadians(yaw)) * Math.cos(Math.toRadians(pitch)));</span><br><span class="line">        cameraFront =front.normalize();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="鼠标输入"><a href="#鼠标输入" class="headerlink" title="鼠标输入"></a>鼠标输入</h2><ol><li>设置GLFW捕捉光标，隐藏光标并使其停留在窗口内，适用于FPS摄像机系统。</li><li>注册鼠标移动事件的回调函数，并在每一帧中计算鼠标位置之间的偏移量。</li><li>将偏移量乘以灵敏度，并将其分别加到全局的俯仰角（pitch）和偏航角（yaw）中。</li><li>设置俯仰角的限制，使其不会超过指定范围，而偏航角则无限制。</li><li>根据俯仰角和偏航角的变化计算新的方向向量，即摄像机的前方向量（cameraFront）。</li><li>处理第一次获取鼠标输入时产生的问题，确保在第一次获取输入时不会产生摄像机突然跳动的情况，通过更新初始鼠标位置来解决这个问题。</li></ol><h2 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h2><ol><li>创建鼠标滚轮的回调函数 <code>scroll_callback</code>，用于处理竖直滚动对视野变化的影响。通过检测滚动量 <code>yoffset</code> 的变化来调整视野大小，并将其限制在特定范围内（1.0f 到 45.0f）。</li><li>在每一帧中，根据更新后的 <code>fov</code> 变量，使用 <code>glm::perspective</code> 函数重新设置透视投影矩阵，将 <code>fov</code> 作为视野参数。</li><li>注册鼠标滚轮的回调函数，使用 <code>glfwSetScrollCallback</code> 函数将 <code>scroll_callback</code> 与窗口的滚轮事件关联起来。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraPos</span>   <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>,  <span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraFront</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>, -<span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraUp</span>    <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">1.0f</span>,  <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastX</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastY</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">firstMouse</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">yaw</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">pitch</span>  <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">fov</span> <span class="operator">=</span> <span class="number">45</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetInputMode(window, GLFW.GLFW_CURSOR, GLFW.GLFW_CURSOR_DISABLED);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GLFW.glfwSetCursorPosCallback(window, Main::mouseCallback);</span><br><span class="line">        GLFW.glfwSetScrollCallback(window, Main::scrollCallback);</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        Vector3f[] cubePositions = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.0f</span>,  <span class="number">5.0f</span>, -<span class="number">15.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.5f</span>, -<span class="number">2.2f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">3.8f</span>, -<span class="number">2.0f</span>, -<span class="number">12.3f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.4f</span>, -<span class="number">0.4f</span>, -<span class="number">3.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.7f</span>,  <span class="number">3.0f</span>, -<span class="number">7.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.3f</span>, -<span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">0.2f</span>, -<span class="number">1.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.3f</span>,  <span class="number">1.0f</span>, -<span class="number">1.5f</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().lookAt(cameraPos,<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraPos).add(cameraFront),cameraUp);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective((<span class="type">float</span>) Math.toRadians(fov),SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> <span class="number">20.0f</span> * i;</span><br><span class="line">                <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(cubePositions[i]).rotate(angle * <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span> ,<span class="number">0.5f</span>,<span class="number">1f</span>,<span class="number">0f</span>);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>, model);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>, view);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line"></span><br><span class="line">                shaderProgram.use();</span><br><span class="line">                glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).cross(cameraUp).normalize().mul(cameraSpeed));</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            cameraPos.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(cameraFront).cross(cameraUp).normalize().mul(cameraSpeed));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mouseCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">double</span> xpos,<span class="type">double</span> ypos)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(firstMouse) <span class="comment">// 这个bool变量初始时是设定为true的</span></span><br><span class="line">        &#123;</span><br><span class="line">            lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">            lastY = (<span class="type">float</span>) ypos;</span><br><span class="line">            firstMouse = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">xoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (xpos - lastX);</span><br><span class="line">        <span class="type">float</span> <span class="variable">yoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (lastY - ypos); <span class="comment">// 注意这里是相反的，因为y坐标是从底部往顶部依次增大的</span></span><br><span class="line">        lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">        lastY = (<span class="type">float</span>) ypos;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">sensitivity</span> <span class="operator">=</span> <span class="number">0.05f</span>;</span><br><span class="line">        xoffset *= sensitivity;</span><br><span class="line">        yoffset *= sensitivity;</span><br><span class="line"></span><br><span class="line">        yaw   += xoffset;</span><br><span class="line">        pitch += yoffset;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(pitch &gt; <span class="number">89.0f</span>)</span><br><span class="line">            pitch =  <span class="number">89.0f</span>;</span><br><span class="line">        <span class="keyword">if</span>(pitch &lt; -<span class="number">89.0f</span>)</span><br><span class="line">            pitch = -<span class="number">89.0f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Vector3f</span> <span class="variable">front</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>();</span><br><span class="line">        front.x = (<span class="type">float</span>) (Math.cos(Math.toRadians(yaw)) * Math.cos(Math.toRadians(pitch)));</span><br><span class="line">        front.y = (<span class="type">float</span>) Math.sin(Math.toRadians(pitch));</span><br><span class="line">        front.z = (<span class="type">float</span>) (Math.sin(Math.toRadians(yaw)) * Math.cos(Math.toRadians(pitch)));</span><br><span class="line">        cameraFront =front.normalize();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">scrollCallback</span><span class="params">(<span class="type">long</span> window, <span class="type">double</span> xoffset, <span class="type">double</span> yoffset)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(fov &gt;= <span class="number">1.0f</span> &amp;&amp; fov &lt;= <span class="number">45.0f</span>)</span><br><span class="line">            fov -= yoffset;</span><br><span class="line">        <span class="keyword">if</span>(fov &lt;= <span class="number">1.0f</span>)</span><br><span class="line">            fov = <span class="number">1.0f</span>;</span><br><span class="line">        <span class="keyword">if</span>(fov &gt;= <span class="number">45.0f</span>)</span><br><span class="line">            fov = <span class="number">45.0f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="摄像机类"><a href="#摄像机类" class="headerlink" title="摄像机类"></a>摄像机类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">CameraMovement</span> &#123;</span><br><span class="line">    FORWARD,</span><br><span class="line">    BACKWARD,</span><br><span class="line">    LEFT,</span><br><span class="line">    RIGHT</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Camera</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Vector3f position;</span><br><span class="line">    <span class="keyword">private</span> Vector3f front;</span><br><span class="line">    <span class="keyword">private</span> Vector3f up;</span><br><span class="line">    <span class="keyword">private</span> Vector3f right;</span><br><span class="line">    <span class="keyword">private</span> Vector3f worldUp;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> yaw;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> pitch;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> movementSpeed;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> mouseSensitivity;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> zoom;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Camera</span><span class="params">(Vector3f position, Vector3f up, <span class="type">float</span> yaw, <span class="type">float</span> pitch)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.position = position;</span><br><span class="line">        <span class="built_in">this</span>.worldUp = up;</span><br><span class="line">        <span class="built_in">this</span>.yaw = yaw;</span><br><span class="line">        <span class="built_in">this</span>.pitch = pitch;</span><br><span class="line">        <span class="built_in">this</span>.front = <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>, -<span class="number">1.0f</span>);</span><br><span class="line">        <span class="built_in">this</span>.movementSpeed = <span class="number">2.5f</span>;</span><br><span class="line">        <span class="built_in">this</span>.mouseSensitivity = <span class="number">0.1f</span>;</span><br><span class="line">        <span class="built_in">this</span>.zoom = <span class="number">45.0f</span>;</span><br><span class="line">        updateCameraVectors();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Matrix4f <span class="title function_">getViewMatrix</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Vector3f</span> <span class="variable">center</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>();</span><br><span class="line">        position.add(front, center);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().lookAt(position, center, up);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">processKeyboard</span><span class="params">(CameraMovement direction, <span class="type">float</span> deltaTime)</span> &#123;</span><br><span class="line">        <span class="type">float</span> <span class="variable">velocity</span> <span class="operator">=</span> movementSpeed * deltaTime;</span><br><span class="line">        <span class="keyword">if</span> (direction == CameraMovement.FORWARD)</span><br><span class="line">            position.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(front).mul(velocity));</span><br><span class="line">        <span class="keyword">if</span> (direction == CameraMovement.BACKWARD)</span><br><span class="line">            position.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(front).mul(velocity));</span><br><span class="line">        <span class="keyword">if</span> (direction == CameraMovement.LEFT)</span><br><span class="line">            position.sub(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(right).mul(velocity));</span><br><span class="line">        <span class="keyword">if</span> (direction == CameraMovement.RIGHT)</span><br><span class="line">            position.add(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(right).mul(velocity));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">processMouseMovement</span><span class="params">(<span class="type">float</span> xoffset, <span class="type">float</span> yoffset, <span class="type">boolean</span> constrainPitch)</span> &#123;</span><br><span class="line">        xoffset *= mouseSensitivity;</span><br><span class="line">        yoffset *= mouseSensitivity;</span><br><span class="line"></span><br><span class="line">        yaw += xoffset;</span><br><span class="line">        pitch += yoffset;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (constrainPitch) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pitch &gt; <span class="number">89.0f</span>)</span><br><span class="line">                pitch = <span class="number">89.0f</span>;</span><br><span class="line">            <span class="keyword">if</span> (pitch &lt; -<span class="number">89.0f</span>)</span><br><span class="line">                pitch = -<span class="number">89.0f</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        updateCameraVectors();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">processMouseScroll</span><span class="params">(<span class="type">float</span> yoffset)</span> &#123;</span><br><span class="line">        zoom -= yoffset;</span><br><span class="line">        <span class="keyword">if</span> (zoom &lt; <span class="number">1.0f</span>)</span><br><span class="line">            zoom = <span class="number">1.0f</span>;</span><br><span class="line">        <span class="keyword">if</span> (zoom &gt; <span class="number">45.0f</span>)</span><br><span class="line">            zoom = <span class="number">45.0f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateCameraVectors</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Vector3f</span> <span class="variable">front</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>();</span><br><span class="line">        front.x = (<span class="type">float</span>) Math.cos(Math.toRadians(yaw)) * (<span class="type">float</span>) Math.cos(Math.toRadians(pitch));</span><br><span class="line">        front.y = (<span class="type">float</span>) Math.sin(Math.toRadians(pitch));</span><br><span class="line">        front.z = (<span class="type">float</span>) Math.sin(Math.toRadians(yaw)) * (<span class="type">float</span>) Math.cos(Math.toRadians(pitch));</span><br><span class="line">        <span class="built_in">this</span>.front = front.normalize();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.right = <span class="built_in">this</span>.front.cross(worldUp, <span class="keyword">new</span> <span class="title class_">Vector3f</span>()).normalize();</span><br><span class="line">        <span class="built_in">this</span>.up = <span class="built_in">this</span>.right.cross(<span class="built_in">this</span>.front, <span class="keyword">new</span> <span class="title class_">Vector3f</span>()).normalize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.joml.Vector3f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraPos</span>   <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>,  <span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraFront</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>, -<span class="number">3.0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Vector3f</span> <span class="variable">cameraUp</span>    <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0.0f</span>, <span class="number">1.0f</span>,  <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">deltaTime</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastFrame</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastX</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">lastY</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">firstMouse</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">yaw</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">pitch</span>  <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="variable">fov</span> <span class="operator">=</span> <span class="number">45</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Camera</span> <span class="variable">camera</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Camera</span>(<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>),<span class="keyword">new</span> <span class="title class_">Vector3f</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>),<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetInputMode(window, GLFW.GLFW_CURSOR, GLFW.GLFW_CURSOR_DISABLED);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GLFW.glfwSetCursorPosCallback(window, Main::mouseCallback);</span><br><span class="line">        GLFW.glfwSetScrollCallback(window, Main::scrollCallback);</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        Vector3f[] cubePositions = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">0.0f</span>,  <span class="number">0.0f</span>,  <span class="number">0.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.0f</span>,  <span class="number">5.0f</span>, -<span class="number">15.0f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.5f</span>, -<span class="number">2.2f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">3.8f</span>, -<span class="number">2.0f</span>, -<span class="number">12.3f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">2.4f</span>, -<span class="number">0.4f</span>, -<span class="number">3.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.7f</span>,  <span class="number">3.0f</span>, -<span class="number">7.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.3f</span>, -<span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">2.0f</span>, -<span class="number">2.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>( <span class="number">1.5f</span>,  <span class="number">0.2f</span>, -<span class="number">1.5f</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Vector3f</span>(-<span class="number">1.3f</span>,  <span class="number">1.0f</span>, -<span class="number">1.5f</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            processInput(window);</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">currentFrame</span> <span class="operator">=</span> (<span class="type">float</span>) GLFW.glfwGetTime();</span><br><span class="line">            deltaTime = currentFrame - lastFrame;</span><br><span class="line">            lastFrame = currentFrame;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective((<span class="type">float</span>) Math.toRadians(camera.zoom),SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span>  camera.getViewMatrix();</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;view&quot;</span>, view);</span><br><span class="line">            shaderProgram.setMat4(<span class="string">&quot;projection&quot;</span>, projection);</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">float</span> <span class="variable">angle</span> <span class="operator">=</span> <span class="number">20.0f</span> * i;</span><br><span class="line">                <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(cubePositions[i]).rotate(angle * <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span> ,<span class="number">0.5f</span>,<span class="number">1f</span>,<span class="number">0f</span>);</span><br><span class="line">                shaderProgram.setMat4(<span class="string">&quot;model&quot;</span>, model);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">            GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">cameraSpeed</span> <span class="operator">=</span> <span class="number">2.5f</span> * deltaTime;<span class="comment">// adjust accordingly</span></span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_W) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.FORWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_S) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.BACKWARD, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_A) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.LEFT, deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_D) == GLFW.GLFW_PRESS)</span><br><span class="line">            camera.processKeyboard(CameraMovement.RIGHT, deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mouseCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">double</span> xpos,<span class="type">double</span> ypos)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(firstMouse) <span class="comment">// 这个bool变量初始时是设定为true的</span></span><br><span class="line">        &#123;</span><br><span class="line">            lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">            lastY = (<span class="type">float</span>) ypos;</span><br><span class="line">            firstMouse = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">xoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (xpos - lastX);</span><br><span class="line">        <span class="type">float</span> <span class="variable">yoffset</span> <span class="operator">=</span> (<span class="type">float</span>) (lastY - ypos); <span class="comment">// 注意这里是相反的，因为y坐标是从底部往顶部依次增大的</span></span><br><span class="line">        lastX = (<span class="type">float</span>) xpos;</span><br><span class="line">        lastY = (<span class="type">float</span>) ypos;</span><br><span class="line"></span><br><span class="line">        camera.processMouseMovement(xoffset,yoffset,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">scrollCallback</span><span class="params">(<span class="type">long</span> window, <span class="type">double</span> xoffset, <span class="type">double</span> yoffset)</span></span><br><span class="line">    &#123;</span><br><span class="line">        camera.processMouseScroll((<span class="type">float</span>) yoffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl07坐标系统</title>
      <link href="/2023/12/10/opengl07%E5%9D%90%E6%A0%87%E7%B3%BB%E7%BB%9F/"/>
      <url>/2023/12/10/opengl07%E5%9D%90%E6%A0%87%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="坐标系统"><a href="#坐标系统" class="headerlink" title="坐标系统"></a>坐标系统</h1><ol><li><strong>局部空间(Local Space) &#x2F; 物体空间(Object Space)</strong>:<ul><li>物体自身坐标系，物体的初始位置定义在这个空间中。</li></ul></li><li><strong>世界空间(World Space)</strong>:<ul><li>物体在全局环境中的位置和方向。</li></ul></li><li><strong>观察空间(View Space) &#x2F; 视觉空间(Eye Space)</strong>:<ul><li>从摄像机或观察者的角度观察物体的空间，相当于从一个固定的视角观察物体。</li></ul></li><li><strong>裁剪空间(Clip Space)</strong>:<ul><li>坐标范围已被裁剪至可视范围内，在这里执行透视投影。</li></ul></li><li><strong>屏幕空间(Screen Space)</strong>:<ul><li>最终的2D屏幕坐标，在此处顶点被映射为屏幕上的像素。</li></ul></li></ol><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在坐标系转换中，关键是利用多个变换矩阵来将坐标从一个坐标系转换到另一个。其中，最关键的三个矩阵是模型(Model)、观察(View)、投影(Projection)矩阵。坐标的起点是局部空间（Local Space），在转换过程中它会变为局部坐标（Local Coordinate），接着变为世界坐标（World Coordinate），观察坐标（View Coordinate），裁剪坐标（Clip Coordinate），最后以屏幕坐标（Screen Coordinate）结束。</p><ol><li><strong>局部坐标</strong>：物体相对于局部原点的坐标，也是物体初始的坐标。</li><li><strong>世界坐标</strong>：将局部坐标转换为全局环境中的位置和方向。</li><li><strong>观察坐标</strong>：从观察者或摄像机的视角观察物体的坐标。</li><li><strong>裁剪坐标</strong>：裁剪至可视范围内的坐标，范围为-1.0到1.0，判断哪些顶点将呈现在屏幕上。</li><li><strong>屏幕坐标</strong>：最终映射到屏幕上的2D像素坐标。</li></ol><p>转换过程是：</p><ul><li>将局部坐标转换为世界坐标，使物体处于更大的空间范围内，相对于全局原点摆放。</li><li>将世界坐标转换为观察坐标，以观察者的角度观察物体。</li><li>将观察坐标转换为裁剪坐标，在此范围内裁剪坐标，并判断哪些顶点将呈现在屏幕上。</li><li>将裁剪坐标转换为屏幕坐标，使用视口变换将其转换到由glViewport函数定义的坐标范围内，并最终将其转化为片段。</li></ul><p><img src="https://s2.loli.net/2023/12/10/5wkbJ2RIoyWjY4U.png" alt="image-20231210211512149"></p><h2 id="局部空间"><a href="#局部空间" class="headerlink" title="局部空间"></a>局部空间</h2><p>局部空间指的是物体所处的初始坐标空间，即对象最初所在的位置。想象在建模软件（例如Blender）中创建了一个立方体。即使立方体的原点可能位于(0, 0, 0)，但在程序中，它可能会处于完全不同的位置。甚至你创建的所有模型都以(0, 0, 0)作为初始位置，但它们最终会出现在世界的不同位置。因此，模型的所有顶点都处于局部空间中：它们相对于物体都是局部的。</p><p>我们使用的那个箱子的顶点被设定在范围为-0.5到0.5的坐标范围内，其中(0, 0)是它的原点。这些坐标都是局部坐标。</p><h2 id="世界空间"><a href="#世界空间" class="headerlink" title="世界空间"></a>世界空间</h2><h2 id="观察空间"><a href="#观察空间" class="headerlink" title="观察空间"></a>观察空间</h2><h2 id="裁剪空间"><a href="#裁剪空间" class="headerlink" title="裁剪空间"></a>裁剪空间</h2><p>在顶点着色器的末尾，OpenGL希望所有坐标都落在特定范围内，超出这一范围的点会被裁剪掉。裁剪空间的名字就来自于此。</p><p>为了让坐标适应OpenGL期望的范围，我们定义自己的坐标集，并将其转换回标准化设备坐标系。</p><p>将观察空间中的顶点坐标转换到裁剪空间时，需要使用投影矩阵。投影矩阵定义了坐标的范围，比如在每个维度上的-1000到1000。它将这个范围内的坐标变换为标准化设备坐标范围(-1.0, 1.0)内。超出范围的坐标会被裁剪掉。</p><p>观察箱是由投影矩阵创建的平截头体。只有位于平截头体范围内的坐标最终会呈现在屏幕上。投影矩阵的作用在于将3D坐标投影到容易映射到2D标准化设备坐标的空间。</p><p>透视除法是将4D裁剪空间坐标转换为3D标准化设备坐标的过程，即将位置向量的x，y，z分量分别除以向量的齐次w分量。这个步骤会在顶点着色器的最后自动执行。</p><p>一旦顶点被变换到裁剪空间，坐标会映射到屏幕空间（使用glViewport指定的设置），然后转换为片段。</p><p>投影矩阵可以采用两种形式：正交投影矩阵和透视投影矩阵，每种定义了不同的平截头体，影响最终的显示效果。</p><h3 id="正射投影"><a href="#正射投影" class="headerlink" title="正射投影"></a>正射投影</h3><p>正交投影矩阵定义了一个类似立方体的平截头箱，裁剪空间之外的顶点会被裁剪掉。这种投影矩阵需要确定可见平截头体的宽、高和长度。在此平截头体内的所有坐标不会被裁剪。其平截头体看起来像容器。</p><p>平截头体由宽度、高度、近平面和远平面定义。任何在近平面之前或远平面之后的坐标都会被裁剪。正射投影将内部坐标直接映射为标准化设备坐标，因为向量的w分量没有改变；如果w分量为1.0，透视除法不会影响坐标。</p><p>使用GLM的<code>glm::ortho</code>函数创建正射投影矩阵：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cppCopy code</span><br><span class="line">glm::ortho(0.0f, 800.0f, 0.0f, 600.0f, 0.1f, 100.0f);</span><br></pre></td></tr></table></figure><p>前两个参数定义平截头体的左右坐标，接着两个参数定义底部和顶部。这四个参数确定近平面和远平面的大小，而最后两个参数确定了这两个平面的距离。该投影矩阵将指定范围内的坐标变换为标准化设备坐标。</p><p>尽管正射投影矩阵直接映射到2D平面，但实际上直接使用它会得到不真实的结果，因为没有考虑透视。这就需要透视投影矩阵来解决。</p><h3 id="透视投影"><a href="#透视投影" class="headerlink" title="透视投影"></a>透视投影</h3><p>透视效果源于现实生活中物体距离观察者的远近导致物体看起来大小不同。透视投影矩阵模拟这种效果，修改顶点坐标的w值以使远离观察者的坐标变小。OpenGL要求所有可见坐标都在-1.0到1.0之间，透视除法则将裁剪空间坐标映射到标准化设备坐标。</p><p>使用GLM的<code>glm::perspective</code>可以创建透视投影矩阵。该函数定义可视空间的大平截头体，裁剪空间外的物体将被裁剪。透视平截头体可以看作是不均匀的箱子，内部的坐标映射到裁剪空间的点。</p><p>参数设置视野大小、宽高比、平截头体的近和远平面。通常，fov值设置为45.0f获得真实感，较大的值会呈现末日风格效果。近平面通常设为0.1f，远平面设为100.0f。</p><p>正射投影直接映射到裁剪空间而不考虑透视，远处物体与近处大小相同，通常用于二维渲染或需要精确绘制的场景。某些三维建模软件如Blender有时也用正射投影，因为它准确地描绘了各个维度下的物体。在Blender中，透视投影使得远处物体看起来更小，而正射投影保持均匀大小。</p><p>这两种投影方式的对比可以在Blender中清晰看到，透视投影下，远处物体较小，而在正射投影中每个物体的大小保持一致。</p><p>投影矩阵</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">glm::mat4 proj = glm::<span class="built_in">perspective</span>(glm::<span class="built_in">radians</span>(<span class="number">45.0f</span>), (<span class="type">float</span>)width/(<span class="type">float</span>)height, <span class="number">0.1f</span>, <span class="number">100.0f</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>它的第一个参数定义了fov的值，它表示的是视野(Field of View)，并且设置了观察空间的大小。如果想要一个真实的观察效果，它的值通常设置为45.0f，但想要一个末日风格的结果你可以将其设置一个更大的值。第二个参数设置了宽高比，由视口的宽除以高所得。第三和第四个参数设置了平截头体的<strong>近</strong>和<strong>远</strong>平面。我们通常设置近距离为0.1f，而远距离设为100.0f。所有在近平面和远平面内且处于平截头体内的顶点都会被渲染。</p><h1 id="进入3D"><a href="#进入3D" class="headerlink" title="进入3D"></a>进入3D</h1><p>在进行3D绘图前，我们创建模型矩阵实现位移、缩放和旋转操作，将顶点变换到世界空间。观察矩阵则模拟摄像机移动，让整个场景移动到相反的方向。OpenGL使用右手坐标系，其中x轴在右侧，y轴向上，z轴朝后。为了理解右手坐标系，可以尝试使用右臂的手指指向不同方向。</p><p>模型矩阵通过旋转使平面向地板倾斜，观察矩阵则沿z轴负方向移动场景，模拟后退感。投影矩阵用于透视投影，在顶点着色器中将顶点坐标乘以这些矩阵完成变换。Uniform变量将这些矩阵传递给着色器，允许顶点坐标进行变换。</p><p>最终物体：</p><ul><li>会稍微向后倾斜至地板方向。</li><li>与观察者有一定距离。</li><li>具有透视效果，离观察者越远，物体越小。</li></ul><p>这种设置可以让一个平面看起来像一个静止的3D对象放在虚构的地板上</p><p>java代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">FloatBuffer</span> <span class="variable">modelBuffer</span> <span class="operator">=</span> BufferUtils.createFloatBuffer(<span class="number">16</span>); <span class="comment">// Assuming a 4x4 matrix</span></span><br><span class="line"><span class="type">FloatBuffer</span> <span class="variable">viewBuffer</span> <span class="operator">=</span> BufferUtils.createFloatBuffer(<span class="number">16</span>); <span class="comment">// Assuming a 4x4 matrix</span></span><br><span class="line"><span class="type">FloatBuffer</span> <span class="variable">ProjectionBuffer</span> <span class="operator">=</span> BufferUtils.createFloatBuffer(<span class="number">16</span>); <span class="comment">// Assuming a 4x4 matrix</span></span><br><span class="line"><span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().rotate(-<span class="number">55f</span> * <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span> ,<span class="number">1f</span>,<span class="number">0f</span>,<span class="number">0f</span>);</span><br><span class="line"><span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(<span class="number">0f</span>,<span class="number">0f</span>,-<span class="number">3f</span>);</span><br><span class="line"><span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective(<span class="number">45f</span>* <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span>,SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">model.get(modelBuffer);</span><br><span class="line">view.get(viewBuffer);</span><br><span class="line">projection.get(ProjectionBuffer);</span><br><span class="line"></span><br><span class="line">shaderProgram.use();</span><br><span class="line">shaderProgram.setFloat(<span class="string">&quot;mixValue&quot;</span>, mixValue);</span><br><span class="line"></span><br><span class="line">glUniformMatrix4fv(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;model&quot;</span>), <span class="literal">false</span>, modelBuffer);</span><br><span class="line">glUniformMatrix4fv(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;view&quot;</span>), <span class="literal">false</span>, viewBuffer);</span><br><span class="line">glUniformMatrix4fv(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;projection&quot;</span>), <span class="literal">false</span>, ProjectionBuffer);</span><br></pre></td></tr></table></figure><h2 id="更加-3D"><a href="#更加-3D" class="headerlink" title="更加 3D"></a>更加 3D</h2><p>我们扩展了2D平面到一个3D立方体，用36个顶点绘制，每个面有两个三角形组成。为了增加趣味性，我们让立方体随时间旋转，并使用<code>glDrawArrays</code>绘制这个立方体。</p><p>然而，可能观察到一些奇怪的效果，如某些面看起来未被正确遮挡。这是因为OpenGL以三角形为单位绘制立方体，有些三角形可能被错误地渲染在其他三角形上方，导致未预期的结果。</p><p>幸运的是，OpenGL使用Z缓冲存储深度信息，这允许进行深度测试。通过配置OpenGL进行深度测试，可以让它在绘制时根据深度信息决定何时覆盖像素。</p><h3 id="Z缓冲"><a href="#Z缓冲" class="headerlink" title="Z缓冲"></a>Z缓冲</h3><p>OpenGL利用Z缓冲（也称为深度缓冲）存储深度信息。这个缓冲类似颜色缓冲，GLFW会自动生成它。深度值存储在每个片段中作为片段的z值。在渲染过程中，OpenGL会比较当前片段的深度值与Z缓冲中的值，如果当前片段在Z轴上在其他片段之后，它将会被绘制，否则将被丢弃。这个过程被称为深度测试，OpenGL自动执行它。</p><p>为了确保深度测试被执行，需要显式告诉OpenGL启用深度测试。默认情况下是关闭的，可以使用<code>glEnable</code>函数启用深度测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cCopy code</span><br><span class="line">glEnable(GL_DEPTH_TEST);</span><br></pre></td></tr></table></figure><p>同时，我们也希望在每次渲染迭代前清除深度缓冲，以避免前一帧的深度信息干扰当前渲染。类似清除颜色缓冲，使用<code>glClear</code>函数并指定<code>GL_DEPTH_BUFFER_BIT</code>位来清除深度缓冲：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cCopy code</span><br><span class="line">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br></pre></td></tr></table></figure><p>这样的设置下，可以看到一个开启深度测试的效果，各个面都被正确绘制纹理，并且立方体在旋转！如果你的程序有问题，可以下载源代码进行比对。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line"></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, -<span class="number">0.5f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span>[] indices = &#123;</span><br><span class="line">                <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// first triangle</span></span><br><span class="line">                <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// second triangle</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">2</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">5</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">mixValue</span> <span class="operator">=</span> <span class="number">0.2f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开日Z缓冲</span></span><br><span class="line">        glEnable(GL_DEPTH_TEST);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_UP) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue += <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span>(mixValue &gt;= <span class="number">1.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">1.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_DOWN) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue -= <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span> (mixValue &lt;= <span class="number">0.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">0.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">FloatBuffer</span> <span class="variable">modelBuffer</span> <span class="operator">=</span> BufferUtils.createFloatBuffer(<span class="number">16</span>); <span class="comment">// Assuming a 4x4 matrix</span></span><br><span class="line">            <span class="type">FloatBuffer</span> <span class="variable">viewBuffer</span> <span class="operator">=</span> BufferUtils.createFloatBuffer(<span class="number">16</span>); <span class="comment">// Assuming a 4x4 matrix</span></span><br><span class="line">            <span class="type">FloatBuffer</span> <span class="variable">ProjectionBuffer</span> <span class="operator">=</span> BufferUtils.createFloatBuffer(<span class="number">16</span>); <span class="comment">// Assuming a 4x4 matrix</span></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().rotate((<span class="type">float</span>) GLFW.glfwGetTime() * <span class="number">50f</span> * <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span> ,<span class="number">0.5f</span>,<span class="number">1f</span>,<span class="number">0f</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">view</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().translate(<span class="number">0f</span>,<span class="number">0f</span>,-<span class="number">3f</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">projection</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>().perspective(<span class="number">45f</span>* <span class="number">2f</span> * <span class="number">3.14f</span>/<span class="number">360f</span>,SCR_WIDTH/SCR_HEIGHT,<span class="number">0.1f</span>,<span class="number">100f</span>);</span><br><span class="line">            model.get(modelBuffer);</span><br><span class="line">            view.get(viewBuffer);</span><br><span class="line">            projection.get(ProjectionBuffer);</span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;mixValue&quot;</span>, mixValue);</span><br><span class="line"></span><br><span class="line">            glUniformMatrix4fv(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;model&quot;</span>), <span class="literal">false</span>, modelBuffer);</span><br><span class="line">            glUniformMatrix4fv(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;view&quot;</span>), <span class="literal">false</span>, viewBuffer);</span><br><span class="line">            glUniformMatrix4fv(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;projection&quot;</span>), <span class="literal">false</span>, ProjectionBuffer);</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">36</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顶点着色器</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">0</span>) <span class="keyword">in</span> <span class="type">vec3</span> aPos;   <span class="comment">// 位置变量的属性位置值为 0</span></span><br><span class="line"><span class="comment">//layout (location = 1) in vec3 aColor; // 颜色变量的属性位置值为 1</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">1</span>) <span class="keyword">in</span> <span class="type">vec2</span> aTexCoord;</span><br><span class="line"></span><br><span class="line"><span class="comment">//out vec3 ourColor; // 向片段着色器输出一个颜色</span></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec2</span> TexCoord;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> model;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> view;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> projection;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">gl_Position</span> = projection * view * model * <span class="type">vec4</span>(aPos, <span class="number">1.0</span>);</span><br><span class="line"><span class="comment">//    ourColor = aColor; // 将ourColor设置为我们从顶点数据那里得到的输入颜色</span></span><br><span class="line">    TexCoord = aTexCoord;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>片段着色器</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="comment">//in vec3 ourColor;</span></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoord;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> texture1;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> texture2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">float</span> mixValue;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    FragColor = <span class="built_in">mix</span>(<span class="built_in">texture</span>(texture1, TexCoord), <span class="built_in">texture</span>(texture2, <span class="type">vec2</span>(<span class="number">1.0</span>-TexCoord.x,TexCoord.y)), mixValue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更多的立方体！"><a href="#更多的立方体！" class="headerlink" title="更多的立方体！"></a>更多的立方体！</h3><p>我们想在屏幕上显示10个立方体，它们的外观相同，区别在于位置和旋转角度。我们已经定义了立方体的图形布局，所以渲染更多物体时无需更改缓冲数组和属性数组，只需改变每个对象的模型矩阵即可将立方体变换到世界坐标系中。</p><p>首先，为每个立方体定义一个位移向量，指定它在世界空间的位置。我们将使用一个<code>glm::vec3</code>数组定义10个立方体的位置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cppCopy codeglm::vec3 cubePositions[] = &#123;</span><br><span class="line">    glm::vec3( 0.0f,  0.0f,  0.0f), </span><br><span class="line">    glm::vec3( 2.0f,  5.0f, -15.0f), </span><br><span class="line">    // 更多位置...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在游戏循环中，我们调用<code>glDrawArrays</code> 10次，每次在渲染之前传入一个不同的模型矩阵到顶点着色器中。使用一个小循环，在每次渲染时更新模型矩阵并渲染10个物体。对每个立方体增加了一些旋转：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cppCopy codeglBindVertexArray(VAO);</span><br><span class="line">for(unsigned int i = 0; i &lt; 10; i++)</span><br><span class="line">&#123;</span><br><span class="line">    glm::mat4 model;</span><br><span class="line">    model = glm::translate(model, cubePositions[i]);</span><br><span class="line">    float angle = 20.0f * i; </span><br><span class="line">    model = glm::rotate(model, glm::radians(angle), glm::vec3(1.0f, 0.3f, 0.5f));</span><br><span class="line">    ourShader.setMat4(&quot;model&quot;, model);</span><br><span class="line"></span><br><span class="line">    glDrawArrays(GL_TRIANGLES, 0, 36);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码将会在每次新的立方体绘制时更新模型矩阵，重复10次。这样就能看到10个立方体，每个都在以奇特的角度旋转。</p><p>这看起来不错！立方体们找到了他们的伙伴。如果你在实现这部分时遇到问题，可以参考源代码进行对比。</p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>练习3：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">float angle =  i%3==0?20.0f * (i+1)  * (float)GLFW.glfwGetTime():20.0f * (i+1);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl06变换</title>
      <link href="/2023/12/10/opengl06%E5%8F%98%E6%8D%A2/"/>
      <url>/2023/12/10/opengl06%E5%8F%98%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="变换"><a href="#变换" class="headerlink" title="变换"></a>变换</h1><p>强调了使用矩阵进行变换的重要性，并暗示了它们作为处理物体移动的更有效方法。它指出了矩阵作为数学工具的重要性.</p><p>关于向量和矩阵的理解是图形编程中的基础，它们用于描述和控制物体在三维空间中的位置、旋转和缩放。即使对初学者来说，这些概念可能有些复杂，但它们是非常有用的工具。</p><h1 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h1><ol><li><strong>向量基本定义：</strong><ul><li>向量具有方向和大小，可以理解为指示方向和长度的箭头。</li><li>向量可在任意维度上存在，但通常用于二至四维空间。二维向量对应平面方向，三维向量可表示三维空间方向。</li></ul></li><li><strong>向量的表示和理解：</strong><ul><li>用箭头 <code>(x, y)</code> 在二维图中展示向量。在二维图像中表示向量更直观。</li><li>数学上通常使用带上箭头的字母来表示向量（例如：𝑣¯）。</li></ul></li><li><strong>位置向量：</strong><ul><li>为了更形象地表示方向，将向量起点设为原点（0, 0）并指向某一点，形成位置向量（也可从其他点起始指向另一点）。</li></ul></li><li><strong>向量运算：</strong><ul><li>向量支持多种运算，类似于数字运算，包括加法、减法、数乘等。</li></ul></li></ol><h2 id="向量与标量运算"><a href="#向量与标量运算" class="headerlink" title="向量与标量运算"></a>向量与标量运算</h2><h2 id="向量取反"><a href="#向量取反" class="headerlink" title="向量取反"></a>向量取反</h2><h2 id="向量加减"><a href="#向量加减" class="headerlink" title="向量加减"></a>向量加减</h2><h2 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h2><h2 id="向量相乘"><a href="#向量相乘" class="headerlink" title="向量相乘"></a>向量相乘</h2><h3 id="点乘"><a href="#点乘" class="headerlink" title="点乘"></a>点乘</h3><h3 id="叉乘"><a href="#叉乘" class="headerlink" title="叉乘"></a>叉乘</h3><h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><h2 id="矩阵的加减"><a href="#矩阵的加减" class="headerlink" title="矩阵的加减"></a>矩阵的加减</h2><h2 id="矩阵的数乘"><a href="#矩阵的数乘" class="headerlink" title="矩阵的数乘"></a>矩阵的数乘</h2><h2 id="矩阵相乘"><a href="#矩阵相乘" class="headerlink" title="矩阵相乘"></a>矩阵相乘</h2><h1 id="矩阵与向量相乘"><a href="#矩阵与向量相乘" class="headerlink" title="矩阵与向量相乘"></a>矩阵与向量相乘</h1><h2 id="单位矩阵"><a href="#单位矩阵" class="headerlink" title="单位矩阵"></a>单位矩阵</h2><h2 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h2><p>这段内容总结了对向量进行缩放的概念，介绍了缩放的基本原理和使用缩放矩阵进行变换的方法。</p><ol><li><strong>向量的缩放操作：</strong><ul><li>缩放一个向量就是改变它的长度，而保持其方向不变。</li><li>在2D或3D操作中，可以分别对每个轴（x、y或z）定义一个缩放因子，以改变向量在该轴上的长度。</li></ul></li><li><strong>非均匀缩放和均匀缩放：</strong><ul><li>非均匀缩放是每个轴的缩放因子不同，导致在每个方向上的缩放不同。</li><li>均匀缩放是每个轴的缩放因子相同，使得在所有方向上的缩放都一致。</li></ul></li><li><strong>缩放矩阵：</strong><ul><li>通过构建缩放矩阵，可以对向量进行缩放操作。矩阵对角线上的元素分别与向量对应元素相乘，实现向量的缩放。</li><li>缩放矩阵可以将任意向量 (x, y, z) 缩放为 (S1 * x, S2 * y, S3 * z)，注意最后的分量仍然为1（在3D空间中对w分量的缩放通常是没有意义的）。</li></ul></li></ol><p><img src="https://s2.loli.net/2023/12/10/CpFIXOvRUMjxg1L.png" alt="image-20231210170543614"></p><h2 id="位移"><a href="#位移" class="headerlink" title="位移"></a>位移</h2><ol><li><strong>位移操作：</strong><ul><li>位移是在原始向量基础上加上另一个向量，使得得到一个新的向量在不同位置上。</li><li>这是向量加法的一种运用，用来移动原始向量到另一个位置。</li></ul></li><li><strong>位移矩阵：</strong><ul><li>在4×4矩阵中，位移矩阵的特殊位置是第四列最上面的3个值。</li><li>位移矩阵可以用来对向量进行位移操作，将位移向量 (Tx, Ty, Tz) 加到原始向量上，即 (x + Tx, y + Ty, z + Tz)。</li></ul></li><li><strong>齐次坐标（Homogeneous Coordinates）：</strong><ul><li>向量的第四个分量w，也称为齐次坐标，是一种特殊的坐标。</li><li>通过齐次坐标，可以将齐次向量转换为三维向量，方法是将x、y和z坐标分别除以w坐标。</li><li>齐次坐标的好处是允许在3D空间进行向量的位移操作。</li></ul></li><li><strong>方向向量和位移矩阵的作用：</strong><ul><li>当一个向量的齐次坐标w为0时，它是一个方向向量，因为它不会进行位移操作。</li><li>位移矩阵是变换工具箱中的重要一环，用于在三个方向（x、y、z）上移动物体。</li></ul></li></ol><h2 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h2><ol><li><strong>旋转概念：</strong><ul><li>旋转是用角度来表示的，可以是角度制或弧度制。</li><li>通过三角学，可以将一个向量绕特定轴旋转特定角度。</li></ul></li><li><strong>旋转表示方法：</strong><ul><li>在2D空间中，旋转可以用角度来描述，例如右旋转72度。</li><li>在3D空间中，旋转需要定义一个角度和旋转轴，比如绕z轴旋转。</li></ul></li><li><strong>旋转矩阵：</strong><ul><li>旋转矩阵是用来在3D空间中进行旋转操作的工具。</li><li>不同轴的旋转矩阵定义了绕x、y、z轴旋转的方式，其中θ表示旋转角度。</li></ul></li><li><strong>万向节死锁和四元数：</strong><ul><li>多次对旋转矩阵进行复合可能导致万向节死锁问题，这是一种旋转约束的问题。</li><li>解决万向节死锁问题的方法之一是使用四元数，它更安全且计算效率更高，但对数学要求较高。</li></ul></li></ol><p><img src="https://s2.loli.net/2023/12/10/9MSDeJw18dybn3W.png" alt="image-20231210172000361"></p><p><img src="https://s2.loli.net/2023/12/10/xwvoASUjkfDLqtQ.png" alt="image-20231210172014246"></p><h2 id="矩阵的组合"><a href="#矩阵的组合" class="headerlink" title="矩阵的组合"></a>矩阵的组合</h2><ol><li><strong>矩阵组合：</strong><ul><li>通过矩阵相乘，可以将多个变换操作组合成一个矩阵，实现对顶点的复合变换。</li><li>顺序很重要，因为矩阵乘法不遵守交换律，操作的顺序影响最终的变换效果。</li></ul></li><li><strong>示例：</strong><ul><li>如果我们要对一个顶点进行缩放2倍，然后再位移(1, 2, 3)个单位，可以将这两个变换操作合并到一个矩阵中。</li><li>结果的变换矩阵是先位移矩阵再缩放矩阵的乘积。</li><li>在应用这个变换矩阵到一个顶点时，将该顶点乘以这个变换矩阵会得到最终的变换结果。</li></ul></li></ol><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><p>现在我们已经解释了变换背后的所有理论，是时候将这些知识利用起来了。OpenGL没有自带任何的矩阵和向量知识，所以我们必须定义自己的数学类和函数。在教程中我们更希望抽象所有的数学细节，使用已经做好了的数学库。幸运的是，有个易于使用，专门为OpenGL量身定做的数学库，那就是GLM。</p><h2 id="GLM"><a href="#GLM" class="headerlink" title="GLM"></a>GLM</h2><p>使用这个：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://mvnrepository.com/artifact/org.joml/joml</span></span><br><span class="line">    implementation <span class="string">&#x27;org.joml:joml:1.10.5&#x27;</span></span><br></pre></td></tr></table></figure><ol><li><strong>GLM库简介</strong>:<ul><li>GLM是OpenGL Mathematics的缩写，是一个只有头文件的库，无需链接和编译，可以从官网下载。</li><li>下载后，将头文件的根目录复制到项目的includes文件夹中，即可使用该库。</li></ul></li><li><strong>GLM版本差异</strong>:<ul><li>从0.9.9版本开始，GLM默认将矩阵类型初始化为零矩阵而不是单位矩阵。</li><li>如果使用0.9.9或更高版本，需要将所有矩阵初始化改为 <code>glm::mat4(1.0f)</code>。</li></ul></li><li><strong>GLM功能</strong>:<ul><li>GLM的大多数功能都在以下三个头文件中：<code>&lt;glm/glm.hpp&gt;</code>, <code>&lt;glm/gtc/matrix_transform.hpp&gt;</code>, <code>&lt;glm/gtc/type_ptr.hpp&gt;</code>。</li></ul></li><li><strong>向量和矩阵变换</strong>:<ul><li>通过GLM进行向量和矩阵变换的例子：如何将向量 (1, 0, 0) 进行位移 (1, 1, 0) 个单位。</li><li>使用 <code>glm::vec4</code> 和 <code>glm::mat4</code> 来定义向量和矩阵，使用 <code>glm::translate</code> 进行位移操作。</li></ul></li><li><strong>旋转和缩放</strong>:<ul><li>展示如何对一个对象进行逆时针旋转90度和缩小为原来的一半。</li><li>使用 <code>glm::rotate</code> 和 <code>glm::scale</code> 来实现旋转和缩放操作。</li></ul></li><li><strong>矩阵传递给着色器</strong>:<ul><li>修改顶点着色器，使其接收 <code>mat4</code> 类型的 uniform 变量。</li><li>使用 <code>glUniformMatrix4fv</code> 函数将变换矩阵数据传递给着色器。</li></ul></li><li><strong>动态更新变换</strong>:<ul><li>在游戏循环中更新变换矩阵，以实现对象随时间旋转和移动的效果。</li><li>使用 <code>glfwGetTime()</code> 获取不同时间点的角度，动态更新变换矩阵。</li></ul></li><li><strong>总结和下一步</strong>:<ul><li>矩阵在图形领域中是重要的工具，能够组合多个变换为一个矩阵并重复使用。</li><li>在着色器中使用矩阵可以节省处理时间，避免重新定义顶点数据。</li></ul></li></ol><p>java代码1 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.IntBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="comment">// positions          // colors           // texture coords</span></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="comment">// top right</span></span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom right</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom left</span></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>  <span class="comment">// top left</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span>[] indices = &#123;</span><br><span class="line">                <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// first triangle</span></span><br><span class="line">                <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// second triangle</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,EBO);</span><br><span class="line">        glBufferData(GL_ELEMENT_ARRAY_BUFFER,indices,GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">mixValue</span> <span class="operator">=</span> <span class="number">0.2f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Matrix4f</span> <span class="variable">trans</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>();</span><br><span class="line">        trans =  trans.rotate(<span class="number">3.14f</span>/<span class="number">2f</span>,<span class="number">0f</span>,<span class="number">0f</span>,<span class="number">1f</span>);</span><br><span class="line">        trans = trans.scale(<span class="number">0.5f</span>,<span class="number">0.5f</span>,<span class="number">0.5f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">FloatBuffer</span> <span class="variable">buffer</span> <span class="operator">=</span> BufferUtils.createFloatBuffer(<span class="number">16</span>); <span class="comment">// Assuming a 4x4 matrix</span></span><br><span class="line">        trans.get(buffer); <span class="comment">// Assuming &#x27;trans&#x27; is a FloatBuffer containing the matrix data</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_UP) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue += <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span>(mixValue &gt;= <span class="number">1.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">1.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_DOWN) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue -= <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span> (mixValue &lt;= <span class="number">0.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">0.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;mixValue&quot;</span>, mixValue);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">transformLoc</span> <span class="operator">=</span> glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;transform&quot;</span>);</span><br><span class="line">            glUniformMatrix4fv(transformLoc, <span class="literal">false</span>, buffer);</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawElements(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>glsl</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> ourColor;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoord;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> texture1;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> texture2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">float</span> mixValue;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    FragColor = <span class="built_in">mix</span>(<span class="built_in">texture</span>(texture1, TexCoord), <span class="built_in">texture</span>(texture2, <span class="type">vec2</span>(<span class="number">1.0</span>-TexCoord.x,TexCoord.y)), mixValue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java渲染代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.IntBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="comment">// positions          // colors           // texture coords</span></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="comment">// top right</span></span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom right</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom left</span></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>  <span class="comment">// top left</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span>[] indices = &#123;</span><br><span class="line">                <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// first triangle</span></span><br><span class="line">                <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// second triangle</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,EBO);</span><br><span class="line">        glBufferData(GL_ELEMENT_ARRAY_BUFFER,indices,GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">mixValue</span> <span class="operator">=</span> <span class="number">0.2f</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_UP) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue += <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span>(mixValue &gt;= <span class="number">1.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">1.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_DOWN) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue -= <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span> (mixValue &lt;= <span class="number">0.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">0.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">trans</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>();</span><br><span class="line">            trans = trans.scale(<span class="number">0.5f</span>,<span class="number">0.5f</span>,<span class="number">0f</span>);</span><br><span class="line">            trans =  trans.rotate((<span class="type">float</span>) GLFW.glfwGetTime(),<span class="number">0f</span>,<span class="number">0f</span>,<span class="number">1f</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">FloatBuffer</span> <span class="variable">buffer</span> <span class="operator">=</span> BufferUtils.createFloatBuffer(<span class="number">16</span>); <span class="comment">// Assuming a 4x4 matrix</span></span><br><span class="line"></span><br><span class="line">            trans.get(buffer); <span class="comment">// Assuming &#x27;trans&#x27; is a FloatBuffer containing the matrix data</span></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;mixValue&quot;</span>, mixValue);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">transformLoc</span> <span class="operator">=</span> glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;transform&quot;</span>);</span><br><span class="line">            glUniformMatrix4fv(transformLoc, <span class="literal">false</span>, buffer);</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawElements(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>练习2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joml.Matrix4f;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.BufferUtils;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.FloatBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.IntBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="comment">// positions          // colors           // texture coords</span></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="comment">// top right</span></span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom right</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom left</span></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>  <span class="comment">// top left</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span>[] indices = &#123;</span><br><span class="line">                <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// first triangle</span></span><br><span class="line">                <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// second triangle</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,EBO);</span><br><span class="line">        glBufferData(GL_ELEMENT_ARRAY_BUFFER,indices,GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">mixValue</span> <span class="operator">=</span> <span class="number">0.2f</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_UP) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue += <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span>(mixValue &gt;= <span class="number">1.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">1.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_DOWN) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue -= <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span> (mixValue &lt;= <span class="number">0.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">0.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">trans</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>();</span><br><span class="line">            trans = trans.scale(<span class="number">0.5f</span>,<span class="number">0.5f</span>,<span class="number">0f</span>);</span><br><span class="line">            trans =  trans.rotate((<span class="type">float</span>) GLFW.glfwGetTime(),<span class="number">0f</span>,<span class="number">0f</span>,<span class="number">1f</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">FloatBuffer</span> <span class="variable">buffer</span> <span class="operator">=</span> BufferUtils.createFloatBuffer(<span class="number">16</span>); <span class="comment">// Assuming a 4x4 matrix</span></span><br><span class="line"></span><br><span class="line">            trans.get(buffer); <span class="comment">// Assuming &#x27;trans&#x27; is a FloatBuffer containing the matrix data</span></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;mixValue&quot;</span>, mixValue);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">transformLoc</span> <span class="operator">=</span> glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;transform&quot;</span>);</span><br><span class="line">            glUniformMatrix4fv(transformLoc, <span class="literal">false</span>, buffer);</span><br><span class="line"></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawElements(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br><span class="line">            <span class="type">Matrix4f</span> <span class="variable">trans2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix4f</span>();</span><br><span class="line">            trans2 = trans2.translate(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>).scale(<span class="number">0.5f</span>,<span class="number">0.5f</span>,<span class="number">0f</span>);</span><br><span class="line">            trans2.get(buffer);</span><br><span class="line">            glUniformMatrix4fv(transformLoc, <span class="literal">false</span>, buffer);</span><br><span class="line"></span><br><span class="line">            glDrawElements(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl05纹理</title>
      <link href="/2023/12/09/opengl05%E7%BA%B9%E7%90%86/"/>
      <url>/2023/12/09/opengl05%E7%BA%B9%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="纹理"><a href="#纹理" class="headerlink" title="纹理"></a>纹理</h1><p>纹理是一种可以用来为三维物体添加细节的图片。纹理可以让物体看起来更真实，而不需要为每个顶点指定额外的颜色。</p><p>纹理坐标是纹理中的一个点的位置。纹理坐标的范围是从 0 到 1，其中 0 表示纹理的左下角，1 表示纹理的右上角。</p><p>为了将纹理映射到三维物体上，我们需要为每个顶点指定一个纹理坐标。纹理坐标告诉渲染器从纹理中采样哪个点的颜色。</p><p>例如，如果我们有一个三角形，左下角的顶点纹理坐标为 (0, 0)，右下角的顶点纹理坐标为 (1, 0)，上部的顶点纹理坐标为 (0.5, 1.0)。那么，渲染器将从纹理的左下角采样左下角顶点的颜色，从纹理的右下角采样右下角顶点的颜色，从纹理的中间上部采样上部的顶点的颜色。<img src="https://s2.loli.net/2023/12/09/HqkEIhvBwPWd3fL.png" alt="image-20231209222639052"></p><p>纹理采样可以采用不同的插值方式。最常见的插值方式是线性插值，它会根据纹理坐标的值来计算采样点的颜色。</p><p>例如，如果纹理坐标为 (0.5, 0.5)，那么线性插值将计算左下角和右上角两个点的颜色的平均值作为采样点的颜色。</p><p>我们可以使用 OpenGL 来指定纹理采样的插值方式。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> texCoords[] = &#123;</span><br><span class="line">    <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="comment">// 左下角</span></span><br><span class="line">    <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="comment">// 右下角</span></span><br><span class="line">    <span class="number">0.5f</span>, <span class="number">1.0f</span> <span class="comment">// 上中</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="纹理环绕方式"><a href="#纹理环绕方式" class="headerlink" title="纹理环绕方式"></a>纹理环绕方式</h2><p>纹理坐标通常是从 (0, 0) 到 (1, 1) 之间的浮点数。如果纹理坐标超出这个范围，OpenGL 会根据纹理环绕方式 (wrapping mode) 来处理。</p><ul><li><p><strong>GL_REPEAT</strong>：重复纹理图像。</p></li><li><p><strong>GL_MIRRORED_REPEAT</strong>：重复纹理图像，每次重复时镜像放置。</p></li><li><p><strong>GL_CLAMP_TO_EDGE</strong>：纹理坐标会被约束在 0 到 1 之间，超出的部分会重复纹理坐标的边缘。</p></li><li><p><strong>GL_CLAMP_TO_BORDER</strong>：超出的坐标为用户指定的边缘颜色。</p><p><img src="https://s2.loli.net/2023/12/09/vInJwS86qrNkKlW.png" alt="image-20231209223142879"></p></li></ul><p>要设置纹理环绕方式，可以使用 glTexParameteri() 函数。例如，以下代码将纹理环绕方式设置为 GL_MIRRORED_REPEAT：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);</span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);</span><br></pre></td></tr></table></figure><p>第一个参数指定了纹理目标；我们使用的是2D纹理，因此纹理目标是GL_TEXTURE_2D。第二个参数需要我们指定设置的选项与应用的纹理轴。我们打算配置的是<code>WRAP</code>选项，并且指定<code>S</code>和<code>T</code>轴。最后一个参数需要我们传递一个环绕方式(Wrapping)</p><p>如果选择 GL_CLAMP_TO_BORDER 纹理环绕方式，还需要指定边缘颜色。可以使用 glTexParameterfv() 函数来指定边缘颜色。例如，以下代码将边缘颜色设置为红色：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> borderColor[] = &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125;;</span><br><span class="line"><span class="built_in">glTexParameterfv</span>(GL_TEXTURE_2D, GL_TEXTURE_BORDER_COLOR, borderColor);</span><br></pre></td></tr></table></figure><h2 id="纹理过滤"><a href="#纹理过滤" class="headerlink" title="纹理过滤"></a>纹理过滤</h2><p>纹理坐标不依赖于分辨率，它可以是任意浮点值。所以 OpenGL 需要知道如何将纹理像素映射到纹理坐标。当你有一个很大的物体但是纹理的分辨率很低的时候这就变得很重要了。</p><p>OpenGL也有对于纹理过滤(Texture Filtering)的选项,讨论最重要的两种：GL_NEAREST和GL_LINEAR。</p><ul><li><strong>GL_NEAREST</strong>（也叫邻近过滤）：选择中心点最接近纹理坐标的那个像素。</li><li><strong>GL_LINEAR</strong>（也叫线性过滤）：基于纹理坐标附近的纹理像素，计算出一个插值，近似出这些纹理像素之间的颜色。</li></ul><p>当进行放大(Magnify)和缩小(Minify)操作的时候可以设置纹理过滤的选项,比如你可以在纹理被缩小的时候使用邻近过滤，被放大时使用线性过滤。我们需要使用glTexParameter*函数为放大和缩小指定过滤方式。这段代码看起来会和纹理环绕方式的设置很相似：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);</span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br></pre></td></tr></table></figure><h3 id="多级渐远纹理"><a href="#多级渐远纹理" class="headerlink" title="多级渐远纹理"></a>多级渐远纹理</h3><p>要使用多级渐远纹理，需要使用 glGenerateMipmaps() 函数。该函数会自动为纹理创建一系列多级渐远纹理。</p><p>在渲染中，可以使用 glTexParameteri() 函数来指定纹理过滤方式。当纹理被缩小时，可以使用 GL_LINEAR_MIPMAP_LINEAR 选项来获得更平滑的效果。</p><p>在渲染中，当纹理与观察者的距离超过一定的阈值时，OpenGL 会使用更低分辨率的多级渐远纹理。但是，在两个不同级别的多级渐远纹理之间会产生不真实的生硬边界。</p><ul><li><p><strong>GL_NEAREST_MIPMAP_NEAREST</strong>：使用最邻近的多级渐远纹理来匹配像素大小，并使用邻近插值进行纹理采样。</p></li><li><p><strong>GL_LINEAR_MIPMAP_NEAREST</strong>：使用最邻近的多级渐远纹理级别，并使用线性插值进行纹理采样。</p></li><li></li><li><p><strong>GL_NEAREST_MIPMAP_LINEAR</strong>：在两个最匹配像素大小的多级渐远纹理之间进行线性插值，使用邻近插值进行采样。</p></li><li></li><li><p><strong>GL_LINEAR_MIPMAP_LINEAR</strong>：在两个邻近的多级渐远纹理之间使用线性插值，并使用线性插值进行采样。</p></li></ul><p>要使用多级渐远纹理过滤，需要使用 glTexParameteri() 函数来指定纹理过滤方式。例如，以下代码将使用 <strong>GL_LINEAR_MIPMAP_LINEAR</strong> 过滤方式：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 将放大过滤的选项设置为多级渐远纹理过滤选项之一是无效的。因为多级渐远纹理主要是使用在纹理被缩小的情况下的。</p><h1 id="加载与创建纹理"><a href="#加载与创建纹理" class="headerlink" title="加载与创建纹理"></a>加载与创建纹理</h1><p>使用图形加载库加载我们的纹理图片：</p><p>这里使用LWJGL加载图片</p><h2 id="生成纹理"><a href="#生成纹理" class="headerlink" title="生成纹理"></a>生成纹理</h2><p>在 OpenGL 中，纹理是使用 ID 引用的。纹理可以使用 glGenTextures() 函数创建，并使用 glBindTexture() 函数绑定。</p><p>要将纹理图像加载到纹理中，可以使用 glTexImage2D() 函数。该函数需要以下参数：</p><ul><li>纹理目标 (Target)：指定纹理在哪个目标上。通常使用 GL_TEXTURE_2D 表示 2D 纹理。</li><li>多级渐远纹理级别 (Level)：指定纹理的级别。0 表示基本级别。</li><li>纹理格式 (Internal Format)：指定纹理使用的格式。</li><li>纹理宽度 (Width)：纹理的宽度。</li><li>纹理高度 (Height)：纹理的高度。</li><li>边缘像素值 (Border)：在纹理边缘填充的像素值。通常使用 0。</li><li>图像格式 (Format)：图像的格式。</li><li>图像数据类型 (Type)：图像的数据类型。</li><li>图像数据：纹理图像的数据。</li></ul><p>要生成多级渐远纹理，可以使用 glGenerateMipmap() 函数。该函数会自动生成纹理的所有多级渐远纹理。</p><p>要释放纹理图像的内存，可以使用 stbi_image_free() 函数。</p><p>生成一个纹理的过程应该看起来像这样：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> texture;</span><br><span class="line"><span class="built_in">glGenTextures</span>(<span class="number">1</span>, &amp;texture);</span><br><span class="line"><span class="built_in">glBindTexture</span>(GL_TEXTURE_2D, texture);</span><br><span class="line"><span class="comment">// 为当前绑定的纹理对象设置环绕、过滤方式</span></span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);   </span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);</span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br><span class="line"><span class="comment">// 加载并生成纹理</span></span><br><span class="line"><span class="type">int</span> width, height, nrChannels;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> *data = <span class="built_in">stbi_load</span>(<span class="string">&quot;container.jpg&quot;</span>, &amp;width, &amp;height, &amp;nrChannels, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (data)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">glTexImage2D</span>(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGB, width, height, <span class="number">0</span>, GL_RGB, GL_UNSIGNED_BYTE, data);</span><br><span class="line">    <span class="built_in">glGenerateMipmap</span>(GL_TEXTURE_2D);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Failed to load texture&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">stbi_image_free</span>(data);</span><br></pre></td></tr></table></figure><h2 id="应用纹理"><a href="#应用纹理" class="headerlink" title="应用纹理"></a>应用纹理</h2><p>在本部分中，我们将使用 glDrawElements 绘制 “你好，三角形” 教程最后一部分的矩形。我们需要告诉 OpenGL 如何采样纹理，所以我们必须使用纹理坐标更新顶点数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> vertices[] = &#123;</span><br><span class="line"><span class="comment">//     ---- 位置 ----       ---- 颜色 ----     - 纹理坐标 -</span></span><br><span class="line">     <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>,   <span class="comment">// 右上</span></span><br><span class="line">     <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="comment">// 右下</span></span><br><span class="line">    <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="comment">// 左下</span></span><br><span class="line">    <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>    <span class="comment">// 左上</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/12/09/WthzKTw2a9URu4x.png" alt="image-20231209232120999"></p><p>新的定点格式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">2</span>, <span class="number">2</span>, GL_FLOAT, GL_FALSE, <span class="number">8</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)(<span class="number">6</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>)));</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>顶点着色器</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">0</span>) <span class="keyword">in</span> <span class="type">vec3</span> aPos;</span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">1</span>) <span class="keyword">in</span> <span class="type">vec3</span> aColor;</span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">2</span>) <span class="keyword">in</span> <span class="type">vec2</span> aTexCoord;</span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec3</span> ourColor;</span><br><span class="line"><span class="keyword">out</span> <span class="type">vec2</span> TexCoord;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">gl_Position</span> = <span class="type">vec4</span>(aPos, <span class="number">1.0</span>);</span><br><span class="line">    ourColor = aColor;</span><br><span class="line">    TexCoord = aTexCoord;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>片段着色器</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> ourColor;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoord;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> ourTexture;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    FragColor = <span class="built_in">texture</span>(ourTexture, TexCoord);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绑定贴图，绑定VAO。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glBindTexture</span>(GL_TEXTURE_2D, texture);</span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="built_in">glDrawElements</span>(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>如果你跟着这个教程正确地做完了，你会看到下面的图像：</p><p><img src="https://s2.loli.net/2023/12/09/FOuq9z3U5bEpr27.png" alt="image-20231209233128786"></p><p>我们还可以把得到的纹理颜色与顶点颜色混合，来获得更有趣的效果。我们只需把纹理颜色与顶点颜色在片段着色器中相乘来混合二者的颜色：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FragColor = <span class="built_in">texture</span>(ourTexture, TexCoord) * <span class="built_in">vec4</span>(ourColor, <span class="number">1.0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终的效果应该是顶点颜色和纹理颜色的混合色：</p><p><img src="https://s2.loli.net/2023/12/09/6pWKA821QFur34G.png" alt="image-20231209233215318"></p><p>Java 代码在这里</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.IntBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="comment">// positions          // colors           // texture coords</span></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="comment">// top right</span></span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom right</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom left</span></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>  <span class="comment">// top left</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span>[] indices = &#123;</span><br><span class="line">                <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// first triangle</span></span><br><span class="line">                <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// second triangle</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,EBO);</span><br><span class="line">        glBufferData(GL_ELEMENT_ARRAY_BUFFER,indices,GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">texture1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (texture1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, texture1.width, texture1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, texture1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawElements(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>reader</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.stb.STBImage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageReader</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ImageData <span class="title function_">ReadImage</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Read the image as a BufferedImage</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> ImageIO.read(<span class="keyword">new</span> <span class="title class_">File</span>(path));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check if image was read successfully</span></span><br><span class="line">        <span class="keyword">if</span> (image != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// Process the image (e.g., get width and height, manipulate pixels)</span></span><br><span class="line">            <span class="type">int</span>[] pixels = <span class="keyword">new</span> <span class="title class_">int</span>[image.getWidth() * image.getHeight()];</span><br><span class="line"></span><br><span class="line">            image.getRGB(<span class="number">0</span>, <span class="number">0</span>, image.getWidth(), image.getHeight(), pixels, <span class="number">0</span>, image.getWidth());</span><br><span class="line">            <span class="type">int</span>[] data = <span class="keyword">new</span> <span class="title class_">int</span>[image.getWidth() * image.getHeight()];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; pixels.length; i++) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">pixel</span> <span class="operator">=</span> pixels[i];</span><br><span class="line">                <span class="type">int</span> <span class="variable">alpha</span> <span class="operator">=</span> (pixel &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">red</span> <span class="operator">=</span> (pixel &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">green</span> <span class="operator">=</span> (pixel &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">blue</span> <span class="operator">=</span> pixel &amp; <span class="number">0xFF</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Assuming the image has 8 bits per channel</span></span><br><span class="line">                data[i] = (alpha &lt;&lt; <span class="number">24</span>) | (blue &lt;&lt; <span class="number">16</span>) | (green &lt;&lt; <span class="number">8</span>) | red;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ImageData</span>(image.getWidth(),image.getHeight(), data);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Error reading image: &quot;</span> + path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ImageData</span>&#123;</span><br><span class="line">        <span class="type">int</span> width;</span><br><span class="line">        <span class="type">int</span> height;</span><br><span class="line">        <span class="type">int</span>[] data;</span><br><span class="line"></span><br><span class="line">        ImageData(<span class="type">int</span> width, <span class="type">int</span> height, <span class="type">int</span>[] data)&#123;</span><br><span class="line">            <span class="built_in">this</span>.width = width;</span><br><span class="line">            <span class="built_in">this</span>.height = height;</span><br><span class="line">            <span class="built_in">this</span>.data = data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="纹理单元"><a href="#纹理单元" class="headerlink" title="纹理单元"></a>纹理单元</h2><ol><li><strong>纹理单元和采样器：</strong><ul><li><code>sampler2D</code>变量作为<code>uniform</code>在片段着色器中使用。不需要使用<code>glUniform</code>为其赋值，而是使用<code>glUniform1i</code>来分配纹理采样器的位置值，称为纹理单元(Texture Unit)。</li></ul></li><li><strong>激活和绑定纹理单元：</strong><ul><li>通过<code>glActiveTexture</code>激活纹理单元，<code>glBindTexture</code>将纹理绑定到当前激活的纹理单元。<code>GL_TEXTURE0</code>是默认激活的纹理单元。</li></ul></li><li><strong>多个纹理的使用：</strong><ul><li>可以使用多个纹理单元，通过<code>glActiveTexture</code>和<code>glBindTexture</code>绑定不同的纹理到不同的纹理单元。</li></ul></li><li><strong>在着色器中使用多个纹理：</strong><ul><li>在片段着色器中使用多个纹理采样器，并通过<code>mix</code>函数对多个纹理进行混合。</li></ul></li><li><strong>加载和使用多个纹理：</strong><ul><li>加载和创建多个纹理对象，并在渲染流程中绑定它们到对应的纹理单元，然后定义哪个uniform采样器对应哪个纹理单元。</li></ul></li><li><strong>解决纹理上下颠倒的问题：</strong><ul><li>提到了加载图像时，有时纹理的Y轴方向会与OpenGL要求的不一致，可以使用<code>stbi_set_flip_vertically_on_load(true)</code>来解决这个问题。</li></ul></li><li><strong>设置uniform变量和渲染循环：</strong><ul><li>使用<code>glUniform1i</code>设置采样器对应的纹理单元，确保每个uniform采样器都对应着正确的纹理单元。</li></ul></li></ol><p>这里我们使用了一个新的图形处理库来解决问题翻转的问题imagej</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="attr">group:</span> <span class="string">&#x27;net.imagej&#x27;</span>, <span class="attr">name:</span> <span class="string">&#x27;ij&#x27;</span>, <span class="attr">version:</span> <span class="string">&#x27;1.54g&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下是代码</p><p>图片读入类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ij.ImagePlus;</span><br><span class="line"><span class="keyword">import</span> ij.io.Opener;</span><br><span class="line"><span class="keyword">import</span> ij.process.ImageProcessor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageReader</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ImageData <span class="title function_">ReadImage</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Opener</span> <span class="variable">opener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Opener</span>();</span><br><span class="line">        <span class="type">ImagePlus</span> <span class="variable">imagePlus</span> <span class="operator">=</span> opener.openImage(path);</span><br><span class="line"></span><br><span class="line">        <span class="type">ImageProcessor</span> <span class="variable">processor</span> <span class="operator">=</span> imagePlus.getProcessor();</span><br><span class="line">        processor.flipVertical();</span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> processor.getWidth();</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> processor.getHeight();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] pixels = (<span class="type">int</span>[]) processor.getPixels();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (opener != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">int</span>[] data = <span class="keyword">new</span> <span class="title class_">int</span>[width * height];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; pixels.length; i++) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">pixel</span> <span class="operator">=</span> pixels[i];</span><br><span class="line">                <span class="type">int</span> <span class="variable">alpha</span> <span class="operator">=</span> (pixel &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">red</span> <span class="operator">=</span> (pixel &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">green</span> <span class="operator">=</span> (pixel &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">blue</span> <span class="operator">=</span> pixel &amp; <span class="number">0xFF</span>;</span><br><span class="line"></span><br><span class="line">                data[i] = (alpha &lt;&lt; <span class="number">24</span>) | (blue &lt;&lt; <span class="number">16</span>) | (green &lt;&lt; <span class="number">8</span>) | red;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ImageData</span>(width,height, data);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Error reading image: &quot;</span> + path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ImageData</span>&#123;</span><br><span class="line">        <span class="type">int</span> width;</span><br><span class="line">        <span class="type">int</span> height;</span><br><span class="line">        <span class="type">int</span>[] data;</span><br><span class="line"></span><br><span class="line">        ImageData(<span class="type">int</span> width, <span class="type">int</span> height, <span class="type">int</span>[] data)&#123;</span><br><span class="line">            <span class="built_in">this</span>.width = width;</span><br><span class="line">            <span class="built_in">this</span>.height = height;</span><br><span class="line">            <span class="built_in">this</span>.data = data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Main类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.IntBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="comment">// positions          // colors           // texture coords</span></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="comment">// top right</span></span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom right</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom left</span></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>  <span class="comment">// top left</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span>[] indices = &#123;</span><br><span class="line">                <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// first triangle</span></span><br><span class="line">                <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// second triangle</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,EBO);</span><br><span class="line">        glBufferData(GL_ELEMENT_ARRAY_BUFFER,indices,GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawElements(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>片段着色器</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> ourColor;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoord;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> texture1;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> texture2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    FragColor = <span class="built_in">mix</span>(<span class="built_in">texture</span>(texture1, TexCoord), <span class="built_in">texture</span>(texture2, TexCoord), <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><ul><li>修改片段着色器，<strong>仅</strong>让笑脸图案朝另一个方向看，<a href="https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/4.3.textures_exercise1/textures_exercise1.cpp">参考解答</a></li><li>尝试用不同的纹理环绕方式，设定一个从<code>0.0f</code>到<code>2.0f</code>范围内的（而不是原来的<code>0.0f</code>到<code>1.0f</code>）纹理坐标。试试看能不能在箱子的角落放置4个笑脸：<a href="https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/4.4.textures_exercise2/textures_exercise2.cpp">参考解答</a>，<a href="https://learnopengl-cn.github.io/img/01/06/textures_exercise2.png">结果</a>。记得一定要试试其它的环绕方式。</li><li>尝试在矩形上只显示纹理图像的中间一部分，修改纹理坐标，达到能看见单个的像素的效果。尝试使用GL_NEAREST的纹理过滤方式让像素显示得更清晰：<a href="https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/4.5.textures_exercise3/textures_exercise3.cpp">参考解答</a></li><li>使用一个uniform变量作为mix函数的第三个参数来改变两个纹理可见度，使用上和下键来改变箱子或笑脸的可见度：<a href="https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/4.6.textures_exercise4/textures_exercise4.cpp">参考解答</a>。</li></ul><p>1 见作者答案</p><p>2见作者答案</p><p>3见作者答案</p><p>4 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.IntBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="comment">// positions          // colors           // texture coords</span></span><br><span class="line">                <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="comment">// top right</span></span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom right</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>,   <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="comment">// bottom left</span></span><br><span class="line">                -<span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="number">0.0f</span>, <span class="number">1.0f</span>  <span class="comment">// top left</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span>[] indices = &#123;</span><br><span class="line">                <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// first triangle</span></span><br><span class="line">                <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// second triangle</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,EBO);</span><br><span class="line">        glBufferData(GL_ELEMENT_ARRAY_BUFFER,indices,GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">2</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">8</span> * Float.BYTES, <span class="number">6</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// load and create a texture</span></span><br><span class="line">        <span class="comment">// -------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image1</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/container.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image1.width, image1.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image1.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">texture2</span> <span class="operator">=</span> glGenTextures();</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture2);<span class="comment">// all upcoming GL_TEXTURE_2D operations now have effect on this texture object</span></span><br><span class="line">        <span class="comment">// set the texture wrapping parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_REPEAT);<span class="comment">// set texture wrapping to GL_REPEAT (default wrapping method)</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_REPEAT);</span><br><span class="line">        <span class="comment">// set texture filtering parameters</span></span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        <span class="comment">// load image, create texture and generate mipmaps</span></span><br><span class="line">        ImageReader.<span class="type">ImageData</span> <span class="variable">image2</span> <span class="operator">=</span> ImageReader.ReadImage(<span class="string">&quot;src/main/resources/awesomeface.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (image1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGBA, image2.width, image2.height, <span class="number">0</span>, GL_RGBA, GL_UNSIGNED_BYTE, image2.data);</span><br><span class="line">            glGenerateMipmap(GL_TEXTURE_2D);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to load texture&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        shaderProgram.use(); <span class="comment">// 不要忘记在设置uniform变量之前激活着色器程序！</span></span><br><span class="line">        glUniform1i(glGetUniformLocation(shaderProgram.ID, <span class="string">&quot;texture1&quot;</span>), <span class="number">0</span>); <span class="comment">// 手动设置</span></span><br><span class="line">        shaderProgram.setInt(<span class="string">&quot;texture2&quot;</span>, <span class="number">1</span>); <span class="comment">// 或者使用着色器类设置</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">mixValue</span> <span class="operator">=</span> <span class="number">0.2f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_UP) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue += <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span>(mixValue &gt;= <span class="number">1.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">1.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_DOWN) == GLFW.GLFW_PRESS)</span><br><span class="line">            &#123;</span><br><span class="line">                mixValue -= <span class="number">0.001f</span>; <span class="comment">// change this value accordingly (might be too slow or too fast based on system hardware)</span></span><br><span class="line">                <span class="keyword">if</span> (mixValue &lt;= <span class="number">0.0f</span>)</span><br><span class="line">                    mixValue = <span class="number">0.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glActiveTexture(GL_TEXTURE0);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture);</span><br><span class="line">            glActiveTexture(GL_TEXTURE1);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture2);</span><br><span class="line"></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;mixValue&quot;</span>, mixValue);</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawElements(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>glsl</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> ourColor;</span><br><span class="line"><span class="keyword">in</span> <span class="type">vec2</span> TexCoord;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> texture1;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> texture2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">float</span> mixValue;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    FragColor = <span class="built_in">mix</span>(<span class="built_in">texture</span>(texture1, TexCoord), <span class="built_in">texture</span>(texture2, <span class="type">vec2</span>(<span class="number">1.0</span>-TexCoord.x,TexCoord.y)), mixValue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[纹理 - LearnOpenGL CN (learnopengl-cn.github.io)](<a href="https://learnopengl-cn.github.io/01">https://learnopengl-cn.github.io/01</a> Getting started&#x2F;06 Textures&#x2F;#_3)</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft我的世界-如何做弓BowItem</title>
      <link href="/2023/12/09/Minecraft%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C-%E5%A6%82%E4%BD%95%E5%81%9A%E5%BC%93BowItem/"/>
      <url>/2023/12/09/Minecraft%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C-%E5%A6%82%E4%BD%95%E5%81%9A%E5%BC%93BowItem/</url>
      
        <content type="html"><![CDATA[<h1 id="RangedWeaponItem"><a href="#RangedWeaponItem" class="headerlink" title="RangedWeaponItem"></a>RangedWeaponItem</h1><p><strong>1. 类定义:</strong></p><ul><li>定义了一个名为<code>RangedWeaponItem</code>的抽象类，该类扩展了<code>Item</code>类。</li></ul><p><strong>2. 静态predicates</strong></p><ul><li>定义了两个static predicates: <ul><li><code>BOW_PROJECTILES</code>: 此谓词使用<code>ItemTags</code>检查<code>itemstack</code>是否为“Arrows”类型。<code>ARROWS</code>tag。</li><li>此谓词将&#96;BOW_PROJECTILES’谓词与对“Firework Rocket”项的附加检查相结合。这使得弩既可以射箭，也可以发射烟花火箭。</li></ul></li></ul><p><strong>3. 构造函数:</strong></p><ul><li>构造函数接受&#96;Item。Settings”对象作为参数，并调用“Item”类的父类构造函数来初始化该项。</li></ul><p><strong>4. getHeldProjectiles:</strong></p><ul><li>此方法返回“getProjectiles”方法的结果。这本质上允许子类定义自己的射弹类型，同时保持与现有“getHeldProjectle”方法的兼容性。</li></ul><p><strong>5. getProjectiles:</strong></p><ul><li>这是一种抽象方法，子类必须实现它来定义它们可以发射的特定类型的投射物。</li></ul><p><strong>6. getHeldProjectile:</strong></p><ul><li>此静态方法以“LivingEntity”和“Predicate＜ItemStack＞”作为参数，并返回 entity’s OFF HAND  和 MAIN HAND 中与给定 predicate匹配的第一个itemstack。</li><li>T方法同时检查实体 entity的Main Hand  和OFF hand 。</li></ul><p><strong>7. getEnchantability:</strong></p><ul><li>此方法覆盖“Item”类的“getEnchantatibility”方法，并返回值1。这意味着“远程武器”实例可以被附魔附魔。</li></ul><p><strong>8. getRange:</strong></p><ul><li>这是一个抽象的方法，子类必须实现它来定义武器的最大射程。</li></ul><h1 id="BowItem"><a href="#BowItem" class="headerlink" title="BowItem"></a>BowItem</h1><p><strong>1. Class Definition:</strong></p><ul><li>此代码定义了一个名为“BowItem”的类，该类扩展了“RangedWeaponItem”类并实现了“Vanishable”接口。</li><li>T这意味着“弓”是一种远程武器，可以被附魔、vanishable 和射箭。</li></ul><p><strong>2. Static Fields:</strong></p><ul><li>Two static fields are defined:<ul><li><code>TICKS_PER_SECOND</code>: 此常数定义一秒钟内的刻度数（20）。</li><li><code>RANGE</code>: 此常数定义弓的最大范围（15）。</li></ul></li></ul><p><strong>3. Constructor:</strong></p><ul><li>构造函数接受<code>Item.Settings</code>对象作为参数，并调用<code>RangedWeaponItem</code>类的父类构造函数来初始化该item。</li></ul><p><strong>4. onStoppedUsing:</strong></p><ul><li>当玩家停止使用弓时，会调用此方法。</li><li>它检查玩家是否是“玩家实体”，以及他们是否有必要的arrows。</li><li>然后计算弓的拉动进度并创建一个箭头实体。</li><li>箭头实体随后以适当的速度、伤害和附魔产生。</li><li>最后，更新 player’s inventory并播放适当的声音。</li></ul><p><strong>5. getPullProgress:</strong></p><ul><li>此静态方法将use ticks作为参数，并返回弓的拉动进度。</li><li>拉动进度用于计算箭头的速度。</li></ul><p><strong>6. getMaxUseTime:</strong></p><ul><li>此方法返回弓的最大使用时间（72000个刻度）。</li></ul><p><strong>7. getUseAction:</strong></p><ul><li>T此方法返回弓（bow）的使用动作。</li></ul><p><strong>8. use:</strong></p><ul><li>当玩家开始使用弓时，就会调用此方法。</li><li>它检查玩家是否有必要的箭头，然后将玩家当前的手设置为持有弓的手。</li></ul><p><strong>9. getProjectiles:</strong></p><ul><li>此方法返回弓可以发射的投射物类型的predicate 。</li></ul><p><strong>10. getRange:</strong></p><ul><li>此方法返回弓的最大范围。</li></ul><h1 id="自定义物品模型ModelPredicateProviderRegistry"><a href="#自定义物品模型ModelPredicateProviderRegistry" class="headerlink" title="自定义物品模型ModelPredicateProviderRegistry"></a>自定义物品模型ModelPredicateProviderRegistry</h1><p><strong>1. Registration:</strong></p><ul><li><p>Three<code>ModelPredicateProviderRegistry.register</code></p><p>调用用于注册特定item和identifiers：</p><ul><li><code>Items.BOW</code>, identifier “pull”: 此提供程序根据剩余使用时间计算弓的“pull（拉动）”进度。</li><li><code>Items.BRUSH</code>, identifier “brushing”: 此提供程序基于笔刷的当前使用时间模10提供“brushing”动画。</li><li><code>Items.BOW</code>, identifier “pulling”：此提供程序检查实体是否实际使用了BOW，如果是则返回1.0f，否则返回0.0f。</li></ul></li></ul><p><strong>2. ClampedModelPredicateProvider:</strong></p><ul><li>The <code>ClampedModelPredicateProvider</code> interface 定义了用于计算模型动画进度的行为。</li><li>它需要四个参数:<ul><li><code>stack</code>: 正在使用的ItemStack。</li><li><code>world</code>: 当前的世界。</li><li><code>entity</code>: 使用项的实体。</li><li><code>seed</code>: 动画中变化的随机种子。</li></ul></li></ul><p><strong>3. register method:</strong></p><ul><li>The<code>register</code>方法需要三个参数:<ul><li><code>item</code>: 要为其注册提供程序的item。</li><li><code>id</code>: 模型动画的标识符。</li><li><code>provider</code>: ClampedModelPredicateProvider实例。</li></ul></li><li>它将提供程序存储在地图中，以便将来在模型渲染期间进行检索。</li><li>该映射使用项目和标识符作为有效访问的密钥。</li></ul><p><strong>4. ITEM_SPECIFIC map:</strong></p><ul><li>此静态映射存储所有已注册的模型predicate 提供程序</li><li>它使用项作为关键字，并存储一个嵌套映射，其中包含标识符及其相应的predicate 提供程序。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 弓箭 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl04着色器</title>
      <link href="/2023/12/08/opengl04%E7%9D%80%E8%89%B2%E5%99%A8/"/>
      <url>/2023/12/08/opengl04%E7%9D%80%E8%89%B2%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="着色器"><a href="#着色器" class="headerlink" title="着色器"></a>着色器</h1><p>着色器是指在GPU上运行的小程序，专门负责图形渲染管线中的特定部分。这些程序的基本功能是将输入转换为输出。它们是高度独立的程序，无法直接相互通信，唯一的沟通方式是通过输入和输出传递信息。</p><h1 id="GLSL"><a href="#GLSL" class="headerlink" title="GLSL"></a>GLSL</h1><p>着色器是用类似于C语言的GLSL编写的。GLSL专为图形计算而设计，它包含了许多有用的特性，尤其是针对向量和矩阵操作的功能。</p><p>每个着色器都有一个固定的结构：它们以声明版本开始，然后包括输入和输出变量、uniform变量，以及一个main函数作为入口点。在main函数中，处理所有的输入，进行所需的计算，并将结果输出到输出变量中。如果不了解uniform变量，不必担心，我们会在后续进行详细解释。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version version_number</span></span><br><span class="line">in type in_variable_name;</span><br><span class="line">in type in_variable_name;</span><br><span class="line"></span><br><span class="line">out type out_variable_name;</span><br><span class="line"></span><br><span class="line">uniform type uniform_name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 处理输入并进行一些图形操作</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">// 输出处理过的结果到输出变量</span></span><br><span class="line">  out_variable_name = weird_stuff_we_processed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询GL_MAX_VERTEX_ATTRIBS来获取具体的上限：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> nrAttributes;</span><br><span class="line"><span class="built_in">glGetIntegerv</span>(GL_MAX_VERTEX_ATTRIBS, &amp;nrAttributes);</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;Maximum nr of vertex attributes supported: &quot;</span> &lt;&lt; nrAttributes &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><ul><li>着色器用GLSL语言编写，这是一种专门为图形计算设计的语言，它包含对向量和矩阵操作的特性。</li><li>着色器的结构是固定的：版本声明，输入和输出变量声明，uniform声明以及主函数main。主函数处理输入变量，输出结果到输出变量。</li><li>顶点着色器中的输入变量也被称为顶点属性(Vertex Attribute)。OpenGL规定至少有16个包含4个分量的顶点属性可用，但具体数量由硬件决定，可以用GL_MAX_VERTEX_ATTRIBS查询具体上限。通常情况下，返回的值至少是16，对大多数情况来说足够了。</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>基础数据类型：<code>int</code>、<code>float</code>、<code>double</code>、<code>uint</code>和<code>bool</code>。两种容器类型，分别是向量(Vector)和矩阵(Matrix)</p><h3 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h3><table><thead><tr><th align="left">类型</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>vecn</code></td><td align="left">包含<code>n</code>个float分量的默认向量</td></tr><tr><td align="left"><code>bvecn</code></td><td align="left">包含<code>n</code>个bool分量的向量</td></tr><tr><td align="left"><code>ivecn</code></td><td align="left">包含<code>n</code>个int分量的向量</td></tr><tr><td align="left"><code>uvecn</code></td><td align="left">包含<code>n</code>个unsigned int分量的向量</td></tr><tr><td align="left"><code>dvecn</code></td><td align="left">包含<code>n</code>个double分量的向量</td></tr></tbody></table><p>一个向量的分量可以通过<code>vec.x</code>这种方式获取.你可以分别使用<code>.x</code>、<code>.y</code>、<code>.z</code>和<code>.w</code>来获取它们的第1、2、3、4个分量。GLSL也允许你对颜色使用<code>rgba</code>，或是对纹理坐标使用<code>stpq</code>访问相同的分量。</p><p>向量这一数据类型也允许一些有趣而灵活的分量选择方式，叫做重组(Swizzling)。重组允许这样的语法：</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">vec2</span> someVec;</span><br><span class="line"><span class="type">vec4</span> differentVec = someVec.xyxx;</span><br><span class="line"><span class="type">vec3</span> anotherVec = differentVec.zyw;</span><br><span class="line"><span class="type">vec4</span> otherVec = someVec.xxxx + anotherVec.yxzy;</span><br></pre></td></tr></table></figure><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">vec2</span> vect = <span class="type">vec2</span>(<span class="number">0.5</span>, <span class="number">0.7</span>);</span><br><span class="line"><span class="type">vec4</span> result = <span class="type">vec4</span>(vect, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line"><span class="type">vec4</span> otherResult = <span class="type">vec4</span>(result.xyz, <span class="number">1.0</span>);</span><br></pre></td></tr></table></figure><h2 id="输入与输出"><a href="#输入与输出" class="headerlink" title="输入与输出"></a>输入与输出</h2><p>这段内容指出了着色器之间的数据传递和通信方式。尽管每个着色器是独立的小程序，但作为渲染管线的一部分，它们需要有输入和输出来进行数据传递和交流。GLSL通过in和out关键字定义了这种输入和输出。只要输出变量与下一个着色器阶段的输入匹配，数据就可以传递下去。</p><p>顶点着色器和片段着色器在输入和输出方面有所不同。顶点着色器从顶点数据中直接接收输入，并通过使用location元数据定义输入变量来配置顶点属性。这有助于在CPU上管理顶点数据属性。另一方面，片段着色器需要一个vec4颜色输出变量，因为它负责生成最终的颜色输出。如果片段着色器没有定义输出颜色，OpenGL会将物体渲染为黑色或白色。</p><p>要在着色器之间发送数据，需要在发送方着色器中声明一个输出，然后在接收方着色器中声明一个相匹配的输入。当这两个变量类型和名称一致时，OpenGL会将它们链接在一起，实现数据传递（这在链接程序对象时完成）。这种方法的优势是使数据传递更直观、减少了OpenGL调用，并提供了更好的代码可读性。</p><p><strong>顶点着色器</strong></p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">0</span>) <span class="keyword">in</span> <span class="type">vec3</span> aPos; <span class="comment">// 位置变量的属性位置值为0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> vertexColor; <span class="comment">// 为片段着色器指定一个颜色输出</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">gl_Position</span> = <span class="type">vec4</span>(aPos, <span class="number">1.0</span>); <span class="comment">// 注意我们如何把一个vec3作为vec4的构造器的参数</span></span><br><span class="line">    vertexColor = <span class="type">vec4</span>(<span class="number">0.5</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>); <span class="comment">// 把输出变量设置为暗红色</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>片段着色器</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line">out vec4 FragColor;</span><br><span class="line"></span><br><span class="line">in vec4 vertexColor; <span class="comment">// 从顶点着色器传来的输入变量（名称相同、类型相同）</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FragColor = vertexColor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Uniform"><a href="#Uniform" class="headerlink" title="Uniform"></a>Uniform</h2><p>Uniform是一种让CPU应用程序向GPU着色器发送数据的方式。它与顶点属性不同：首先，uniform是全局的，每个着色器程序对象中的uniform必须是唯一的，可以被任意着色器在任意阶段访问。其次，无论设置什么值，uniform都会一直保存数据，直到重置或更新。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line">out vec4 FragColor;</span><br><span class="line"></span><br><span class="line">uniform vec4 ourColor; <span class="comment">// 在OpenGL程序代码中设定这个变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FragColor = ourColor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在GLSL着色器中，我们通过在类型和变量名前加上uniform关键字来声明uniform。这样就可以在着色器中使用它们了。我们可以通过uniform来设置三角形的颜色。</p><p>要更新uniform的值，首先要获取uniform的位置值，然后使用特定的函数设置它们的值。在OpenGL中，这些函数根据数据类型使用不同的后缀，比如glUniform4f用于设置四个浮点数的uniform。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> timeValue = <span class="built_in">glfwGetTime</span>();</span><br><span class="line"><span class="type">float</span> greenValue = (<span class="built_in">sin</span>(timeValue) / <span class="number">2.0f</span>) + <span class="number">0.5f</span>;</span><br><span class="line"><span class="type">int</span> vertexColorLocation = <span class="built_in">glGetUniformLocation</span>(shaderProgram, <span class="string">&quot;ourColor&quot;</span>);</span><br><span class="line"><span class="built_in">glUseProgram</span>(shaderProgram);</span><br><span class="line"><span class="built_in">glUniform4f</span>(vertexColorLocation, <span class="number">0.0f</span>, greenValue, <span class="number">0.0f</span>, <span class="number">1.0f</span>);</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">后缀</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>f</code></td><td align="left">函数需要一个float作为它的值</td></tr><tr><td align="left"><code>i</code></td><td align="left">函数需要一个int作为它的值</td></tr><tr><td align="left"><code>ui</code></td><td align="left">函数需要一个unsigned int作为它的值</td></tr><tr><td align="left"><code>3f</code></td><td align="left">函数需要3个float作为它的值</td></tr><tr><td align="left"><code>fv</code></td><td align="left">函数需要一个float向量&#x2F;数组作为它的值</td></tr></tbody></table><p>在渲染循环中，我们可以在每次迭代中更新uniform的值，让颜色随时间改变。这种方式可以让三角形颜色在渲染过程中变化。使用uniform对于在渲染迭代中变化的属性非常有用，也可以方便程序和着色器之间的数据交互。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(!<span class="built_in">glfwWindowShouldClose</span>(window))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 输入</span></span><br><span class="line">    <span class="built_in">processInput</span>(window);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 渲染</span></span><br><span class="line">    <span class="comment">// 清除颜色缓冲</span></span><br><span class="line">    <span class="built_in">glClearColor</span>(<span class="number">0.2f</span>, <span class="number">0.3f</span>, <span class="number">0.3f</span>, <span class="number">1.0f</span>);</span><br><span class="line">    <span class="built_in">glClear</span>(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记得激活着色器</span></span><br><span class="line">    <span class="built_in">glUseProgram</span>(shaderProgram);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新uniform颜色</span></span><br><span class="line">    <span class="type">float</span> timeValue = <span class="built_in">glfwGetTime</span>();</span><br><span class="line">    <span class="type">float</span> greenValue = <span class="built_in">sin</span>(timeValue) / <span class="number">2.0f</span> + <span class="number">0.5f</span>;</span><br><span class="line">    <span class="type">int</span> vertexColorLocation = <span class="built_in">glGetUniformLocation</span>(shaderProgram, <span class="string">&quot;ourColor&quot;</span>);</span><br><span class="line">    <span class="built_in">glUniform4f</span>(vertexColorLocation, <span class="number">0.0f</span>, greenValue, <span class="number">0.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制三角形</span></span><br><span class="line">    <span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line">    <span class="built_in">glDrawArrays</span>(GL_TRIANGLES, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换缓冲并查询IO事件</span></span><br><span class="line">    <span class="built_in">glfwSwapBuffers</span>(window);</span><br><span class="line">    <span class="built_in">glfwPollEvents</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.GLFW.glfwGetTime;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;layout (location = 0) in vec3 aPos;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\0&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;out vec4 FragColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;uniform vec4 ourColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   FragColor = ourColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// build and compile our shader program</span></span><br><span class="line">        <span class="comment">// ------------------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">vertexShader</span> <span class="operator">=</span> glCreateShader(GL_VERTEX_SHADER);</span><br><span class="line">        glShaderSource(vertexShader,vertexShaderSource);</span><br><span class="line">        glCompileShader(vertexShader);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">success</span> <span class="operator">=</span> glGetShaderi(vertexShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(vertexShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// fragment shader</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">fragmentShader</span> <span class="operator">=</span> glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">        glShaderSource(fragmentShader,fragmentShaderSource);</span><br><span class="line">        glCompileShader(fragmentShader);</span><br><span class="line"></span><br><span class="line">        success = glGetShaderi(fragmentShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(fragmentShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// link shaders</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> glCreateProgram();</span><br><span class="line">        glAttachShader(shaderProgram,vertexShader);</span><br><span class="line">        glAttachShader(shaderProgram,fragmentShader);</span><br><span class="line">        glLinkProgram(shaderProgram);</span><br><span class="line">        <span class="comment">// check for linking errors</span></span><br><span class="line">        success = glGetProgrami(shaderProgram,GL_LINK_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetProgramInfoLog(shaderProgram);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// link shaders2</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">shaderProgram2</span> <span class="operator">=</span> glCreateProgram();</span><br><span class="line">        glAttachShader(shaderProgram2,vertexShader);</span><br><span class="line">        glLinkProgram(shaderProgram2);</span><br><span class="line">        <span class="comment">// check for linking errors</span></span><br><span class="line">        success = glGetProgrami(shaderProgram2,GL_LINK_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetProgramInfoLog(shaderProgram2);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        glDeleteShader(vertexShader);</span><br><span class="line">        glDeleteShader(fragmentShader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="comment">// bottom right</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="comment">// bottom left</span></span><br><span class="line">                <span class="number">0.0f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>   <span class="comment">// top</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">3</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute&#x27;s bound vertex buffer object so afterwards we can safely unbind</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound.</span></span><br><span class="line">        <span class="comment">// glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// You can unbind the VAO afterwards so other VAO calls won&#x27;t accidentally modify this VAO, but this rarely happens. Modifying other</span></span><br><span class="line">        <span class="comment">// VAOs requires a call to glBindVertexArray anyways so we generally don&#x27;t unbind VAOs (nor VBOs) when it&#x27;s not directly necessary.</span></span><br><span class="line">        glBindVertexArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// uncomment this call to draw in wireframe polygons.</span></span><br><span class="line"><span class="comment">//        glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glUseProgram(shaderProgram);</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">timeValue</span> <span class="operator">=</span> glfwGetTime();</span><br><span class="line">            <span class="type">float</span> <span class="variable">greenValue</span> <span class="operator">=</span> (<span class="type">float</span>) Math.sin(timeValue/ <span class="number">2.0</span> + <span class="number">0.5</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">vertexColorLocation</span> <span class="operator">=</span> glGetUniformLocation(shaderProgram, <span class="string">&quot;ourColor&quot;</span>);</span><br><span class="line">            glUniform4f(vertexColorLocation, <span class="number">0.0f</span>, greenValue, <span class="number">0.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line"></span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更多属性！"><a href="#更多属性！" class="headerlink" title="更多属性！"></a>更多属性！</h2><p>这段教程主要介绍了如何将颜色数据加入顶点数据，然后更新顶点着色器和片段着色器来处理这些新的数据。原先的三角形只有位置信息，现在我们将三个角分别指定为红色、绿色和蓝色。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> vertices[] = &#123;</span><br><span class="line">    <span class="comment">// 位置              // 颜色</span></span><br><span class="line">     <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="comment">// 右下</span></span><br><span class="line">    <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="comment">// 左下</span></span><br><span class="line">     <span class="number">0.0f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>    <span class="comment">// 顶部</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>添加颜色数据后，我们需要更新顶点着色器以接收颜色值作为顶点属性输入，并更新片段着色器来使用新的输出变量来指定颜色。然后，重新配置顶点属性指针以便让OpenGL知道新的数据布局。</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">0</span>) <span class="keyword">in</span> <span class="type">vec3</span> aPos;   <span class="comment">// 位置变量的属性位置值为 0 </span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">1</span>) <span class="keyword">in</span> <span class="type">vec3</span> aColor; <span class="comment">// 颜色变量的属性位置值为 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec3</span> ourColor; <span class="comment">// 向片段着色器输出一个颜色</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">gl_Position</span> = <span class="type">vec4</span>(aPos, <span class="number">1.0</span>);</span><br><span class="line">    ourColor = aColor; <span class="comment">// 将ourColor设置为我们从顶点数据那里得到的输入颜色</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;  </span><br><span class="line"><span class="keyword">in</span> <span class="type">vec3</span> ourColor;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(ourColor, <span class="number">1.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，解释了片段插值的概念。在渲染过程中，光栅化阶段会创建比顶点更多的片段。这些片段在图形形状上的位置不同，片段着色器的输入属性会根据位置进行插值，比如线段上的端点颜色会在两端之间插值。在三角形渲染时，这些插值颜色导致了我们看到的不同颜色的效果。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 位置属性</span></span><br><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">6</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)<span class="number">0</span>);</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 颜色属性</span></span><br><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">6</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)(<span class="number">3</span>* <span class="built_in">sizeof</span>(<span class="type">float</span>)));</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>Java代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.GLFW.glfwGetTime;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;layout (location = 0) in vec3 aPos;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;layout (location = 1) in vec3 aColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;out vec3 ourColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   ourColor=aColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\0&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;in vec3 ourColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;out vec4 FragColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   FragColor = vec4(ourColor,1.0);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// build and compile our shader program</span></span><br><span class="line">        <span class="comment">// ------------------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">vertexShader</span> <span class="operator">=</span> glCreateShader(GL_VERTEX_SHADER);</span><br><span class="line">        glShaderSource(vertexShader,vertexShaderSource);</span><br><span class="line">        glCompileShader(vertexShader);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">success</span> <span class="operator">=</span> glGetShaderi(vertexShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(vertexShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// fragment shader</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">fragmentShader</span> <span class="operator">=</span> glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">        glShaderSource(fragmentShader,fragmentShaderSource);</span><br><span class="line">        glCompileShader(fragmentShader);</span><br><span class="line"></span><br><span class="line">        success = glGetShaderi(fragmentShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(fragmentShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// link shaders</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> glCreateProgram();</span><br><span class="line">        glAttachShader(shaderProgram,vertexShader);</span><br><span class="line">        glAttachShader(shaderProgram,fragmentShader);</span><br><span class="line">        glLinkProgram(shaderProgram);</span><br><span class="line">        <span class="comment">// check for linking errors</span></span><br><span class="line">        success = glGetProgrami(shaderProgram,GL_LINK_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetProgramInfoLog(shaderProgram);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// link shaders2</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">shaderProgram2</span> <span class="operator">=</span> glCreateProgram();</span><br><span class="line">        glAttachShader(shaderProgram2,vertexShader);</span><br><span class="line">        glLinkProgram(shaderProgram2);</span><br><span class="line">        <span class="comment">// check for linking errors</span></span><br><span class="line">        success = glGetProgrami(shaderProgram2,GL_LINK_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetProgramInfoLog(shaderProgram2);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        glDeleteShader(vertexShader);</span><br><span class="line">        glDeleteShader(fragmentShader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="comment">// 右下</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,   <span class="comment">// 左下</span></span><br><span class="line">                <span class="number">0.0f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>    <span class="comment">// 顶部</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">6</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">6</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute&#x27;s bound vertex buffer object so afterwards we can safely unbind</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound.</span></span><br><span class="line">        <span class="comment">// glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// You can unbind the VAO afterwards so other VAO calls won&#x27;t accidentally modify this VAO, but this rarely happens. Modifying other</span></span><br><span class="line">        <span class="comment">// VAOs requires a call to glBindVertexArray anyways so we generally don&#x27;t unbind VAOs (nor VBOs) when it&#x27;s not directly necessary.</span></span><br><span class="line">        glBindVertexArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// uncomment this call to draw in wireframe polygons.</span></span><br><span class="line"><span class="comment">//        glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glUseProgram(shaderProgram);</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">timeValue</span> <span class="operator">=</span> glfwGetTime();</span><br><span class="line">            <span class="type">float</span> <span class="variable">greenValue</span> <span class="operator">=</span> (<span class="type">float</span>) Math.sin(timeValue/ <span class="number">2.0</span> + <span class="number">0.5</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">vertexColorLocation</span> <span class="operator">=</span> glGetUniformLocation(shaderProgram, <span class="string">&quot;ourColor&quot;</span>);</span><br><span class="line">            glUniform4f(vertexColorLocation, <span class="number">0.0f</span>, greenValue, <span class="number">0.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line"></span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="我们自己的着色器类"><a href="#我们自己的着色器类" class="headerlink" title="我们自己的着色器类"></a>我们自己的着色器类</h1><p>这部分介绍了如何创建一个着色器类来简化着色器的编写、编译和管理。这个类可以从硬盘读取着色器源代码文件，编译并链接它们，并提供了一些工具函数来处理uniform变量。</p><p>在头文件中，使用了预处理指令来避免链接冲突。着色器类包含了着色器程序的ID，构造函数需要顶点和片段着色器源代码的文件路径。此外，类中还包含了用来激活着色器程序的use函数，以及一些用于设置uniform变量的工具函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> SHADER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHADER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;glad/glad.h&gt;</span>; <span class="comment">// 包含glad来获取所有的必须OpenGL头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Shader</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 程序ID</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> ID;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造器读取并构建着色器</span></span><br><span class="line">    <span class="built_in">Shader</span>(<span class="type">const</span> <span class="type">char</span>* vertexPath, <span class="type">const</span> <span class="type">char</span>* fragmentPath);</span><br><span class="line">    <span class="comment">// 使用/激活程序</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">use</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// uniform工具函数</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setBool</span><span class="params">(<span class="type">const</span> std::string &amp;name, <span class="type">bool</span> value)</span> <span class="type">const</span></span>;  </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setInt</span><span class="params">(<span class="type">const</span> std::string &amp;name, <span class="type">int</span> value)</span> <span class="type">const</span></span>;   </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setFloat</span><span class="params">(<span class="type">const</span> std::string &amp;name, <span class="type">float</span> value)</span> <span class="type">const</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="从文件读取"><a href="#从文件读取" class="headerlink" title="从文件读取"></a>从文件读取</h2><p>这部分内容讲了如何使用C++文件流来读取着色器的内容，并把它们存储到字符串对象中。这个过程包括打开和读取文件，将文件内容转换为字符串，并关闭文件处理器。</p><p>接着介绍了编译和链接着色器的过程。顶点着色器和片段着色器都需要经历类似的编译流程，并且在编译和链接出错时会打印相关的错误信息。之后，将着色器附加到着色器程序对象上，并链接这些着色器。</p><p>着色器类提供了使用着色器和设置uniform变量的函数。<code>use()</code> 函数激活着色器程序，而 <code>setBool()</code>, <code>setInt()</code>, <code>setFloat()</code> 函数用于设置不同类型的uniform变量。</p><p>最后，通过示例展示了如何使用这个着色器类。在创建着色器对象之后，可以在程序中使用它们，设置uniform变量，然后绘制场景。</p><p>整个过程中的代码示例和文件路径提供了完整的指导，帮助理解如何使用新的着色器类。</p><h3 id="MyShader类"><a href="#MyShader类" class="headerlink" title="MyShader类"></a>MyShader类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyShader</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> ID;</span><br><span class="line">    MyShader(String vertexPath,String fragmentPath)&#123;</span><br><span class="line">        String vertexCode;</span><br><span class="line">        String fragmentCode;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">vertexReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(getClass().getClassLoader().getResource(vertexPath).getFile()));</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">fragmentReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(getClass().getClassLoader().getResource(fragmentPath).getFile()));</span><br><span class="line"></span><br><span class="line">            String line;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">vertexBuilder</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">fragmentBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">while</span> ((line=vertexReader.readLine())!=<span class="literal">null</span>)&#123;</span><br><span class="line">                vertexBuilder.append(line).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ((line=fragmentReader.readLine())!=<span class="literal">null</span>)&#123;</span><br><span class="line">                fragmentBuilder.append(line).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            vertexCode = vertexBuilder.toString();</span><br><span class="line">            fragmentCode = fragmentBuilder.toString();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> vertex,fragment;</span><br><span class="line">        <span class="comment">// compile shaders</span></span><br><span class="line">        vertex = glCreateShader(GL_VERTEX_SHADER);</span><br><span class="line">        glShaderSource(vertex,vertexCode);</span><br><span class="line">        glCompileShader(vertex);</span><br><span class="line">        checkCompileErrors(vertex,<span class="string">&quot;VERTEX&quot;</span>);</span><br><span class="line">        <span class="comment">// fragment shader</span></span><br><span class="line">        fragment = glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">        glShaderSource(fragment,fragmentCode);</span><br><span class="line">        glCompileShader(fragment);</span><br><span class="line">        checkCompileErrors(fragment,<span class="string">&quot;FRAGMENT&quot;</span>);</span><br><span class="line">        <span class="comment">// shader program</span></span><br><span class="line">        ID = glCreateProgram();</span><br><span class="line">        glAttachShader(ID,vertex);</span><br><span class="line">        glAttachShader(ID,fragment);</span><br><span class="line">        glLinkProgram(ID);</span><br><span class="line">        checkCompileErrors(ID,<span class="string">&quot;PROGRAM&quot;</span>);</span><br><span class="line">        <span class="comment">// delete shaders</span></span><br><span class="line">        glDeleteShader(vertex);</span><br><span class="line">        glDeleteShader(fragment);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 使用/激活程序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">use</span><span class="params">()</span>&#123;</span><br><span class="line">        glUseProgram(ID);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">checkCompileErrors</span><span class="params">(<span class="type">int</span> shader,String type)</span>&#123;</span><br><span class="line">        <span class="type">int</span> success;</span><br><span class="line">        String infoLog;</span><br><span class="line">        <span class="keyword">if</span>(type != <span class="string">&quot;PROGRAM&quot;</span>)&#123;</span><br><span class="line">            success = glGetShaderi(shader,GL_COMPILE_STATUS);</span><br><span class="line">            <span class="keyword">if</span>(success == <span class="number">0</span>)&#123;</span><br><span class="line">                infoLog = glGetShaderInfoLog(shader);</span><br><span class="line">                System.err.println(<span class="string">&quot;ERROR::SHADER_COMPILATION_ERROR of type: &quot;</span> + type + <span class="string">&quot;\n&quot;</span> + infoLog);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            success = glGetProgrami(shader,GL_LINK_STATUS);</span><br><span class="line">            <span class="keyword">if</span>(success == <span class="number">0</span>)&#123;</span><br><span class="line">                infoLog = glGetProgramInfoLog(shader);</span><br><span class="line">                System.err.println(<span class="string">&quot;ERROR::PROGRAM_LINKING_ERROR of type: &quot;</span> + type + <span class="string">&quot;\n&quot;</span> + infoLog);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// uniform工具函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBool</span><span class="params">(String name,<span class="type">int</span> value)</span>&#123;</span><br><span class="line">        glUniform1i(glGetUniformLocation(ID, name), value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInt</span><span class="params">(String name,<span class="type">int</span> value)</span>&#123;</span><br><span class="line">        glUniform1i(glGetUniformLocation(ID, name), value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFloat</span><span class="params">(String name,<span class="type">float</span> value)</span>&#123;</span><br><span class="line">        glUniform1f(glGetUniformLocation(ID, name), value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Main类"><a href="#Main类" class="headerlink" title="Main类"></a>Main类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.GLFW.glfwGetTime;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;vertex.glsl&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;fragment.glsl&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">MyShader</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyShader</span>(vertexShaderSource,fragmentShaderSource);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,  <span class="comment">// bottom right</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,  <span class="comment">// bottom left</span></span><br><span class="line">                <span class="number">0.0f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>   <span class="comment">// top</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">6</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line">        glVertexAttribPointer(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">6</span> * Float.BYTES, <span class="number">3</span>*Float.BYTES);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute&#x27;s bound vertex buffer object so afterwards we can safely unbind</span></span><br><span class="line"><span class="comment">//        glBindBuffer(GL_ARRAY_BUFFER, 0);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound.</span></span><br><span class="line">        <span class="comment">// glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// You can unbind the VAO afterwards so other VAO calls won&#x27;t accidentally modify this VAO, but this rarely happens. Modifying other</span></span><br><span class="line">        <span class="comment">// VAOs requires a call to glBindVertexArray anyways so we generally don&#x27;t unbind VAOs (nor VBOs) when it&#x27;s not directly necessary.</span></span><br><span class="line"><span class="comment">//        glBindVertexArray(0);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// uncomment this call to draw in wireframe polygons.</span></span><br><span class="line"><span class="comment">//        glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            shaderProgram.use();</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            <span class="type">double</span> <span class="variable">timeValue</span> <span class="operator">=</span> glfwGetTime();</span><br><span class="line">            glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram.ID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><ol><li>修改顶点着色器让三角形上下颠倒：<a href="https://learnopengl.com/code_viewer.php?code=getting-started/shaders-exercise1">参考解答</a></li><li>使用uniform定义一个水平偏移量，在顶点着色器中使用这个偏移量把三角形移动到屏幕右侧：<a href="https://learnopengl.com/code_viewer.php?code=getting-started/shaders-exercise2">参考解答</a></li><li>使用<code>out</code>关键字把顶点位置输出到片段着色器，并将片段的颜色设置为与顶点位置相等（来看看连顶点位置值都在三角形中被插值的结果）。做完这些后，尝试回答下面的问题：为什么在三角形的左下角是黑的?：<a href="https://learnopengl.com/code_viewer.php?code=getting-started/shaders-exercise3">参考解答</a></li></ol><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">0</span>) <span class="keyword">in</span> <span class="type">vec3</span> aPos;   <span class="comment">// 位置变量的属性位置值为 0</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">1</span>) <span class="keyword">in</span> <span class="type">vec3</span> aColor; <span class="comment">// 颜色变量的属性位置值为 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec3</span> ourColor; <span class="comment">// 向片段着色器输出一个颜色</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">gl_Position</span> = <span class="type">vec4</span>(aPos.x,-aPos.y,aPos.z, <span class="number">1.0</span>);</span><br><span class="line">    ourColor = aColor; <span class="comment">// 将ourColor设置为我们从顶点数据那里得到的输入颜色</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">java === </span><br><span class="line"><span class="type">float</span> <span class="variable">offset</span> <span class="operator">=</span> <span class="number">0.5f</span>;</span><br><span class="line">            shaderProgram.setFloat(<span class="string">&quot;xOffset&quot;</span>,offset);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">glsl ===</span><br><span class="line">    #version <span class="number">330</span> core</span><br><span class="line"><span class="title function_">layout</span> <span class="params">(location = <span class="number">0</span>)</span> in vec3 aPos;   <span class="comment">// 位置变量的属性位置值为 0</span></span><br><span class="line">layout (location = <span class="number">1</span>) in vec3 aColor; <span class="comment">// 颜色变量的属性位置值为 1</span></span><br><span class="line"></span><br><span class="line">out vec3 ourColor; <span class="comment">// 向片段着色器输出一个颜色</span></span><br><span class="line"></span><br><span class="line">uniform <span class="type">float</span> xOffset;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    gl_Position = vec4(aPos.x + xOffset,-aPos.y,aPos.z, <span class="number">1.0</span>);</span><br><span class="line">    ourColor = aColor; <span class="comment">// 将ourColor设置为我们从顶点数据那里得到的输入颜色</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#version <span class="number">330</span> core</span><br><span class="line"><span class="title function_">layout</span> <span class="params">(location = <span class="number">0</span>)</span> in vec3 aPos;   <span class="comment">// 位置变量的属性位置值为 0</span></span><br><span class="line">layout (location = <span class="number">1</span>) in vec3 aColor; <span class="comment">// 颜色变量的属性位置值为 1</span></span><br><span class="line"></span><br><span class="line">out vec3 ourColor; <span class="comment">// 向片段着色器输出一个颜色</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    gl_Position = vec4(aPos.x,aPos.y,aPos.z, <span class="number">1.0</span>);</span><br><span class="line">    ourColor = aPos; <span class="comment">// 将ourColor设置为我们从顶点数据那里得到的输入颜色</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>黑是因为左下是0，0，0，1</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mixin进一步简介</title>
      <link href="/2023/12/04/mixin%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D/"/>
      <url>/2023/12/04/mixin%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="introduction"><a href="#introduction" class="headerlink" title="introduction"></a>introduction</h1><ol><li>Mixins是Fabric生态系统中的一个强大而重要的工具。它们的主要用途是修改基础游戏中的现有代码，可以通过注入自定义逻辑、删除机制或修改数值来实现。</li><li>Mixins必须使用Java编写，即使你使用Kotlin或其他语言。</li><li>如果想要了解Mixin的功能、用法和机制的详细步骤，可以查看Mixin官方Wiki。Mixin Javadoc中还有其他文档可供参考。</li><li>Fabric Wiki还提供了几篇实际示例和解释的文章，可以提供更多实用的示例和解释。</li></ol><h2 id="文献"><a href="#文献" class="headerlink" title="文献"></a>文献</h2><p>[Introduction to Mixins <a href="https://fabricmc.net/wiki/tutorial:mixin_introduction">Fabric Wiki] (fabricmc.net)</a></p><p><a href="https://github.com/SpongePowered/Mixin/wiki">Mixin Official Wiki</a>. </p><p><a href="https://jenkins.liteloader.com/view/Other/job/Mixin/javadoc/index.html">Mixin Javadoc</a>.</p><h2 id="Mixins"><a href="#Mixins" class="headerlink" title="Mixins"></a>Mixins</h2><p>一些mixin可能会导致冲突，但负责任地使用它们是为mod添加独特行为的关键。</p><p>Mixins有各种各样的口味，大致按偏好顺序排列：</p><ul><li>Adding Interfaces 添加接口</li><li>Callback Injectors 回调注入</li><li>Redirect Injectors 重定向注入</li><li>Overwrites 覆盖</li></ul><p>这不是一个完整的列表，而是一个快速的概述。这里省略了一些mixin类型。</p><h3 id="Adding-Interfaces"><a href="#Adding-Interfaces" class="headerlink" title="Adding Interfaces"></a>Adding Interfaces</h3><p>这可能是使用mixin最安全的方法之一。新的接口实现可以添加到任何Minecraft类中。然后你可以通过强制转换类来访问接口。这不会改变类的任何内容，只是增加了新的东西，因此不太可能发生冲突。</p><h3 id="Callback-Injectors"><a href="#Callback-Injectors" class="headerlink" title="Callback Injectors"></a>Callback Injectors</h3><p>回调注入器允许您将回调钩子添加到现有方法，以及该方法中的特定方法调用。它们还允许您拦截和更改方法的返回值，并提前返回。回调注入可以堆栈，因此不太可能导致mods之间的冲突。</p><h3 id="Redirect-Injectors"><a href="#Redirect-Injectors" class="headerlink" title="Redirect Injectors"></a>Redirect Injectors</h3><p>重定向使您可以使用自己的代码包装目标方法中的方法调用或变量访问。使用这些非常谨慎，一个目标调用或访问只能在所有MOD之间重定向一次。如果两个mod重定向相同的值，这将导致冲突。首先考虑回调注入。</p><h3 id="Overwrite"><a href="#Overwrite" class="headerlink" title="Overwrite"></a>Overwrite</h3><p>使用覆盖时要非常小心。它们完全替换方法，删除所有现有代码，并与方法上的任何其他类型的mixin冲突。它们极有可能不仅与其他MOD冲突，而且与Minecraft本身的更改也发生冲突。您很可能不需要覆盖来执行您想要执行的操作。</p><h1 id="Registering-Mixins"><a href="#Registering-Mixins" class="headerlink" title="Registering Mixins"></a>Registering Mixins</h1><ul><li><p>在资源文件夹中的fabric.mod.json文件中注册Mixins。</p></li><li><p>在fabric.mod.json文件中的mixins数组中添加元素来告诉Fabric应该在哪里查找Mixins。</p></li><li><p>使用fabric.mod.json文件来定义Fabric应该在哪里查找mixins.json文件。</p></li><li><p>mixins.json文件中定义了要注册的Mixin的详细信息。</p></li><li><p>通过添加元素到fabric.mod.json文件的mixins数组中，告诉Fabric在哪里注册Mixin。</p></li><li><p><img src="https://s2.loli.net/2023/12/04/1JrQlEjhxe7KBGd.png" alt="image-20231204225257597"></p></li><li><p>在mixins数组中提供字符串”<modid>.mixins.json”告诉Fabric加载在文件<modid>.mixins.json中定义的mixins。</p></li><li><p>需要定义要加载的mixins以及这些mixins的位置。</p></li><li><p>在注册的<modid>.mixins.json文件中完成上述定义。</p></li><li><p><img src="https://s2.loli.net/2023/12/04/n5aSWLP4x17vCYl.png" alt="image-20231204225501253"></p></li><li><p>在开始使用mixins时，你应该关注的四个主要字段是package字段以及mixins、client和server数组。</p></li><li><p>package字段定义了在哪个文件夹（包）中查找Mixins。</p></li><li><p>mixins数组定义了应该在客户端和服务器上加载的类。</p></li><li><p>client数组定义了应该在客户端上加载的类。</p></li><li><p>server数组定义了应该在服务器上加载的类。</p></li><li><p>根据这个逻辑：net.fabricmc.example.mixin.TitleScreenMixin是将在客户端上加载的mixin类。</p></li></ul><h1 id="Mixin-Injects"><a href="#Mixin-Injects" class="headerlink" title="Mixin Injects"></a>Mixin Injects</h1><h2 id="introduciton"><a href="#introduciton" class="headerlink" title="introduciton"></a>introduciton</h2><ul><li>Mixin Injects允许您在现有方法的指定位置放置自定义代码。</li><li>注入的标准形式如下所示：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;方法名或者签名&quot;, at = @At(&quot;注入点参考&quot;))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injectMethod</span><span class="params">(METHOD ARGS, CallbackInfo info)</span> &#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>注入参考点是指在方法体内注入代码的位置。可以使用几个选项来指定注入点，例如HEAD、RETURN、INVOKE和TAIL。</p></li><li><table><thead><tr><th align="left">Name</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">HEAD</td><td align="left">方法顶部</td></tr><tr><td align="left">RETURN</td><td align="left">每一个放回语句前</td></tr><tr><td align="left">INVOKE</td><td align="left">在方法调用时</td></tr><tr><td align="left">TAIL</td><td align="left">在最终返回声明之前</td></tr></tbody></table></li><li><p>注入点可以引用语句或成员，目标值可以在@At中设置。目标值使用JVM字节码描述符来指定。</p></li><li><table><thead><tr><th align="left">Descriptor</th><th align="left">Primitive</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">B</td><td align="left">byte</td><td align="left">有符号字节</td></tr><tr><td align="left">C</td><td align="left">char</td><td align="left">基本多语言平面中的Unicode字符代码点，使用UTF-16编码</td></tr><tr><td align="left">D</td><td align="left">double</td><td align="left">双精度浮点数</td></tr><tr><td align="left">F</td><td align="left">float</td><td align="left">单精度浮点数</td></tr><tr><td align="left">I</td><td align="left">int</td><td align="left">有符号整数</td></tr><tr><td align="left">J</td><td align="left">long</td><td align="left">有符号长整数</td></tr><tr><td align="left">L<em>ClassName</em>;</td><td align="left">reference</td><td align="left">ClassName*的实例</td></tr><tr><td align="left">S</td><td align="left">short</td><td align="left">有符号短整型</td></tr><tr><td align="left">Z</td><td align="left">boolean</td><td align="left"><code>true</code> or <code>false</code></td></tr><tr><td align="left">[</td><td align="left">reference</td><td align="left">一个数组维度</td></tr></tbody></table></li><li><p>方法描述符由方法名称、包含参数类型的括号和返回类型组成。如果返回类型是void，需要使用V（Void Descriptor Type）作为类型。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> Object <span class="title function_">m</span><span class="params">(<span class="type">int</span> i, <span class="type">double</span>[] d, Thread t)</span></span><br><span class="line"></span><br><span class="line">m(I[DLjava/lang/Thread;)Ljava/lang/Object</span><br></pre></td></tr></table></figure><ul><li>方法“void foo(String bar)”的 方法描述符是“foo(Ljava&#x2F;lang&#x2F;String;)V”。</li><li>Generics’ types are left out, as generics don’t exist on runtime. So <code>Pair&lt;Integer, ? extends Task&lt;? super VillagerEntity&gt;‍&gt;</code> would become <code>Lcom/mojang/datafixers/util/Pair</code>.</li><li>@Inject 注解的方法始终具有 void 返回类型。方法名称和访问修饰符都不重要，使用描述注入作用的名称最佳。目标方法的参数首先放置在方法头中，后跟一个 CallbackInfo 对象。如果目标方法具有返回类型 (T)，则使用 CallbackInfoReturnable<T> 而非 CallbackInfo。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(CallbackInfo info)</span> &#123;</span><br><span class="line">    <span class="comment">// 执行初始化逻辑</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Inject</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">processRequest</span><span class="params">(String request, CallbackInfoReturnable&lt;Response&gt; info)</span> &#123;</span><br><span class="line">    <span class="comment">// 处理请求逻辑</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在方法中提前返回或取消操作时，可以使用CallbackInfo#cancel或CallbackInfoReturnable<T>#setReturnValue(T)。在@Inject注解中，cancellable必须设置为true才能使用这些功能。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;...&quot;, at = @At(&quot;...&quot;), cancellable = true)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>要注入构造函数，请使用 <init>()V 作为方法目标，其中 () 包含构造函数参数描述符。 在注入构造函数时，@At 必须设置为 TAIL 或 RETURN。 官方不支持其他形式的注入。 请注意，一些类的名称为 init 的方法与 <init> 不同。 不要混淆！</li><li>要注入静态构造函数，请使用 <clinit> 作为方法名。</li><li>例子(这是一个普通的init方法不是构造方法)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(TitleScreen.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExampleMixin</span> &#123;</span><br><span class="line"><span class="meta">@Inject(at = @At(&quot;HEAD&quot;), method = &quot;init()V&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(CallbackInfo info)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;This line is printed by an example mod mixin!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Mixin-Accessors-Invokers"><a href="#Mixin-Accessors-Invokers" class="headerlink" title="Mixin Accessors &amp; Invokers"></a>Mixin Accessors &amp; Invokers</h1><p>Mixin Accessors &amp; Invokers 是一种用于访问或修改非公共或 final 字段和方法的机制</p><h2 id="accessors"><a href="#accessors" class="headerlink" title="accessors"></a>accessors</h2><p>@Accessors注解用于访问字段。它允许开发者读取和写入原本无法访问的字段的值。</p><h3 id="Getting-a-value-from-the-field"><a href="#Getting-a-value-from-the-field" class="headerlink" title="Getting a value from the field"></a>Getting a value from the field</h3><p>假设你要访问MinecraftClient类的itemUseCooldown字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(MinecraftClient.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MinecraftClientAccessor</span> &#123;</span><br><span class="line">    <span class="meta">@Accessor</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getItemUseCooldown</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">itemUseCooldown</span> <span class="operator">=</span> ((MinecraftClientAccessor) MinecraftClient.getInstance()).getItemUseCooldown();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Setting-a-value-to-the-field"><a href="#Setting-a-value-to-the-field" class="headerlink" title="Setting a value to the field"></a>Setting a value to the field</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(MinecraftClient.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MinecraftClientAccessor</span> &#123;</span><br><span class="line">    <span class="meta">@Accessor(&quot;itemUseCooldown&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setItemUseCooldown</span><span class="params">(<span class="type">int</span> itemUseCooldown)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">((MinecraftClientAccessor) MinecraftClient.getInstance()).setItemUseCooldown(<span class="number">100</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Accessor-for-static-fields"><a href="#Accessor-for-static-fields" class="headerlink" title="Accessor for static fields"></a>Accessor for static fields</h2><p>假设我们希望访问VanillaLayeredBiomeSource类的BIOMES字段</p><h3 id="Getting-a-value-from-the-field-1"><a href="#Getting-a-value-from-the-field-1" class="headerlink" title="Getting a value from the field"></a>Getting a value from the field</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(VanillaLayeredBiomeSource.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">VanillaLayeredBiomeSourceAccessor</span> &#123;</span><br><span class="line">  <span class="meta">@Accessor(&quot;BIOMES&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> List&lt;RegistryKey&lt;Biome&gt;&gt; <span class="title function_">getBiomes</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AssertionError</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;RegistryKey&lt;Biome&gt;&gt; biomes = VanillaLayeredBiomeSourceAccessor.getBiomes();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Setting-a-value-to-the-field-1"><a href="#Setting-a-value-to-the-field-1" class="headerlink" title="Setting a value to the field"></a>Setting a value to the field</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(VanillaLayeredBiomeSource.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">VanillaLayeredBiomeSourceAccessor</span> &#123;</span><br><span class="line">  <span class="meta">@Accessor(&quot;BIOMES&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setBiomes</span><span class="params">(List&lt;RegistryKey&lt;Biome&gt;&gt; biomes)</span> &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AssertionError</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VanillaLayeredBiomeSourceAccessor.setBiomes(biomes);</span><br></pre></td></tr></table></figure><h2 id="Invoker"><a href="#Invoker" class="headerlink" title="Invoker"></a>Invoker</h2><p>@Invoker允许你方法。假设我们想要访问EndermanEntity类的teleportTo方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(EndermanEntity.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EndermanEntityInvoker</span> &#123;</span><br><span class="line">  <span class="meta">@Invoker(&quot;teleportTo&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">invokeTeleportTo</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> z)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">EndermanEntity</span> <span class="variable">enderman</span> <span class="operator">=</span> ...;</span><br><span class="line">((EndermanEntityInvoker) enderman).invokeTeleportTo(<span class="number">0.0D</span>, <span class="number">70.0D</span>, <span class="number">0.0D</span>);</span><br></pre></td></tr></table></figure><h2 id="Invoker-for-static-methods"><a href="#Invoker-for-static-methods" class="headerlink" title="Invoker for static methods"></a>Invoker for static methods</h2><p>假设我们想要调用BrewingRecipeRegistry类的方法registerPotionType</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(BrewingRecipeRegistry.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BrewingRecipeRegistryInvoker</span> &#123;</span><br><span class="line">  <span class="meta">@Invoker(&quot;registerPotionType&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">invokeRegisterPotionType</span><span class="params">(Item item)</span> &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AssertionError</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BrewingRecipeRegistryInvoker.invokeRegisterPotionType(item);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Mixin-redirectors"><a href="#Mixin-redirectors" class="headerlink" title="Mixin redirectors"></a>Mixin redirectors</h1><h2 id="introduction-1"><a href="#introduction-1" class="headerlink" title="introduction"></a>introduction</h2><p>重定向器（Redirectors）是可以替代方法调用、字段访问、对象创建和 instanceof 检查的方法。重定向器通过 @Redirect 注解声明，并且通常的格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Redirect(method = &quot;$&#123;signatureOfMethodInWhichToRedirect&#125;&quot;,</span></span><br><span class="line"><span class="meta">          at = @At(value = &quot;$&#123;injectionPointReference&#125;&quot;, target = &quot;$&#123;signature&#125;&quot;))</span></span><br><span class="line"><span class="keyword">public</span> ReturnType <span class="title function_">redirectSomeMethod</span><span class="params">(Arg0Type arg0, Arg1Type arg1)</span> &#123;</span><br><span class="line">    MyClass.doMyComputations();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> computeSomethingElse();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请参考特定的重定向教程，了解有关注入点引用的信息。</p><ul><li><a href="https://fabricmc.net/wiki/tutorial:mixin_redirectors_methods">redirecting methods</a></li><li><a href="https://fabricmc.net/wiki/tutorial:mixin_redirectors_fields">redirecting field access</a></li><li><a href="https://fabricmc.net/wiki/tutorial:mixin_redirectors_constructors">redirecting object creation</a></li><li><a href="https://fabricmc.net/wiki/tutorial:mixin_redirectors_instanceof">redirecting instanceof checks</a></li></ul><blockquote><p>由于重定向可能会导致模组之间冲突这里就不详细讲了</p></blockquote><h1 id="Mixin-Tips-WIP"><a href="#Mixin-Tips-WIP" class="headerlink" title="Mixin Tips (WIP)"></a>Mixin Tips (WIP)</h1><p>这是一些可能有用的不同技巧的集合。建议阅读以前的文章以了解技巧。</p><h3 id="Why-make-a-class-abstract-（为什么要创建一个抽象类？）"><a href="#Why-make-a-class-abstract-（为什么要创建一个抽象类？）" class="headerlink" title="Why make a class abstract? （为什么要创建一个抽象类？）"></a>Why make a class abstract? （为什么要创建一个抽象类？）</h3><p><strong>1. Prevent instantiation  （1.防止实例化）</strong></p><p>公平地说，你永远不应该实例化一个mixin类，主要是因为如果这个类没有在mixin环境中使用，它对java来说就没有意义了，还有其他方法可以访问mixin中声明的方法。</p><p>声明一个mixin类的抽象并不影响它的功能，并且它可以防止意外的实例化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">MixinClass</span> <span class="variable">foo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MixinClass</span>(); <span class="comment">// can&#x27;t do that with an abstract class</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>2. Make more elegant shadow methods</strong>(<strong>制作更优雅的shadow方法</strong>)</p><p>如果你想从你的目标类中访问一个不可访问的方法或字段到你的mixin类中，你需要使用 <code>@Shadow</code> 来使那个方法&#x2F;字段可见。</p><p>你可以通过使用虚拟方法体(dummy body)在普通类中完美地做到这一点:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Shadow</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">hiddenMethod</span><span class="params">()</span> &#123;<span class="comment">/*dummy body*/</span>&#125;</span><br></pre></td></tr></table></figure><p>但使用抽象方法（因此是抽象类）要优雅得多：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Shadow</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">hiddenMethod</span><span class="params">()</span>; <span class="comment">// no dummy body necessary</span></span><br></pre></td></tr></table></figure><p>注意：这不适用于私有方法，因为你不能有私有抽象方法，因此你需要使用普通方法。</p><p><strong>3. Access the <code>this</code> instance more easily</strong> 轻松地访问 <code>this</code> 实例</p><p>在mixin中，如果你想访问“this”实例，你必须在mixin类中进行强制转换：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">((TargetClass)(Object)<span class="built_in">this</span>).field/method();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是，只有当你的mixin类扩展&#x2F;实现了你的目标类所做的一切时，这才有效，这可能是一个痛苦，因为如果其中一个类&#x2F;接口有一个你需要实现的方法，你就会遇到一些麻烦。</p><p>幸运的是，这一切都可以通过使用抽象类来避免，在这种情况下，您不必实现方法，所有问题都可以避免。</p><h3 id="How-to-mixin-inner-classes-如何混合内部类"><a href="#How-to-mixin-inner-classes-如何混合内部类" class="headerlink" title="How to mixin inner classes 如何混合内部类"></a>How to mixin inner classes 如何混合内部类</h3><p><strong>1. Normal inaccessible inner classes 正规不可达内部类</strong></p><p>由于您不能从外部直接访问（并提及）这些类，因此需要使用mixin注释的“targets”字段来指定名称。</p><p>你可以使用外部类的完整名称，然后是 <code>$</code> ，最后是内部类的名称，如下所示：</p><p>Class: </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> some.random.<span class="keyword">package</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span> &#123;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">Inner</span> &#123;</span><br><span class="line">         <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">someRandomMethod</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Mixin with injection:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(targets = &quot;some.random.package.Outer$Inner&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMixin</span> &#123;</span><br><span class="line">    <span class="meta">@Inject(method = &quot;someRandomMethod()V&quot;, at = @At(&quot;HEAD&quot;)</span></span><br><span class="line"><span class="meta">    private void injected(CallbackInfo ci) &#123;</span></span><br><span class="line"><span class="meta">        // your code here</span></span><br><span class="line"><span class="meta">    &#125;</span></span><br><span class="line"><span class="meta">&#125;</span></span><br></pre></td></tr></table></figure><p>唯一需要注意的是，如果你想混入内部类构造函数，第一个参数必须是外部类的类型（这是编译器隐式添加的，以允许内部类访问外部类的实例方法）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;&lt;init&gt;(Lsome/random/package/Outer;)V&quot;, at = @At(&quot;HEAD&quot;)</span></span><br><span class="line"><span class="meta">private void injected(CallbackInfo ci) &#123;</span></span><br><span class="line"><span class="meta">    // your code here</span></span><br><span class="line"><span class="meta">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>2. Static inaccessible inner classes<br>静态不可访问的内部类</strong></p><p>这些和上面一样，唯一的区别是构造函数没有外部类的第一个参数（因为在静态内部类中，只有私有静态方法可以从内部类访问，因此不需要该参数）。</p><p><strong>3. Anonymous inner classes 3.匿名内部类</strong></p><p>这些与静态不可访问的内部类相同，唯一的区别是，由于它们没有名称，因此它们是按外观顺序声明的，例如：匿名内部类如果在我们前面的示例中声明，首先将命名为Outer$1，第二个将命名为Outer$2，第三个命名为Outer$3，依此类推（声明顺序是在源代码级别）。</p><h1 id="Mixin-Examples"><a href="#Mixin-Examples" class="headerlink" title="Mixin Examples"></a>Mixin Examples</h1><p>这是一些常用的混入（Mixin）示例。本页面旨在作为一个速查表。如果您还没有阅读过混入介绍，请参阅混入介绍。</p><h2 id="Mixing-into-a-private-inner-class"><a href="#Mixing-into-a-private-inner-class" class="headerlink" title="Mixing into a private inner class"></a>Mixing into a private inner class</h2><p>使用 targets 参数和 $ 符号来获取内部类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(targets = &quot;net.minecraft.client.render.block.BlockModelRenderer$AmbientOcclusionCalculator&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AmbientOcclusionCalculatorMixin</span> &#123;</span><br><span class="line">    <span class="comment">// do your stuff here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Access-the-this-instance-of-the-class-your-mixin-is-targeting访问混入目标类的实例"><a href="#Access-the-this-instance-of-the-class-your-mixin-is-targeting访问混入目标类的实例" class="headerlink" title="Access the this instance of the class your mixin is targeting访问混入目标类的实例"></a>Access the this instance of the class your mixin is targeting访问混入目标类的实例</h2><p>注意：在可能的情况下应避免双重转型。如果方法或字段来自目标类，请使用 <code>@Shadow</code>。如果方法或字段来自目标类的父类，请将混入类直接继承目标类的直接父类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(TargetClass.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMixin</span> <span class="keyword">extends</span> <span class="title class_">EveryThingThatTargetClassExtends</span> <span class="keyword">implements</span> <span class="title class_">EverythingThatTargetClassImplements</span> &#123;</span><br><span class="line">  <span class="meta">@Inject(method = &quot;foo()V&quot;, at = @At(&quot;HEAD&quot;))</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">    ((TargetClass)(Object)<span class="built_in">this</span>).methodOfTheTargetClass();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-into-the-head-of-a-static-block-注入到一个静态块的头部"><a href="#Injecting-into-the-head-of-a-static-block-注入到一个静态块的头部" class="headerlink" title="Injecting into the head of a static block 注入到一个静态块的头部"></a>Injecting into the head of a static block 注入到一个静态块的头部</h2><p>mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;&lt;clinit&gt;&quot;, at = @At(&quot;HEAD&quot;))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">    doSomething3();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">static &#123;</span><br><span class="line"><span class="addition">+   injected(new CallbackInfo(“&lt;clinit&gt;”, false));</span></span><br><span class="line">    doSomething1();</span><br><span class="line">    doSomething2();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-into-the-head-of-a-method-注入到一个方法的头部"><a href="#Injecting-into-the-head-of-a-method-注入到一个方法的头部" class="headerlink" title="Injecting into the head of a method 注入到一个方法的头部"></a>Injecting into the head of a method 注入到一个方法的头部</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()V&quot;, at = @At(&quot;HEAD&quot;))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">  doSomething4();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line"><span class="addition">+   injected(new CallbackInfo(&quot;foo&quot;, false));</span></span><br><span class="line">    doSomething1();</span><br><span class="line">    doSomething2();</span><br><span class="line">    doSomething3();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-into-the-tail-of-a-method注入到一个方法末尾"><a href="#Injecting-into-the-tail-of-a-method注入到一个方法末尾" class="headerlink" title="Injecting into the tail of a method注入到一个方法末尾"></a>Injecting into the tail of a method注入到一个方法末尾</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()V&quot;, at = @At(&quot;TAIL&quot;))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">  doSomething4();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    doSomething1();</span><br><span class="line">    if (doSomething2()) &#123;</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    doSomething3();</span><br><span class="line"><span class="addition">+   injected(new CallbackInfo(&quot;foo&quot;, false));</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-into-the-returns-of-a-method-注入到方法返回前"><a href="#Injecting-into-the-returns-of-a-method-注入到方法返回前" class="headerlink" title="Injecting into the returns of a method  注入到方法返回前"></a>Injecting into the returns of a method  注入到方法返回前</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()V&quot;, at = @At(&quot;RETURN&quot;))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">  doSomething4();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    doSomething1();</span><br><span class="line">    if (doSomething2()) &#123;</span><br><span class="line"><span class="addition">+     injected(new CallbackInfo(&quot;foo&quot;, false));</span></span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    doSomething3();</span><br><span class="line"><span class="addition">+   injected(new CallbackInfo(&quot;foo&quot;, false));</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-into-the-point-before-a-method-call-注入到一个方法调用前"><a href="#Injecting-into-the-point-before-a-method-call-注入到一个方法调用前" class="headerlink" title="Injecting into the point before a method call  注入到一个方法调用前"></a>Injecting into the point before a method call  注入到一个方法调用前</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()V&quot;, at = @At(value = &quot;INVOKE&quot;, target = &quot;La/b/c/Something;doSomething()V&quot;))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">  doSomething3();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    doSomething1();</span><br><span class="line">    Something something = new Something();</span><br><span class="line"><span class="addition">+   injected(new CallbackInfo(&quot;foo&quot;, false));</span></span><br><span class="line">    something.doSomething();</span><br><span class="line">    doSomething2();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-into-the-point-after-a-method-call"><a href="#Injecting-into-the-point-after-a-method-call" class="headerlink" title="Injecting into the point after a method call"></a>Injecting into the point after a method call</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()V&quot;, at = @At(value = &quot;INVOKE&quot;, target = &quot;La/b/c/Something;doSomething()V&quot;, shift = At.Shift.AFTER))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">  doSomething3();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    doSomething1();</span><br><span class="line">    Something something = new Something();</span><br><span class="line">    something.doSomething();</span><br><span class="line"><span class="addition">+   injected(new CallbackInfo(&quot;foo&quot;, false));</span></span><br><span class="line">    doSomething2();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-into-the-point-before-a-method-call-with-shift-amount-在方法调用之前以位移量注入的内容。"><a href="#Injecting-into-the-point-before-a-method-call-with-shift-amount-在方法调用之前以位移量注入的内容。" class="headerlink" title="Injecting into the point before a method call with shift amount 在方法调用之前以位移量注入的内容。"></a>Injecting into the point before a method call with shift amount 在方法调用之前以位移量注入的内容。</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()V&quot;, at = @At(value = &quot;INVOKE&quot;, target = &quot;La/b/c/Something;doSomething()V&quot;, shift = At.Shift.BY, by = 2))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">  doSomething3();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    doSomething1();</span><br><span class="line">    Something something = new Something();</span><br><span class="line">    something.doSomething();</span><br><span class="line">    doSomething2();</span><br><span class="line"><span class="addition">+   injected(new CallbackInfo(&quot;foo&quot;, false));</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-with-a-slice在切片范围内注入"><a href="#Injecting-with-a-slice在切片范围内注入" class="headerlink" title="Injecting with a slice在切片范围内注入"></a>Injecting with a slice在切片范围内注入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(</span></span><br><span class="line"><span class="meta">  method = &quot;foo()V&quot;,</span></span><br><span class="line"><span class="meta">  at = @At(</span></span><br><span class="line"><span class="meta">    value = &quot;INVOKE&quot;,</span></span><br><span class="line"><span class="meta">    target = &quot;La/b/c/Something;doSomething()V&quot;</span></span><br><span class="line"><span class="meta">  ),</span></span><br><span class="line"><span class="meta">  slice = @Slice(</span></span><br><span class="line"><span class="meta">    from = @At(value = &quot;INVOKE&quot;, target = &quot;La/b/c/Something;doSomething2()V&quot;),</span></span><br><span class="line"><span class="meta">    to = @At(value = &quot;INVOKE&quot;, target = &quot;La/b/c/Something;doSomething3()V&quot;)</span></span><br><span class="line"><span class="meta">  )</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">  doSomething5();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  public class Something &#123;</span><br><span class="line">    public void foo() &#123;</span><br><span class="line">      this.doSomething1();</span><br><span class="line"><span class="addition">+     // It will not inject into here because this is outside of the slice section</span></span><br><span class="line">      this.doSomething();</span><br><span class="line">      this.doSomething2();</span><br><span class="line"><span class="addition">+     injected(new CallbackInfo(&quot;foo&quot;, false));</span></span><br><span class="line">      this.doSomething();</span><br><span class="line">      this.doSomething3();</span><br><span class="line"><span class="addition">+     // It will not inject into here because this is outside of the slice section</span></span><br><span class="line">      this.doSomething();</span><br><span class="line">      this.doSomething4();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-and-cancelling-注入和取消"><a href="#Injecting-and-cancelling-注入和取消" class="headerlink" title="Injecting and cancelling 注入和取消"></a>Injecting and cancelling 注入和取消</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()V&quot;, at = @At(&quot;HEAD&quot;), cancellable = true)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci)</span> &#123;</span><br><span class="line">  ci.cancel();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line"><span class="addition">+   CallbackInfo ci = new CallbackInfo(&quot;foo&quot;, true);</span></span><br><span class="line"><span class="addition">+   injected(ci);</span></span><br><span class="line"><span class="addition">+   if (ci.isCancelled()) return;</span></span><br><span class="line">    doSomething1();</span><br><span class="line">    doSomething2();</span><br><span class="line">    doSomething3();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Injecting-and-cancelling-with-a-return-value-注入取消并且返回数值"><a href="#Injecting-and-cancelling-with-a-return-value-注入取消并且返回数值" class="headerlink" title="Injecting and cancelling with a return value 注入取消并且返回数值"></a>Injecting and cancelling with a return value 注入取消并且返回数值</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()I;&quot;, at = @At(&quot;HEAD&quot;), cancellable = true)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfoReturnable&lt;Integer&gt; cir)</span> &#123;</span><br><span class="line">  cir.setReturnValue(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  public int foo() &#123;</span><br><span class="line"><span class="addition">+   CallbackInfoReturnable&lt;Integer&gt; cir = new CallbackInfoReturnable&lt;Integer&gt;(&quot;foo&quot;, true);</span></span><br><span class="line"><span class="addition">+   injected(cir);</span></span><br><span class="line"><span class="addition">+   if (cir.isCancelled()) return cir.getReturnValue();</span></span><br><span class="line">    doSomething1();</span><br><span class="line">    doSomething2();</span><br><span class="line">    doSomething3();</span><br><span class="line">    return 10;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Capturing-local-values-捕获本地数值"><a href="#Capturing-local-values-捕获本地数值" class="headerlink" title="Capturing local values 捕获本地数值"></a>Capturing local values 捕获本地数值</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()V&quot;, at = @At(value = &quot;TAIL&quot;), locals = LocalCapture.CAPTURE_FAILHARD)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfo ci, TypeArg1 arg1)</span> &#123;</span><br><span class="line">  <span class="comment">//CAPTURE_FAILHARD: If the calculated locals are different from the expected values, throws an error.</span></span><br><span class="line">  arg1.doSomething4();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    TypeArg1 arg1 = getArg1();</span><br><span class="line">    arg1.doSomething1();</span><br><span class="line">    arg1.doSomething2();</span><br><span class="line">    TypeArg2 arg2 = getArg2();</span><br><span class="line">    arg2.doSomething3();</span><br><span class="line"><span class="addition">+   injected(new CallbackInfo(&quot;foo&quot;, false), arg1);</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Modifying-a-return-value-修改返回值"><a href="#Modifying-a-return-value-修改返回值" class="headerlink" title="Modifying a return value 修改返回值"></a>Modifying a return value 修改返回值</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inject(method = &quot;foo()I;&quot;, at = @At(&quot;RETURN&quot;), cancellable = true)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(CallbackInfoReturnable&lt;Integer&gt; cir)</span> &#123;</span><br><span class="line">  cir.setReturnValue(cir.getReturnValue() * <span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  public int foo() &#123;</span><br><span class="line">    doSomething1();</span><br><span class="line">    doSomething2();</span><br><span class="line"><span class="deletion">-   return doSomething3() + 7;</span></span><br><span class="line"><span class="addition">+   int i = doSomething3() + 7;</span></span><br><span class="line"><span class="addition">+   CallbackInfoReturnable&lt;Integer&gt; cir = new CallbackInfoReturnable&lt;Integer&gt;(&quot;foo&quot;, true, i);</span></span><br><span class="line"><span class="addition">+   injected(cir);</span></span><br><span class="line"><span class="addition">+   if (cir.isCancelled()) return cir.getReturnValue();</span></span><br><span class="line"><span class="addition">+   return i;</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Redirecting-a-method-call-重定向一个方法调用"><a href="#Redirecting-a-method-call-重定向一个方法调用" class="headerlink" title="Redirecting a method call 重定向一个方法调用"></a>Redirecting a method call 重定向一个方法调用</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Redirect(method = &quot;foo()V&quot;, at = @At(value = &quot;INVOKE&quot;, target = &quot;La/b/c/Something;doSomething(I)I&quot;))</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">injected</span><span class="params">(Something something, <span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> x + <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    doSomething1();</span><br><span class="line">    Something something = new Something();</span><br><span class="line"><span class="deletion">-   int i = something.doSomething(10);</span></span><br><span class="line"><span class="addition">+   int i = injected(something, 10);</span></span><br><span class="line">    doSomething2();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Redirecting-a-get-field-重定向获得一个字段"><a href="#Redirecting-a-get-field-重定向获得一个字段" class="headerlink" title="Redirecting a get field  重定向获得一个字段"></a>Redirecting a get field  重定向获得一个字段</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Redirect(method = &quot;foo()V&quot;, at = @At(value = &quot;FIELD&quot;, target = &quot;La/b/c/Something;aaa:I&quot;, opcode = Opcodes.GETFIELD))</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">injected</span><span class="params">(Something something)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">12345</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  public class Something &#123;</span><br><span class="line">    public int aaa;</span><br><span class="line">    public void foo() &#123;</span><br><span class="line">      doSomething1();</span><br><span class="line"><span class="deletion">-     if (this.aaa &gt; doSomething2()) &#123;</span></span><br><span class="line"><span class="addition">+     if (injected(this) &gt; doSomething2()) &#123;</span></span><br><span class="line">        doSomething3();</span><br><span class="line">      &#125;</span><br><span class="line">      doSomething4();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Redirecting-a-put-field-重定向-放置一个字段"><a href="#Redirecting-a-put-field-重定向-放置一个字段" class="headerlink" title="Redirecting a put field 重定向 放置一个字段"></a>Redirecting a put field 重定向 放置一个字段</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Redirect(method = &quot;foo()V&quot;, at = @At(value = &quot;FIELD&quot;, target = &quot;La/b/c/Something;aaa:I&quot;, opcode = Opcodes.PUTFIELD))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(Something something, <span class="type">int</span> x)</span> &#123;</span><br><span class="line">  something.aaa = x + doSomething5();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  public class Something &#123;</span><br><span class="line">    public int aaa;</span><br><span class="line">    public void foo() &#123;</span><br><span class="line">      doSomething1();</span><br><span class="line"><span class="deletion">-     this.aaa = doSomething2() + doSomething3();</span></span><br><span class="line"><span class="addition">+     inject(this, doSomething2() + doSomething3());</span></span><br><span class="line">      doSomething4();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Modifying-an-argument-修改一个参数"><a href="#Modifying-an-argument-修改一个参数" class="headerlink" title="Modifying an argument 修改一个参数"></a>Modifying an argument 修改一个参数</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModifyArg(method = &quot;foo()V&quot;, at = @At(value = &quot;INVOKE&quot;, target = &quot;La/b/c/Something;doSomething(ZIII)V&quot;), index = 2)</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">injected</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> x * <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    doSomething1();</span><br><span class="line">    Something something = new Something();</span><br><span class="line"><span class="deletion">-   something.doSomething(true, 1, 4, 5);</span></span><br><span class="line"><span class="addition">+   something.doSomething(true, 1, injected(4), 5);</span></span><br><span class="line">    doSomething2();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Modifying-multiple-arguments-修改多个参数"><a href="#Modifying-multiple-arguments-修改多个参数" class="headerlink" title="Modifying multiple arguments 修改多个参数"></a>Modifying multiple arguments 修改多个参数</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModifyArgs(method = &quot;foo()V&quot;, at = @At(value = &quot;INVOKE&quot;, target = &quot;La/b/c/Something;doSomething(IDZ)V&quot;))</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">injected</span><span class="params">(Args args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a0</span> <span class="operator">=</span> args.get(<span class="number">0</span>);</span><br><span class="line">    <span class="type">double</span> <span class="variable">a1</span> <span class="operator">=</span> args.get(<span class="number">1</span>);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">a2</span> <span class="operator">=</span> args.get(<span class="number">2</span>);</span><br><span class="line">    args.set(<span class="number">0</span>, a0 + <span class="number">3</span>);</span><br><span class="line">    args.set(<span class="number">1</span>, a1 * <span class="number">2.0D</span>);</span><br><span class="line">    args.set(<span class="number">2</span>, !a2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    doSomething1();</span><br><span class="line">    Something something = new Something();</span><br><span class="line"><span class="deletion">-   something.doSomething(3, 2.5D, true);</span></span><br><span class="line"><span class="addition">+   // Actually, synthetic subclass of Args is generated at runtime,</span></span><br><span class="line"><span class="addition">+   // but we omit the details to make it easier to understand the concept.</span></span><br><span class="line"><span class="addition">+   Args args = new Args(new Object[] &#123; 3, 2.5D, true &#125;);</span></span><br><span class="line"><span class="addition">+   injected(args);</span></span><br><span class="line"><span class="addition">+   something.doSomething(args.get(0), args.get(1), args.get(2));</span></span><br><span class="line">    doSomething2();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Modifying-a-parameter-修改parameter"><a href="#Modifying-a-parameter-修改parameter" class="headerlink" title="Modifying a parameter 修改parameter"></a>Modifying a parameter 修改parameter</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModifyVariable(method = &quot;foo(ZIII)V&quot;, at = @At(&quot;HEAD&quot;), ordinal = 1)</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">injected</span><span class="params">(<span class="type">int</span> y)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> y * <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  public void foo(boolean b, int x, int y, int z) &#123;</span><br><span class="line"><span class="addition">+   y = injected(y);</span></span><br><span class="line">    doSomething1();</span><br><span class="line">    doSomething2();</span><br><span class="line">    doSomething3();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Modifying-a-local-variable-on-an-assignment-修改一个局域变量"><a href="#Modifying-a-local-variable-on-an-assignment-修改一个局域变量" class="headerlink" title="Modifying a local variable on an assignment 修改一个局域变量"></a>Modifying a local variable on an assignment 修改一个局域变量</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModifyVariable(method = &quot;foo()V&quot;, at = @At(&quot;STORE&quot;), ordinal = 1)</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">double</span> <span class="title function_">injected</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> x * <span class="number">1.5D</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line">    int i0 = doSomething1();</span><br><span class="line">    double d0 = doSomething2();</span><br><span class="line"><span class="deletion">-   double d1 = doSomething3() + 0.8D;</span></span><br><span class="line"><span class="addition">+   double d1 = injected(doSomething3() + 0.8D);</span></span><br><span class="line">    double d2 = doSomething4();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Modifying-a-constant-修改一个常量"><a href="#Modifying-a-constant-修改一个常量" class="headerlink" title="Modifying a constant 修改一个常量"></a>Modifying a constant 修改一个常量</h2><p>Mixin:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModifyConstant(method = &quot;foo()V&quot;, constant = @Constant(intValue = 4))</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">injected</span><span class="params">(<span class="type">int</span> value)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> ++value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  public void foo() &#123;</span><br><span class="line"><span class="deletion">-   for (int i = 0; i &lt; 4; i++) &#123;</span></span><br><span class="line"><span class="addition">+   for (int i = 0; i &lt; injected(4); i++) &#123;</span></span><br><span class="line">      doSomething(i);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="Exporting-Mixin-Classes-导出Mixin类"><a href="#Exporting-Mixin-Classes-导出Mixin类" class="headerlink" title="Exporting Mixin Classes 导出Mixin类"></a>Exporting Mixin Classes 导出Mixin类</h1><p>在调试mixin时，能够看到已完成的类以及插入的更改和注入是非常有用的。Mixin提供了一个标志，允许这样做：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dmixin.debug.export=true</span><br></pre></td></tr></table></figure><p>这应该放在您的VM选项中。加载类后，它们将出现在 <code>\run\.mixin.out</code> 中</p><p><img src="https://fabricmc.net/wiki/lib/exe/fetch.php?tok=68f5a2&media=https://i.imgur.com/d7oKQkg.png" alt="img"></p><h3 id="Only-Exporting-Required-Classes-仅导出必需的类"><a href="#Only-Exporting-Required-Classes-仅导出必需的类" class="headerlink" title="Only Exporting Required Classes 仅导出必需的类"></a>Only Exporting Required Classes 仅导出必需的类</h3><p>转储每一个混合类可能是有用的，但通常是不必要的，确实会减慢minecraft的速度。Mixin提供了一个方便的注释，用于将调试功能应用于单个mixin：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Debug(export = true)</span> <span class="comment">// Enables exporting for the targets of this mixin</span></span><br><span class="line"><span class="meta">@Mixin(...)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMixin</span> &#123;</span><br><span class="line">    <span class="comment">// Mixin code here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：某些类可能在游戏运行（或世界加载）之前不会出现。</p><h1 id="Interface-Injection-接口注入"><a href="#Interface-Injection-接口注入" class="headerlink" title="Interface Injection 接口注入"></a>Interface Injection 接口注入</h1><p>这是Loom 0.11引入的一项新技术，用于将方法添加到特定的现有类中。更具体地说，您可以创建一个接口，然后将此接口注入到类中。因此，目标类将获取接口的所有方法，就好像它总是拥有它们一样。接口注入是一个编译时的特性，这意味着Mixin也应该被用来将接口实现到目标类中。</p><p>这对库特别有用，有了它，你可以向现有的类添加新的方法并使用它们，而不需要每次都转换或重新实现接口。</p><p>让我们用一个例子更好地解释：</p><p>这个例子的范围是将下面的方法添加到 <code>net.minecraft.fluid.FlowableFluid</code> 中，以获得桶清空时的声音。这通常是不可能的，因为 <code>net.minecraft.fluid.FlowableFluid</code> 没有类似的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;SoundEvent&gt; <span class="title function_">getBucketEmptySound</span><span class="params">()</span></span><br></pre></td></tr></table></figure><p>要将方法添加到类中，首先需要创建一个接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.fabricmc.example;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BucketEmptySoundGetter</span> &#123;</span><br><span class="line"><span class="comment">// The methods in an injected interface MUST be default,</span></span><br><span class="line"><span class="comment">// otherwise code referencing them won&#x27;t compile!</span></span><br><span class="line"><span class="keyword">default</span> Optional&lt;SoundEvent&gt; <span class="title function_">getBucketEmptySound</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> Optional.empty();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在你需要用一个mixin实现这个接口，把这个接口实现到 <code>net.minecraft.fluid.FlowableFluid</code> 中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mixin(FlowableFluid.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MixinFlowableFluid</span> <span class="keyword">implements</span> <span class="title class_">BucketEmptySoundGetter</span> &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Optional&lt;SoundEvent&gt; <span class="title function_">getBucketEmptySound</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//This is how to get the default sound, copied from BucketItem class.</span></span><br><span class="line">    <span class="keyword">return</span> Optional.of(((FlowableFluid) (Object) <span class="built_in">this</span>).isIn(FluidTags.LAVA) ? SoundEvents.ITEM_BUCKET_EMPTY_LAVA : SoundEvents.ITEM_BUCKET_EMPTY);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，你需要将接口注入到 <code>net.minecraft.fluid.FlowableFluid</code> 中。可以将以下代码片段添加到fabric.mod.json文件中，以向 <code>net.minecraft.fluid.FlowableFluid</code> 类添加一个或多个接口。请注意，这里所有的类名都必须使用“内部名称”，即使用斜线而不是点（ <code>path/to/my/Class</code> ）。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;loom:injected_interfaces&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;net/minecraft/class_3609&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;net/fabricmc/example/BucketEmptySoundGetter&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>现在你可以使用新的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;SoundEvent&gt; sound = mytestfluid.getBucketEmptySound();</span><br></pre></td></tr></table></figure><p>您也可以在扩展FlowableFluid的类中重写此方法以实现自定义行为。</p><h1 id="更进一步？"><a href="#更进一步？" class="headerlink" title="更进一步？"></a>更进一步？</h1><p><a href="https://github.com/SpongePowered/Mixin/wiki">Home · SpongePowered&#x2F;Mixin Wiki (github.com)</a></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[Introduction to Mixins <a href="https://fabricmc.net/wiki/tutorial:mixin_introduction">Fabric Wiki] (fabricmc.net)</a></p><p>[Registering Mixins <a href="https://fabricmc.net/wiki/tutorial:mixin_registration">Fabric Wiki] (fabricmc.net)</a></p><p>[Mixin Injects <a href="https://fabricmc.net/wiki/tutorial:mixin_injects">Fabric Wiki] (fabricmc.net)</a></p><p>[Mixin Accessors &amp; Invokers <a href="https://fabricmc.net/wiki/tutorial:mixin_accessors">Fabric Wiki] (fabricmc.net)</a></p><p>[Introduction to Modding with Fabric <a href="https://fabricmc.net/wiki/tutorial:introduction">Fabric Wiki] — 使用Fabric进行改装的简介[Fabric Wiki] (fabricmc.net)</a></p><p>[Mixin Tips (WIP) <a href="https://fabricmc.net/wiki/tutorial:mixin_tips">Fabric Wiki] — Mixin Tips（Mixin Tips）[织物Wiki] (fabricmc.net)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> java </tag>
            
            <tag> fabric </tag>
            
            <tag> mixin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl03你好，三角形</title>
      <link href="/2023/12/04/opengl03%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
      <url>/2023/12/04/opengl03%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%89%E8%A7%92%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="你好，三角形"><a href="#你好，三角形" class="headerlink" title="你好，三角形"></a>你好，三角形</h1><blockquote><p>在学习此节之前，建议将这三个单词先记下来：</p><ul><li>顶点数组对象：Vertex Array Object，VAO</li><li>顶点缓冲对象：Vertex Buffer Object，VBO</li><li>元素缓冲对象：Element Buffer Object，EBO 或 索引缓冲对象 Index Buffer Object，IBO</li></ul><p>当指代这三个东西的时候，可能使用的是全称，也可能用的是英文缩写，翻译的时候和原文保持的一致。由于没有英文那样的分词间隔，中文全称的部分可能不太容易注意。但请记住，缩写和中文全称指代的是一个东西。</p></blockquote><p>在OpenGL中，事物都存在于3D空间中，但屏幕和窗口是2D像素数组。因此，OpenGL的主要任务就是将3D坐标转换为适应屏幕的2D像素。图形渲染管线是管理这个转换过程的一系列阶段。它可以分为两个主要部分：将3D坐标转换为2D坐标，然后将2D坐标转换为有颜色的像素。</p><ul><li><p>图形渲染管线作用</p></li><li><p>2D坐标 和2D像素的意思</p></li></ul><p>图形渲染管线可以被划分为几个阶段，每个阶段将会把前一个阶段的输出作为输入。</p><p>图形渲染管线的每个阶段都是高度专门化的，并且可以并行执行。因此，现代的显卡具有成千上万个小处理核心，每个核心在GPU上为管线的每个阶段运行自己的小程序，以快速处理数据。这些小程序被称为着色器（Shaders）。</p><p>着色器可以由开发者编写，并且可以替代默认的着色器，从而更精细地控制渲染管线的特定部分。由于它们在GPU上运行，所以可以节省宝贵的CPU时间。OpenGL着色器使用OpenGL着色器语言（GLSL）编写。</p><ul><li><p>什么是着色器</p></li><li><p>着色器语言是什么</p></li></ul><p>蓝色部分代表的是我们可以注入自定义的着色器的部分。</p><p><img src="https://s2.loli.net/2023/12/07/tKN5xbi9d1oTm68.png" alt="image-20231207221731214"></p><ul><li>什么是顶点，顶点数据，顶点属性</li><li>什么是图元</li></ul><p>图形渲染管线的每个阶段都有特定的功能。顶点着色器将单个顶点作为输入，将3D坐标转换为另一种3D坐标，并对顶点属性进行处理。图元装配阶段将顶点装配成指定图元的形状。几何着色器可以生成新的顶点，构造出其他形状。光栅化阶段将图元映射为屏幕上的像素，并执行裁剪以提高效率。片段着色器计算像素的最终颜色，包括光照、阴影等高级效果。最后的阶段是Alpha测试和混合阶段，用于判断像素是否应该丢弃，并对物体进行混合。</p><ul><li>顶点着色器的作用</li><li>图元装配(Primitive Assembly)作用</li><li>几何着色器(Geometry Shader)作用</li><li>光栅化阶段(Rasterization Stage)作用</li><li>片段是什么？</li><li>片段着色器的作用</li><li>Alpha测试和混合(Blending)作用</li></ul><p>图形渲染管线非常复杂，包含许多可配置的部分。但对于大多数情况，只需要配置顶点着色器和片段着色器就足够了。几何着色器是可选的，通常可以使用默认的着色器。</p><h2 id="顶点输入"><a href="#顶点输入" class="headerlink" title="顶点输入"></a>顶点输入</h2><p>在使用OpenGL绘制图形之前，需要给OpenGL提供一些顶点数据。顶点数据是指图形的坐标信息，通常是三维坐标（x、y和z）。OpenGL只处理在-1.0到1.0范围内的坐标，这些坐标被称为标准化设备坐标（Normalized Device Coordinates），超出范围的坐标将不会显示在屏幕上。</p><ul><li>openGL处理什么范围的坐标，这些坐标被称为什么</li></ul><p>为了渲染一个三角形，需要指定三个顶点的坐标。在OpenGL中，顶点坐标以标准化设备坐标的形式定义，并且将z坐标设置为0.0，这样三角形的每个顶点的深度（与观察者的距离）都相同，使其看起来像是二维的。</p><p>标准化设备坐标是一个范围为-1.0到1.0的坐标空间，与常规屏幕坐标不同，其中y轴的正方向向上，坐标原点位于图像中心。为了将标准化设备坐标转换为屏幕坐标，需要进行视口变换（Viewport Transform）。</p><ul><li>标准化设备坐标到屏幕坐标过程</li></ul><p>顶点数据通过顶点缓冲对象（Vertex Buffer Objects, VBO）进行管理。VBO是在显卡内存中存储大量顶点数据的缓冲区。通过一次性发送大批数据到显卡，可以提高性能。</p><p>顶点缓冲对象是OpenGL中的一个对象，具有唯一的ID。通过生成和绑定VBO对象，可以配置OpenGL如何解释顶点数据并发送给显卡。</p><p>使用glBufferData函数将顶点数据复制到VBO的内存中。函数的参数包括目标缓冲类型、数据大小、实际数据以及数据管理方式等。</p><p>最后，需要创建顶点着色器和片段着色器来处理顶点数据。这些着色器将在显卡上创建内存用于储存顶点数据，并进行相应的处理。</p><ul><li><p>顶点数据在哪里处理，提高性能的手段是？</p></li><li><p>如何创建顶点缓冲区</p></li><li><p>如何将顶点缓冲区绑定到opengl上</p></li><li><p>如何将顶点数据复制到缓冲中</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// glBufferData是一个专门用来把用户定义的数据复制到当前绑定缓冲的函数。</span></span><br><span class="line"><span class="built_in">glBufferData</span>(GL_ARRAY_BUFFER, <span class="built_in">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class="line"><span class="comment">//它的第一个参数是目标缓冲的类型：顶点缓冲对象当前绑定到GL_ARRAY_BUFFER目标上</span></span><br><span class="line"><span class="comment">//第二个参数指定传输数据的大小(以字节为单位)；</span></span><br><span class="line"><span class="comment">//第三个参数是我们希望发送的实际数据。</span></span><br><span class="line"><span class="comment">//第四个参数指定了我们希望显卡如何管理给定的数据。</span></span><br><span class="line"><span class="comment">//GL_STATIC_DRAW ：数据不会或几乎不会改变。</span></span><br><span class="line"><span class="comment">//GL_DYNAMIC_DRAW：数据会被改变很多。</span></span><br><span class="line"><span class="comment">//GL_STREAM_DRAW ：数据每次绘制时都会改变。</span></span><br><span class="line"><span class="comment">//三角形的位置数据不会改变，每次渲染调用时都保持原样，所以它的使用类型最好是GL_STATIC_DRAW。如果，比如说一个缓冲中的数据将频繁被改变，那么使用的类型就是GL_DYNAMIC_DRAW或GL_STREAM_DRAW，这样就能确保显卡把数据放在能够高速写入的内存部分。</span></span><br></pre></td></tr></table></figure><h2 id="顶点着色器"><a href="#顶点着色器" class="headerlink" title="顶点着色器"></a>顶点着色器</h2><p>顶点着色器是在渲染过程中起作用的一种可编程着色器。在现代OpenGL中，至少需要设置一个顶点着色器和一个片段着色器才能进行渲染。这段内容简要介绍了着色器，以及如何配置两个简单的着色器来绘制第一个三角形。首先，需要使用OpenGL着色器语言GLSL编写顶点着色器，并对其进行编译以在程序中使用。</p><ul><li>做渲染至少需要什么的着色器</li><li>怎么编写顶点着色器</li></ul><p>非常基础的GLSL顶点着色器的源代码，有点像C语言 </p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">layout</span> (<span class="keyword">location</span> = <span class="number">0</span>) <span class="keyword">in</span> <span class="type">vec3</span> aPos;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">gl_Position</span> = <span class="type">vec4</span>(aPos.x, aPos.y, aPos.z, <span class="number">1.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一行是版本号和core模式，330指3.3，420指4.2类推</p><p>第二行 in关键字声明了输入顶点属性（Input Vertex Attribute)，本例中，只关心顶点位置数据，因此只声明了一个顶点属性。使用layout (location &#x3D; 0) 设置输入变量的位置量。</p><p>为了设置顶点着色器的输出，必须将位置数据赋值给预定义的 <code>gl_Position</code> 变量，该变量在幕后是一个 <code>vec4</code> 类型。在 <code>main</code> 函数的末尾，将 <code>gl_Position</code> 的值设置为该顶点着色器的输出。由于输入是一个3分量向量，必须将其转换为4分量向量。可以通过将 <code>vec3</code> 数据作为 <code>vec4</code> 构造函数的参数，并将 <code>w</code> 分量设置为 <code>1.0</code> 来完成此任务。</p><p>这个顶点着色器可能是最简单的形式，因为它直接将输入数据传递到着色器的输出。在实际的程序中，输入数据通常不是标准化设备坐标，因此首先需要将它们转换为OpenGL可视区域内的坐标。</p><h2 id="编译着色器"><a href="#编译着色器" class="headerlink" title="编译着色器"></a>编译着色器</h2><ul><li><p>怎么创建顶点着色器</p></li><li><p>怎么把编写的着色器代码附加到顶点着色器上</p></li><li><p>怎么编译着色器</p></li><li><p>怎么查看编译是否错误</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glShaderSource</span>(vertexShader, <span class="number">1</span>, &amp;vertexShaderSource, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">glCompileShader</span>(vertexShader);</span><br></pre></td></tr></table></figure><p>glShaderSource函数把要编译的着色器对象作为第一个参数。第二参数指定了传递的源码字符串数量，这里只有一个。第三个参数是顶点着色器真正的源码，第四个参数我们先设置为<code>NULL</code>。</p><p>检查错误的代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>  success;</span><br><span class="line"><span class="type">char</span> infoLog[<span class="number">512</span>];</span><br><span class="line"><span class="built_in">glGetShaderiv</span>(vertexShader, GL_COMPILE_STATUS, &amp;success);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!success)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">glGetShaderInfoLog</span>(vertexShader, <span class="number">512</span>, <span class="literal">NULL</span>, infoLog);</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\n&quot;</span> &lt;&lt; infoLog &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="片段着色器"><a href="#片段着色器" class="headerlink" title="片段着色器"></a>片段着色器</h2><p>片段着色器是用于渲染三角形的最后一个着色器，它负责计算像素最终的颜色输出。在这里，我们的片段着色器会持续输出橘黄色。</p><blockquote><p>在计算机图形中，颜色通常由红、绿、蓝和透明度四个元素组成，通常缩写为RGBA。在OpenGL或GLSL中，颜色的每个部分强度通常设置在0.0到1.0之间。例如，设置红色为1.0、绿色为1.0会得到两种颜色的混合，即黄色。通过调整这三种颜色分量的不同强度，可以生成超过1600万种不同的颜色！</p></blockquote><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    FragColor = <span class="type">vec4</span>(<span class="number">1.0</span>f, <span class="number">0.5</span>f, <span class="number">0.2</span>f, <span class="number">1.0</span>f);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>片段着色器只需要一个输出变量，即表示最终输出颜色的4分量向量。通过声明 <code>out</code> 关键字，我们定义了一个名为 <code>FragColor</code> 的输出变量。接下来，我们将一个具有1.0 Alpha 值（完全不透明）的橘黄色 <code>vec4</code> 赋值给颜色输出。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> fragmentShader;</span><br><span class="line">fragmentShader = <span class="built_in">glCreateShader</span>(GL_FRAGMENT_SHADER);</span><br><span class="line"><span class="built_in">glShaderSource</span>(fragmentShader, <span class="number">1</span>, &amp;fragmentShaderSource, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">glCompileShader</span>(fragmentShader);</span><br></pre></td></tr></table></figure><p>编译片段着色器的过程与顶点着色器类似，只不过使用了 <code>GL_FRAGMENT_SHADER</code> 常量作为着色器类型。创建着色器对象、将源码附加到着色器对象上并编译。</p><ul><li>怎么编写片段着色器代码</li><li>怎么创建片段着色器</li><li>怎么将着色器代码附加到片段着色器</li><li>怎么编译</li><li>怎么处理错误</li></ul><h3 id="着色器程序"><a href="#着色器程序" class="headerlink" title="着色器程序"></a>着色器程序</h3><p>着色器程序对象是将多个着色器合并并最终链接完成的版本。为了使用先前编译的着色器，我们需要将它们链接成一个着色器程序对象，然后在渲染对象时激活这个着色器程序。已激活的着色器程序会在我们发送渲染调用时被使用。</p><p>将着色器链接至程序时，它会将每个着色器的输出连接到下一个着色器的输入。如果输出和输入不匹配，就会产生连接错误。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> shaderProgram;</span><br><span class="line">shaderProgram = <span class="built_in">glCreateProgram</span>();</span><br></pre></td></tr></table></figure><p>创建程序对象很简单，使用 <code>glCreateProgram()</code> 函数创建一个程序，并返回一个新的程序对象的ID引用。接着，需要将之前编译的着色器附加到程序对象上，然后用 <code>glLinkProgram()</code> 进行链接。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glAttachShader</span>(shaderProgram, vertexShader);</span><br><span class="line"><span class="built_in">glAttachShader</span>(shaderProgram, fragmentShader);</span><br><span class="line"><span class="built_in">glLinkProgram</span>(shaderProgram);</span><br></pre></td></tr></table></figure><blockquote><p>就像着色器的编译一样，我们也可以检测链接着色器程序是否失败，并获取相应的日志。与上面不同，我们不会调用glGetShaderiv和glGetShaderInfoLog，现在我们使用：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glGetProgramiv</span>(shaderProgram, GL_LINK_STATUS, &amp;success);</span><br><span class="line"><span class="keyword">if</span>(!success) &#123;</span><br><span class="line">    <span class="built_in">glGetProgramInfoLog</span>(shaderProgram, <span class="number">512</span>, <span class="literal">NULL</span>, infoLog);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>一旦链接成功，可以使用 <code>glUseProgram()</code> 函数激活这个程序对象，从而使每个着色器调用和渲染调用都使用这个程序对象（之前定义的着色器）。</p><p>在链接着色器对象至程序对象之后，记得删除着色器对象，因为它们不再需要了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glDeleteShader</span>(vertexShader);</span><br><span class="line"><span class="built_in">glDeleteShader</span>(fragmentShader);</span><br></pre></td></tr></table></figure><p>现在，我们已经将输入顶点数据发送给了GPU，并告诉了GPU如何处理顶点和片段着色器中的数据。不过，OpenGL还需要了解如何解释内存中的顶点数据，并将其与顶点着色器的属性进行链接。需要告诉OpenGL怎么做才能继续。</p><ul><li>着色器程序对象如何创建</li><li>如何使用着色器程序对象，以及如何删除着色器对象</li><li>如何看是否有错误</li></ul><h2 id="链接顶点属性"><a href="#链接顶点属性" class="headerlink" title="链接顶点属性"></a>链接顶点属性</h2><ul><li><strong>链接顶点属性：</strong><ul><li>顶点着色器允许指定以顶点属性形式的输入，但需要手动指定输入数据的哪一部分对应顶点着色器的哪个属性。使用 <code>glVertexAttribPointer</code> 来告诉OpenGL如何解析顶点数据到顶点属性。</li><li>使用 <code>glEnableVertexAttribArray</code> 启用顶点属性，默认情况下是禁用的。</li><li>重复这个过程来配置所有顶点属性，并在渲染前设置。</li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">3</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)<span class="number">0</span>);</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><ul><li>第一个参数指定我们要配置的顶点属性。还记得我们在顶点着色器中使用<code>layout(location = 0)</code>定义了position顶点属性的位置值(Location)吗？它可以把顶点属性的位置值设置为<code>0</code>。因为我们希望把数据传递到这一个顶点属性中，所以这里我们传入<code>0</code>。</li><li>第二个参数指定顶点属性的大小。顶点属性是一个<code>vec3</code>，它由3个值组成，所以大小是3。</li><li>第三个参数指定数据的类型，这里是GL_FLOAT(GLSL中<code>vec*</code>都是由浮点数值组成的)。</li><li>下个参数定义我们是否希望数据被标准化(Normalize)。如果我们设置为GL_TRUE，所有数据都会被映射到0（对于有符号型signed数据是-1）到1之间。我们把它设置为GL_FALSE。</li><li>第五个参数叫做步长(Stride)，它告诉我们在连续的顶点属性组之间的间隔。由于下个组位置数据在3个<code>float</code>之后，我们把步长设置为<code>3 * sizeof(float)</code>。要注意的是由于我们知道这个数组是紧密排列的（在两个顶点属性之间没有空隙）我们也可以设置为0来让OpenGL决定具体步长是多少（只有当数值是紧密排列时才可用）。一旦我们有更多的顶点属性，我们就必须更小心地定义每个顶点属性之间的间隔，我们在后面会看到更多的例子（译注: 这个参数的意思简单说就是从这个属性第二次出现的地方到整个数组0位置之间有多少字节）。</li><li>最后一个参数的类型是<code>void*</code>，所以需要我们进行这个奇怪的强制类型转换。它表示位置数据在缓冲中起始位置的偏移量(Offset)。由于位置数据在数组的开头，所以这里是0。我们会在后面详细解释这个参数。</li></ul><blockquote><p>每个顶点属性从一个VBO管理的内存中获得它的数据，而具体是从哪个VBO（程序中可以有多个VBO）获取则是通过在调用glVertexAttribPointer时绑定到GL_ARRAY_BUFFER的VBO决定的。由于在调用glVertexAttribPointer之前绑定的是先前定义的VBO对象，顶点属性<code>0</code>现在会链接到它的顶点数据。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 0. 复制顶点数组到缓冲中供OpenGL使用</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"><span class="built_in">glBufferData</span>(GL_ARRAY_BUFFER, <span class="built_in">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class="line"><span class="comment">// 1. 设置顶点属性指针</span></span><br><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">3</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)<span class="number">0</span>);</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 2. 当我们渲染一个物体时要使用着色器程序</span></span><br><span class="line"><span class="built_in">glUseProgram</span>(shaderProgram);</span><br><span class="line"><span class="comment">// 3. 绘制物体</span></span><br><span class="line"><span class="built_in">someOpenGLFunctionThatDrawsOurTriangle</span>();</span><br></pre></td></tr></table></figure><ul><li>如何连接顶点属性</li></ul><p><strong>顶点数组对象（VAO）：</strong></p><ul><li>VAO像VBO一样被绑定，用于存储属性配置，可以简化顶点属性的配置。一旦配置完成，可以在渲染时只需绑定对应的VAO即可。</li><li>VAO会储存关于顶点属性的配置和关联的VBO对象。</li></ul><p><img src="C:\Users\flan\AppData\Roaming\Typora\typora-user-images\image-20231208115605259.png" alt="image-20231208115605259"></p><ul><li>创建vao</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> VAO;</span><br><span class="line"><span class="built_in">glGenVertexArrays</span>(<span class="number">1</span>, &amp;VAO);</span><br></pre></td></tr></table></figure><ul><li>设置vao</li><li>使用vao</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ..:: 初始化代码（只运行一次 (除非你的物体频繁改变)） :: ..</span></span><br><span class="line"><span class="comment">// 1. 绑定VAO</span></span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="comment">// 2. 把顶点数组复制到缓冲中供OpenGL使用</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"><span class="built_in">glBufferData</span>(GL_ARRAY_BUFFER, <span class="built_in">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class="line"><span class="comment">// 3. 设置顶点属性指针</span></span><br><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">3</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)<span class="number">0</span>);</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line"><span class="comment">// ..:: 绘制代码（渲染循环中） :: ..</span></span><br><span class="line"><span class="comment">// 4. 绘制物体</span></span><br><span class="line"><span class="built_in">glUseProgram</span>(shaderProgram);</span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="built_in">someOpenGLFunctionThatDrawsOurTriangle</span>();</span><br></pre></td></tr></table></figure><p><strong>使用顶点数组对象：</strong></p><ul><li>初始化代码中，配置VAO和VBO以及相关的属性。</li><li>在渲染代码中，绑定VAO并使用 <code>glDrawArrays</code> 函数绘制图元。</li></ul><p>一般当你打算绘制多个物体时，你首先要生成&#x2F;配置所有的VAO（和必须的VBO及属性指针)，然后储存它们供后面使用。当我们打算绘制物体的时候就拿出相应的VAO，绑定它，绘制完物体后，再解绑VAO。</p><h3 id="我们一直期待的三角形"><a href="#我们一直期待的三角形" class="headerlink" title="我们一直期待的三角形"></a>我们一直期待的三角形</h3><p><strong>绘制图元：</strong></p><ul><li>使用 <code>glDrawArrays</code> 函数来绘制图元，指定图元类型、起始索引和顶点数量。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glUseProgram</span>(shaderProgram);</span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="built_in">glDrawArrays</span>(GL_TRIANGLES, <span class="number">0</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>glDrawArrays函数第一个参数是我们打算绘制的OpenGL图元的类型。由于我们在一开始时说过，我们希望绘制的是一个三角形，这里传递GL_TRIANGLES给它。第二个参数指定了顶点数组的起始索引，我们这里填<code>0</code>。最后一个参数指定我们打算绘制多少个顶点，这里是<code>3</code>（我们只从我们的数据中渲染一个三角形，它只有3个顶点长）。</p><h2 id="元素缓冲对象"><a href="#元素缓冲对象" class="headerlink" title="元素缓冲对象"></a>元素缓冲对象</h2><p>元素缓冲对象（EBO）是OpenGL中的索引缓冲区，解决了绘制重复顶点的问题。举例来说，绘制一个矩形需要两个三角形，但会有顶点重复。使用 EBO 可以只储存不同的顶点并设定绘制顺序，以减少资源浪费。</p><p><strong>EBO的作用：</strong></p><ul><li>对于一个矩形，定义4个不同的顶点，然后定义6个顶点的绘制顺序索引。</li><li>创建 EBO 对象并将索引复制到缓冲区，类似于 VBO 的操作。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> vertices[] = &#123;</span><br><span class="line">    <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="comment">// 右上角</span></span><br><span class="line">    <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,  <span class="comment">// 右下角</span></span><br><span class="line">    <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 左下角</span></span><br><span class="line">    <span class="number">-0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>   <span class="comment">// 左上角</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> indices[] = &#123;</span><br><span class="line">    <span class="comment">// 注意索引从0开始! </span></span><br><span class="line">    <span class="comment">// 此例的索引(0,1,2,3)就是顶点数组vertices的下标，</span></span><br><span class="line">    <span class="comment">// 这样可以由下标代表顶点组合成矩形</span></span><br><span class="line"></span><br><span class="line">    <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// 第一个三角形</span></span><br><span class="line">    <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// 第二个三角形</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> EBO;</span><br><span class="line"><span class="built_in">glGenBuffers</span>(<span class="number">1</span>, &amp;EBO)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);</span><br><span class="line">glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);</span><br><span class="line">glDrawElements(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>第一个参数指定了我们绘制的模式，这个和glDrawArrays的一样。第二个参数是我们打算绘制顶点的个数，这里填6，也就是说我们一共需要绘制6个顶点。第三个参数是索引的类型，这里是GL_UNSIGNED_INT。最后一个参数里我们可以指定EBO中的偏移量（或者传递一个索引数组，但是这是当你不在使用索引缓冲对象的时候），但是我们会在这里填写0。</p><p>元素缓冲对象（EBO）是OpenGL中的索引缓冲区，解决了绘制重复顶点的问题。举例来说，绘制一个矩形需要两个三角形，但会有顶点重复。使用 EBO 可以只储存不同的顶点并设定绘制顺序，以减少资源浪费。</p><ul><li><strong>使用 EBO：</strong><ul><li>使用 <code>glDrawElements</code> 函数替换 <code>glDrawArrays</code> 函数，指定绘制模式、顶点数量和索引类型。</li><li>绘制时，指定 <code>GL_ELEMENT_ARRAY_BUFFER</code> 的绑定，告诉 OpenGL 从 EBO 中获取索引进行绘制。</li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ..:: 初始化代码 :: ..</span></span><br><span class="line"><span class="comment">// 1. 绑定顶点数组对象</span></span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="comment">// 2. 把我们的顶点数组复制到一个顶点缓冲中，供OpenGL使用</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"><span class="built_in">glBufferData</span>(GL_ARRAY_BUFFER, <span class="built_in">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class="line"><span class="comment">// 3. 复制我们的索引数组到一个索引缓冲中，供OpenGL使用</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ELEMENT_ARRAY_BUFFER, EBO);</span><br><span class="line"><span class="built_in">glBufferData</span>(GL_ELEMENT_ARRAY_BUFFER, <span class="built_in">sizeof</span>(indices), indices, GL_STATIC_DRAW);</span><br><span class="line"><span class="comment">// 4. 设定顶点属性指针</span></span><br><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">3</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)<span class="number">0</span>);</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line"><span class="comment">// ..:: 绘制代码（渲染循环中） :: ..</span></span><br><span class="line"><span class="built_in">glUseProgram</span>(shaderProgram);</span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="built_in">glDrawElements</span>(GL_TRIANGLES, <span class="number">6</span>, GL_UNSIGNED_INT, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">glBindVertexArray</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="附加资源"><a href="#附加资源" class="headerlink" title="附加资源"></a>附加资源</h2><ul><li><a href="http://antongerdelan.net/opengl/hellotriangle.html">antongerdelan.net&#x2F;hellotriangle</a>：Anton Gerdelan的渲染第一个三角形教程。</li><li><a href="https://open.gl/drawing">open.gl&#x2F;drawing</a>：Alexander Overvoorde的渲染第一个三角形教程。</li><li><a href="http://antongerdelan.net/opengl/vertexbuffers.html">antongerdelan.net&#x2F;vertexbuffers</a>：顶点缓冲对象的一些深入探讨。</li><li><a href="https://learnopengl.com/#!In-Practice/Debugging">调试</a>：这个教程中涉及到了很多步骤，如果你在哪卡住了，阅读一点调试的教程是非常值得的（只需要阅读到调试输出部分）。</li></ul><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>为了更好的掌握上述概念，我准备了一些练习。建议在继续下一节的学习之前先做完这些练习，确保你对这些知识有比较好的理解。</p><ol><li>添加更多顶点到数据中，使用glDrawArrays，尝试绘制两个彼此相连的三角形：<a href="https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/2.3.hello_triangle_exercise1/hello_triangle_exercise1.cpp">参考解答</a></li><li>创建相同的两个三角形，但对它们的数据使用不同的VAO和VBO：<a href="https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/2.4.hello_triangle_exercise2/hello_triangle_exercise2.cpp">参考解答</a></li><li>创建两个着色器程序，第二个程序使用一个不同的片段着色器，输出黄色；再次绘制这两个三角形，让其中一个输出为黄色：<a href="https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/2.5.hello_triangle_exercise3/hello_triangle_exercise3.cpp">参考解答</a></li></ol><h1 id="Java代码-三角形"><a href="#Java代码-三角形" class="headerlink" title="Java代码 三角形"></a>Java代码 三角形</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;layout (location = 0) in vec3 aPos;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\0&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;out vec4 FragColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// build and compile our shader program</span></span><br><span class="line">        <span class="comment">// ------------------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">vertexShader</span> <span class="operator">=</span> glCreateShader(GL_VERTEX_SHADER);</span><br><span class="line">        glShaderSource(vertexShader,vertexShaderSource);</span><br><span class="line">        glCompileShader(vertexShader);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">success</span> <span class="operator">=</span> glGetShaderi(vertexShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(vertexShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// fragment shader</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">fragmentShader</span> <span class="operator">=</span> glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">        glShaderSource(fragmentShader,fragmentShaderSource);</span><br><span class="line">        glCompileShader(fragmentShader);</span><br><span class="line"></span><br><span class="line">        success = glGetShaderi(fragmentShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(fragmentShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// link shaders</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> glCreateProgram();</span><br><span class="line">        glAttachShader(shaderProgram,vertexShader);</span><br><span class="line">        glAttachShader(shaderProgram,fragmentShader);</span><br><span class="line">        glLinkProgram(shaderProgram);</span><br><span class="line">        <span class="comment">// check for linking errors</span></span><br><span class="line">        success = glGetProgrami(shaderProgram,GL_LINK_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetProgramInfoLog(shaderProgram);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        glDeleteShader(vertexShader);</span><br><span class="line">        glDeleteShader(fragmentShader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// left</span></span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// right</span></span><br><span class="line">                <span class="number">0.0f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>  <span class="comment">// top</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">3</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute&#x27;s bound vertex buffer object so afterwards we can safely unbind</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// uncomment this call to draw in wireframe polygons.</span></span><br><span class="line"><span class="comment">//        glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glUseProgram(shaderProgram);</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawArrays(GL_TRIANGLES,<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteProgram(shaderProgram);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java代码-元素缓冲对象"><a href="#Java代码-元素缓冲对象" class="headerlink" title="Java代码 元素缓冲对象"></a>Java代码 元素缓冲对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;layout (location = 0) in vec3 aPos;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\0&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;out vec4 FragColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// build and compile our shader program</span></span><br><span class="line">        <span class="comment">// ------------------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">vertexShader</span> <span class="operator">=</span> glCreateShader(GL_VERTEX_SHADER);</span><br><span class="line">        glShaderSource(vertexShader,vertexShaderSource);</span><br><span class="line">        glCompileShader(vertexShader);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">success</span> <span class="operator">=</span> glGetShaderi(vertexShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(vertexShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// fragment shader</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">fragmentShader</span> <span class="operator">=</span> glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">        glShaderSource(fragmentShader,fragmentShaderSource);</span><br><span class="line">        glCompileShader(fragmentShader);</span><br><span class="line"></span><br><span class="line">        success = glGetShaderi(fragmentShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(fragmentShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// link shaders</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> glCreateProgram();</span><br><span class="line">        glAttachShader(shaderProgram,vertexShader);</span><br><span class="line">        glAttachShader(shaderProgram,fragmentShader);</span><br><span class="line">        glLinkProgram(shaderProgram);</span><br><span class="line">        <span class="comment">// check for linking errors</span></span><br><span class="line">        success = glGetProgrami(shaderProgram,GL_LINK_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetProgramInfoLog(shaderProgram);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        glDeleteShader(vertexShader);</span><br><span class="line">        glDeleteShader(fragmentShader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="comment">// 右上角</span></span><br><span class="line">                <span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="comment">// 右下角</span></span><br><span class="line">                -<span class="number">0.5f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 左下角</span></span><br><span class="line">                -<span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>   <span class="comment">// 左上角</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">         <span class="type">int</span> indices[] = &#123;</span><br><span class="line">                <span class="comment">// 注意索引从0开始!</span></span><br><span class="line">                <span class="comment">// 此例的索引(0,1,2,3)就是顶点数组vertices的下标，</span></span><br><span class="line">                <span class="comment">// 这样可以由下标代表顶点组合成矩形</span></span><br><span class="line"></span><br><span class="line">                <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// 第一个三角形</span></span><br><span class="line">                <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// 第二个三角形</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,EBO);</span><br><span class="line">        glBufferData(GL_ELEMENT_ARRAY_BUFFER,indices,GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">3</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute&#x27;s bound vertex buffer object so afterwards we can safely unbind</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound.</span></span><br><span class="line"><span class="comment">//        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// You can unbind the VAO afterwards so other VAO calls won&#x27;t accidentally modify this VAO, but this rarely happens. Modifying other</span></span><br><span class="line">        <span class="comment">// VAOs requires a call to glBindVertexArray anyways so we generally don&#x27;t unbind VAOs (nor VBOs) when it&#x27;s not directly necessary.</span></span><br><span class="line">        glBindVertexArray(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// uncomment this call to draw in wireframe polygons.</span></span><br><span class="line"><span class="comment">//        glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glUseProgram(shaderProgram);</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawElements(GL_TRIANGLES,<span class="number">6</span>,GL_UNSIGNED_INT,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span>[] vertices = &#123;</span><br><span class="line">               -<span class="number">0.25f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">               <span class="number">0.25f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">               <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">               -<span class="number">0.25f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">               <span class="number">0.25f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">       &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> indices[] = &#123;</span><br><span class="line">               <span class="comment">// 注意索引从0开始!</span></span><br><span class="line">               <span class="comment">// 此例的索引(0,1,2,3)就是顶点数组vertices的下标，</span></span><br><span class="line">               <span class="comment">// 这样可以由下标代表顶点组合成矩形</span></span><br><span class="line"></span><br><span class="line">               <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="comment">// 第一个三角形</span></span><br><span class="line">               <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>,  <span class="comment">// 第二个三角形</span></span><br><span class="line">       &#125;;</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.25f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.25f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">         <span class="type">int</span> indices[] = &#123;</span><br><span class="line">                <span class="comment">// 注意索引从0开始!</span></span><br><span class="line">                <span class="comment">// 此例的索引(0,1,2,3)就是顶点数组vertices的下标，</span></span><br><span class="line">                <span class="comment">// 这样可以由下标代表顶点组合成矩形</span></span><br><span class="line">                <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="comment">// 第一个三角形</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO2</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO2</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,EBO);</span><br><span class="line">        glBufferData(GL_ELEMENT_ARRAY_BUFFER,indices,GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">3</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute&#x27;s bound vertex buffer object so afterwards we can safely unbind</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound.</span></span><br><span class="line"><span class="comment">//        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// You can unbind the VAO afterwards so other VAO calls won&#x27;t accidentally modify this VAO, but this rarely happens. Modifying other</span></span><br><span class="line">        <span class="comment">// VAOs requires a call to glBindVertexArray anyways so we generally don&#x27;t unbind VAOs (nor VBOs) when it&#x27;s not directly necessary.</span></span><br><span class="line">        glBindVertexArray(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//==================VAO2==============</span></span><br><span class="line"></span><br><span class="line">        glBindVertexArray(VAO2);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO2);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">3</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        glBindVertexArray(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFW;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.GLFWErrorCallback;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.GL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.glViewport;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL20.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL30.glBindVertexArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">vertexShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;layout (location = 0) in vec3 aPos;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\0&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;out vec4 FragColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fragmentShaderSource2</span> <span class="operator">=</span> <span class="string">&quot;#version 330 core\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;out vec4 FragColor;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;void main()\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;   FragColor = vec4(1.0f, 0.8f, 0.5f, 1.0f);\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// glfw: initialize and configure</span></span><br><span class="line">        <span class="comment">// ------------------------------</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="keyword">if</span> (!GLFW.glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwDefaultWindowHints();</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_FORWARD_COMPAT, GLFW.GLFW_TRUE);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw window creation</span></span><br><span class="line">        <span class="comment">// --------------------</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> GLFW.glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(window==<span class="number">0</span>)&#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            GLFW.glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GLFW.glfwMakeContextCurrent(window);</span><br><span class="line">        GLFW.glfwSetFramebufferSizeCallback(window,(window1, width, height) -&gt; glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height));</span><br><span class="line"><span class="comment">//        creates the necessary function pointers for OpenGL&#x27;s functions, making them accessible and usable within your Java code.</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// build and compile our shader program</span></span><br><span class="line">        <span class="comment">// ------------------------------------</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">vertexShader</span> <span class="operator">=</span> glCreateShader(GL_VERTEX_SHADER);</span><br><span class="line">        glShaderSource(vertexShader,vertexShaderSource);</span><br><span class="line">        glCompileShader(vertexShader);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">success</span> <span class="operator">=</span> glGetShaderi(vertexShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(vertexShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// fragment shader</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">fragmentShader</span> <span class="operator">=</span> glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">        glShaderSource(fragmentShader,fragmentShaderSource);</span><br><span class="line">        glCompileShader(fragmentShader);</span><br><span class="line"></span><br><span class="line">        success = glGetShaderi(fragmentShader, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(fragmentShader);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ===== fragmentshader2</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">fragmentShader2</span> <span class="operator">=</span> glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">        glShaderSource(fragmentShader2,fragmentShaderSource2);</span><br><span class="line">        glCompileShader(fragmentShader2);</span><br><span class="line"></span><br><span class="line">        success = glGetShaderi(fragmentShader2, GL_COMPILE_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetShaderInfoLog(fragmentShader2);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// link shaders</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">shaderProgram</span> <span class="operator">=</span> glCreateProgram();</span><br><span class="line">        glAttachShader(shaderProgram,vertexShader);</span><br><span class="line">        glAttachShader(shaderProgram,fragmentShader);</span><br><span class="line">        glLinkProgram(shaderProgram);</span><br><span class="line">        <span class="comment">// check for linking errors</span></span><br><span class="line">        success = glGetProgrami(shaderProgram,GL_LINK_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetProgramInfoLog(shaderProgram);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// link shaders2</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">shaderProgram2</span> <span class="operator">=</span> glCreateProgram();</span><br><span class="line">        glAttachShader(shaderProgram2,vertexShader);</span><br><span class="line">        glAttachShader(shaderProgram2,fragmentShader2);</span><br><span class="line">        glLinkProgram(shaderProgram2);</span><br><span class="line">        <span class="comment">// check for linking errors</span></span><br><span class="line">        success = glGetProgrami(shaderProgram2,GL_LINK_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (success == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">log</span> <span class="operator">=</span> glGetProgramInfoLog(shaderProgram2);</span><br><span class="line">            System.err.println(<span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> + log);</span><br><span class="line">        &#125;</span><br><span class="line">        glDeleteShader(vertexShader);</span><br><span class="line">        glDeleteShader(fragmentShader);</span><br><span class="line">        glDeleteShader(fragmentShader2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up vertex data (and buffer(s)) and configure vertex attributes</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] vertices = &#123;</span><br><span class="line">                -<span class="number">0.25f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.25f</span>, -<span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                -<span class="number">0.25f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                <span class="number">0.25f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">         <span class="type">int</span> indices[] = &#123;</span><br><span class="line">                <span class="comment">// 注意索引从0开始!</span></span><br><span class="line">                <span class="comment">// 此例的索引(0,1,2,3)就是顶点数组vertices的下标，</span></span><br><span class="line">                <span class="comment">// 这样可以由下标代表顶点组合成矩形</span></span><br><span class="line">                 <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="comment">// 第一个三角形</span></span><br><span class="line">                 <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>,  <span class="comment">// 第二个三角形</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">VBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="type">int</span> <span class="variable">VAO</span> <span class="operator">=</span>  glGenVertexArrays();</span><br><span class="line">        <span class="type">int</span> <span class="variable">EBO</span> <span class="operator">=</span> glGenBuffers();</span><br><span class="line">        <span class="comment">// bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).</span></span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER,VBO);</span><br><span class="line">        glBufferData(GL_ARRAY_BUFFER, vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,EBO);</span><br><span class="line">        glBufferData(GL_ELEMENT_ARRAY_BUFFER,indices,GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">        glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, <span class="literal">false</span>, <span class="number">3</span> * Float.BYTES, <span class="number">0</span>);</span><br><span class="line">        glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute&#x27;s bound vertex buffer object so afterwards we can safely unbind</span></span><br><span class="line">        glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound.</span></span><br><span class="line"><span class="comment">//        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// You can unbind the VAO afterwards so other VAO calls won&#x27;t accidentally modify this VAO, but this rarely happens. Modifying other</span></span><br><span class="line">        <span class="comment">// VAOs requires a call to glBindVertexArray anyways so we generally don&#x27;t unbind VAOs (nor VBOs) when it&#x27;s not directly necessary.</span></span><br><span class="line">        glBindVertexArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// uncomment this call to draw in wireframe polygons.</span></span><br><span class="line"><span class="comment">//        glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!GLFW.glfwWindowShouldClose(window))&#123;</span><br><span class="line">            <span class="comment">// input</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            <span class="keyword">if</span> (GLFW.glfwGetKey(window, GLFW.GLFW_KEY_ESCAPE) == GLFW.GLFW_PRESS) &#123;</span><br><span class="line">                GLFW.glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// render</span></span><br><span class="line">            <span class="comment">// -----</span></span><br><span class="line">            glClearColor(<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">0.2f</span>,<span class="number">1.0f</span>);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw our first triangle</span></span><br><span class="line">            glUseProgram(shaderProgram);</span><br><span class="line">            glBindVertexArray(VAO);</span><br><span class="line">            glDrawElements(GL_TRIANGLES,<span class="number">6</span>,GL_UNSIGNED_INT,<span class="number">0</span>);</span><br><span class="line">            glUseProgram(shaderProgram2);</span><br><span class="line">            glDrawElements(GL_TRIANGLES,<span class="number">3</span>,GL_UNSIGNED_INT,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//            glDrawArrays(GL_TRIANGLES,0,3);</span></span><br><span class="line">            <span class="comment">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)</span></span><br><span class="line">            <span class="comment">// -------------------------------------------------------------------------------</span></span><br><span class="line">            GLFW.glfwSwapBuffers(window);</span><br><span class="line">            GLFW.glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// optional: de-allocate all resources once they&#x27;ve outlived their purpose:</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">        glDeleteVertexArrays(VAO);</span><br><span class="line">        glDeleteBuffers(VBO);</span><br><span class="line">        glDeleteBuffers(EBO);</span><br><span class="line">        glDeleteProgram(shaderProgram);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// glfw: terminate, clearing all previously allocated GLFW resources.</span></span><br><span class="line">        <span class="comment">// ------------------------------------------------------------------</span></span><br><span class="line">        GLFW.glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文-DFSN网络</title>
      <link href="/2023/12/03/%E8%AE%BA%E6%96%87-DFSN%E7%BD%91%E7%BB%9C/"/>
      <url>/2023/12/03/%E8%AE%BA%E6%96%87-DFSN%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="一种用于高分辨率双时间遥感图像变化检测的深度监督图像融合网络"><a href="#一种用于高分辨率双时间遥感图像变化检测的深度监督图像融合网络" class="headerlink" title="一种用于高分辨率双时间遥感图像变化检测的深度监督图像融合网络"></a>一种用于高分辨率双时间遥感图像变化检测的深度监督图像融合网络</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>高分辨率遥感图像中的变化检测对于理解地表变化至关重要。考虑到高分辨率图像中精细的图像细节和复杂的纹理特征所带来的挑战，传统的变化检测方法不适合这项任务，因此提出了许多基于深度学习的变化检测算法来提高变化检测性能。尽管最先进的基于深度特征的方法优于所有其他基于深度学习的变化检测方法，但现有基于深度特征方法中的网络大多是从最初提出的用于单图像语义分割的架构中修改而来的。将这些网络转移到变化检测任务中仍然存在一些关键问题。在本文中，我们提出了一种用于高分辨率双时间遥感图像变化检测的深度监督图像融合网络（IFN）。具体地说，首先通过全卷积双层结构提取双时间图像的高度代表性的深度特征。然后，将提取的深度特征输入到深度监督差异判别网络（DDN）中进行变化检测。为了提高输出变化图中对象的边界完整性和内部紧凑性，通过用于变化图重建的注意力模块，将原始图像的多层次深度特征与图像差异特征融合。通过直接将变化映射损失引入网络中的中间层，进一步增强了DDN，并以端到端的方式对整个网络进行训练。IFN应用于一个公开可用的数据集，以及一个由谷歌地球覆盖中国不同城市的多源双时间图像组成的具有挑战性的数据集。视觉解释和定量评估都证实，与最先进的方法相比，IFN通过返回具有完整边界和高度内部紧凑性的变化区域，优于文献中的四种基准方法。</p><h2 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h2><p>Change detection</p><p>Deep supervision network</p><p>image fusion</p><p>high resolution remote sensing image</p><p>image difference discrimination</p><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p>变化检测旨在识别同一区域多时相图像中的差异。监测双时相遥感图像中的差异对于理解陆地表面变化至关重要。使用遥感图像进行变化检测已广泛应用于各种应用,如灾害损害评估,土地覆盖制图和城市扩张调查。随着高分辨率光学传感器(如WorldView-3 GeoEys-1,QuickBird和高分二号)的发展,高分辨率遥感图像的日益增多,极大拓宽了变化检测在高分辨率双时相图像中的潜在应用范围。数十年来,变化检测研究一直在遥感社区开展。传统变化检测方法可以大致分为三类:1)基于图像算术的,2)基于图像变换的和3)后分类方法。基于图像算术的方法直接比较多时相图像的像素值,以产生图像差异图,在此基础上应用阈值将像素分类为变化类或不变类。图像差分(Singh, 1986),图像回归(Jackson, 1983)和图像比值(Todd, 1977)等算术运算通常用于图像比较。基于图像算术的方法的关键是决定阈值边界的位置,以区分变化像素和不变像素(Singh, 1989)。最近,一些其他基于机器学习的方法如随机森林回归,支持向量机和核回归也已被提出用于遥感图像变化检测(Zerrouki等人,2018; Luppino等人,2019; Padron-Hidalgo等人,2019)。例如,Luppino等人(2019)首先利用亲和矩阵从共定位补丁中创建伪训练数据。然后,在伪训练数据上测试了四种不同的机器学习算法,以将一个图像的域转换到另一个域,以实现异构变化检测。基于图像变换的方法将图像光谱组合转换为特定的特征空间,以区分变化像素。主成分分析(PCA)是基于图像变换的方法中应用最广泛的降维算法之一(Kuncheva和Faithfull,2014)。Saha等人(2019)提出使用循环一致的生成对抗网络(CycleGAN)以非监督的方式将不同传感器的图像转换到相同的域中,并通过深度特征变化向量分析进一步实现变化检测。由于基于像素的分析忽略了空间上下文信息,因此提出了基于对象的变化检测方法。对象基础方法的主要思想是从分割后的图像对象中提取特征,并识别对象状态的变化(Chen等人,2012)。在Celik(2009)的工作中,PCA应用于图像差异图上以从对象中提取代表性特征。在后分类方法中,对双时相图像进行独立分类和标记。通过直接比较分类结果提取变化区域(Wu等人,2017)。算术基础和变换基础方法是典型的非监督方法。为了提高变化检测的性能,许多学者将变化检测视为在监督方式下明确查找土地覆盖过渡的问题。最流行的监督方法是后分类。后分类方法规避了在不同时间原始图像中的变化检测困难。但是,这些方法对分类结果高度敏感(Deng等人,2008)。算术基础和变换基础方法高度依赖于为判别性特征提取经验设计的算法,这些算法在高分辨率图像上无法获得满意的结果。此外,像素级方法中差异图像派生中的错误,对象级方法中分割对象的不确定性以及双时相图像在后分类方法中的误分类错误不可避免地通过变化检测的不同阶段传播,并最终对结果产生负面影响。高分辨率图像中传达的细节图像和复杂的纹理特征为变化检测任务带来了新的挑战。这导致了深度学习基础变化检测方法的兴起。在基于像素和基于对象的方法中,首先通过深度学习技术(如深度信念网络,堆叠去噪自动编码器和卷积神经网络(CNN))(El Amin等人,2017; Lei等人,2019b; Zhang等人,2016)提取像素或对象的深度特征。之后,通过深度特征比较生成差异图像或变化向量。最终变化图通过聚类或基于阈值的分类方法产生。受益于深度神经网络强大的高级特征提取能力,这些方法的性能优于传统方法。然而,像素级和对象级方法中的误差传播问题仍然存在。基于完全卷积网络(FCN)实现的深度特征方法被提出(Alcantarilla等人,2018; Bromley等人,1994; Caye Daudt等人,2018; Daudt等人,2018; Peng等人, 2019; Shelhamer等人,2017)。深度特征方法将双时相图像转换为高级空间,并将深度特征作为分析单元。这些方法在网络内集成了特征提取和差异判别操作,以端到端的方式直接产生最终变化图。值得注意的是,这些网络大多数都是从为单图像语义分割提出的网络修改而来的。将这些网络转移用于双时相图像中的变化检测通常会遇到一些关键问题,包括早期融合方法中对个别原始图像信息深度特征的缺乏,后期融合方法中代表性原始图像特征的低下以及异构特征融合问题。</p><p>在这篇文章中,我们提出了一种深度监督的图像融合网络,用于高分辨率双时相遥感图像的变化检测。首先,通过完全卷积双流架构并行提取双时相图像的高度代表性深度特征。然后,提取的特征被顺序地馈送到差异判别网络进行变化检测。在差异判别网络中利用注意力模块有效地融合原始图像深度特征和图像差异特征以帮助重建变化图。此外,为进一步提高网络性能,通过在差异判别网络的中间层直接引入变化检测损失来实现深度监督。</p><p>论文的其余部分组织如下:第2节回顾了当前的基于深度学习的变化检测方法。本节还提出了问题陈述和拟议解决方案。第3节介绍了所提出的方法。实验和讨论见第4节。第5节总结全文。</p><h2 id="2-相关工作和问题说明"><a href="#2-相关工作和问题说明" class="headerlink" title="2. 相关工作和问题说明"></a>2. 相关工作和问题说明</h2><p>在第2.1节中,我们在广泛的文献综述后,根据分析单元将基于深度学习的变化检测方法分类为三种类别:1)基于像素的方法,2)基于对象的方法,3)基于深度特征的方法。 之后,陈述了现有基于深度学习的方法的问题。 为了使我们的工作符合最新的技术发展,我们将研究重点放在基于深度特征的方法上。 因此,在2.2节中,具体讨论了现有基于深度特征的方法的问题,并简要概述了拟议的解决方案。</p><h3 id="2-1基于深度学习的变化检测方法"><a href="#2-1基于深度学习的变化检测方法" class="headerlink" title="2.1基于深度学习的变化检测方法"></a>2.1基于深度学习的变化检测方法</h3><p>基于像素的方法遵循与传统基于图像变换的方法类似的过程。图像首先通过深度神经网络转换为深度特征空间,然后逐像素比较深度特征以区分变化像素。例如,Zhang等人(2016)利用深度信念网络将双时相图像转换为高级特征空间。然后,将双时相变化特征映射到2D极坐标域以描述变化信息。 Saha等人(2019)使用了一个预先训练用于语义分割的CNN来从原始图像中提取深度特征。通过变化向量分析生成变化图。 在Hou等人(2017)和Peng和Guan(2019)的工作中,应用预训练的VGG-16架构在多时相图像上进行特征提取。总之,在基于像素的方法中,首先应用深度学习将原始图像转换为高级特征空间。 然后,通过深度特征选择和逐像素比较生成差异图。 最后,在差异图上应用基于阈值的方法、基于聚类的方法和变化向量分析来区分变化像素。 基于对象的方法将分割后的对象作为变化检测的分析单元。 Lei等人(2019b)提出在分割后的超像素上应用堆叠去噪自动编码器来实现基于超像素的变化检测。 Lv等人(2018)使用了堆叠收缩自动编码器从超像素中提取时间变化特征,然后使用简单的线性聚类来生成变化图。 在El Amin等人(2017)的工作中,从多尺度区域中通过预训练的CNN提取的深度特征进行了拼接以扩展深度特征,以克服单个超像素的有限特征。基于对象的变化检测方法遵循“图像分割 - 对象特征提取 - 特征差异分析 - 聚类或阈值分类”过程。总之,对于基于像素和基于对象的变化检测方法,深度信念网络、堆叠去噪自动编码器、CNN等深度学习技术被利用来从像素级或对象级提取深度特征,从中派生出差异图或差异特征向量。 通过这种方式,将原始图像转换为高级特征空间,其中保留了关键信息,同时消除了噪声。 在上述深度学习技术中,CNN是最广泛使用的深度特征提取器(Lv等人,2018)。 虽然应用深度学习进行代表性特征提取的方法优于基于图像算术和基于变换的方法,但误差传播效应仍然存在。 此外,从图像差异图生成变化图仍然遇到传统变化检测方法中经验阈值确定等问题。</p><p>大多数基于像素和基于对象的方法不使用标注数据的监督。 为了克服基于像素和基于对象方法的缺点,并且为了从可用的标注图像中学习有益的指导,已经引入了端到端深度学习体系结构,即完全卷积神经网络(FCN),以监督的方式进行基于深度特征的变化检测。 FCN最初由Long等人(2015)提出,用于图像分割任务。 通过用上采样层替换全连接层,可以将下采样特征恢复为输入图像的原始大小,以实现端到端分类。 根据它们管理双时相图像的方式,可以将这些方法分类为两类:早期融合方法和后期融合方法。 在早期融合方法中,不同时刻拍摄的图像被堆叠为一个输入图像。 例如,在Alcantarilla等人(2018)的工作中,首先将两个双时相街景图像(每个图像有三个通道)拼接成一个具有六个通道的图像。 然后,将六通道图像输入FCN以实现街景图像变化检测。 类似地,Peng等人(2019)将双时相遥感图像组合为一个输入,然后输入修改后的UNet ++架构进行遥感图像变化检测。 与早期融合方法中将双时相图像组合为一个输入不同,后期融合方法将双时相图像中的每一个都作为一个输入(Bromley等人,1994)。 首先,两个独立的网络流水线分别提取双时相图像的特征。 然后,在随后的网络层中进一步组合和比较提取的特征以生成变化图。 基于这一概念,命名为Siamese网络的网络已经被提出用于变化检测。 Siamese网络由具有相同层设置和参数值的两个子网络组成,每个子网络接收一个图像作为输入。 Caye Daudt等人(2018)提出使用Siamese网络进行变化检测,并与早期融合方法进行了比较。 比较结果证明了Siamese网络的效率。 在Caye Daudt等人(2018)的工作基础上,Guo等人(2018)通过在网络中添加对比损失来修改完全卷积Siamese网络,从而改进了性能。</p><h3 id="2-2-问题陈述及解决方案"><a href="#2-2-问题陈述及解决方案" class="headerlink" title="2.2.问题陈述及解决方案"></a>2.2.问题陈述及解决方案</h3><p>基于深度特征的方法以端到端的方式在FCN中集成了原始图像特征提取和图像差异判别。网络中的参数通过反向传播自动更新。经过一系列训练周期后,网络中的参数得到微调,具有变化检测能力。尽管最新的基于深度特征的方法已取得优于任何其他方法的性能,但现有的基于深度特征的体系结构仍存在一些局限性:</p><ol><li><p>为了将语义分割网络迁移用于变化检测任务,早期融合方法简单地将双时相图像拼接成一个图像,以满足单输入的要求。这些分割网络共享一个关键相似之处:使用跳跃连接将深层特征与低层特征组合(Zhou等人,2018)。由于在输入网络之前将双时相图像融合为一个输入,因此早期融合网络的早期层无法提供单个原始图像的信息性深度特征来帮助图像重建,这在后续会导致变化图具有破碎的对象边界和差的对象内部紧凑性。</p></li><li><p>为了提取双时相图像的深度特征,后期融合方法应用接收两个输入的网络分别处理每个双时相图像。特征提取和差异判别通过一系列卷积和池化层在一个集成的网络中进行链接,其中较低的层负责特征提取,而更深的层负责差异判别。由于反向传播是从最后一个差异判别层开始到集成框架中的第一个特征提取层,因此消失梯度的存在会阻止梯度向后流动,并阻止较低层学习有用的特征(Glorot和Bengio,2010; Mao等人,2018; Lei等人,2019a; Liu等人,2020)。因此,训练不良的特征提取层(即较低层)会产生代表性较低的双时相图像特征,因此在差异判别过程之后,变化图会受到较差的图像质量的影响。</p></li><li><p>拼接深度原始图像特征和图像差异特征会产生一个融合问题。令我们分别表示从双时相图像T1和T2提取的特征为fT1和fT2。图像差异特征表示为dT1T2。两个独立提取的特征集fT1和fT2由来自图像T1和T2的高级特征组成。它们对于原始图像重建很有效,但是它们缺乏图像差异信息。dT1T2是通过一组基于fT1和fT2的卷积和池化操作计算出来的,它包含代表T1和T2之间的图像差异的信息特征。dT1T2负责差异判别,而它缺乏单个原始图像特征。如何有效地融合不同域中的特征(即,fT1,fT2和dT1T2)以进行变化检测的问题需要得到解决。</p></li></ol><p>所提出的图像融合网络以有效的方式解决了上述问题。特征提取是通过独立训练的完全卷积双流体系结构进行的,以获取高度代表性的深度双时相图像特征。 为了更好地重建变化图,在差异判别网络中逐层拼接深度双时相图像特征和图像差异特征以包含原始双时相图像特征。通过注意力模块对拼接的特征进行融合,有效地克服了异质性问题。此外,为了进一步改进网络的差异区分能力,提出了深度监督以有效训练差异判别网络中的中间层。</p><h2 id="3-研究方法"><a href="#3-研究方法" class="headerlink" title="3 研究方法"></a>3 研究方法</h2><p>第3.1节提出了网络结构。在第3.2节和3.3节中,我们分别提出了关键的网络组件,即注意力模块和深度监督。第3.4节提供了模型训练的详细信息,包括数据增强过程、训练过程和损失函数。</p><h3 id="3-1-网络结构"><a href="#3-1-网络结构" class="headerlink" title="3.1 网络结构"></a>3.1 网络结构</h3><p>所提出的图像融合网络(IFN)将一对双时相图像(即变化前图像T1和变化后图像T2)作为两个并行流(即流T1和T2,见图1a-b)的独立输入。这使得每个双时相图像的原始特征尽可能地保留下来。然后,在两个流中应用具有共享结构和参数的深度特征提取网络(DFEN)进行原始图像特征提取。之后,两个流汇聚到一个变化检测流中(图1c),该流利用差异判别网络(DDN)生成变化图。<strong>DS_1、DS_2、DS_3和DS_4是嵌入在DDN中的四个深度监督模块。</strong></p><p>三个流的结构如下:</p><p> (a) 流T1:T1图像是输入,通过DFEN执行图像特征提取。<strong>对于网络构建,我们将VGG16(Simonyan和Zisserman,2014)中pool5之前的层作为DFEN的骨干。</strong></p><p> (b) 流T2:T2图像是输入。为了有效的差异判别,双时相图像应转换到相同的、可比较的特征空间。因此,流T1中的DFEN的结构和参数与流T2共享。提取的T2图像特征与相同尺度的T1图像特征组合,为变化检测流提供高层次和低层次的原始图像特征。</p><p> (c) 变化检测流:当双时相图像的深度特征通过流T1和T2被提取后,变化检测流中的DDN执行变化检测。</p><p>通过堆叠的卷积和池化层逐步抽象后,流T1和T2中最深的层获得了大的感受野和紧凑的全局信息。因此,Conv5_3充当DDN的初始输入,生成具有紧凑大小的初步全局变化图。DFEN中的早期层(即Conv4_3、Conv3_3、Conv2_2和Conv1_2)包含着双时相图像的较低级别的局部结构信息,通过跳跃连接与相同尺度的DDN层连接,以补充各个双时相图像的特征。值得一提的是,现有的后期融合方法(Caye Daudt等人,2018; Guo等人,2018)也采用了双流体系结构来处理双时相图像。但是,正如第2.2节所指出的,集成结构中的消失梯度问题会使网络训练变慢并且效果不佳(Lee等人,2015)。基于这样的观察:在高度可区分特征上训练的判别分类器的性能优于在较少可区分特征上训练的判别分类器,在本文中,我们使用预训练的DFEN进行原始图像特征提取,以增强每个双时相图像的特征代表性。应注意,预训练的CNN也已经在基于像素和基于对象的方法中得到了广泛利用(Saha等人,2019; Hou等人,2017; Peng和Guan,2019)。但是,这些方法在提取的特征上采用传统算法(如基于阈值、基于聚类和变化向量分析)进行非监督变化检测。因此,在这种情况下,我们有意探索在自适应学习框架中使用预训练网络的可用性。据我们所知,这是在监督变化检测范围内首次尝试使用预训练网络以端到端的方式进行变化检测。</p><p>DDN的结构如图2所示。DDN从流T1和T2中最深的原始图像特征开始。在合并的深度图像特征(即T1_Conv5_3和T2_Conv5_3)上顺序<strong>应用三个卷积层</strong>,<em>生成具有紧凑大小的初步全局图像差异特征图</em>。然后应用一个<strong>空间注意力模块</strong>提取空间注意力图(即<strong>SAM_1</strong>)用于特征图在空间维度上的改进。为了将分辨率恢复到原始图像的分辨率,放大精炼的图像差异特征图(即IDF_1)到Up_IDF_1。不同层中的特征包含从原始图像中抽象出的不同级别的信息。深层特征包含更多的全局信息但较少的局部信息,而早期层特征包含更丰富的局部目标细节但较差的全局信息。由于跳跃连接在图像分割网络中桥接高层特征和低层特征以获得更好的分割结果(Ronneberger等人,2015; Zhou等人,2018),我们结合每个原始图像的较低级特征(即T1_Conv4_3和T2_Conv4_3)与上采样的图像差异特征Up_IDF_1,以恢复细粒度细节和变化目标的更好掩码。然而,T1_Conv4_3和T2_Conv4_3表示双时相图像的深度特征(fT1,fT2),而Up_IDF_1是表示为dT1T2的图像差异特征。异构特征的直接组合不可避免地会增加训练难度。为了有效地融合原始图像的深度特征和图像差异特征,我们使用<strong>通道注意力模块</strong>来强调与目标相关的通道,同时抑制与目标无关的通道。之后,应用一个<strong>空间注意力模块</strong>来增大变化像素和未变化像素之间的距离。注意力模块的动机和描述在第3.1.1节中给出。</p><p>通过这种方式,与原始图像深度特征融合,层次提取图像差异特征以产生具有细节图像的最终变化图。此外,在每一个精炼的图像差异特征之后引入四个深度监督模块(即DS_1、DS_2、DS_3、DS_4)。在差异判别网络的中间层引入深度监督以保证网络训练良好并增强网络性能。有关深度监督的细节在第3.1.2节中介绍。</p><p><img src="https://s2.loli.net/2023/12/03/V3yOsuNlx5Jq9Kr.png" alt="image-20231203202502433"></p><p><img src="https://s2.loli.net/2023/12/03/yaW8u2oMJVExXjH.png" alt="image-20231203202517725"></p><h4 id="3-1-1-用于特征融合的注意力模块"><a href="#3-1-1-用于特征融合的注意力模块" class="headerlink" title="3.1.1 用于特征融合的注意力模块"></a>3.1.1 用于特征融合的注意力模块</h4><p>CNN可以有效地将RGB颜色空间中的原始图像从f_i^d(d&#x3D;1,2,3)转换为高维特征空间f_D(d&#x3D;1,…,D),其中D表示特征的维数,d是第d个特征。但是并非所有的高层次特征对于图像差异判别都是有帮助的(Saha等人,2019)。这些不相关的特征有助于增加网络的训练难度(Woo等人,2018)。此外,不同域中的特征组合(即原始图像特征(fT1,fT2)与图像差异特征(dT1,T2))带来了异质性问题。因此,我们引入<strong>注意力模块</strong>来有效地融合不同域中的特征。</p><p><strong>通道注意力模块</strong>CAM:首先,通过通道注意力图对组合特征进行逐通道精炼。每个通道的重要性编码在通道注意力图中,其权重在网络中自动重新校准。通过将特征f_d(d&#x3D;1,…,D)与相应的注意力图权重w_d(d&#x3D;1,…,D)相乘,与变化检测相关的通道被强调,而与变化检测不相关的通道被抑制。通过这种方式,通道注意力模块专注于从组合的异质特征中“学习哪个通道”。例如,假设在变化前图像T1中的同一区域是一个汽车,在变化后图像T2中被一栋房子所替代,汽车和房子的边界和上下文信息分别存储在fT1和fT2中。理想情况下,在结果变化图中,算法应返回一个具有完整房屋边界的变化区域。通过利用通道注意力图,与房屋信息相关的fT2被强调以产生更好的变化图,与图像差异特征一起。同时,包含汽车信息的fT1被抑制,因为它对变化图的生成没有帮助。</p><p>通道注意力模块如图3所示。</p><p><strong>通道注意力图(McF)的计算</strong>详细如下:</p><p><img src="C:\Users\flan\AppData\Roaming\Typora\typora-user-images\image-20231203201759173.png" alt="image-20231203201759173"></p><p>其中F表示输入特征图(见图3)。首先,通过沿空间轴进行平均池化(AvgPool)操作和最大池化(MaxPool)操作挤压输入特征图的空间信息。假设有C个特征图,大小为H×W,经过池化操作后,特征图将被压缩成两个向量,大小为C× 1× 1。然后,每个向量被馈送到<strong>共享的多层感知机(MLP)<strong>。通过共享的MLP合并元素级求和得到的输出。最后,附加一个标称为σ的sigmod函数来</strong>分配每个通道的注意权重</strong>。</p><p>**空间注意力模块SAM:**然后,通过空间注意力模块在空间维度上进一步精炼通道级精炼后的特征。类似地,特征图中每个像素位置的重要性编码在空间注意力图中。通过在网络训练过程中迭代地从真值图中接收反馈,空间注意力模块被训练以适应地重新校准每个像素位置的权重,并最终输出空间注意力图,其中变化像素和未变化像素的位置分别被赋予较高和较低的重要性。具体而言,空间注意力模块首先计算一个空间注意力图wp&#x3D;w(1,…,N),其中N表示每个特征图的像素总数,p是地图中的第p个像素位置。然后,对于特征图集合中每个高维特征图f&#x3D;fd(1,…,D), 用wp对f进行逐元素乘法以实现空间级精炼。精炼后的特征图可以表示为fwp。在空间级精炼之后,变化像素被较高的权重乘以而得到强调,未变化像素被较低的权重乘以而得到抑制。通过这种方式,网络可以快速逼近变化区域。在上述案例中(即对象在变化前图像从汽车变化为变化后图像中的房屋),空间注意力模块计算一个空间注意力图,其中位于房屋边界内的像素(即变化像素)的权重高于位于边界外的像素(即未变化像素)。因此,组合特征在空间维度上得到改进。 空间注意力模块的结构如图4所示。</p><p>空间注意力图(MsF)的计算如下:</p><p><img src="https://s2.loli.net/2023/12/03/bqR6CEXjJgaMlPG.png" alt="image-20231203202541871"></p><p>其中 f ^ 7×  7表示使用大小为7×7的滤波器的卷积操作,[;]表示拼接操作(见图4)。首先,输入特征图F沿通道轴分别由AvgPool层和MaxPool层进行平均池化和最大池化。然后,将AvgPool和MaxPool特征拼接,并通过卷积层 × f7 7进行卷积。最后使用σ产生最终的MsF。</p><p>总之,通道注意力模块关注从组合的异质特征中“学习哪个通道”。空间注意力模块关注从组合的特征图中“学习哪个区域”。一方面,通道注意力图分别从原始图像特征集和图像差异特征集中选择重要特征并丢弃不必要的特征。因此,可以缓解两组中的冗余。另一方面,通道注意力图明确确定每个选定特征的重要性,并从混合的异质特征中输出一个信息丰富的特征组合。这种基于注意力的特征融合可以自动探索个别原始图像特征和图像差异特征的重要性,以有效解决跨通道维度的异质性问题,并进一步重新校准每个像素位置在空间维度上的重要性,以快速逼近感兴趣的区域。</p><p>在计算出M_c^F和M_s^F后,输入特征F进行如下精炼:</p><p><img src="https://s2.loli.net/2023/12/03/ty6ZpbBi1ARkMhn.png" alt="image-20231203202551067"></p><p><img src="https://s2.loli.net/2023/12/03/MBGcRXYwHWpaVbP.png" alt="image-20231203202607632"></p><p>其中<img src="https://s2.loli.net/2023/12/04/Mn2mQX7pRo9Wftw.png" alt="image-20231204163504501">表示逐元素乘法；F_c^r和F_s_r分别表示通过通道和空间模块的精细特征图。在所提出的架构中，我们对第一个组合的深层特征（即T1_ Conv5_3和T2_ Conv_5_3)进行空间关注，如下所示</p><p><img src="https://s2.loli.net/2023/12/03/nGxbL1MdlwUPmsV.png" alt="image-20231203202701945"></p><p>其中Conv表示卷积操作。在空间注意力模块之后,变化区域和未变化区域上的特征值距离被扩大,以方便差异判别。对于差异判别网络中的后续组合特征,描述原始图像的特征t和描述图像差异的特征up_idf_1被融合。为了强调相关的特征图并抑制不相关的特征图,我们首先在组合特征集上执行通道注意力模块。然后,精炼后的特征图被馈送到一组卷积层中。最后,进一步执行空间注意力模块。计算如下:</p><p><img src="https://s2.loli.net/2023/12/03/lsBECGQ5Zmcn4w6.png" alt="image-20231203202755340"></p><p>其中McF表示组合深度特征(即T1_Conv4_3、T2_Conv4_3和Up_IDF_1)的通道注意力图。然后将通道级精炼特征通过一组卷积层Conv。计算空间注意力图MsF,并逐元素与卷积的通道级精炼特征相乘,以获得最终的空间级精炼深度特征Fcr。</p><h4 id="3-1-2深度监控以增强网络性能"><a href="#3-1-2深度监控以增强网络性能" class="headerlink" title="3.1.2深度监控以增强网络性能"></a>3.1.2深度监控以增强网络性能</h4><p>人工神经网络(ANN)的关键特征是使用反向传播算法更新权重以改进网络。给定ANN和损失函数,反向传播首先计算最后一层权重的误差函数梯度,然后计算第一层权重的梯度。考虑一个损失函数为E的网络,定义了期望输出和计算输出之间的总误差,w_kj表示最后输出层中的神经元j和前一层中的神经元k之间的权重。然后,神经元j的输出o_j定义为</p><p><img src="https://s2.loli.net/2023/12/03/wLPdb2KYJZBN1nG.png" alt="image-20231203203235622"></p><p>其中σ代表激活函数;o_k表示前一层中的神经元输出;K表示前一层中的神经元数量。w_ij的错误可以通过使用链式法则计算偏导数来导出:<img src="https://s2.loli.net/2023/12/03/hd1RuP9xgaLvAXE.png" alt="image-20231203203334440"></p><p>式(8)表示了最后一层神经元误差的计算。对于中间层中的神经元,因子 ∂E&#x2F; ∂o_j被定义为下一层中神经元的加权和:</p><p><img src="https://s2.loli.net/2023/12/03/lZADndkR9hSxbuT.png" alt="image-20231203203354308"></p><p>其中N表示下一层中的神经元数量;o_l表示下一层中神经元l的输出;w_jl表示神经元j和神经元l之间的权重。因此,关于w_ij的误差可以用以下递归表达式计算:</p><p><img src="https://s2.loli.net/2023/12/03/bAWiVrSLv39MxlY.png" alt="image-20231203204246815"></p><p>然后,根据学习率a,梯度下降策略更新权重w_ij如下:</p><p><img src="https://s2.loli.net/2023/12/03/FX45ulpG9WJtyen.png" alt="image-20231203204718478"></p><p>如我们在式(10)中看到的,如果激活函数使用sigmoid算法,导数 ∂o_j&#x2F;∂ 小于1。当误差从最后一层向中间层反向传播时,多个 ∂o&#x2F;∂j 的乘积会产生muchsmaller值,这为浅层中的权重创建了一个更小的梯度,这就是所谓的消失梯度。尽管已经提出了ReLU(Glorot等人,2011)和PReLU(He等人,2015)等替代激活函数以试图克服消失梯度问题,但问题仍然存在。 因为式(10)中的权重wjl通常初始化为小于1.0,wjl的乘积也产生更小的值。在大多数情况下,消失梯度问题仍然存在。前几层中随机初始化的神经元训练最慢(Glorot and Bengio,2010),并导致早期层训练不足。<strong>因此,训练不足的早期层将对网络中的后续层产生负面影响。通常,误差反向传播的距离越长,早期层获得的梯度就越小。</strong>一些学者也证明,反向传播过程中长链网络中的消失梯度问题会影响变化检测性能(Mao等人,2018; Lei等人,2019a; Liu等人,2020)。因此,本文中我们没有使用从差异判别层向特征提取层执行反向传播的集成网络,而是将整个变化检测任务分成两个阶段,以缩短误差传播距离,如第3.1节所述。 此外,为了缓解消失梯度问题并增强差异判别网络的性能,我们在差异判别网络的<strong>中间层引入了深度监督</strong>来有效地训练中间层。与仅依赖于从输出层逐步反向传播的梯度不同,中间层通过各种空间分辨率的变化图进行额外的监督。 通过直接从变化图中接收反馈,中间层产生更高区分度的特征以用于变化区域判别。最后,差异判别网络将更加快速逼近变化区域。 具体来说,对于差异判别网络中的每个空间级精炼图像差异特征集,我们分别与同一尺度下采样的变化图相关联。深度监督采用如下:</p><p><img src="https://s2.loli.net/2023/12/03/2ZXJYVL5rGRxN18.png" alt="image-20231203205129997"></p><p>其中，O^ᵢ表示第i个侧输出DS^ᵢ；f^₁×₁表示卷积层，其卷积核大小为₁×₁；o表示Sigmoid激活层；IDFᵢ表示通过注意力模块计算得到的精炼图像差异特征。在训练过程中，每个深层监督的损失都是独立计算的，并直接反向传播到中间层。通过这种方式，网络中的中间层得到有效训练，并且中间层的权重可以被精细地更新，从而减轻了梯度消失的问题。因此，在之前的层已经经过初步变化检测的精细训练之后，接下来的层将面临一个相对简单的变化检测任务。通过在网络中引入多个深层监督，改进了差异判别网络的性能。</p><h3 id="3-2-模型训练"><a href="#3-2-模型训练" class="headerlink" title="3.2 模型训练"></a>3.2 模型训练</h3><h4 id="3-2-1-数据参数"><a href="#3-2-1-数据参数" class="headerlink" title="3.2.1 数据参数"></a>3.2.1 数据参数</h4><p>为了增加训练数据的多样性，我们使用了一组图像预处理技术进行数据增强：1) 图像旋转：双时相图像对被旋转45°、90°、135°、180°和270°；2) 图像翻转：双时相图像对进行水平翻转；3) 图像添加噪声：我们随机在T1图像上添加了200个盐和胡椒噪声；4) 图像模糊：对T1图像应用高斯模糊滤波器产生模糊的T1图像；5) 图像平滑：对T1图像应用平滑滤波器产生平滑的T1图像。</p><p>需要注意的是，对于增强方法3) 图像添加噪声，4) 图像模糊和5) 图像平滑，只有T1图像进行增强，而相应的T2图像保持不变。这是因为我们有意扩大了T1图像和T2图像之间的图像质量差距，以便为模型的鲁棒性测试生成具有挑战性的数据集。</p><h4 id="3-2-2-训练过程"><a href="#3-2-2-训练过程" class="headerlink" title="3.2.2 训练过程"></a>3.2.2 训练过程</h4><p>在所提出的方法中，深度特征提取网络（DFEN）和差异判别网络（DDN）在训练过程中独立进行训练。由于缺乏在广泛的遥感数据上预训练的可用模型，对于DFEN的训练，我们<strong>使用VGG16网络中pool5层之前的层在“ImageNet”数据集上进行预训练</strong>（Jia Deng等人，2009）。对于DDN，原始的双时相图像首先被输入到预训练的DFEN中产生深度特征。然后，提取的深度特征被输入到DDN中以区分变化区域。为了有效训练DDN中的神经元，我们通过为每个侧分支分配不同大小的真实地图来引入深层监督。真实地图是通过线性插值算法生成的。派生真实地图的大小定义如下：</p><p><img src="https://s2.loli.net/2023/12/03/cMJ24XCN3Z7yzqo.png" alt="image-20231203211240286"></p><p>其中，gtL和gtW分别表示原始地面真实地图的长度和宽度；(gtDSl1, gtDSw1)，(gtDSl2, gtDSw2)，(gtDSl3, gtDSw3)和(gtDSl4, gtDSw4)分别表示DS_1、DS_2、DS_3和DS_4中的真实地图的长度和宽度。</p><h4 id="3-2-3-损失函数"><a href="#3-2-3-损失函数" class="headerlink" title="3.2.3 损失函数"></a>3.2.3 损失函数</h4><p>二元交叉熵通常用于二元分类问题，定义如下：<img src="https://s2.loli.net/2023/12/03/72hbIgYdTW6H9jL.png" alt="image-20231203213439676"></p><p>其中，ti表示像素i的真实值；ti&#x3D;1表示如果真实像素属于变化类，则为1，否则为0。yi表示像素i属于变化类的预测概率，yi&#x3D;1表示像素i属于变类的概率。从公式（17）可以观察到，如果yi在变化类上取一个非常小的值，将导致非常大的Lbce。例如，如果yi为零，ylog(yi)将变为无穷大，导致无穷大的损失，破坏网络的稳定性。在我们的方法中，我们将Sigmoid二元交叉熵作为损失函数的一部分。Sigmoid二元交叉熵定义如下：</p><p><img src="https://s2.loli.net/2023/12/03/gYGIK2RSl4k6uwf.png" alt="image-20231203220847183"></p><p>其中，yi表示像素i属于变化类的预测概率，ti表示像素i的真实值。最后，所提出网络的总损失定义为：<img src="https://s2.loli.net/2023/12/03/aVjfItPQwMBKgG6.png" alt="image-20231203221005187"></p><h2 id="4-实验和讨论"><a href="#4-实验和讨论" class="headerlink" title="4 实验和讨论"></a>4 实验和讨论</h2><h3 id="4-1-数据集"><a href="#4-1-数据集" class="headerlink" title="4.1 数据集"></a>4.1 数据集</h3><p>在实验中使用了两个数据集进行全面的基准比较。第一个数据集是由Lebedev等人（2018）发布的。在该数据集上进行测试时，经过修改的Unet++架构实现了最佳性能（Peng等人，2019）。第二个数据集是从Google Earth手动收集的具有挑战性的数据集。与文献中在覆盖相同区域的图像上训练和测试模型不同，我们在覆盖不同区域的第二个数据集上训练和测试模型，以评估模型的泛化能力。一方面，使用来自不同城市的图像作为训练数据集，增加了区分变化区域和过滤噪声引起的图像差异的难度；另一方面，使用来自另一个城市的图像进行模型测试，旨在挑战模型的泛化能力。具体而言，对于模型训练，北京、成都、深圳、重庆和武汉的双时相图像被裁剪成394个大小为512×512的子图像对。经过数据增强，获得了3940个双时相图像对的集合。我们随机选择90%的数据集用于模型训练，剩下的10%用于模型验证。西安的图像对被裁剪成48个图像对用于模型测试。</p><h3 id="4-2-参数设置"><a href="#4-2-参数设置" class="headerlink" title="4.2 参数设置"></a>4.2 参数设置</h3><p>所有卷积层中的卷积核都设置为3×3。在每个连接层之后，下一个卷积层中的滤波器数量设置为合并特征中通道数的一半。例如，深度特征提取网络生成具有512个通道的T1_Conv1_2。将T1_Conv1_2和T2_Conv1_2进行级联，将得到具有1024个通道的一组特征图。然后，下一个卷积层中的滤波器数量设置为512。网络中使用了第3.4.3节中描述的损失函数。总共有五个损失函数，每个损失函数的权重都设置为1。初始学习率设置为0.0001，在损失连续5个时期不再减小时降低10%。当验证数据集上的f1分数连续20个时期不再提高时，模型训练完成。</p><h3 id="4-3-基准方法"><a href="#4-3-基准方法" class="headerlink" title="4.3.基准方法"></a>4.3.基准方法</h3><p>为了评估所提出方法的有效性，我们使用以下四种基准方法进行变化检测，并比较它们在两个数据集上的性能：<br>(1) Unet++_MSOF<br>Unet++_MSOF (Peng et al., 2019) 基于 Unet++ (Zhou et al., 2018) 的架构提出。Unet++_MSOF 是一种早期融合模型，将双时相图像作为一个输入。通过融合 Unet++ 的多个侧输出，该方法在第一个数据集上优于所有其他最先进的变化检测方法。<br>(2) FC-Sima-conc<br>全卷积Siamese-Concatenation (FC-Siam-conc) 是由Caye Daudt等人(2018)提出，用于卫星图像变化检测。该方法首先应用Siamese编码流从双时相图像中提取深度特征，然后通过解码流将提取的深度特征进行连接以进行变化检测。编码和解码流中的所有参数在每个训练时期都会更新。<br>(3) FC-Sima-diff<br>全卷积Siamese-Difference (FC-Siam-diff) (Caye Daudt等人，2018) 与 FC-Siam-conc 具有类似的网络架构。不同之处在于，FC-Siam-diff 在解码流中连接了深度特征差的绝对值，而不是连接编码流中的两个深度特征。<br>(4) FCN-PP<br>具有金字塔池化的全卷积网络 (FCN-PP) (Lei等人，2019a) 用于遥感图像中的滑坡检测。该方法应用了一个 U 形架构。网络中利用金字塔池化来扩大感受野，以克服传统全局池化的局限性。</p><p><img src="https://s2.loli.net/2023/12/04/BuNpRsVD9F6H4LM.png" alt="image-20231204151416575"></p><h3 id="4-4-实验结果"><a href="#4-4-实验结果" class="headerlink" title="4.4 实验结果"></a>4.4 实验结果</h3><h4 id="4-4-1-基准比较"><a href="#4-4-1-基准比较" class="headerlink" title="4.4.1 基准比较"></a>4.4.1 基准比较</h4><p><img src="https://s2.loli.net/2023/12/04/5DnALOqBmtM7Rok.png" alt="image-20231204152153623"></p><p><img src="https://s2.loli.net/2023/12/04/LfStp8xgM6uqUdz.png" alt="image-20231204152204197"></p><p><img src="https://s2.loli.net/2023/12/04/BTiKkjt1oVOhrI4.png" alt="image-20231204152218106"></p><p>两组数据集都使用了所提出的变化检测方法进行处理。对于第一组数据集,将结果与文献中选定的四个基准方法的性能进行了比较(Peng等,2019)。而第二组数据集也使用四个基准方法进行处理,并将各自的结果进行了比较。比较了所提出方法和基准方法的变化检测结果。比较基于视觉解释和定量评估。为了定量评估,使用了以下四个指标:精度(P)、召回率(R)、F1 分数(F1)和总体准确率(OA)。 从第一组数据集上获得的变化检测结果开始(图5和图6)。 在检测到大面积变化区域时,IFN 成功地返回了具有完整边界和高内聚性的变化区域。图 12(d)中给出了一个示范示例。在图 6 中的小面积变化的情况下,几乎所有小的改变对象都在变化图中被区分出来。尽管双时相图像 T1 和 T2 在图 6 中包含一些噪声,IFN 成功过滤掉这种噪声,变化图显示实际发生变化的像素。 例如,在图 6 中的第二对双时相图像中,图像 T1 中树冠很茂盛,而图像 T2 中的树叶由于季节性变化已经脱落。IFN 识别这些图像噪声,并在变化图中将这些像素分类为未改变区域。无论是大面积还是小面积的变化检测任务,对 IFN 变化图的视觉解释确认,性能优异,结果与真实图匹配。 这在基于定量评估的进一步证实(表 1)。IFN 取得了最佳性能,具有最高的 OA(97.71%)、P(94.96%)和 F1(0.9030)。Unet++ _MSOF 取得了最高的 R,为 87.11%,略高于 IFN (R 86.08%)。一个可能的原因是双时相图像之间的某些图像噪声影响了某些发生变化&#x2F;未发生变化的对象。嵌入变化&#x2F;未变化对象的噪声会产生图像差异特征,其中变化&#x2F;未变化像素具有更高的值。因此,Unet++ _ MSOF 检测到更多的变化像素。同时,由于缺乏来自单个原始图像特征的指导,Unet++ _MSOF 更容易将未改变的像素误分类为已改变的像素,导致较低的 OA(89.54%)。与 FCN-PP、FC-Siam-conc 和 FC-Siam-diff 相比,IFN 在 P 和 F1 分数上取得显著改进。与 Unet++ _MSOF 相比,IFN 在 P 上提高了 5.42%,在 F1 上提高了 0.027。 为进一步评估 IFN 的性能,比较了 IFN 和四个基准方法在第二组数据集上取得的结果(图 7-11)。 在所有示例中,IFN 取得了最佳的变化检测结果。检测到的变化区域以完整的边界和高内部紧凑性返回。具体而言,对于图 7-9 中的大面积变化检测,IFN 在很大程度上胜过所有其他基准方法。Unet++ _MSOF 未能检测到一些变化区域(图 7e 和图 9e),同时它将一些未变化区域误分类为已变化区域(图 8e)。另外三个基准方法(即 FCN-PP、FC-Siam-conc 和 FC-Siam-diff)倾向于将更多未改变的像素误分类为已改变的像素,生成变化图的对象紧凑性较低且边界不准确。对于小对象变化检测(图 9-11),尽管 IFN 未能检测到一些小的变化对象(例如图 9d),但与其他四个基准方法相比,它仍实现了最佳性能(图 10d 和图 11d),其他方法生成的变化图有严重的胡椒盐噪声。 从定量的角度来看(表 2),IFN 取得了最佳的性能,具有最高的 P(67.11%)、R(67.54%)、F1(0.6733)和 OA(88.86%)。FC-Siam-conc 和 FC-Siam-diff 取得了最差的表现,具有最低的 P(41.83%、51.51%)、F1(0.4917、0.5769)和 OA(79.05%、83.66%)分数。这是因为Siamese网络集成了原始图像特征提取与差异判别的训练,从而产生了代表性较差的深度原始图像特征。原始图像的低代表性深度特征反过来又损害了差异判别。Unet++_MSOF 和 FCN-PP 的表现优于 FC-Siam-conc 和 FC-Siam-diff。然而,由于双时相图像被并置作为网络的一个输入,图像差异判别从网络的一开始就启动了。尽管通过跳跃连接进行了中间特征图的拼接,但很难为图像重建提供深度的原始图像特征。因此,变化图显示有破碎的对象边界和较差的对象内部紧凑性。</p><h4 id="4-4-2-深度监督的验证"><a href="#4-4-2-深度监督的验证" class="headerlink" title="4.4.2 深度监督的验证"></a>4.4.2 深度监督的验证</h4><p><img src="https://s2.loli.net/2023/12/04/7m5DJxKrhciH1Mp.png" alt="image-20231204152527180"></p><p><img src="https://s2.loli.net/2023/12/04/czbg6RHsiaZd8Ay.png" alt="image-20231204152536296"></p><p><img src="https://s2.loli.net/2023/12/04/Rv8VXWi7onkPAUg.png" alt="image-20231204152543966"></p><p><img src="https://s2.loli.net/2023/12/04/gvxOc8wiAyNFGX6.png" alt="image-20231204152552853"></p><p>所提出的IFN架构在每个特征融合操作之后引入了深度监督。因此，在IFN中使用了四个深度监督分支。为了评估深度监督的效果，我们基于IFN的架构构建了四个具有不同深度监督设置的网络。这四个网络的构建方式如下：1）IFN-DS_1 保留DS_1，丢弃DS_2、DS_3和DS_4；2）IFN-DS_12 保留DS_1和DS_2，丢弃DS_3和DS_4；3）IFN-DS_123 仅丢弃DS_4，保留DS_1、DS_2和DS_3；4）IFN-DS_0 在IFN中丢弃所有的深度监督分支。这四个网络的层参数（例如卷积核）和训练超参数（例如损失函数）设置相同。这四个网络在第二个数据集上进行训练，以验证深度监督的效果。这些网络的学习曲线如图12所示，展示了模型的训练情况。从验证数据集计算得到的学习曲线表明了模型的泛化能力。如图12c所示，与其他四个网络相比，IFN的训练损失曲线下降速度最快，是训练效果最好的模型。另外，在图12f中，IFN的逐渐下降的验证损失曲线达到了最小值，表明了IFN出色的泛化能力。相比之下，IFN-DS_0在图12a-c中显示出最慢的模型收敛速度。此外，IFN-DS_0在图12d和图12e中取得了最小的准确率和F1分数，表明了其最差的泛化能力。其他三个网络，即IFN-DS_1、IFN-DS_12和IFN-DS_123，在泛化能力上表现优于IFN-DS_0。<br>图13和图14对比了这四个网络和IFN在选定示例上的变化检测性能。IFN-DS_0生成的变化图（图13b，图14b）边界不清晰，物体紧凑度较低。从这些变化图转换到由IFN生成的变化图（图13f，图14f），可以明显看到物体边界更加完整，物体内部紧凑度更高，因为更多的深度监督分支参与了网络中。<br>如表3所示，我们可以看到IFN的F1得分（0.6733）和R得分（67.54%）最高。IFN-DS_0的F1和R得分最低（0.5620，49.09%）。IFN-DS_1、IFN-DS_12、IFN-DS_123在IFN-DS_0和IFN之间获得了中间的性能。IFN-DS_12的OA得分最高，为88.91%，与IFN（OA为88.86%）相当，但其F1得分较低。总之，IFN实现了最佳的变化检测性能。</p><h2 id="5-结论"><a href="#5-结论" class="headerlink" title="5 结论"></a>5 结论</h2><p><img src="https://s2.loli.net/2023/12/04/EDhAaKwJbpvG6LW.png" alt="image-20231204153548211"></p><p><img src="https://s2.loli.net/2023/12/04/M7iJIlqVZwtvrGg.png" alt="image-20231204153555726"></p><p><img src="https://s2.loli.net/2023/12/04/1nugmB5k2NjXqpH.png" alt="image-20231204153605716"></p><p><img src="https://s2.loli.net/2023/12/04/rIXDbPRsJdjKV7L.png" alt="image-20231204153612584"></p><p><img src="https://s2.loli.net/2023/12/04/HZ8L1E2K7uMqzsP.png" alt="image-20231204153617279"></p><p>本文明确探讨了现有基于深度学习的变化检测方法的机制，并指出了其关键限制，包括早期融合和晚期融合的架构。我们不仅仅是基于现有架构提出了修改后的网络，还分析了问题背后的原因，并提出了一种用于高分辨率双时相遥感图像变化检测的深度监督图像融合网络。<strong>通过独立训练的全卷积两流架构对双时相图像进行特征提取，以增强特征的代表性</strong>。<strong>原始图像特征与差异图像特征在差异判别网络中进行融合，以补充更好的变化图重构的多级变化对象信息。</strong>为了克服特征融合的异质性问题，我们在组合特征上应用注意力模块，以自适应地强调重要特征并抑制通道和空间维度中的无关特征。此外，为了改善差异判别网络的性能，我们提出了深度监督方法，通过将下采样的变化图直接反馈到网络的中间层中。<br>所提出的方法在两个数据集上进行了评估。第一个数据集是一个具有非常高图像分辨率的公开可用数据集。对第一个数据集的基准比较表明了所提出方法的令人满意的性能。第二个数据集包含来自Google Earth的多源双时相图像，涵盖了中国不同城市的数据。一方面，不同城市的图像被用作训练数据集，这增加了在不同场景中区分变化区域的难度；另一方面，另一个城市的图像用于模型测试，旨在测试所提出方法的泛化能力。在第二个数据集上的测试中，IFN优于所有基准方法。两个实验证明了IFN的有效性和稳健性。未来的研究将探讨所提出方法在异质双时相图像变化检测中的可用性，例如，在双时相合成孔径雷达和光学图像上的变化检测任务。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 遥感 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl02创建窗口</title>
      <link href="/2023/12/03/opengl02%E5%88%9B%E5%BB%BA%E7%AA%97%E5%8F%A3/"/>
      <url>/2023/12/03/opengl02%E5%88%9B%E5%BB%BA%E7%AA%97%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="创建窗口"><a href="#创建窗口" class="headerlink" title="创建窗口"></a>创建窗口</h1><ul><li>第一步我们需要做什么？</li><li>为什么我们需要自己创建窗口和定义OpenGL上下文以及用户处理</li><li>幸运的是？GLFW库作用是什么，帮助我们省去了什么问题。</li></ul><h2 id="GLFW"><a href="#GLFW" class="headerlink" title="GLFW"></a>GLFW</h2><ul><li>GLFW是什么，我们需要他做什么？</li></ul><h2 id="构建GLFW"><a href="#构建GLFW" class="headerlink" title="构建GLFW"></a>构建GLFW</h2><p>由于我们使用的是java，并且在上一部分已经整理好了环境，所以这里不再赘述C的内容，想了解的可以到参考文献中参看详情。</p><h3 id="CMake"><a href="#CMake" class="headerlink" title="CMake"></a>CMake</h3><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><h2 id="我们的第一个工程"><a href="#我们的第一个工程" class="headerlink" title="我们的第一个工程"></a>我们的第一个工程</h2><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h3 id="Windows上的OpenGL库"><a href="#Windows上的OpenGL库" class="headerlink" title="Windows上的OpenGL库"></a>Windows上的OpenGL库</h3><h3 id="Linux上的OpenGL库"><a href="#Linux上的OpenGL库" class="headerlink" title="Linux上的OpenGL库"></a>Linux上的OpenGL库</h3><h2 id="GLAD"><a href="#GLAD" class="headerlink" title="GLAD"></a>GLAD</h2><h2 id="附加资源"><a href="#附加资源" class="headerlink" title="附加资源"></a>附加资源</h2><ul><li><a href="http://www.glfw.org/docs/latest/window_guide.html">GLFW: Window Guide</a>：GLFW官方的配置GLFW窗口的指南。</li><li><a href="http://www.opengl-tutorial.org/miscellaneous/building-your-own-c-application/">Building applications</a>：提供了很多编译或链接相关的信息和一大列错误及对应的解决方案。</li><li><a href="http://wiki.codeblocks.org/index.php?title=Using_GLFW_with_Code::Blocks">GLFW with Code::Blocks</a>：使用Code::Blocks IDE编译GLFW。</li><li><a href="http://www.cmake.org/runningcmake/">Running CMake</a>：简要的介绍如何在Windows和Linux上使用CMake。</li><li><a href="http://learnopengl.com/demo/autotools_tutorial.txt">Writing a build system under Linux</a>：Wouter Verholst写的一个autotools的教程，讲的是如何在Linux上编写构建系统，尤其是针对这些教程。</li><li><a href="https://github.com/Polytonic/Glitter">Polytonic&#x2F;Glitter</a>：一个简单的样板项目，它已经提前配置了所有相关的库；如果你想要很方便地搞到一个LearnOpenGL教程的范例工程，这也是很不错的。</li></ul><h1 id="你好窗口"><a href="#你好窗口" class="headerlink" title="你好窗口"></a>你好窗口</h1><p>接下来我们创建main函数，在这个函数中我们将会实例化GLFW窗口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.system.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.Callbacks.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.GLFW.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.system.MemoryStack.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.system.MemoryUtil.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//glfwInit函数来初始化GLFW</span></span><br><span class="line">        <span class="keyword">if</span>(!glfwInit())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//使用glfwWindowHint函数来配置GLFW</span></span><br><span class="line">        <span class="comment">//glfwWindowHint函数的第一个参数代表选项的名称，我们可以从很多以GLFW_开头的枚举值中选择；第二个参数接受一个整型，用来设置这个选项的值</span></span><br><span class="line">        <span class="comment">//我们将主版本号(Major)和次版本号(Minor)都设为3</span></span><br><span class="line">        <span class="comment">//我们同样明确告诉GLFW我们使用的是核心模式(Core-profile)</span></span><br><span class="line">        <span class="comment">//明确告诉GLFW我们需要使用核心模式意味着我们只能使用OpenGL功能的一个子集（没有我们已不再需要的向后兼容特性）</span></span><br><span class="line">        glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR,<span class="number">3</span>);</span><br><span class="line">        glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR,<span class="number">3</span>);</span><br><span class="line">        glfwWindowHint(GLFW_OPENGL_PROFILE,GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数的所有的选项以及对应的值都可以在 <a href="http://www.glfw.org/docs/latest/window.html#window_hints">GLFW’s window handling</a> 这篇文档中找到。</p><p>接下来我们创建一个窗口对象，这个窗口对象存放了所有和窗口相关的数据，而且会被GLFW的其他函数频繁地用到。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建窗口</span></span><br><span class="line">        <span class="comment">//glfwCreateWindow函数需要窗口的宽和高作为它的前两个参数。第三个参数表示这个窗口的名称（标题），这里我们使用&quot;LearnOpenGL&quot;，</span></span><br><span class="line">        <span class="comment">//最后两个参数我们暂时忽略。</span></span><br><span class="line">        <span class="comment">//。这个函数将会返回一个GLFWwindow对象</span></span><br><span class="line">        <span class="comment">//我们会在其它的GLFW操作中使用到</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">window</span> <span class="operator">=</span> glfwCreateWindow(<span class="number">800</span>,<span class="number">600</span>,<span class="string">&quot;LearnOpenGL&quot;</span>,NULL,NULL);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(window == NULL)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Failed to create GLFW window&quot;</span>);</span><br><span class="line">            glfwTerminate();</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建完窗口我们就可以通知GLFW将我们窗口的上下文设置为当前线程的主上下文了。</span></span><br><span class="line">        glfwMakeContextCurrent(window);</span><br></pre></td></tr></table></figure><ul><li>如何初始化GLFW以及怎么配置内容</li><li>怎么创建窗口，设置上下文</li></ul><h2 id="视口"><a href="#视口" class="headerlink" title="视口"></a>视口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在我们开始渲染之前还有一件重要的事情要做，我们必须告诉OpenGL渲染窗口的尺寸大小，即视口(Viewport)，这样OpenGL才只能知道怎样根据窗口大小显示数据和坐标。</span></span><br><span class="line"><span class="comment">//我们可以通过调用glViewport函数来设置窗口的维度(Dimension)：</span></span><br><span class="line"><span class="comment">//glViewport函数前两个参数控制窗口左下角的位置。第三个和第四个参数控制渲染窗口的宽度和高度（像素）。</span></span><br><span class="line">glViewport(<span class="number">0</span>,<span class="number">0</span>,<span class="number">800</span>,<span class="number">600</span>);</span><br></pre></td></tr></table></figure><p>我们实际上也可以将视口的维度设置为比GLFW的维度小，这样子之后所有的OpenGL渲染将会在一个更小的窗口中显示，这样子的话我们也可以将一些其它元素显示在OpenGL视口之外。</p><p>然而，当用户改变窗口的大小的时候，视口也应该被调整。我们可以对窗口注册一个回调函数(Callback Function)，它会在每次窗口大小被调整的时候被调用。这个回调函数的原型如下：</p><p>这个帧缓冲大小函数需要一个GLFWwindow作为它的第一个参数，以及两个整数表示窗口的新维度。每当窗口改变大小，GLFW会调用这个函数并填充相应的参数供你处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">framebufferSizeCallback</span><span class="params">(<span class="type">long</span> window,<span class="type">int</span> width,<span class="type">int</span> height)</span>&#123;</span><br><span class="line">    glViewport(<span class="number">0</span>,<span class="number">0</span>,width,height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        我们还需要注册这个函数，告诉GLFW我们希望每当窗口调整大小的时候调用这个函数：</span></span><br><span class="line">        glfwSetFramebufferSizeCallback(window, Main::framebufferSizeCallback);</span><br></pre></td></tr></table></figure><h2 id="准备好你的引擎"><a href="#准备好你的引擎" class="headerlink" title="准备好你的引擎"></a>准备好你的引擎</h2><p>我们可不希望只绘制一个图像之后我们的应用程序就立即退出并关闭窗口。我们希望程序在我们主动关闭它之前不断绘制图像并能够接受用户输入。</p><p>因此，我们需要在程序中添加一个while循环，我们可以把它称之为渲染循环(Render Loop)，它能在我们让GLFW退出前一直保持运行。下面几行的代码就实现了一个简单的渲染循环：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">while</span>(!glfwWindowShouldClose(window))&#123;</span><br><span class="line">    glfwSwapBuffers(window);</span><br><span class="line">    glfwPollEvents();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>glfwWindowShouldClose函数在我们每次循环的开始前检查一次GLFW是否被要求退出，如果是的话该函数返回<code>true</code>然后渲染循环便结束了，之后为我们就可以关闭应用程序了。</li><li>glfwPollEvents函数检查有没有触发什么事件（比如键盘输入、鼠标移动等）、更新窗口状态，并调用对应的回调函数（可以通过回调方法手动设置）。</li><li>glfwSwapBuffers函数会交换颜色缓冲（它是一个储存着GLFW窗口每一个像素颜色值的大缓冲），它在这一迭代中被用来绘制，并且将会作为输出显示在屏幕上。</li></ul><blockquote><p><strong>双缓冲(Double Buffer)</strong></p><p>应用程序使用单缓冲绘图时可能会存在图像闪烁的问题。 这是因为生成的图像不是一下子被绘制出来的，而是按照从左到右，由上而下逐像素地绘制而成的。最终图像不是在瞬间显示给用户，而是通过一步一步生成的，这会导致渲染的结果很不真实。为了规避这些问题，我们应用双缓冲渲染窗口应用程序。<strong>前</strong>缓冲保存着最终输出的图像，它会在屏幕上显示；而所有的的渲染指令都会在<strong>后</strong>缓冲上绘制。当所有的渲染指令执行完毕后，我们<strong>交换</strong>(Swap)前缓冲和后缓冲，这样图像就立即呈显出来，之前提到的不真实感就消除了。</p></blockquote><h2 id="最后一件事"><a href="#最后一件事" class="headerlink" title="最后一件事"></a>最后一件事</h2><p>当渲染循环结束后我们需要正确释放&#x2F;删除之前的分配的所有资源。我们可以在main函数的最后调用glfwTerminate函数来完成。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glfwTerminate();</span><br></pre></td></tr></table></figure><p>这样便能清理所有的资源并正确地退出应用程序。现在你可以尝试编译并运行你的应用程序了，如果没做错的话，你将会看到如下的输出：</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>我们同样也希望能够在GLFW中实现一些输入控制，这可以通过使用GLFW的几个输入函数来完成。我们将会使用GLFW的glfwGetKey函数，它需要一个窗口以及一个按键作为输入。这个函数将会返回这个按键是否正在被按下。我们将创建一个processInput函数来让所有的输入代码保持整洁。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">(<span class="type">long</span> window)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)</span><br><span class="line">        glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里我们检查用户是否按下了返回键(Esc)（如果没有按下，glfwGetKey将会返回GLFW_RELEASE。如果用户的确按下了返回键，我们将通过glfwSetwindowShouldClose使用把<code>WindowShouldClose</code>属性设置为 <code>true</code>的方法关闭GLFW。下一次while循环的条件检测将会失败，程序将会关闭。</p><p>我们接下来在渲染循环的每一个迭代中调用processInput：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(!glfwWindowShouldClose(window))&#123;</span><br><span class="line">    processInput(window);</span><br><span class="line"></span><br><span class="line">    glfwSwapBuffers(window);</span><br><span class="line">    glfwPollEvents();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这就给我们一个非常简单的方式来检测特定的键是否被按下，并在每一帧做出处理。</p><h2 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h2><p>我们要把所有的渲染(Rendering)操作放到渲染循环中，因为我们想让这些渲染指令在每次渲染循环迭代的时候都能被执行。代码将会是这样的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">            <span class="comment">// 我们使用一个自定义的颜色清空屏幕</span></span><br><span class="line">            <span class="comment">//我们还调用了glClearColor来设置清空屏幕所用的颜色</span></span><br><span class="line">glClearColor(<span class="number">0.2f</span>, <span class="number">0.3f</span>, <span class="number">0.3f</span>, <span class="number">1.0f</span>);</span><br><span class="line"><span class="keyword">while</span>(!glfwWindowShouldClose(window))&#123;</span><br><span class="line">            processInput(window);</span><br><span class="line">            <span class="comment">//渲染</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//在每个新的渲染迭代开始的时候我们总是希望清屏，否则我们仍能看见上一次迭代的渲染结果</span></span><br><span class="line">            <span class="comment">//我们可以通过调用glClear函数来清空屏幕的颜色缓冲,它接受一个缓冲位(Buffer Bit)来指定要清空的缓冲</span></span><br><span class="line">            <span class="comment">// 可能的缓冲位有GL_COLOR_BUFFER_BIT，GL_DEPTH_BUFFER_BIT和GL_STENCIL_BUFFER_BIT\</span></span><br><span class="line">            <span class="comment">//由于现在我们只关心颜色值，所以我们只清空颜色缓冲。</span></span><br><span class="line">            <span class="comment">//整个颜色缓冲都会被填充为glClearColor里所设置的颜色</span></span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            glfwSwapBuffers(window);</span><br><span class="line">            glfwPollEvents();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>你应该能够回忆起来我们在 <em>OpenGL</em> 这节教程的内容，glClearColor函数是一个<strong>状态设置</strong>函数，而glClear函数则是一个<strong>状态使用</strong>的函数，它使用了当前的状态来获取应该清除为的颜色。</p><h2 id="以下是全部代码"><a href="#以下是全部代码" class="headerlink" title="以下是全部代码"></a>以下是全部代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.lwjgl.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.system.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.Callbacks.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.GLFW.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.system.MemoryStack.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.system.MemoryUtil.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_WIDTH</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SCR_HEIGHT</span> <span class="operator">=</span> <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> window;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Main</span>().run();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Initialize and configure GLFW</span></span><br><span class="line">        init();</span><br><span class="line">        <span class="comment">// Create the window and the OpenGL context</span></span><br><span class="line">        createWindow();</span><br><span class="line">        <span class="comment">// Load all OpenGL function pointers</span></span><br><span class="line">        loadGL();</span><br><span class="line">        <span class="comment">// Render loop</span></span><br><span class="line">        loop();</span><br><span class="line">        <span class="comment">// Terminate GLFW and free resources</span></span><br><span class="line">        terminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Set up an error callback to print to System.err</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Initialize GLFW</span></span><br><span class="line">        <span class="keyword">if</span> (!glfwInit()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set window hints for OpenGL version and profile</span></span><br><span class="line">        glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">        glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">        glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Uncomment this line for MacOS compatibility</span></span><br><span class="line">        <span class="comment">// glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">createWindow</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Create the window</span></span><br><span class="line">        window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;LearnOpenGL&quot;</span>, NULL, NULL);</span><br><span class="line">        <span class="keyword">if</span> (window == NULL) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to create the GLFW window&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Make the window&#x27;s OpenGL context current</span></span><br><span class="line">        glfwMakeContextCurrent(window);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set up a window size callback to adjust the viewport</span></span><br><span class="line">        glfwSetWindowSizeCallback(window, <span class="keyword">new</span> <span class="title class_">GLFWWindowSizeCallbackI</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(<span class="type">long</span> window, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">                <span class="comment">// Make sure the viewport matches the new window dimensions</span></span><br><span class="line">                glViewport(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadGL</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Create the OpenGL capabilities object</span></span><br><span class="line">        <span class="type">GLCapabilities</span> <span class="variable">caps</span> <span class="operator">=</span> GL.createCapabilities();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check if the capabilities object is null</span></span><br><span class="line">        <span class="keyword">if</span> (caps == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Failed to create GL capabilities&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Set the clear color to red</span></span><br><span class="line">        glClearColor(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Loop until the user closes the window</span></span><br><span class="line">        <span class="keyword">while</span> (!glfwWindowShouldClose(window)) &#123;</span><br><span class="line">            <span class="comment">// Process input</span></span><br><span class="line">            processInput();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Clear the color buffer</span></span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Swap the front and back buffers</span></span><br><span class="line">            glfwSwapBuffers(window);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Poll for window events</span></span><br><span class="line">            glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">processInput</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Check if the user pressed the Esc key</span></span><br><span class="line">        <span class="keyword">if</span> (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS) &#123;</span><br><span class="line">            <span class="comment">// Set the window&#x27;s close flag to true</span></span><br><span class="line">            glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">terminate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Free the window callbacks and destroy the window</span></span><br><span class="line">        glfwFreeCallbacks(window);</span><br><span class="line">        glfwDestroyWindow(window);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Terminate GLFW and free the error callback</span></span><br><span class="line">        glfwTerminate();</span><br><span class="line">        glfwSetErrorCallback(<span class="literal">null</span>).free();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[创建窗口 - LearnOpenGL CN (learnopengl-cn.github.io)](<a href="https://learnopengl-cn.github.io/01">https://learnopengl-cn.github.io/01</a> Getting started&#x2F;02 Creating a window&#x2F;)</p><p>[你好，窗口 - LearnOpenGL CN (learnopengl-cn.github.io)](<a href="https://learnopengl-cn.github.io/01">https://learnopengl-cn.github.io/01</a> Getting started&#x2F;03 Hello Window&#x2F;)</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opengl01环境搭建</title>
      <link href="/2023/12/03/opengl01%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/12/03/opengl01%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么要了解openGL"><a href="#为什么要了解openGL" class="headerlink" title="为什么要了解openGL"></a>为什么要了解openGL</h1><p>我的世界Minecraft，使用的是的OpenGL图形库，也意味着你如果需要进行一些图形的操作就会需要用的OpenGL处理。</p><h1 id="openGL简介"><a href="#openGL简介" class="headerlink" title="openGL简介"></a>openGL简介</h1><ul><li>OpenGL一般被认为什么，具有什么功能</li><li>OpenGL真正是一个什么东西。</li><li>OpenGL规范的作用是什么，真正由谁实现</li><li>规范在哪里可以找到。如何理解规范的作用。</li></ul><h2 id="核心模式和立即渲染模式"><a href="#核心模式和立即渲染模式" class="headerlink" title="核心模式和立即渲染模式"></a>核心模式和立即渲染模式</h2><ul><li>什么是立即渲染模式，为什么又立即渲染模式的情况下还需要核心模式</li><li>核心模式和立即渲染模式的比较区别，为什么学习和新模式</li><li>为什么不学习最新的版本</li><li>为什么游戏开发不使用最新的opengl规范版本</li></ul><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><ul><li>拓展是什么？</li><li>拓展能流行起来？</li><li>为什么拓展可以成为OpenGL的规范？</li><li>如何区分机器支持不支持拓展？</li></ul><h2 id="状态机"><a href="#状态机" class="headerlink" title="状态机"></a>状态机</h2><ul><li>OpenGL的设计思想？如何工作的？</li><li>OpenGL的状态是指什么？</li><li>如何更改OpenGL的状态</li><li>怎么使用OpenGL渲染</li><li>我们的主要手段是什么</li></ul><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><ul><li>为什么OpenGL需要做抽象</li><li>如何理解OpenGL中的对象</li><li>OpenGL中的工作流</li><li>OpenGL中对象思想，如何实现多对象的渲染</li></ul><h1 id="LWJGL简介"><a href="#LWJGL简介" class="headerlink" title="LWJGL简介"></a>LWJGL简介</h1><ul><li>LWJGL什么？又什么作用</li><li>LWJGL的特点</li></ul><h2 id="GLFW"><a href="#GLFW" class="headerlink" title="GLFW"></a>GLFW</h2><ul><li>GLFW作用是什么</li></ul><p>其他的辅助阅读材料：<a href="https://zhuanlan.zhihu.com/p/367160621">LWJGL入门指南：序章（我的世界(Minecraft)java原版同款游戏库） - 知乎 (zhihu.com)</a></p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="模块依赖"><a href="#模块依赖" class="headerlink" title="模块依赖"></a>模块依赖</h2><ul><li>如何获得对应的模块依赖<ul><li>lwjgl提供的依赖及项目在线生成工具：<a href="https://link.zhihu.com/?target=https://www.lwjgl.org/customize">https://www.lwjgl.org/customize</a></li></ul></li></ul><h2 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h2><ol><li>简单使用opengl创建和渲染窗口</li><li>使用glfw进行处理窗口事件监听</li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>官方demo</p><p>执行main方法即可看到结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.system.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.Callbacks.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.GLFW.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.system.MemoryStack.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.system.MemoryUtil.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> window;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello LWJGL&quot;</span> + Version.getVersion() + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Main</span>().run();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">        init();</span><br><span class="line">        loop();</span><br><span class="line">        <span class="comment">//释放了窗口的所有回调函数，比如键盘输入、鼠标移动、窗口大小变化等</span></span><br><span class="line">        glfwFreeCallbacks(window);</span><br><span class="line">        <span class="comment">//销毁了窗口和它的OpenGL上下文，它们的句柄被存储在 window 变量中</span></span><br><span class="line">        glfwDestroyWindow(window);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//这一行终止了GLFW的运行，它会释放GLFW占用的所有资源，比如错误回调、显示器列表、游戏手柄等。</span></span><br><span class="line">        glfwTerminate();</span><br><span class="line">        <span class="comment">//这一行设置了错误回调函数为null，然后释放了它占用的内存</span></span><br><span class="line">        glfwSetErrorCallback(<span class="literal">null</span>).free();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//创建了一个错误回调函数，它会将GLFW的错误信息打印到标准错误输出中</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line">        <span class="comment">//尝试初始化GLFW库，如果失败了，就抛出一个异常</span></span><br><span class="line">        <span class="keyword">if</span> ( !glfwInit() )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line"><span class="comment">//        这一行设置了窗口的创建提示为默认值，这一步是可选的，因为默认值已经被设置好了。</span></span><br><span class="line">        glfwDefaultWindowHints(); <span class="comment">// optional, the current window hints are already the default</span></span><br><span class="line">        <span class="comment">//设置了窗口的可见性提示为假</span></span><br><span class="line">        glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE); <span class="comment">// the window will stay hidden after creation</span></span><br><span class="line">        <span class="comment">//设置了窗口的可调整大小提示为真，这意味着窗口可以被用户拖动边框来改变大小</span></span><br><span class="line">        glfwWindowHint(GLFW_RESIZABLE, GLFW_TRUE); <span class="comment">// the window will be resizable</span></span><br><span class="line">        <span class="comment">//这一行创建了一个窗口和一个OpenGL上下文</span></span><br><span class="line">        <span class="comment">//里使用了300x300的大小，&quot;Hello World!&quot;的标题，NULL的显示器（表示使用窗口模式而不是全屏模式），NULL的共享窗口（表示不与其他窗口共享上下文）</span></span><br><span class="line">        window = glfwCreateWindow(<span class="number">300</span>, <span class="number">300</span>, <span class="string">&quot;Hello World!&quot;</span>, NULL, NULL);</span><br><span class="line">        <span class="comment">// 检查了窗口是否创建成功，如果失败了，就抛出一个异常</span></span><br><span class="line">        <span class="keyword">if</span> ( window == NULL )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to create the GLFW window&quot;</span>);</span><br><span class="line">        <span class="comment">// 这一行设置了一个键盘输入的回调函数，它会在每次按下、重复或者释放一个键时被调用。这个函数的参数分别是窗口、键、扫描码、动作和修饰键。</span></span><br><span class="line">        glfwSetKeyCallback(window, (window, key, scancode, action, mods) -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> ( key == GLFW_KEY_ESCAPE &amp;&amp; action == GLFW_RELEASE )</span><br><span class="line">                <span class="comment">//它判断了如果按下了Esc键并且释放了，就设置窗口的关闭标志为真,这样就可以在渲染循环中检测到并退出程序。</span></span><br><span class="line">                glfwSetWindowShouldClose(window, <span class="literal">true</span>); <span class="comment">// We will detect this in the rendering loop</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//使用了一个 MemoryStack 对象来分配一些临时的缓冲区</span></span><br><span class="line">        <span class="keyword">try</span> ( <span class="type">MemoryStack</span> <span class="variable">stack</span> <span class="operator">=</span> stackPush() ) &#123;</span><br><span class="line">            <span class="comment">//分配了两个整数型的缓冲区，用来存储窗口的宽度和高度。然后调用了 glfwGetWindowSize 函数，它会将窗口的大小写入到缓冲区中。</span></span><br><span class="line">            <span class="type">IntBuffer</span> <span class="variable">pWidth</span> <span class="operator">=</span> stack.mallocInt(<span class="number">1</span>); <span class="comment">// int*</span></span><br><span class="line">            <span class="type">IntBuffer</span> <span class="variable">pHeight</span> <span class="operator">=</span> stack.mallocInt(<span class="number">1</span>); <span class="comment">// int*</span></span><br><span class="line"></span><br><span class="line">            glfwGetWindowSize(window, pWidth, pHeight);</span><br><span class="line"><span class="comment">//获取了主显示器的视频模式，它是一个 GLFWVidMode 对象，包含了显示器的分辨率、色深、刷新率等信息。这里使用了 glfwGetPrimaryMonitor 函数来获取主显示器的句柄。</span></span><br><span class="line">            <span class="type">GLFWVidMode</span> <span class="variable">vidmode</span> <span class="operator">=</span> glfwGetVideoMode(glfwGetPrimaryMonitor());</span><br><span class="line"><span class="comment">//设置了窗口的位置，它的参数分别是窗口、X坐标和Y坐标。这里使用了一些简单的计算，使得窗口在显示器的中央显示。</span></span><br><span class="line">            glfwSetWindowPos(</span><br><span class="line">                    window,</span><br><span class="line">                    (vidmode.width() - pWidth.get(<span class="number">0</span>)) / <span class="number">2</span>,</span><br><span class="line">                    (vidmode.height() - pHeight.get(<span class="number">0</span>)) / <span class="number">2</span></span><br><span class="line">            );</span><br><span class="line">            <span class="comment">//结束了 try 块，同时也释放了之前分配的缓冲区。</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//将窗口的OpenGL上下文设置为当前线程的上下文，这样就可以使用OpenGL的函数来绘制图形了。在调用任何OpenGL的函数之前，必须要有一个当前的上下文。</span></span><br><span class="line">        glfwMakeContextCurrent(window);</span><br><span class="line">        <span class="comment">//这一行设置了交换间隔为1，这意味着启用了垂直同步，也就是每次交换缓冲区时会等待显示器的刷新信号。这样可以避免画面的撕裂和闪烁现象。</span></span><br><span class="line">        glfwSwapInterval(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//这一行将窗口显示出来，因为之前设置了窗口的可见性提示为假，所以需要手动调用这个函数来显示窗口。</span></span><br><span class="line">        glfwShowWindow(window);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//创建了OpenGL的功能对象，它会根据当前的上下文检测可用的OpenGL版本和扩展，并将它们映射到Java的方法中。这一步是在使用OpenGL的函数之前必须要做的。</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"><span class="comment">//设置了清除颜色缓冲区时使用的颜色，它的参数分别是红色、绿色、蓝色和透明度的分量，范围都是0.0到1.0。这里使用了1.0, 0.0, 0.0, 0.0，表示纯红色。</span></span><br><span class="line">        glClearColor(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line"><span class="comment">//这一行开始了一个循环，它的条件是窗口的关闭标志为假，也就是窗口还没有被关闭。这个标志可以通过 glfwSetWindowShouldClose 函数来设置，或者通过用户点击窗口的关闭按钮来触发。</span></span><br><span class="line">        <span class="keyword">while</span> ( !glfwWindowShouldClose(window) ) &#123;</span><br><span class="line">            <span class="comment">//这一行清除了帧缓冲区，它的参数是一个位掩码，表示要清除的缓冲区的类型。这里使用了 GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT，表示清除颜色缓冲区和深度缓冲区。颜色缓冲区存储了像素的颜色信息，深度缓冲区存储了像素的深度信息。清除缓冲区时，会使用之前设置的清除值，比如颜色缓冲区会被填充为红色。</span></span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// clear the framebuffer</span></span><br><span class="line"><span class="comment">//这一行交换了窗口的颜色缓冲区，也就是将后台缓冲区的内容显示到屏幕上，同时将前台缓冲区的内容移动到后台</span></span><br><span class="line">            glfwSwapBuffers(window); <span class="comment">// swap the color buffers</span></span><br><span class="line"><span class="comment">//            这一行处理了窗口的事件，比如键盘输入、鼠标移动、窗口大小变化等。</span></span><br><span class="line">            glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://zhuanlan.zhihu.com/p/367160621">LWJGL入门指南：序章（我的世界(Minecraft)java原版同款游戏库） - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/367164750">LWJGL入门指南：第一行LWJGL代码，如何安装LWJGL或生成maven或gradle依赖 - 知乎 (zhihu.com)</a></p><p>[OpenGL - LearnOpenGL CN (learnopengl-cn.github.io)](<a href="https://learnopengl-cn.github.io/01">https://learnopengl-cn.github.io/01</a> Getting started&#x2F;01 OpenGL&#x2F;)</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> opengl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft-源码-信标方块以及父类和接口</title>
      <link href="/2023/12/02/Minecraft-%E6%BA%90%E7%A0%81-%E4%BF%A1%E6%A0%87%E6%96%B9%E5%9D%97%E4%BB%A5%E5%8F%8A%E7%88%B6%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/"/>
      <url>/2023/12/02/Minecraft-%E6%BA%90%E7%A0%81-%E4%BF%A1%E6%A0%87%E6%96%B9%E5%9D%97%E4%BB%A5%E5%8F%8A%E7%88%B6%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="EntityBlock-接口"><a href="#EntityBlock-接口" class="headerlink" title="EntityBlock 接口"></a>EntityBlock 接口</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义了一个EntityBlock接口</span></span><br><span class="line"><span class="comment">// 该接口用了创建和管理方块实体</span></span><br><span class="line"><span class="comment">// 方块实体是一种特殊的方块，她可以存储额外的数据，并且在游戏中进行更新</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EntityBlock</span> &#123;</span><br><span class="line">    <span class="comment">// 方法用于在给定的位置和方块状态下创建一个新的方块实体对象，可以返回null</span></span><br><span class="line">    </span><br><span class="line">   BlockEntity <span class="title function_">newBlockEntity</span><span class="params">(BlockPos , BlockState )</span>;</span><br><span class="line"><span class="comment">// 获得一个方块实体的更新器，每个tick对方块实体进行更新</span></span><br><span class="line">   <span class="comment">// 默认方法，默认实现是返回null，T表示必须为BlockEntity或其子类。</span></span><br><span class="line">    &lt;T <span class="keyword">extends</span> <span class="title class_">BlockEntity</span>&gt; BlockEntityTicker&lt;T&gt; <span class="title function_">getTicker</span><span class="params">(Level , BlockState , BlockEntityType&lt;T&gt; )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获得用于方块实体的游戏事件监听器，查看该方块实体是否击沉了GameEvenListener。Holder，如果继承了就返回Listener或者返回null</span></span><br><span class="line">    &lt;T <span class="keyword">extends</span> <span class="title class_">BlockEntity</span>&gt; GameEventListener <span class="title function_">getListener</span><span class="params">(ServerLevel , T )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BaseEntityBlock类"><a href="#BaseEntityBlock类" class="headerlink" title="BaseEntityBlock类"></a>BaseEntityBlock类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BaseEntityBlock</span> <span class="keyword">extends</span> <span class="title class_">Block</span> <span class="keyword">implements</span> <span class="title class_">EntityBlock</span> &#123;</span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="title function_">BaseEntityBlock</span><span class="params">(BlockBehaviour.Properties )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 获得rendershape</span></span><br><span class="line">    RenderShape <span class="title function_">getRenderShape</span><span class="params">(BlockState )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//重写了父类的方法，处理方块的事件，事件id和事件参数</span></span><br><span class="line">    <span class="comment">//调用父类的处理事件方法</span></span><br><span class="line">    <span class="comment">//获得对于位置的blockentity</span></span><br><span class="line">    <span class="comment">//如果非空就调用方块实体的处理事件的方法，并将事件id和事件参数传入</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">triggerEvent</span><span class="params">(BlockState , Level , BlockPos , <span class="type">int</span> , <span class="type">int</span> )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//获得方块的menuprovider，获得方块实体如果方块实体继承于menprovider那么就将其转化为menuprovider</span></span><br><span class="line"></span><br><span class="line">    MenuProvider <span class="title function_">getMenuProvider</span><span class="params">(BlockState , Level , BlockPos )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 创建方块实体的ticker，检测方块实体的类型是否相同，如果相同就返回A类型，否则的返回null</span></span><br><span class="line">createTickerHelper(</span><br><span class="line">      BlockEntityType&lt;A&gt; , BlockEntityType&lt;E&gt; , BlockEntityTickerp </span><br><span class="line">   ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BeaconBeamBlock-接口"><a href="#BeaconBeamBlock-接口" class="headerlink" title="BeaconBeamBlock 接口"></a>BeaconBeamBlock 接口</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BeaconBeamBlock</span> &#123; <span class="comment">// 用于返回颜色</span></span><br><span class="line">   DyeColor <span class="title function_">getColor</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BeaconBlock-类"><a href="#BeaconBlock-类" class="headerlink" title="BeaconBlock 类"></a>BeaconBlock 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">class</span> <span class="title class_">BeaconBlock</span> <span class="keyword">extends</span> <span class="title class_">BaseEntityBlock</span> <span class="keyword">implements</span> <span class="title class_">BeaconBeamBlock</span> &#123;</span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">BeaconBlock</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 返回颜色</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> DyeColor <span class="title function_">getColor</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">// 在给定位置创建一个新的方块实体</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    BlockEntity </span><br><span class="line">       <span class="title function_">newBlockEntity</span><span class="params">( )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">// 获得一个方块实体的ticker，调用了createtickerhelper方法 返回一个ticker，每个tick对方块尸体进行更新，其中的调用方法是方块实体的tick</span></span><br><span class="line"></span><br><span class="line">getTicker(Level , BlockState , BlockEntityType&lt;T&gt; ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">// 方块使用的处理</span></span><br><span class="line"> use(BlockState p_49432_, Level p_49433_, BlockPos p_49434_, Player p_49435_, InteractionHand p_49436_, BlockHitResult p_49437_) &#123;</span><br><span class="line">             <span class="comment">//如果是对应的方块实体 则打开menu</span></span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">// 方块实体使用模型渲染。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> RenderShape <span class="title function_">getRenderShape</span><span class="params">(BlockState )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">// 处理方块被放置的事件</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPlacedBy</span><span class="params">(Level , BlockPos , BlockState, LivingEntity , ItemStack )</span> &#123;</span><br><span class="line">       <span class="comment">// 物品是否有自定义的名称</span></span><br><span class="line"><span class="comment">//设置自定义名称</span></span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BeaconBlockEntity-类"><a href="#BeaconBlockEntity-类" class="headerlink" title="BeaconBlockEntity 类"></a>BeaconBlockEntity 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BeaconBlockEntity</span> <span class="keyword">extends</span> <span class="title class_">BlockEntity</span> <span class="keyword">implements</span> <span class="title class_">MenuProvider</span>, Nameable &#123;</span><br><span class="line">   <span class="type">int</span> <span class="variable">MAX_LEVELS</span> <span class="operator">=</span> <span class="number">4</span>;<span class="comment">//最大层数</span></span><br><span class="line">  MobEffect[][] BEACON_EFFECTS = <span class="comment">//信标效果</span></span><br><span class="line">   Set&lt;MobEffect&gt; VALID_EFFECTS <span class="comment">//信标效果的set集合</span></span><br><span class="line"></span><br><span class="line">  Component DEFAULT_NAME <span class="comment">// 名称</span></span><br><span class="line">  <span class="type">String</span> <span class="variable">TAG_PRIMARY</span> <span class="operator">=</span> <span class="string">&quot;primary_effect&quot;</span>;</span><br><span class="line">  <span class="type">String</span> <span class="variable">TAG_SECONDARY</span> <span class="operator">=</span> <span class="string">&quot;secondary_effect&quot;</span>;</span><br><span class="line">   List&lt;BeaconBlockEntity.BeaconBeamSection&gt; beamSections = Lists.newArrayList();<span class="comment">//信标光束部分的列表，颜色和高度？</span></span><br><span class="line">  checkingBeamSections ;<span class="comment">//颜色和高度</span></span><br><span class="line">   <span class="type">int</span> levels; <span class="comment">// 层数</span></span><br><span class="line">    <span class="type">int</span> lastCheckY;<span class="comment">// 上次检测的y坐标位置</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">    primaryPower;<span class="comment">// 主要效果</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">    secondaryPower;<span class="comment">// 次要效果</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">    Component name;<span class="comment">// 名字</span></span><br><span class="line">    LockCode lockKey ; <span class="comment">// 信标没有锁码</span></span><br><span class="line">    <span class="comment">// 信标数据的访问，该类用于传递方块实体的数据</span></span><br><span class="line">    <span class="comment">// get set getCount方法分别是获得，设置，和获得数据元素个数</span></span><br><span class="line"> <span class="type">ContainerData</span> <span class="variable">dataAccess</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContainerData</span>() &#123;</span><br><span class="line">   <span class="comment">//  0: 信标方块的层数</span></span><br><span class="line"><span class="comment">//1: 主效果的编码</span></span><br><span class="line"><span class="comment">//2: 次要效果的编码</span></span><br><span class="line">   &#125;;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//检查modeeffect是否合法</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">    MobEffect <span class="title function_">filterEffect</span><span class="params">(<span class="meta">@Nullable</span> MobEffect )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 构造方法</span></span><br><span class="line">    BeaconBlockEntity(BlockPos , BlockState ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">tick</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">//信标方块实体每 80 游戏刻检查一次光束段，如果光束被阻断，则检查结束。检查结束后，信标方块实体会更新其层数和光束段列表。如果层数大于 0，则会给附近的玩家施加相应的状态效果。以及播放相应声音等内容。</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查更新基座层数</span></span><br><span class="line">     <span class="type">int</span> <span class="title function_">updateBase</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//实体移除</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRemoved</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///更具层数以及玩家选中的效果给周围的玩家赋予药水效果</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">applyEffects</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   </span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">playSound</span><span class="params">(Level , BlockPos , SoundEvent )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//获取信标方块实体的光束段列表，</span></span><br><span class="line">   <span class="keyword">public</span> List&lt;BeaconBlockEntity.BeaconBeamSection&gt; getBeamSections() &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/// SL使用</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">storeEffect</span><span class="params">(CompoundTag , String , <span class="meta">@Nullable</span> MobEffect )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> MobEffect <span class="title function_">loadEffect</span><span class="params">(CompoundTag , String )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">load</span><span class="params">(CompoundTag )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">saveAdditional</span><span class="params">(CompoundTag )</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCustomName</span><span class="params">(<span class="meta">@Nullable</span> Component )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> Component <span class="title function_">getCustomName</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> AbstractContainerMenu <span class="title function_">createMenu</span><span class="params">(<span class="type">int</span> , Inventory , Player )</span> &#123;</span><br><span class="line">       <span class="comment">//判断玩家是否能解锁信标方块实体的菜单</span></span><br><span class="line">       <span class="comment">//如果是</span></span><br><span class="line">       <span class="comment">//创建一个新的BeaconMenu对象，它表示一个信标方块实体的菜单</span></span><br><span class="line">       <span class="comment">//否则，返回null，表示创建失败。</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">     getDisplayName() &#123;</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">     getName() &#123;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">     setLevel(Level ) &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">BeaconBeamSection</span> &#123;</span><br><span class="line">      <span class="keyword">final</span> <span class="type">float</span>[] color;</span><br><span class="line">      <span class="keyword">private</span> <span class="type">int</span> height;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BeaconRenderer-类"><a href="#BeaconRenderer-类" class="headerlink" title="BeaconRenderer 类"></a>BeaconRenderer 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//类负责在游戏中渲染信标光束。 实现了BlockEntityRenderer接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BeaconRenderer</span> <span class="keyword">implements</span> <span class="title class_">BlockEntityRenderer</span>&lt;BeaconBlockEntity&gt; &#123;</span><br><span class="line"> BEAM_LOCATION </span><br><span class="line"> MAX_RENDER_Y</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">BeaconRenderer</span><span class="params">(BlockEntityRendererProvider.Context p_173529_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//调用render（）方法来渲染每个刻度的信标</span></span><br><span class="line">    <span class="comment">//它从Beacon BlockEntity获取波束部分，并在其中循环。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">render</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">          <span class="comment">//对于每个部分，它都会调用renderBeacon beam（）来渲染BeaconBeam的该部分</span></span><br><span class="line">          <span class="comment">//它传递PoseStack、缓冲区、动画时间/数据和颜色。</span></span><br><span class="line">         </span><br><span class="line">  </span><br><span class="line">          <span class="comment">//高度计数器j按截面的高度递增</span></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//renderBeachBeam（）执行BeaconBeam渲染逻辑。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">renderBeaconBeam</span><span class="params">(</span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//PoseStack、缓冲区、动画时间/值、颜色等参数来渲染光束。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">renderBeaconBeam</span><span class="params">(</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">renderPart</span><span class="params">(</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">renderQuad</span><span class="params">(</span></span><br><span class="line"><span class="params">    </span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//私有实用程序方法实际上处理用所有数据写入顶点的问题。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addVertex</span><span class="params">(</span></span><br><span class="line"><span class="params">   </span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 是否渲染偏差</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldRenderOffScreen</span><span class="params">(BeaconBlockEntity )</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回视野范围</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getViewDistance</span><span class="params">()</span> &#123;</span><br><span class="line">      </span><br><span class="line"><span class="comment">//是否渲染</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldRender</span><span class="params">(BeaconBlockEntity , Vec3 )</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BeaconMenu-类"><a href="#BeaconMenu-类" class="headerlink" title="BeaconMenu 类"></a>BeaconMenu 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BeaconMenu</span> <span class="keyword">extends</span> <span class="title class_">AbstractContainerMenu</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="type">Container</span> <span class="variable">beacon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleContainer</span>(<span class="number">1</span>) &#123;<span class="comment">//容量为1个插槽：</span></span><br><span class="line">       <span class="comment">// 能否存放物品</span></span><br><span class="line">      <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canPlaceItem</span><span class="params">()</span> &#123;</span><br><span class="line">          <span class="comment">//检查item是否标记有 ItemTags.BEACON_PAYMENT_ITEMS 。</span></span><br><span class="line">      &#125;</span><br><span class="line"> <span class="comment">//该slot最大堆叠数量</span></span><br><span class="line">   &#125;;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//PaymentSlot对象引用</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> BeaconMenu.PaymentSlot paymentSlot;</span><br><span class="line">    <span class="comment">// 访问是否合法的包装类</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> ContainerLevelAccess access;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">BeaconMenu</span><span class="params">(<span class="type">int</span> p_39036_, Container p_39037_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">BeaconMenu</span><span class="params">(<span class="type">int</span> p_39039_, Container p_39040_, ContainerData p_39041_, ContainerLevelAccess p_39042_)</span> &#123;</span><br><span class="line">       <span class="comment">//检查是否有正确的datacount</span></span><br><span class="line">       <span class="comment">//创建了slot</span></span><br><span class="line">       <span class="comment">//背包slot</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 玩家关闭menu时候调用方法</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removed</span><span class="params">(Player p_39049_)</span> &#123;</span><br><span class="line">          <span class="comment">// 移除paymentslot的内容</span></span><br><span class="line">             <span class="comment">//掉落在玩家附近</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//是否合法打开GUI</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">stillValid</span><span class="params">(Player p_39047_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获得层数</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLevels</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 返回药水效果的ID</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">encodeEffect</span><span class="params">(<span class="meta">@Nullable</span> MobEffect p_298586_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 通过药水效果ID返回药水效果</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> MobEffect <span class="title function_">decodeEffect</span><span class="params">(<span class="type">int</span> p_298318_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得第一种效果</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">public</span> MobEffect <span class="title function_">getPrimaryEffect</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获得第二种效果</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">public</span> MobEffect <span class="title function_">getSecondaryEffect</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 更新效果</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateEffects</span><span class="params">()</span> &#123;</span><br><span class="line">          <span class="comment">//设置两种效果并且移除slot的物品</span></span><br><span class="line">          <span class="comment">//更新blockentity</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//payslot是否有物品</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasPayment</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 自定义的payslot，只能放进去具有目标tag的物品</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title class_">PaymentSlot</span> <span class="keyword">extends</span> <span class="title class_">Slot</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="BeaconScreen类"><a href="#BeaconScreen类" class="headerlink" title="BeaconScreen类"></a>BeaconScreen类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BeaconScreen</span> <span class="keyword">extends</span> <span class="title class_">AbstractContainerScreen</span>&lt;BeaconMenu&gt; &#123;</span><br><span class="line">   ResourceLocation BEACON_LOCATION </span><br><span class="line"> ResourceLocation BUTTON_DISABLED_SPRITE</span><br><span class="line"> ResourceLocation BUTTON_SELECTED_SPRITE</span><br><span class="line"> ResourceLocation BUTTON_HIGHLIGHTED_SPRITE </span><br><span class="line"> ResourceLocation BUTTON_SPRITE</span><br><span class="line"> ResourceLocation CONFIRM_SPRITE </span><br><span class="line"> ResourceLocation CANCEL_SPRITE</span><br><span class="line">   Component PRIMARY_EFFECT_LABE</span><br><span class="line">   Component SECONDARY_EFFECT_LABEL </span><br><span class="line"> List&lt;BeaconScreen.BeaconButton&gt; beaconButtons</span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   MobEffect primary;</span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   MobEffect secondary;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">BeaconScreen</span><span class="params">(<span class="keyword">final</span> BeaconMenu p_97912_, Inventory p_97913_, Component p_97914_)</span> &#123;</span><br><span class="line">       <span class="comment">// menu添加slot监听器</span></span><br><span class="line"><span class="comment">// 数据变化</span></span><br><span class="line">       <span class="comment">//设置效果</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 添加渲染按钮</span></span><br><span class="line">    addBeaconButton(_) &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//按钮清空</span></span><br><span class="line">       <span class="comment">//确认按钮</span></span><br><span class="line">       <span class="comment">//取消按钮</span></span><br><span class="line"><span class="comment">// 遍历信标的前三层效果,添加对应的按钮</span></span><br><span class="line">     </span><br><span class="line">      <span class="comment">// 获取信标的第四层效果的数量，加一是因为有一个升级按钮</span></span><br><span class="line">             <span class="comment">// 计算该层的总宽度</span></span><br><span class="line">      <span class="comment">// 遍历该层的除了升级按钮外的每个效果</span></span><br><span class="line">                   <span class="comment">// 获取该效果的对象</span></span><br><span class="line">                   <span class="comment">// 创建一个信标能力按钮，参数为按钮的位置，效果的对象，是否为主要效果，和层级</span></span><br><span class="line">                   <span class="comment">// 设置该按钮为不激活状态</span></span><br><span class="line">                   <span class="comment">// 添加该按钮</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 创建一个信标升级按钮，参数为按钮的位置和一个默认的效果对象</span></span><br><span class="line">             <span class="comment">// 设置该按钮为不可见状态</span></span><br><span class="line">             <span class="comment">// 添加该按钮</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//tick每次更新按钮状态</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">containerTick</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得信标层数，更新每个按钮</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">updateButtons</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染labels</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">renderLabels</span><span class="params">(GuiGraphics , <span class="type">int</span> , <span class="type">int</span> )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">renderBg</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//绘制GUI</span></span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">render</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//信标接口</span></span><br><span class="line">   <span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line">   <span class="keyword">interface</span> <span class="title class_">BeaconButton</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 信标取消 按钮</span></span><br><span class="line">   <span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title class_">BeaconCancelButton</span> <span class="keyword">extends</span> <span class="title class_">BeaconScreen</span>.BeaconSpriteScreenButton &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 信标确认按钮</span></span><br><span class="line">   <span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title class_">BeaconConfirmButton</span> <span class="keyword">extends</span> <span class="title class_">BeaconScreen</span>.BeaconSpriteScreenButton &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//信标效果升级按钮</span></span><br><span class="line">   <span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title class_">BeaconPowerButton</span> <span class="keyword">extends</span> <span class="title class_">BeaconScreen</span>.BeaconScreenButton &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line">   <span class="keyword">abstract</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">BeaconScreenButton</span> <span class="keyword">extends</span> <span class="title class_">AbstractButton</span> <span class="keyword">implements</span> <span class="title class_">BeaconScreen</span>.BeaconButton &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//精灵按钮</span></span><br><span class="line">   <span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line">   <span class="keyword">abstract</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">BeaconSpriteScreenButton</span> <span class="keyword">extends</span> <span class="title class_">BeaconScreen</span>.BeaconScreenButton &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//药水效果升级按钮</span></span><br><span class="line">   <span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title class_">BeaconUpgradePowerButton</span> <span class="keyword">extends</span> <span class="title class_">BeaconScreen</span>.BeaconPowerButton &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Minecraft </tag>
            
            <tag> 我的世界源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft源码-经验球</title>
      <link href="/2023/11/30/Minecraft%E6%BA%90%E7%A0%81-%E7%BB%8F%E9%AA%8C%E7%90%83/"/>
      <url>/2023/11/30/Minecraft%E6%BA%90%E7%A0%81-%E7%BB%8F%E9%AA%8C%E7%90%83/</url>
      
        <content type="html"><![CDATA[<h1 id="ExperienceOrb-经验球"><a href="#ExperienceOrb-经验球" class="headerlink" title="ExperienceOrb 经验球"></a>ExperienceOrb 经验球</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExperienceOrb</span> <span class="keyword">extends</span> <span class="title class_">Entity</span> &#123;</span><br><span class="line">    <span class="type">int</span> LIFETIME<span class="comment">//经验求生存时间 tick  300S 5min</span></span><br><span class="line">    <span class="type">int</span> ENTITY_SCAN_PERIOD<span class="comment">// 经验求每间隔多少tick扫描一次周围的玩家</span></span><br><span class="line">    <span class="type">int</span> MAX_FOLLOW_DIST;<span class="comment">// 经验球最大的追随玩家的距离</span></span><br><span class="line">    <span class="type">int</span> ORB_GROUPS_PER_AREA <span class="comment">// 每个区域的最多经验球</span></span><br><span class="line">    <span class="type">double</span> ORB_MERGE_DISTANCE<span class="comment">// 每个经验求合并的最小距离</span></span><br><span class="line">    <span class="type">int</span> age <span class="comment">// 经验球的年龄用于消失</span></span><br><span class="line">    <span class="type">int</span> health<span class="comment">// 经验球的生命</span></span><br><span class="line">   <span class="type">int</span> value <span class="comment">// 经验球的数值</span></span><br><span class="line">    <span class="type">int</span> count<span class="comment">// 经验球的数值，当合并时候会增加，影响声音</span></span><br><span class="line">    Player followingPlayer; <span class="comment">// 追随玩家</span></span><br><span class="line"><span class="comment">//创建一个经验求实体</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">ExperienceOrb</span><span class="params">(Level , <span class="type">double</span> , <span class="type">double</span> , <span class="type">double</span> , <span class="type">int</span> )</span> &#123;</span><br><span class="line">    <span class="comment">//设置了经验球的属性</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 从存档中加载实体</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">ExperienceOrb</span><span class="params">(EntityType&lt;? extends ExperienceOrb&gt; , Level )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 重写父类的方法，根据运动发出声音和粒子效果，返回值是一个枚举。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> Entity.MovementEmission <span class="title function_">getMovementEmission</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 每个tick回调方法，</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tick</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//如果在水中或者岩浆中模拟水中和岩浆中的浮力效果</span></span><br><span class="line">       </span><br><span class="line"><span class="comment">// 检测经验求是否和其他方块实体发生碰撞，如果发生了就移动到最近的空间中</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">// 如果当前的tick计时为20的倍数</span></span><br><span class="line">      </span><br><span class="line">          <span class="comment">// 扫描周围的实体</span></span><br><span class="line">       </span><br><span class="line"><span class="comment">// 如果追随玩家存在 玩家死亡 玩家处于观察者模式</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 玩家不为空则添加一个想玩家移动的速度</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">//模拟不同方块上的速度</span></span><br><span class="line">       </span><br><span class="line">       <span class="comment">// 超出最大存活时间则消失</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 重写父类的方法，用于获得实体下面的方块</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> BlockPos <span class="title function_">getBlockPosBelowThatAffectsMyMovement</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获得扫描附近实体，是否有实体和可以合并的经验求</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">scanForEntities</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 公共静态方法，用于在给定世界的位置生成一定数量的经验球</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">award</span><span class="params">(ServerLevel p_147083_, Vec3 p_147084_, <span class="type">int</span> p_147085_)</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 私有静态的方法 尝试将经验添加到已存在的经验求中，</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">tryMergeToExisting</span><span class="params">(ServerLevel p_147097_, Vec3 p_147098_, <span class="type">int</span> p_147099_)</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 判断是否可以和另一个经验求合并。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">canMerge</span><span class="params">(ExperienceOrb p_147087_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 判断是否可以和另一个经验求合并，id%40为0.并且value数值相等</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">canMerge</span><span class="params">(ExperienceOrb p_147089_, <span class="type">int</span> p_147090_, <span class="type">int</span> p_147091_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//  合并</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(ExperienceOrb p_147101_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 设置水下移动速度</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setUnderwaterMovement</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//  溅起水花？</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doWaterSplashEffect</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 受到伤害，伤害的来源和伤害的大小</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hurt</span><span class="params">(DamageSource , <span class="type">float</span> )</span> &#123;</span><br><span class="line">       <span class="comment">//如果是客户端，经验求已经移除，那么就返回false，这是forge的一个修复，处理客户端和服务器不同步的问题。</span></span><br><span class="line">       <span class="comment">// 是否对伤害源免疫</span></span><br><span class="line">    <span class="comment">// 不免疫则减少hp。为0消失</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 将经验求的数据存储到一个nbt中</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAdditionalSaveData</span><span class="params">(CompoundTag )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 从nbt中读取数据</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readAdditionalSaveData</span><span class="params">(CompoundTag )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 重写的父类的方法。用于处理经验求和玩家接触</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playerTouch</span><span class="params">(Player p_20792_)</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 修复玩家身上的物品，玩家和经验球的数值</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">repairPlayerItems</span><span class="params">(Player p_147093_, <span class="type">int</span> p_147094_)</span> &#123;</span><br><span class="line">       <span class="comment">// 附魔助手的方法，随机获得一个玩家身上有的经验修补的物品，参数分别是附魔对象，玩家实体，一个是否损坏的判断器</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 损伤值转为经验值</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">durabilityToXp</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 经验值转为损伤值</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">xpToDurability</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获得数值</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 根据value返回不同的icon图表</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getIcon</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//获得合适经验值的方法</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getExperienceValue</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 经验球是否被攻击</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAttackable</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> SoundSource <span class="title function_">getSoundSource</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 经验球的声音源是环境</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 我的世界源码 </tag>
            
            <tag> 经验球 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随想记录</title>
      <link href="/2023/11/28/%E9%9A%8F%E6%83%B3%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/11/28/%E9%9A%8F%E6%83%B3%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>11.28</p><p>生产技术和生产力的进步使得人类有时间从事到精神活动的劳动中来。而精神活动的劳动又反过来推进或者迫使生产力和生产技术的进步。在这样的螺旋作用的状况下，人类的生活不断地发生着改变，可惜的是人并没有从中解放出来，反倒陷入的更深了。</p><p>11.28</p><p>与其说是选举，倒不如说是强行拉观众光看的证明其合法性和合理性的舞台表演。</p><p>11.28</p><p>”实验室主任自费十几万网购虎骨做科研 取保候审期间完成多项科研工作“新闻是否说明了只要是有利于国家利益的，个人目的正义的，即使手段是不正义的也是可以被原谅的？</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 闲聊 </tag>
            
            <tag> 随便记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft源码-Guardian</title>
      <link href="/2023/11/27/Minecraft%E6%BA%90%E7%A0%81-Guardian/"/>
      <url>/2023/11/27/Minecraft%E6%BA%90%E7%A0%81-Guardian/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="Guardian-类"><a href="#Guardian-类" class="headerlink" title="Guardian 类"></a>Guardian 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Guardian</span> <span class="keyword">extends</span> <span class="title class_">Monster</span> &#123;</span><br><span class="line">    <span class="comment">//这是一个保护的静态常量，表示守卫者攻击的持续时间，单位是刻（1刻=0.05秒），所以80刻就是4秒</span></span><br><span class="line">    <span class="type">int</span> ATTACK_TIME</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这是一个私有的浮点数变量，表示守卫者尾巴的动画状态，它的值会随着时间变化而变化，用于客户端渲染</span></span><br><span class="line">    clientSideTailAnimation;</span><br><span class="line">    <span class="comment">//这是一个私有的浮点数变量，表示守卫者尾巴的上一个动画状态，它的值会随着时间变化而变化，用于客户端渲染</span></span><br><span class="line">    clientSideTailAnimationO;</span><br><span class="line">    <span class="comment">//这是一个私有的浮点数变量，表示守卫者尾巴的动画速度，它的值会随着时间变化而变化，用于客户端渲染</span></span><br><span class="line">    clientSideTailAnimationSpeed;</span><br><span class="line">    <span class="comment">//这是一个私有的浮点数变量，表示守卫者身上的尖刺的动画状态，它的值会随着时间变化而变化，用于客户端渲染</span></span><br><span class="line">    clientSideSpikesAnimation;</span><br><span class="line">    <span class="comment">//这是一个私有的浮点数变量，表示守卫者身上的尖刺的上一个动画状态，它的值会随着时间变化而变化，用于客户端渲染</span></span><br><span class="line"> clientSideSpikesAnimationO;</span><br><span class="line">    <span class="comment">//这是一个私有的可空的生物实体变量，表示守卫者的攻击目标，它的值会根据守卫者的行为而变化，用于客户端渲染</span></span><br><span class="line"></span><br><span class="line">clientSideCachedAttackTarget;</span><br><span class="line">    <span class="comment">//这是一个私有的整数变量，表示守卫者的攻击时间，它的值会根据守卫者的行为而变化，用于客户端渲染</span></span><br><span class="line">clientSideAttackTime;</span><br><span class="line">    <span class="comment">//这是一个私有的布尔值变量，表示守卫者是否触碰到了地面，它的值会根据守卫者的位置而变化，用于客户端渲染</span></span><br><span class="line"> clientSideTouchedGround;</span><br><span class="line">    <span class="comment">//这是一个受保护的可空的随机漫步目标变量，表示守卫者的移动目标，它的值会根据守卫者的行为而变化，用于服务端控制</span></span><br><span class="line">randomStrollGoal;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">////这是一个公共的构造方法，它接受两个参数，一个是守卫者的实体类型，一个是守卫者所在的世界，它们的类型分别是EntityType&lt;? extends Guardian&gt;和Level</span></span><br><span class="line">    <span class="comment">//调用父类的构造方法，初始化守卫者的基本属性，如生命值、攻击力等。</span></span><br><span class="line"><span class="comment">//设置守卫者的经验值奖励，为10。</span></span><br><span class="line"><span class="comment">//设置守卫者的寻路惩罚，在水中移动没有任何障碍。</span></span><br><span class="line"><span class="comment">//创建守卫者的移动控制器，用于控制守卫者的移动行为。</span></span><br><span class="line"><span class="comment">//初始化守卫者尾巴的动画状态，为一个随机的浮点数。</span></span><br><span class="line"><span class="comment">//初始化守卫者尾巴的上一个动画状态，与当前动画状态相同。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">Guardian</span><span class="params">(EntityType&lt;? extends Guardian&gt; , Level )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="comment">//这是一个覆盖父类的方法，它的作用是注册守卫者的目标，它没有参数，也没有返回值</span></span><br><span class="line">   <span class="comment">// 在限制区域内随机漫步</span></span><br><span class="line"><span class="comment">//朝向限制区域移动</span></span><br><span class="line"><span class="comment">//看向附近的玩家和其他守卫者</span></span><br><span class="line"><span class="comment">//随机看向周围</span></span><br><span class="line"><span class="comment">//攻击最近的可攻击的生物实体</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">registerGoals</span><span class="params">()</span> &#123;</span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 设置生物的血量等属性</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> AttributeSupplier.Builder <span class="title function_">createAttributes</span><span class="params">()</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//这是一个覆盖父类的方法，它的作用是创建守卫者的导航，它接受一个参数，就是守卫者所在的世界，它的类型是Level，它返回一个导航的对象，它的类型是PathNavigation</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> PathNavigation <span class="title function_">createNavigation</span><span class="params">(Level )</span> &#123;</span><br><span class="line">       <span class="comment">////这是一个返回一个水中绑定的导航的语句，守卫者的导航是一个水中绑定的导航，用于控制守卫者在水中的移动，它的构造方法接受两个参数，一个是守卫者实体，一个是守卫者所在的世界，分别是this和p_32846_</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//这是一个覆盖父类的方法，它的作用是定义守卫者的同步数据，守卫者的同步数据是一些用于在客户端和服务端之间同步守卫者的状态的数据，它没有参数，也没有返回值</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">defineSynchedData</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//这是一个覆盖父类的方法，它的作用是判断守卫者是否可以在水下呼吸，它没有参数，它返回一个布尔值，表示守卫者是否可以在水下呼吸</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canBreatheUnderwater</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获取实体的类型为水生</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> MobType <span class="title function_">getMobType</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 检查实体是否在移动</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isMoving</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 设置实体的移动状态</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">setMoving</span><span class="params">(<span class="type">boolean</span> )</span> &#123;</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 获取攻击持续时间</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAttackDuration</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 设置实体的主动攻击目标</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">setActiveAttackTarget</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 检查是否存在活跃的攻击目标</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">hasActiveAttackTarget</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//  获取活跃的攻击目标，可能为 null</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">    LivingEntity <span class="title function_">getActiveAttackTarget</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获取环境声音的播放间隔时间</span></span><br><span class="line">  </span><br><span class="line">    <span class="type">int</span> <span class="title function_">getAmbientSoundInterval</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获取环境声音</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    SoundEvent <span class="title function_">getAmbientSound</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获取受伤声音</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   </span><br><span class="line">    SoundEvent <span class="title function_">getHurtSound</span><span class="params">(DamageSource p_32852_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获取死亡声音</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    SoundEvent <span class="title function_">getDeathSound</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获取移动时事件</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    Entity.MovementEmission <span class="title function_">getMovementEmission</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获取站立时的眼睛高度</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="type">float</span> <span class="title function_">getStandingEyeHeight</span><span class="params">(Pose , EntityDimensions )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获取走到对应方块的代价方法</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getWalkTargetValue</span><span class="params">(BlockPos , LevelReader )</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//守卫者实体在 AI 步骤中会根据其状态进行不同的动作，例如移动、攻击、生成粒子效果等。</span></span><br><span class="line">    <span class="comment">//如果在水中或气泡中，则设置氧气值为 300。</span></span><br><span class="line">    <span class="comment">//如果在地面上，则在当前位置上随机移动，并随机旋转。</span></span><br><span class="line">    <span class="comment">//如果有攻击目标，则设置旋转方向为攻击目标的方向。</span></span><br><span class="line">    <span class="comment">//如果正在攻击，则生成从自己到攻击目标的粒子效果。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">aiStep</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">protected</span> SoundEvent <span class="title function_">getFlopSound</span><span class="params">()</span> &#123;<span class="comment">// 返回跳跃声音</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getTailAnimation</span><span class="params">(<span class="type">float</span> )</span> &#123;<span class="comment">// 返回尾巴动画相关的数值</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getSpikesAnimation</span><span class="params">(<span class="type">float</span> )</span> &#123;　<span class="comment">//尖刺</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getAttackAnimationScale</span><span class="params">(<span class="type">float</span> )</span> &#123;<span class="comment">// 获得攻击动画</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getClientSideAttackTime</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">checkSpawnObstruction</span><span class="params">(LevelReader p_32829_)</span> &#123;<span class="comment">//检测出生点</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 检查守卫的生成规则</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkGuardianSpawnRules</span><span class="params">(</span></span><br><span class="line"><span class="params">      </span></span><br><span class="line"><span class="params">   &#125;</span></span><br><span class="line"><span class="params">       </span></span><br><span class="line"><span class="params">       </span></span><br><span class="line"><span class="params">// 处理守卫受到伤害的情况</span></span><br><span class="line"><span class="params">       </span></span><br><span class="line"><span class="params">       </span></span><br><span class="line"><span class="params">   <span class="meta">@Override</span></span></span><br><span class="line"><span class="params">   <span class="keyword">public</span> <span class="type">boolean</span> hurt(DamageSource p_32820_, <span class="type">float</span> p_32821_)</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 获得实体头部旋转的最大角度</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMaxHeadXRot</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 处理实体移动</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">travel</span><span class="params">(Vec3 p_32858_)</span> &#123;</span><br><span class="line"><span class="comment">// 是本地控制 在水中</span></span><br><span class="line">      </span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 定义守护者的攻击目标</span></span><br><span class="line">     GuardianAttackGoal <span class="keyword">extends</span> <span class="title class_">Goal</span> &#123;</span><br><span class="line"> Guardian guardian;<span class="comment">// 守护者</span></span><br><span class="line"><span class="type">int</span> attackTime;<span class="comment">// 攻击时间</span></span><br><span class="line"> <span class="type">boolean</span> elder;<span class="comment">//是否elderGuadian</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="title function_">GuardianAttackGoal</span><span class="params">(Guardian )</span> &#123;</span><br><span class="line">         </span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canUse</span><span class="params">()</span> &#123;<span class="comment">// 此goal是否可用</span></span><br><span class="line">        <span class="comment">//存在敌人则可用</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canContinueToUse</span><span class="params">()</span> &#123;<span class="comment">//是否继续调用 是否年长，并且目标不为空，和敌人距离大于9</span></span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;<span class="comment">//开始执行该goal</span></span><br><span class="line">       </span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> &#123;<span class="comment">//停止只从该goal</span></span><br><span class="line">     </span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">requiresUpdateEveryTick</span><span class="params">()</span> &#123;</span><br><span class="line">          <span class="comment">// 是否需要每tick更新</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tick</span><span class="params">()</span> &#123;<span class="comment">//每tick行为</span></span><br><span class="line"><span class="comment">//停止导航，转向目标。</span></span><br><span class="line"><span class="comment">//如果没有视野，则设置目标为空。</span></span><br><span class="line"><span class="comment">//如果攻击时间为 0，则设置活跃攻击目标为目标的 ID，并广播事件。</span></span><br><span class="line"><span class="comment">//如果攻击时间大于持续时间，则向目标造成伤害，并设置目标为空。</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">         </span><br><span class="line"><span class="comment">// 攻击选择器</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">GuardianAttackSelector</span> <span class="keyword">implements</span> <span class="title class_">Predicate</span>&lt;LivingEntity&gt; &#123;</span><br><span class="line">\Guardian guardian;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="title function_">GuardianAttackSelector</span><span class="params">(Guardian \)</span> &#123;</span><br><span class="line">\      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">test</span><span class="params">(<span class="meta">@Nullable</span> LivingEntity p_32881_)</span> &#123;<span class="comment">// 是否执行test</span></span><br><span class="line">       </span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">         </span><br><span class="line"><span class="comment">// 移动控制器</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">GuardianMoveControl</span> <span class="keyword">extends</span> <span class="title class_">MoveControl</span> &#123;</span><br><span class="line">Guardian guardian;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="title function_">GuardianMoveControl</span><span class="params">(Guardian )</span> &#123;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tick</span><span class="params">()</span> &#123; </span><br><span class="line">        <span class="comment">//计算目标方向向量，并根据向量计算偏航角。</span></span><br><span class="line"><span class="comment">//设置转向和身体转向。</span></span><br><span class="line"><span class="comment">//计算守卫者的速度，并根据速度线性插值。</span></span><br><span class="line"><span class="comment">//计算移动方向，并设置移动方向。</span></span><br><span class="line"><span class="comment">//计算视线位置，并设置视线位置。</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> Java </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习01</title>
      <link href="/2023/11/27/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A001/"/>
      <url>/2023/11/27/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A001/</url>
      
        <content type="html"><![CDATA[<p>推荐一本深度学习的书还是不错的：</p><p><a href="https://zh.d2l.ai/chapter_preface/index.html">前言 — 动手学深度学习 2.0.0 documentation (d2l.ai)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春之歌~Spring Song</title>
      <link href="/2023/11/26/%E6%98%A5%E4%B9%8B%E6%AD%8C-Spring-Song/"/>
      <url>/2023/11/26/%E6%98%A5%E4%B9%8B%E6%AD%8C-Spring-Song/</url>
      
        <content type="html"><![CDATA[<p>それでも手を取って　となりに佇んで<br>即使已经演变至此，你还是愿意站在我的身旁、牵起我的手<br>初めて抱きしめた　かたち<br>令人不经追忆起，至今仍无法忘怀的、第一次相拥的轮廓<br>欲張ってかなしみを抱えすぎていたから<br>全都是因为我太过贪婪自私，才会有如此悲怆痛苦的哀伤<br>幸せを何処にも　もう持ちきれなくて<br>所以不论何处都再也无法，回到过往那段一成不变的幸福时日<br>花びらを散らした風が<br>暮春的晚风散了本因艳丽纷飞的锦簇花瓣<br>扉を開いて　変わる季節<br>敞开门扉，却仅迎来，令人感伤的更迭时节</p><p>しんしんと降り積もる時の中<br>在仿佛凋花般幽静落下、深厚积累并流逝的时光深处<br>よろこびもくるしみもひとしく<br>不论是欣喜愉悦、亦或是悲痛苦楚，毫无二致<br>二人の手のひらで溶けて行く<br>均在两人十指紧扣的手心中，毫不留情地消散逝去<br>微笑みも贖いも　あなたの側で<br>愿无论是微笑还是赎求赦免，我都能陪伴在你的身边</p><p>消え去って行くことも　ひとりではできなくて<br>想淡淡抹灭自己的行踪悄然消逝，只身一人，却什么都无法做到<br>弱虫で身勝手な　わたし<br>我想这都是因为，我是如此的胆怯懦弱又自私任性吧</p><p>償えない影を背負って<br>背负不可弥补的沉重罪孽及赎罪的晦暗阴影<br>約束の場所は　花の盛り<br>约定之地，必定将以，似锦繁花鲜丽点缀绽放</p><p>罪も愛も顧みず春は逝く<br>不顾她的罪过及爱恋，春天仅是渐渐幽然逝去<br>輝きはただ空に眩しく<br>无情的苍天仅是，沉寂地徒留耀眼光芒，仿佛无法饶恕般眩目撩乱<br>私を許さないでいてくれる<br>即便我做出不可宽恕的事，也请你不要怜悯我<br>壊れたい　生まれたい<br>我乞求彻底溃烂崩坏；却也渴望再度重生</p><p>あなたの側で　笑うよ<br>我会一直陪伴在你的身旁幸福笑着<br>せめて側にいる大事な人たちに<br>请你至少向陪伴在我身边、赐予我幸福的、珍重的人们传递感谢<br>いつも私は　幸せにいると　優しい夢を届けて<br>准允了我一场，一直十分温柔又慈祥、令人沉溺珍惜的甜美幻梦</p><p>あなたの側にいる<br>我会一直，陪伴在你的身边<br>あなたを愛してる<br>我会一直，爱着你的<br>あなたとここにいる<br>我会一直，待在这里<br>あなたの側に<br>直到能够，陪在你的身边<br>{その日々は　夢のように}<br>{那段时光，每一天都犹如梦一般}</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 影评 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft 以及 Minecraft mod 反混淆实现</title>
      <link href="/2023/11/25/Minecraft-%E4%BB%A5%E5%8F%8A-Minecraft-mod-%E5%8F%8D%E6%B7%B7%E6%B7%86%E5%AE%9E%E7%8E%B0/"/>
      <url>/2023/11/25/Minecraft-%E4%BB%A5%E5%8F%8A-Minecraft-mod-%E5%8F%8D%E6%B7%B7%E6%B7%86%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://www.coley.software/Recaf/">Recaf - modern bytecode editor (coley.software)</a></p><p>直接打开</p><h2 id="使用Recaf对Minecraft进行反编译反混淆"><a href="#使用Recaf对Minecraft进行反编译反混淆" class="headerlink" title="使用Recaf对Minecraft进行反编译反混淆"></a>使用Recaf对Minecraft进行反编译反混淆</h2><p>找到Minecraft jar打开,从json中找到client mapping地址,下载保存</p><p><img src="https://s2.loli.net/2023/11/26/EDnaRvK1wN6exkA.png" alt="image-20231126105120674"></p><p><img src="https://s2.loli.net/2023/11/26/94vxRqnNl8GW5P7.png" alt="image-20231126105210776"></p><p><img src="https://s2.loli.net/2023/11/26/t8IfZvdG1MqJoPg.png" alt="image-20231126105354166"></p><p>将Minecraft jar拖入到窗口,使用mappin-proguard对其进行反混淆</p><p><img src="https://s2.loli.net/2023/11/26/7Pmrj6VtHMIhqDi.png" alt="image-20231126105141070"></p><p><img src="https://s2.loli.net/2023/11/26/JiDSbyp3K5FtX97.png" alt="image-20231126105531477"></p><p><img src="https://s2.loli.net/2023/11/26/kVqK6rUpLDXEbx1.png" alt="image-20231126105603427"></p><p>稍作等待即可完成</p><p><img src="https://s2.loli.net/2023/11/26/IWEhfwxQlBmeFCu.png" alt="image-20231126105808422"></p><h2 id="使用recaf对mod进行反编译反混淆"><a href="#使用recaf对mod进行反编译反混淆" class="headerlink" title="使用recaf对mod进行反编译反混淆"></a>使用recaf对mod进行反编译反混淆</h2><p>下载你的需要反混淆的模组jar,以及混淆表,例如新游戏版本forge的就是官方的,所以用上面的即可.</p><p>流程还是和上面一样,jar拖入后,加载反混淆表即可.</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.bilibili.com/video/BV1gF411p7wf/?vd_source=f5ab73e8b88cb4cb94d904126cdfeb27">Minecraft模组加载器开发教程#2使用Recaf反混淆_哔哩哔哩_bilibili</a></p><p><a href="https://www.mcmod.cn/post/3012.html">利用创可贴和recaf对模组进行修改 - 创可贴 (Bansōkō) - MC百科|最大的Minecraft中文MOD百科 (mcmod.cn)</a></p><p><a href="https://github.com/1fxe/Recaf4Forge">1fxe&#x2F;Recaf4Forge: A Recaf plugin which applies mappings to forge mods, you can also export the forge workspace. (github.com)</a></p><p><a href="https://www.mcbbs.net/thread-1254952-1-1.html">如何对一个插件进行反编译修改 - 联机问答 - Minecraft(我的世界)中文论坛 - (mcbbs.net)</a></p><p><a href="https://blog.csdn.net/m0_74075298/article/details/128517915">Minecraft任意版本Forge模组反混淆教程_浩绪的博客-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> Java </tag>
            
            <tag> Mincraft </tag>
            
            <tag> 反混淆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装neoforge教程</title>
      <link href="/2023/11/25/%E5%AE%89%E8%A3%85neoforge%E6%95%99%E7%A8%8B/"/>
      <url>/2023/11/25/%E5%AE%89%E8%A3%85neoforge%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="官网下载安装方法"><a href="#官网下载安装方法" class="headerlink" title="官网下载安装方法"></a>官网下载安装方法</h1><p>这里以PCL启动器为例，并且已有1.20.2的原版。</p><ol><li>官网：<a href="https://neoforged.net/">The NeoForged project</a>下载</li></ol><p><img src="https://s2.loli.net/2023/11/25/htCc6rEvlTw2yMx.png"></p><p><img src="https://s2.loli.net/2023/11/25/ALQhTaE7xdNRf6u.png" alt="image-20231125110843933"></p><ol start="2"><li><p>在你确保您安装了Java的情况下，可以直接打开或者右键打开方式选中java</p></li><li><p>选中PCL的路径<img src="https://s2.loli.net/2023/11/25/H8ZyUAcnasluGNi.png" alt="image-20231125111015635"></p></li><li><p>选则此路径即可</p><p><img src="https://s2.loli.net/2023/11/25/3s9yKTq5LHPnIU4.png" alt="image-20231125111120867"></p></li><li><p>点击确认</p></li><li><p>等待安装完成。</p></li><li><p>启动PCL</p></li><li><p>在版本选择中即可有neoforge</p></li></ol><p><img src="https://s2.loli.net/2023/11/25/GcWk4rP7RlzntBi.png" alt="image-20231125111223092"></p><ol start="9"><li>接下来你便可启动游戏</li></ol><h1 id="prism启动器"><a href="#prism启动器" class="headerlink" title="prism启动器"></a>prism启动器</h1><p>使用prism获得neoforge的游戏</p><ol><li><p>下载<a href="https://prismlauncher.org/">Prism Launcher - Home</a></p></li><li><p>安装或者解压，你下载的是exe就安装，zip就解压，我选择的是zip</p></li><li><p>启动</p></li></ol><p><img src="https://s2.loli.net/2023/11/25/LGwIlOMTqUoNshD.png" alt="image-20231125111531087"></p><ol start="4"><li>语言选择，你可以等一会后会出现简体中文选项或者直接英语</li></ol><p><img src="https://s2.loli.net/2023/11/25/5VHQ3YLPNrkBgaT.png" alt="image-20231125111600297"></p><ol start="5"><li>你的java设置</li></ol><p><img src="https://s2.loli.net/2023/11/25/wIo6nBMWT7v5fQx.png" alt="image-20231125111648956"></p><ol start="6"><li>你想设置的主题</li></ol><p><img src="https://s2.loli.net/2023/11/25/eCFgl5pUdcf369z.png" alt="image-20231125111704945"></p><ol start="7"><li>最后是这个样子</li></ol><p><img src="https://s2.loli.net/2023/11/25/YWTyw6vXJnsb1iq.png" alt="image-20231125111736687"></p><ol start="8"><li>添加实例</li></ol><p><img src="https://s2.loli.net/2023/11/25/wKaZPuYBoSWhtNL.png" alt="image-20231125111810229"></p><ol start="9"><li><p>直接点击OK</p></li><li><p>启动</p></li></ol><p><img src="https://s2.loli.net/2023/11/25/rIWi7UZtROY3w2K.png" alt="image-20231125111845521"></p><ol start="11"><li>添加你的账号</li></ol><p><img src="https://s2.loli.net/2023/11/25/tlgQ46kNO1snpJT.png" alt="image-20231125111854906"></p><ol start="12"><li>添加你的账号</li></ol><p><img src="https://s2.loli.net/2023/11/25/7GkLX1uNed9VIsx.png" alt="image-20231125111925047"></p><ol start="13"><li>添加好之后启动</li></ol><p><img src="https://s2.loli.net/2023/11/25/Vn5XftyGisQZCwm.png" alt="image-20231125112205996"></p><ol start="14"><li>等待下载完成</li></ol><p><img src="https://s2.loli.net/2023/11/25/v5BFU7YSpfrwhs4.png" alt="image-20231125112226338"></p><ol start="15"><li>下载完成后便会启动：</li></ol><p><img src="https://s2.loli.net/2023/11/25/Xu2hJNiCqGmg9xR.png" alt="image-20231125112734688"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> neoforge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20.2 NeoForge 重命名的重新映射脚本</title>
      <link href="/2023/11/25/20-2-NeoForge-%E9%87%8D%E5%91%BD%E5%90%8D%E7%9A%84%E9%87%8D%E6%96%B0%E6%98%A0%E5%B0%84%E8%84%9A%E6%9C%AC/"/>
      <url>/2023/11/25/20-2-NeoForge-%E9%87%8D%E5%91%BD%E5%90%8D%E7%9A%84%E9%87%8D%E6%96%B0%E6%98%A0%E5%B0%84%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h3 id="20-2-NeoForge-重命名的重新映射脚本"><a href="#20-2-NeoForge-重命名的重新映射脚本" class="headerlink" title="20.2 NeoForge 重命名的重新映射脚本"></a>20.2 NeoForge 重命名的重新映射脚本</h3><p>该脚本仅适用于 Java 源代码。如果您使用其他语言，则必须手动应用重命名。您可以在以下文档中找到重命名列表：<a href="https://hackmd.io/@neoforged/rJtC7ucZT%E3%80%82">https://hackmd.io/@neoforged/rJtC7ucZT。</a></p><p>如果您有 coremod 或服务资源，则必须手动重命名它们。</p><p>以下是运行脚本的方法：</p><ol><li><p>确保您尚未更新到 20.2。仅当您的工作区已经在工作并正在编译时，该脚本才有效。例如，您可以在 1.20.1 Forge 工作区上使用它。</p></li><li><p>在 <code>build.gradle</code> 文件中的 <code>plugins</code> 块正下方添加以下行：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apply from: <span class="string">&#x27;https://gist.githubusercontent.com/Technici4n/facbcdf18ce1a556b76e6027180c32ce/raw/1e0a2fbd8ecb708294ef50c16a20aed468d948e1/classremapper.gradle&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例如，在 MDK 中，这可能如下所示：</p></li></ol><p><img src="https://s2.loli.net/2023/11/25/Uu6bn7r31hafoHX.png" alt="image-20231125104257302"></p><ol start="3"><li><p>运行 <code>gradlew updateClassnames</code> 。</p></li><li><p>您应该在 <code>java_renamed</code> 目录中找到具有更新的类名的文件，例如：</p><p><img src="https://s2.loli.net/2023/11/25/DBrTXbOz7lYovIn.png"></p></li><li><p>删除 <code>apply from</code> 行，您不再需要它了。</p></li></ol><p><a href="https://gist.github.com/Technici4n/facbcdf18ce1a556b76e6027180c32ce#file-classremapper-gradle"><strong>classremapper.gradle</strong></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">        maven &#123; url = <span class="string">&#x27;https://maven.fabricmc.net&#x27;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">&#x27;org.cadixdev:lorenz:0.5.7&#x27;</span></span><br><span class="line">        classpath <span class="string">&#x27;net.fabricmc:mercury:0.4.0&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.cadixdev.lorenz.MappingSet</span><br><span class="line"><span class="keyword">import</span> org.cadixdev.lorenz.io.MappingFormats</span><br><span class="line"><span class="keyword">import</span> org.cadixdev.mercury.Mercury</span><br><span class="line"><span class="keyword">import</span> org.cadixdev.mercury.remapper.MercuryRemapper</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.gradle.work.DisableCachingByDefault</span><br><span class="line"></span><br><span class="line">afterEvaluate &#123; project -&gt;</span><br><span class="line">    <span class="type">def</span> <span class="variable">javaCompile</span> <span class="operator">=</span> project.tasks.getByName(<span class="string">&#x27;compileJava&#x27;</span>) as JavaCompile</span><br><span class="line">    Set&lt;File&gt; srcDirs = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;()</span><br><span class="line">    project.sourceSets.each &#123;</span><br><span class="line">        srcDirs.addAll(it.java.srcDirs)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (srcDirs.empty)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;No java source directories found to update!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    tasks.register(<span class="string">&#x27;updateClassnames&#x27;</span>, UpdateClassNames) &#123;</span><br><span class="line">        inputFiles.from srcDirs</span><br><span class="line">        classPath.from javaCompile.getClasspath()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@DisableCachingByDefault(because = &quot;Always rerun this task.&quot;)</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">UpdateClassNames</span> <span class="keyword">extends</span> <span class="title class_">DefaultTask</span> &#123;</span><br><span class="line">    <span class="meta">@InputFiles</span> <span class="keyword">abstract</span> ConfigurableFileCollection <span class="title function_">getInputFiles</span><span class="params">()</span></span><br><span class="line">    <span class="meta">@InputFiles</span> <span class="keyword">abstract</span> ConfigurableFileCollection <span class="title function_">getClassPath</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@TaskAction</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">doTask</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Mercury</span> <span class="variable">mercury</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Mercury</span>()</span><br><span class="line">        <span class="comment">// Add dependencies to mercury so it has proper context information</span></span><br><span class="line">        getClassPath().getFiles().each &#123; File file -&gt; mercury.getClassPath().add(file.toPath())&#125;</span><br><span class="line">        <span class="comment">// Try it anyway if the classpath is incomplete</span></span><br><span class="line">        mercury.gracefulClasspathChecks = <span class="literal">true</span></span><br><span class="line">        mercury.gracefulJavadocClasspathChecks = <span class="literal">true</span></span><br><span class="line">        <span class="comment">// Read SRG file</span></span><br><span class="line">        <span class="type">def</span> <span class="variable">srgDownload</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://gist.githubusercontent.com/Technici4n/facbcdf18ce1a556b76e6027180c32ce/raw/c3f0573a9334b0e32a785dc64519a49125b4ea7b/neoforge_renames.tsrg&quot;</span>)</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">def</span> <span class="variable">srgReader</span> <span class="operator">=</span> MappingFormats.TSRG.createReader(<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(srgDownload.openStream())))) &#123;</span><br><span class="line">            mercury.getProcessors().add(MercuryRemapper.create(srgReader.read()))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Do the rewrite</span></span><br><span class="line">        inputFiles.each &#123; File file -&gt;</span><br><span class="line">            <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!file.isDirectory()) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Input file must be a directory of a source set: $file&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">def</span> <span class="variable">inputPath</span> <span class="operator">=</span> file.toPath()</span><br><span class="line">            <span class="type">def</span> <span class="variable">outputPath</span> <span class="operator">=</span> inputPath.normalize().parent.resolve(inputPath.getFileName().toString() + <span class="string">&quot;_remapped&quot;</span>)</span><br><span class="line">            mercury.rewrite(inputPath, outputPath)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://gist.github.com/Technici4n/facbcdf18ce1a556b76e6027180c32ce#file-generate_tsrg-py"><strong>generate_tsrg.py</strong></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"></span><br><span class="line">classrenames = <span class="string">R&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.ClientForgeMod</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.ClientNeoForgeMod</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.ForgeHooksClient</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.ClientHooks</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.ForgeRenderTypes</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.NeoForgeRenderTypes</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.gui.overlay.ForgeGui</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.gui.overlay.ExtendedGui</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.gui.widget.ForgeSlider</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.gui.widget.ExtendedSlider</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.model.ForgeFaceData</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.model.ExtraFaceData</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.ForgeConfig</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.NeoForgeConfig</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.ForgeConfigSpec</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.ModConfigSpec</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.event.ForgeEventFactory</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.event.EventHooks</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.ForgeHooks</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.CommonHooks</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.ForgeI18n</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.I18nExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.ForgeMod</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.NeoForgeMod</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.ForgeSpawnEggItem</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.DeferredSpawnEggItem</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.ForgeTier</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.SimpleTier</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.IForgeShearable</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.IShearable</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.MinecraftForge</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.NeoForge</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.capabilities.ForgeCapabilities</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.capabilities.Capabilities</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.util.ForgeSoundType</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.util.DeferredSoundType</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.world.ForgeBiomeModifiers</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.world.BiomeModifiers</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.world.ForgeChunkManager</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.world.ForcedChunkManager</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.data.ForgeAdvancementProvider</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.data.AdvancementProvider</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.fluids.ForgeFlowingFluid</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.fluids.BaseFlowingFluid</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.gametest.ForgeGameTestHooks</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.gametest.GameTestHooks</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeAbstractMinecart</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IAbstractMinecartExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeAdvancementBuilder</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IAdvancementBuilderExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeBaseRailBlock</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IBaseRailBlockExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeBlock</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IBlockExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeBlockEntity</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IBlockEntityExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeBlockGetter</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IBlockGetterExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeBlockState</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IBlockStateExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeBoat</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IBoatExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeBucketPickup</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IBucketPickupExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeCommandSourceStack</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IBucketPickupExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeDispensibleContainerItem</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IDispensibleContainerItemExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeEnchantment</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IEnchantmentExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeEntity</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IEntityExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeFluid</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IFluidExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeFluidState</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IFluidStateExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeFriendlyByteBuf</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IFriendlyByteBufExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeHolderSet</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IHolderSetExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeIntrinsicHolderTagAppender</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IIntrinsicHolderTagAppenderExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeItem</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IItemExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeItemStack</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IItemStackExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeLevel</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.ILevelExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeLivingEntity</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.ILivingEntityExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeMenuType</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IMenuTypeExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeMobEffect</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IMobEffectExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeMobEffectInstance</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IMobEffectInstanceExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgePackResources</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IPackResourcesExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgePlayer</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IPlayerExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeRawTagBuilder</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.ITagBuilderExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeTagAppender</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.ITagAppenderExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.common.extensions.IForgeTransformation</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.ITransformationExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgeBakedModel</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.extensions.IBakedModelExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgeBlockAndTintGetter</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.common.extensions.IBlockAndTintGetterExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgeDimensionSpecialEffects</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.extensions.IDimensionSpecialEffectsExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgeFont</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.extensions.IFontExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgeGuiGraphics</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.extensions.IGuiGraphicsExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgeKeyMapping</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.extensions.IKeyMappingExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgeMinecraft</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.extensions.IMinecraftExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgeModelBaker</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.extensions.IModelBakerExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgePoseStack</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.extensions.IPoseStackExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">```diff</span></span><br><span class="line"><span class="string">- net.neoforged.neoforge.client.extensions.IForgeVertexConsumer</span></span><br><span class="line"><span class="string">+ net.neoforged.neoforge.client.extensions.IVertexConsumerExtension</span></span><br><span class="line"><span class="string">```</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>.splitlines()</span><br><span class="line">classrenames = [line[<span class="number">2</span>:] <span class="keyword">for</span> line <span class="keyword">in</span> classrenames <span class="keyword">if</span> line.startswith(<span class="string">&quot;+ &quot;</span>) <span class="keyword">or</span> line.startswith(<span class="string">&quot;- &quot;</span>)]</span><br><span class="line">classrenames = &#123; classrenames[i].replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;/&quot;</span>): classrenames[i+<span class="number">1</span>].replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;/&quot;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(classrenames), <span class="number">2</span>) &#125;</span><br><span class="line"></span><br><span class="line">tsrg_entries = []</span><br><span class="line">found = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_file</span>(<span class="params">url, sourcepath, endpath</span>):</span><br><span class="line">    sourcepath = sourcepath.replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">    endpath = endpath.replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">    <span class="built_in">bytes</span> = requests.get(url).content</span><br><span class="line">    <span class="keyword">with</span> zipfile.ZipFile(io.BytesIO(<span class="built_in">bytes</span>)) <span class="keyword">as</span> zf:</span><br><span class="line">        names = <span class="built_in">sorted</span>(<span class="built_in">list</span>(zf.namelist()))</span><br><span class="line">    foundany = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">        <span class="keyword">if</span> name.endswith(<span class="string">&quot;.class&quot;</span>) <span class="keyword">and</span> name.startswith(sourcepath):</span><br><span class="line">            name = name[:-<span class="number">6</span>]</span><br><span class="line">            <span class="keyword">if</span> name <span class="keyword">in</span> found:</span><br><span class="line">                <span class="keyword">raise</span> ValueError(<span class="string">&quot;Duplicate: &quot;</span> + name)</span><br><span class="line">            found.add(name)</span><br><span class="line">            foundany = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">            renamed = endpath + name[<span class="built_in">len</span>(sourcepath):]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># might have been renamed again</span></span><br><span class="line">            <span class="keyword">for</span> rename_src, rename_target <span class="keyword">in</span> classrenames.items():</span><br><span class="line">                <span class="keyword">if</span> renamed.startswith(rename_src):</span><br><span class="line">                    renamed = rename_target + renamed[<span class="built_in">len</span>(rename_src):]</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            tsrg_entries.append(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span> <span class="subst">&#123;renamed&#125;</span>\n&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> foundany:</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;No classes found for &quot;</span> + sourcepath)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_files</span>(<span class="params">urls, sourcepath, endpath</span>):</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        process_file(url, sourcepath, endpath)</span><br><span class="line"></span><br><span class="line">process_file(</span><br><span class="line">    <span class="string">&quot;https://maven.minecraftforge.net/net/minecraftforge/mergetool/1.1.10/mergetool-1.1.10-api.jar&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.minecraftforge.api.distmarker&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.neoforged.api.distmarker&quot;</span>)</span><br><span class="line">process_file(</span><br><span class="line">    <span class="string">&quot;https://maven.minecraftforge.net/net/minecraftforge/forgespi/7.1.0/forgespi-7.1.0.jar&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.minecraftforge.forgespi&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.neoforged.neoforgespi&quot;</span>)</span><br><span class="line">process_file(</span><br><span class="line">    <span class="string">&quot;https://maven.minecraftforge.net/net/minecraftforge/accesstransformers/1.0.1-milestone.0.1+94458e7/accesstransformers-1.0.1-milestone.0.1+94458e7.jar&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.minecraftforge.accesstransformer&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.neoforged.accesstransformer&quot;</span>)</span><br><span class="line">process_file(</span><br><span class="line">    <span class="string">&quot;https://maven.minecraftforge.net/net/minecraftforge/coremods/5.0.2/coremods-5.0.2.jar&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.minecraftforge.coremod&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.neoforged.coremod&quot;</span>)</span><br><span class="line">process_file(</span><br><span class="line">    <span class="string">&quot;https://maven.minecraftforge.net/net/minecraftforge/eventbus/6.1.0/eventbus-6.1.0.jar&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.minecraftforge.eventbus&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.neoforged.bus&quot;</span>)</span><br><span class="line"></span><br><span class="line">process_files(</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&quot;https://maven.minecraftforge.net/net/minecraftforge/JarJar/0.3.15/JarJar-0.3.15.jar&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://maven.minecraftforge.net/net/minecraftforge/JarJar/0.3.15/JarJar-0.3.15-filesystems.jar&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;net.minecraftforge.jarjar&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.neoforged.jarjar&quot;</span>)</span><br><span class="line">process_files(</span><br><span class="line">    [</span><br><span class="line">        <span class="string">f&quot;https://maven.neoforged.net/net/neoforged/fancymodloader/<span class="subst">&#123;artifact&#125;</span>/47.1.56/<span class="subst">&#123;artifact&#125;</span>-47.1.56.jar&quot;</span></span><br><span class="line">        <span class="keyword">for</span> artifact <span class="keyword">in</span> [<span class="string">&quot;core&quot;</span>, <span class="string">&quot;earlydisplay&quot;</span>, <span class="string">&quot;events&quot;</span>, <span class="string">&quot;language-java&quot;</span>, <span class="string">&quot;language-lowcode&quot;</span>, <span class="string">&quot;language-minecraft&quot;</span>, <span class="string">&quot;loader&quot;</span>]</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;net.minecraftforge.fml&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.neoforged.fml&quot;</span>)</span><br><span class="line">process_file(</span><br><span class="line">    <span class="string">&quot;https://maven.neoforged.net/releases/net/neoforged/forge/1.20.1-47.1.79/forge-1.20.1-47.1.79-universal.jar&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.minecraftforge&quot;</span>,</span><br><span class="line">    <span class="string">&quot;net.neoforged.neoforge&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;neoforge_renames.tsrg&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.writelines(tsrg_entries)</span><br></pre></td></tr></table></figure><p><a href="https://gist.github.com/Technici4n/facbcdf18ce1a556b76e6027180c32ce#file-neoforge_renames-tsrg"><strong>neoforge_renames.tsrg</strong></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br></pre></td><td class="code"><pre><span class="line">net/minecraftforge/api/distmarker/Dist net/neoforged/api/distmarker/Dist</span><br><span class="line">net/minecraftforge/api/distmarker/OnlyIn net/neoforged/api/distmarker/OnlyIn</span><br><span class="line">net/minecraftforge/api/distmarker/OnlyIns net/neoforged/api/distmarker/OnlyIns</span><br><span class="line">net/minecraftforge/forgespi/Environment$Keys net/neoforged/neoforgespi/Environment$Keys</span><br><span class="line">net/minecraftforge/forgespi/Environment net/neoforged/neoforgespi/Environment</span><br><span class="line">net/minecraftforge/forgespi/coremod/ICoreModFile net/neoforged/neoforgespi/coremod/ICoreModFile</span><br><span class="line">net/minecraftforge/forgespi/coremod/ICoreModProvider net/neoforged/neoforgespi/coremod/ICoreModProvider</span><br><span class="line">net/minecraftforge/forgespi/language/IConfigurable net/neoforged/neoforgespi/language/IConfigurable</span><br><span class="line">net/minecraftforge/forgespi/language/ILifecycleEvent net/neoforged/neoforgespi/language/ILifecycleEvent</span><br><span class="line">net/minecraftforge/forgespi/language/IModFileInfo$LanguageSpec net/neoforged/neoforgespi/language/IModFileInfo$LanguageSpec</span><br><span class="line">net/minecraftforge/forgespi/language/IModFileInfo net/neoforged/neoforgespi/language/IModFileInfo</span><br><span class="line">net/minecraftforge/forgespi/language/IModInfo$DependencySide net/neoforged/neoforgespi/language/IModInfo$DependencySide</span><br><span class="line">net/minecraftforge/forgespi/language/IModInfo$ModVersion net/neoforged/neoforgespi/language/IModInfo$ModVersion</span><br><span class="line">net/minecraftforge/forgespi/language/IModInfo$Ordering net/neoforged/neoforgespi/language/IModInfo$Ordering</span><br><span class="line">net/minecraftforge/forgespi/language/IModInfo net/neoforged/neoforgespi/language/IModInfo</span><br><span class="line">net/minecraftforge/forgespi/language/IModLanguageProvider$IModLanguageLoader net/neoforged/neoforgespi/language/IModLanguageProvider$IModLanguageLoader</span><br><span class="line">net/minecraftforge/forgespi/language/IModLanguageProvider net/neoforged/neoforgespi/language/IModLanguageProvider</span><br><span class="line">net/minecraftforge/forgespi/language/MavenVersionAdapter net/neoforged/neoforgespi/language/MavenVersionAdapter</span><br><span class="line">net/minecraftforge/forgespi/language/ModFileScanData$AnnotationData net/neoforged/neoforgespi/language/ModFileScanData$AnnotationData</span><br><span class="line">net/minecraftforge/forgespi/language/ModFileScanData$ClassData net/neoforged/neoforgespi/language/ModFileScanData$ClassData</span><br><span class="line">net/minecraftforge/forgespi/language/ModFileScanData net/neoforged/neoforgespi/language/ModFileScanData</span><br><span class="line">net/minecraftforge/forgespi/locating/ForgeFeature$BooleanFeatureTest net/neoforged/neoforgespi/locating/ForgeFeature$BooleanFeatureTest</span><br><span class="line">net/minecraftforge/forgespi/locating/ForgeFeature$Bound net/neoforged/neoforgespi/locating/ForgeFeature$Bound</span><br><span class="line">net/minecraftforge/forgespi/locating/ForgeFeature$IFeatureTest net/neoforged/neoforgespi/locating/ForgeFeature$IFeatureTest</span><br><span class="line">net/minecraftforge/forgespi/locating/ForgeFeature$MissingFeatureTest net/neoforged/neoforgespi/locating/ForgeFeature$MissingFeatureTest</span><br><span class="line">net/minecraftforge/forgespi/locating/ForgeFeature$VersionFeatureTest net/neoforged/neoforgespi/locating/ForgeFeature$VersionFeatureTest</span><br><span class="line">net/minecraftforge/forgespi/locating/ForgeFeature net/neoforged/neoforgespi/locating/ForgeFeature</span><br><span class="line">net/minecraftforge/forgespi/locating/IDependencyLocator net/neoforged/neoforgespi/locating/IDependencyLocator</span><br><span class="line">net/minecraftforge/forgespi/locating/IModDirectoryLocatorFactory net/neoforged/neoforgespi/locating/IModDirectoryLocatorFactory</span><br><span class="line">net/minecraftforge/forgespi/locating/IModFile$Type net/neoforged/neoforgespi/locating/IModFile$Type</span><br><span class="line">net/minecraftforge/forgespi/locating/IModFile net/neoforged/neoforgespi/locating/IModFile</span><br><span class="line">net/minecraftforge/forgespi/locating/IModLocator$ModFileOrException net/neoforged/neoforgespi/locating/IModLocator$ModFileOrException</span><br><span class="line">net/minecraftforge/forgespi/locating/IModLocator net/neoforged/neoforgespi/locating/IModLocator</span><br><span class="line">net/minecraftforge/forgespi/locating/IModProvider net/neoforged/neoforgespi/locating/IModProvider</span><br><span class="line">net/minecraftforge/forgespi/locating/ModFileFactory$ModFileInfoParser net/neoforged/neoforgespi/locating/ModFileFactory$ModFileInfoParser</span><br><span class="line">net/minecraftforge/forgespi/locating/ModFileFactory net/neoforged/neoforgespi/locating/ModFileFactory</span><br><span class="line">net/minecraftforge/forgespi/locating/ModFileLoadingException net/neoforged/neoforgespi/locating/ModFileLoadingException</span><br><span class="line">net/minecraftforge/accesstransformer/AccessTransformer$FinalState net/neoforged/accesstransformer/AccessTransformer$FinalState</span><br><span class="line">net/minecraftforge/accesstransformer/AccessTransformer$Modifier net/neoforged/accesstransformer/AccessTransformer$Modifier</span><br><span class="line">net/minecraftforge/accesstransformer/AccessTransformer net/neoforged/accesstransformer/AccessTransformer</span><br><span class="line">net/minecraftforge/accesstransformer/AccessTransformerEngine net/neoforged/accesstransformer/AccessTransformerEngine</span><br><span class="line">net/minecraftforge/accesstransformer/ClassTarget net/neoforged/accesstransformer/ClassTarget</span><br><span class="line">net/minecraftforge/accesstransformer/FieldTarget net/neoforged/accesstransformer/FieldTarget</span><br><span class="line">net/minecraftforge/accesstransformer/INameHandler net/neoforged/accesstransformer/INameHandler</span><br><span class="line">net/minecraftforge/accesstransformer/IdentityNameHandler net/neoforged/accesstransformer/IdentityNameHandler</span><br><span class="line">net/minecraftforge/accesstransformer/InnerClassTarget net/neoforged/accesstransformer/InnerClassTarget</span><br><span class="line">net/minecraftforge/accesstransformer/MethodTarget net/neoforged/accesstransformer/MethodTarget</span><br><span class="line">net/minecraftforge/accesstransformer/Target net/neoforged/accesstransformer/Target</span><br><span class="line">net/minecraftforge/accesstransformer/TargetType net/neoforged/accesstransformer/TargetType</span><br><span class="line">net/minecraftforge/accesstransformer/TransformerProcessor$<span class="number">1</span> net/neoforged/accesstransformer/TransformerProcessor$<span class="number">1</span></span><br><span class="line">net/minecraftforge/accesstransformer/TransformerProcessor net/neoforged/accesstransformer/TransformerProcessor</span><br><span class="line">net/minecraftforge/accesstransformer/WildcardTarget net/neoforged/accesstransformer/WildcardTarget</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtLexer net/neoforged/accesstransformer/generated/AtLexer</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$ArgumentContext net/neoforged/accesstransformer/generated/AtParser$ArgumentContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$Class_nameContext net/neoforged/accesstransformer/generated/AtParser$Class_nameContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$Class_valueContext net/neoforged/accesstransformer/generated/AtParser$Class_valueContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$EntryContext net/neoforged/accesstransformer/generated/AtParser$EntryContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$Field_nameContext net/neoforged/accesstransformer/generated/AtParser$Field_nameContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$FileContext net/neoforged/accesstransformer/generated/AtParser$FileContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$Func_nameContext net/neoforged/accesstransformer/generated/AtParser$Func_nameContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$FunctionContext net/neoforged/accesstransformer/generated/AtParser$FunctionContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$KeywordContext net/neoforged/accesstransformer/generated/AtParser$KeywordContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$LineContext net/neoforged/accesstransformer/generated/AtParser$LineContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$Line_valueContext net/neoforged/accesstransformer/generated/AtParser$Line_valueContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$Return_valueContext net/neoforged/accesstransformer/generated/AtParser$Return_valueContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$Wildcard_fieldContext net/neoforged/accesstransformer/generated/AtParser$Wildcard_fieldContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser$Wildcard_methodContext net/neoforged/accesstransformer/generated/AtParser$Wildcard_methodContext</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParser net/neoforged/accesstransformer/generated/AtParser</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParserBaseListener net/neoforged/accesstransformer/generated/AtParserBaseListener</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParserBaseVisitor net/neoforged/accesstransformer/generated/AtParserBaseVisitor</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParserListener net/neoforged/accesstransformer/generated/AtParserListener</span><br><span class="line">net/minecraftforge/accesstransformer/generated/AtParserVisitor net/neoforged/accesstransformer/generated/AtParserVisitor</span><br><span class="line">net/minecraftforge/accesstransformer/parser/AccessTransformVisitor net/neoforged/accesstransformer/parser/AccessTransformVisitor</span><br><span class="line">net/minecraftforge/accesstransformer/parser/AccessTransformerList net/neoforged/accesstransformer/parser/AccessTransformerList</span><br><span class="line">net/minecraftforge/accesstransformer/parser/AtParserErrorListener net/neoforged/accesstransformer/parser/AtParserErrorListener</span><br><span class="line">net/minecraftforge/accesstransformer/parser/ModifierProcessor net/neoforged/accesstransformer/parser/ModifierProcessor</span><br><span class="line">net/minecraftforge/coremod/CoreMod$<span class="number">1</span> net/neoforged/coremod/CoreMod$<span class="number">1</span></span><br><span class="line">net/minecraftforge/coremod/CoreMod net/neoforged/coremod/CoreMod</span><br><span class="line">net/minecraftforge/coremod/CoreModEngine net/neoforged/coremod/CoreModEngine</span><br><span class="line">net/minecraftforge/coremod/CoreModProvider net/neoforged/coremod/CoreModProvider</span><br><span class="line">net/minecraftforge/coremod/CoreModTracker net/neoforged/coremod/CoreModTracker</span><br><span class="line">net/minecraftforge/coremod/NashornFactory net/neoforged/coremod/NashornFactory</span><br><span class="line">net/minecraftforge/coremod/api/ASMAPI$InsertMode net/neoforged/coremod/api/ASMAPI$InsertMode</span><br><span class="line">net/minecraftforge/coremod/api/ASMAPI$MethodType net/neoforged/coremod/api/ASMAPI$MethodType</span><br><span class="line">net/minecraftforge/coremod/api/ASMAPI net/neoforged/coremod/api/ASMAPI</span><br><span class="line">net/minecraftforge/coremod/transformer/CoreModBaseTransformer net/neoforged/coremod/transformer/CoreModBaseTransformer</span><br><span class="line">net/minecraftforge/coremod/transformer/CoreModClassTransformer net/neoforged/coremod/transformer/CoreModClassTransformer</span><br><span class="line">net/minecraftforge/coremod/transformer/CoreModFieldTransformer net/neoforged/coremod/transformer/CoreModFieldTransformer</span><br><span class="line">net/minecraftforge/coremod/transformer/CoreModMethodTransformer net/neoforged/coremod/transformer/CoreModMethodTransformer</span><br><span class="line">net/minecraftforge/eventbus/ASMEventHandler net/neoforged/bus/ASMEventHandler</span><br><span class="line">net/minecraftforge/eventbus/BusBuilderImpl net/neoforged/bus/BusBuilderImpl</span><br><span class="line">net/minecraftforge/eventbus/ClassLoaderFactory$ASMClassLoader net/neoforged/bus/ClassLoaderFactory$ASMClassLoader</span><br><span class="line">net/minecraftforge/eventbus/ClassLoaderFactory net/neoforged/bus/ClassLoaderFactory</span><br><span class="line">net/minecraftforge/eventbus/EventAccessTransformer net/neoforged/bus/EventAccessTransformer</span><br><span class="line">net/minecraftforge/eventbus/EventBus net/neoforged/bus/EventBus</span><br><span class="line">net/minecraftforge/eventbus/EventBusEngine net/neoforged/bus/EventBusEngine</span><br><span class="line">net/minecraftforge/eventbus/EventBusErrorMessage net/neoforged/bus/EventBusErrorMessage</span><br><span class="line">net/minecraftforge/eventbus/EventSubclassTransformer net/neoforged/bus/EventSubclassTransformer</span><br><span class="line">net/minecraftforge/eventbus/IEventBusEngine net/neoforged/bus/IEventBusEngine</span><br><span class="line">net/minecraftforge/eventbus/IEventListenerFactory net/neoforged/bus/IEventListenerFactory</span><br><span class="line">net/minecraftforge/eventbus/ListenerList$ListenerListInst net/neoforged/bus/ListenerList$ListenerListInst</span><br><span class="line">net/minecraftforge/eventbus/ListenerList net/neoforged/bus/ListenerList</span><br><span class="line">net/minecraftforge/eventbus/LockHelper net/neoforged/bus/LockHelper</span><br><span class="line">net/minecraftforge/eventbus/LogMarkers net/neoforged/bus/LogMarkers</span><br><span class="line">net/minecraftforge/eventbus/ModLauncherFactory net/neoforged/bus/ModLauncherFactory</span><br><span class="line">net/minecraftforge/eventbus/NamedEventListener net/neoforged/bus/NamedEventListener</span><br><span class="line">net/minecraftforge/eventbus/Names$Method net/neoforged/bus/Names$Method</span><br><span class="line">net/minecraftforge/eventbus/Names net/neoforged/bus/Names</span><br><span class="line">net/minecraftforge/eventbus/api/BusBuilder net/neoforged/bus/api/BusBuilder</span><br><span class="line">net/minecraftforge/eventbus/api/Cancelable net/neoforged/bus/api/Cancelable</span><br><span class="line">net/minecraftforge/eventbus/api/Event$HasResult net/neoforged/bus/api/Event$HasResult</span><br><span class="line">net/minecraftforge/eventbus/api/Event$Result net/neoforged/bus/api/Event$Result</span><br><span class="line">net/minecraftforge/eventbus/api/Event net/neoforged/bus/api/Event</span><br><span class="line">net/minecraftforge/eventbus/api/EventListenerHelper net/neoforged/bus/api/EventListenerHelper</span><br><span class="line">net/minecraftforge/eventbus/api/EventPriority net/neoforged/bus/api/EventPriority</span><br><span class="line">net/minecraftforge/eventbus/api/GenericEvent net/neoforged/bus/api/GenericEvent</span><br><span class="line">net/minecraftforge/eventbus/api/IEventBus net/neoforged/bus/api/IEventBus</span><br><span class="line">net/minecraftforge/eventbus/api/IEventBusInvokeDispatcher net/neoforged/bus/api/IEventBusInvokeDispatcher</span><br><span class="line">net/minecraftforge/eventbus/api/IEventExceptionHandler net/neoforged/bus/api/IEventExceptionHandler</span><br><span class="line">net/minecraftforge/eventbus/api/IEventListener net/neoforged/bus/api/IEventListener</span><br><span class="line">net/minecraftforge/eventbus/api/IGenericEvent net/neoforged/bus/api/IGenericEvent</span><br><span class="line">net/minecraftforge/eventbus/api/SubscribeEvent net/neoforged/bus/api/SubscribeEvent</span><br><span class="line">net/minecraftforge/eventbus/service/ModLauncherService net/neoforged/bus/service/ModLauncherService</span><br><span class="line">net/minecraftforge/jarjar/metadata/ContainedJarIdentifier net/neoforged/jarjar/metadata/ContainedJarIdentifier</span><br><span class="line">net/minecraftforge/jarjar/metadata/ContainedJarMetadata net/neoforged/jarjar/metadata/ContainedJarMetadata</span><br><span class="line">net/minecraftforge/jarjar/metadata/ContainedVersion net/neoforged/jarjar/metadata/ContainedVersion</span><br><span class="line">net/minecraftforge/jarjar/metadata/Metadata net/neoforged/jarjar/metadata/Metadata</span><br><span class="line">net/minecraftforge/jarjar/metadata/MetadataIOHandler net/neoforged/jarjar/metadata/MetadataIOHandler</span><br><span class="line">net/minecraftforge/jarjar/metadata/json/ArtifactVersionSerializer net/neoforged/jarjar/metadata/json/ArtifactVersionSerializer</span><br><span class="line">net/minecraftforge/jarjar/metadata/json/ContainedJarIdentifierSerializer net/neoforged/jarjar/metadata/json/ContainedJarIdentifierSerializer</span><br><span class="line">net/minecraftforge/jarjar/metadata/json/ContainedJarMetadataSerializer net/neoforged/jarjar/metadata/json/ContainedJarMetadataSerializer</span><br><span class="line">net/minecraftforge/jarjar/metadata/json/ContainedVersionSerializer net/neoforged/jarjar/metadata/json/ContainedVersionSerializer</span><br><span class="line">net/minecraftforge/jarjar/metadata/json/MetadataSerializer$<span class="number">1</span> net/neoforged/jarjar/metadata/json/MetadataSerializer$<span class="number">1</span></span><br><span class="line">net/minecraftforge/jarjar/metadata/json/MetadataSerializer net/neoforged/jarjar/metadata/json/MetadataSerializer</span><br><span class="line">net/minecraftforge/jarjar/metadata/json/VersionRangeSerializer net/neoforged/jarjar/metadata/json/VersionRangeSerializer</span><br><span class="line">net/minecraftforge/jarjar/selection/JarSelector$<span class="number">1</span> net/neoforged/jarjar/selection/JarSelector$<span class="number">1</span></span><br><span class="line">net/minecraftforge/jarjar/selection/JarSelector$DetectionResult net/neoforged/jarjar/selection/JarSelector$DetectionResult</span><br><span class="line">net/minecraftforge/jarjar/selection/JarSelector$FailureReason net/neoforged/jarjar/selection/JarSelector$FailureReason</span><br><span class="line">net/minecraftforge/jarjar/selection/JarSelector$ResolutionFailureInformation net/neoforged/jarjar/selection/JarSelector$ResolutionFailureInformation</span><br><span class="line">net/minecraftforge/jarjar/selection/JarSelector$SelectionResult net/neoforged/jarjar/selection/JarSelector$SelectionResult</span><br><span class="line">net/minecraftforge/jarjar/selection/JarSelector$SourceWithOptionalMetadata net/neoforged/jarjar/selection/JarSelector$SourceWithOptionalMetadata</span><br><span class="line">net/minecraftforge/jarjar/selection/JarSelector$SourceWithRequestedVersionRange net/neoforged/jarjar/selection/JarSelector$SourceWithRequestedVersionRange</span><br><span class="line">net/minecraftforge/jarjar/selection/JarSelector net/neoforged/jarjar/selection/JarSelector</span><br><span class="line">net/minecraftforge/jarjar/util/Constants net/neoforged/jarjar/util/Constants</span><br><span class="line">net/minecraftforge/jarjar/util/LambdaExceptionUtils$BiConsumer_WithExceptions net/neoforged/jarjar/util/LambdaExceptionUtils$BiConsumer_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/util/LambdaExceptionUtils$Consumer_WithExceptions net/neoforged/jarjar/util/LambdaExceptionUtils$Consumer_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/util/LambdaExceptionUtils$Function_WithExceptions net/neoforged/jarjar/util/LambdaExceptionUtils$Function_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/util/LambdaExceptionUtils$Runnable_WithExceptions net/neoforged/jarjar/util/LambdaExceptionUtils$Runnable_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/util/LambdaExceptionUtils$Supplier_WithExceptions net/neoforged/jarjar/util/LambdaExceptionUtils$Supplier_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/util/LambdaExceptionUtils net/neoforged/jarjar/util/LambdaExceptionUtils</span><br><span class="line">net/minecraftforge/jarjar/util/Lazy net/neoforged/jarjar/util/Lazy</span><br><span class="line">net/minecraftforge/jarjar/nio/AbstractPath$<span class="number">1</span> net/neoforged/jarjar/nio/AbstractPath$<span class="number">1</span></span><br><span class="line">net/minecraftforge/jarjar/nio/AbstractPath net/neoforged/jarjar/nio/AbstractPath</span><br><span class="line">net/minecraftforge/jarjar/nio/layzip/LayeredZipFileSystemProvider$<span class="number">1</span> net/neoforged/jarjar/nio/layzip/LayeredZipFileSystemProvider$<span class="number">1</span></span><br><span class="line">net/minecraftforge/jarjar/nio/layzip/LayeredZipFileSystemProvider$AdaptedURIWithPrefixSelection net/neoforged/jarjar/nio/layzip/LayeredZipFileSystemProvider$AdaptedURIWithPrefixSelection</span><br><span class="line">net/minecraftforge/jarjar/nio/layzip/LayeredZipFileSystemProvider net/neoforged/jarjar/nio/layzip/LayeredZipFileSystemProvider</span><br><span class="line">net/minecraftforge/jarjar/nio/pathfs/PathFSUtils$<span class="number">1</span>$<span class="number">1</span> net/neoforged/jarjar/nio/pathfs/PathFSUtils$<span class="number">1</span>$<span class="number">1</span></span><br><span class="line">net/minecraftforge/jarjar/nio/pathfs/PathFSUtils$<span class="number">1</span> net/neoforged/jarjar/nio/pathfs/PathFSUtils$<span class="number">1</span></span><br><span class="line">net/minecraftforge/jarjar/nio/pathfs/PathFSUtils$<span class="number">2</span>$<span class="number">1</span> net/neoforged/jarjar/nio/pathfs/PathFSUtils$<span class="number">2</span>$<span class="number">1</span></span><br><span class="line">net/minecraftforge/jarjar/nio/pathfs/PathFSUtils$<span class="number">2</span> net/neoforged/jarjar/nio/pathfs/PathFSUtils$<span class="number">2</span></span><br><span class="line">net/minecraftforge/jarjar/nio/pathfs/PathFSUtils net/neoforged/jarjar/nio/pathfs/PathFSUtils</span><br><span class="line">net/minecraftforge/jarjar/nio/pathfs/PathFileSystem net/neoforged/jarjar/nio/pathfs/PathFileSystem</span><br><span class="line">net/minecraftforge/jarjar/nio/pathfs/PathFileSystemProvider net/neoforged/jarjar/nio/pathfs/PathFileSystemProvider</span><br><span class="line">net/minecraftforge/jarjar/nio/pathfs/PathPath net/neoforged/jarjar/nio/pathfs/PathPath</span><br><span class="line">net/minecraftforge/jarjar/nio/util/LambdaExceptionUtils$BiConsumer_WithExceptions net/neoforged/jarjar/nio/util/LambdaExceptionUtils$BiConsumer_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/nio/util/LambdaExceptionUtils$Consumer_WithExceptions net/neoforged/jarjar/nio/util/LambdaExceptionUtils$Consumer_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/nio/util/LambdaExceptionUtils$Function_WithExceptions net/neoforged/jarjar/nio/util/LambdaExceptionUtils$Function_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/nio/util/LambdaExceptionUtils$Runnable_WithExceptions net/neoforged/jarjar/nio/util/LambdaExceptionUtils$Runnable_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/nio/util/LambdaExceptionUtils$Supplier_WithExceptions net/neoforged/jarjar/nio/util/LambdaExceptionUtils$Supplier_WithExceptions</span><br><span class="line">net/minecraftforge/jarjar/nio/util/LambdaExceptionUtils net/neoforged/jarjar/nio/util/LambdaExceptionUtils</span><br><span class="line">net/minecraftforge/jarjar/nio/util/Lazy net/neoforged/jarjar/nio/util/Lazy</span><br><span class="line">net/minecraftforge/fml/Bindings net/neoforged/fml/Bindings</span><br><span class="line">net/minecraftforge/fml/CrashReportCallables$<span class="number">1</span> net/neoforged/fml/CrashReportCallables$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/CrashReportCallables$<span class="number">2</span> net/neoforged/fml/CrashReportCallables$<span class="number">2</span></span><br><span class="line">net/minecraftforge/fml/CrashReportCallables net/neoforged/fml/CrashReportCallables</span><br><span class="line">net/minecraftforge/fml/DeferredWorkQueue$TaskInfo net/neoforged/fml/DeferredWorkQueue$TaskInfo</span><br><span class="line">net/minecraftforge/fml/DeferredWorkQueue net/neoforged/fml/DeferredWorkQueue</span><br><span class="line">net/minecraftforge/fml/DistExecutor$<span class="number">1</span> net/neoforged/fml/DistExecutor$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/DistExecutor$SafeCallable net/neoforged/fml/DistExecutor$SafeCallable</span><br><span class="line">net/minecraftforge/fml/DistExecutor$SafeReferent net/neoforged/fml/DistExecutor$SafeReferent</span><br><span class="line">net/minecraftforge/fml/DistExecutor$SafeRunnable net/neoforged/fml/DistExecutor$SafeRunnable</span><br><span class="line">net/minecraftforge/fml/DistExecutor$SafeSupplier net/neoforged/fml/DistExecutor$SafeSupplier</span><br><span class="line">net/minecraftforge/fml/DistExecutor net/neoforged/fml/DistExecutor</span><br><span class="line">net/minecraftforge/fml/I18NParser net/neoforged/fml/I18NParser</span><br><span class="line">net/minecraftforge/fml/IBindingsProvider net/neoforged/fml/IBindingsProvider</span><br><span class="line">net/minecraftforge/fml/IExtensionPoint$DisplayTest net/neoforged/fml/IExtensionPoint$DisplayTest</span><br><span class="line">net/minecraftforge/fml/IExtensionPoint net/neoforged/fml/IExtensionPoint</span><br><span class="line">net/minecraftforge/fml/IModLoadingState net/neoforged/fml/IModLoadingState</span><br><span class="line">net/minecraftforge/fml/IModStateProvider net/neoforged/fml/IModStateProvider</span><br><span class="line">net/minecraftforge/fml/IModStateTransition$EventGenerator net/neoforged/fml/IModStateTransition$EventGenerator</span><br><span class="line">net/minecraftforge/fml/IModStateTransition net/neoforged/fml/IModStateTransition</span><br><span class="line">net/minecraftforge/fml/ISystemReportExtender net/neoforged/fml/ISystemReportExtender</span><br><span class="line">net/minecraftforge/fml/InterModComms$IMCMessage net/neoforged/fml/InterModComms$IMCMessage</span><br><span class="line">net/minecraftforge/fml/InterModComms$QueueFilteringSpliterator net/neoforged/fml/InterModComms$QueueFilteringSpliterator</span><br><span class="line">net/minecraftforge/fml/InterModComms net/neoforged/fml/InterModComms</span><br><span class="line">net/minecraftforge/fml/LoadingFailedException net/neoforged/fml/LoadingFailedException</span><br><span class="line">net/minecraftforge/fml/Logging net/neoforged/fml/Logging</span><br><span class="line">net/minecraftforge/fml/LogicalSide net/neoforged/fml/LogicalSide</span><br><span class="line">net/minecraftforge/fml/ModContainer net/neoforged/fml/ModContainer</span><br><span class="line">net/minecraftforge/fml/ModList$UncaughtModLoadingException net/neoforged/fml/ModList$UncaughtModLoadingException</span><br><span class="line">net/minecraftforge/fml/ModList net/neoforged/fml/ModList</span><br><span class="line">net/minecraftforge/fml/ModLoader$ErroredModContainer net/neoforged/fml/ModLoader$ErroredModContainer</span><br><span class="line">net/minecraftforge/fml/ModLoader net/neoforged/fml/ModLoader</span><br><span class="line">net/minecraftforge/fml/ModLoadingContext net/neoforged/fml/ModLoadingContext</span><br><span class="line">net/minecraftforge/fml/ModLoadingException net/neoforged/fml/ModLoadingException</span><br><span class="line">net/minecraftforge/fml/ModLoadingPhase net/neoforged/fml/ModLoadingPhase</span><br><span class="line">net/minecraftforge/fml/ModLoadingStage net/neoforged/fml/ModLoadingStage</span><br><span class="line">net/minecraftforge/fml/ModLoadingState net/neoforged/fml/ModLoadingState</span><br><span class="line">net/minecraftforge/fml/ModLoadingWarning net/neoforged/fml/ModLoadingWarning</span><br><span class="line">net/minecraftforge/fml/ModStateManager net/neoforged/fml/ModStateManager</span><br><span class="line">net/minecraftforge/fml/ModWorkManager$DrivenExecutor net/neoforged/fml/ModWorkManager$DrivenExecutor</span><br><span class="line">net/minecraftforge/fml/ModWorkManager$SyncExecutor net/neoforged/fml/ModWorkManager$SyncExecutor</span><br><span class="line">net/minecraftforge/fml/ModWorkManager$WrappingExecutor net/neoforged/fml/ModWorkManager$WrappingExecutor</span><br><span class="line">net/minecraftforge/fml/ModWorkManager net/neoforged/fml/ModWorkManager</span><br><span class="line">net/minecraftforge/fml/NoopTransition net/neoforged/fml/NoopTransition</span><br><span class="line">net/minecraftforge/fml/OptionalMod net/neoforged/fml/OptionalMod</span><br><span class="line">net/minecraftforge/fml/StartupMessageManager net/neoforged/fml/StartupMessageManager</span><br><span class="line">net/minecraftforge/fml/ThreadSelector net/neoforged/fml/ThreadSelector</span><br><span class="line">net/minecraftforge/fml/VersionChecker$<span class="number">1</span> net/neoforged/fml/VersionChecker$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/VersionChecker$CheckResult net/neoforged/fml/VersionChecker$CheckResult</span><br><span class="line">net/minecraftforge/fml/VersionChecker$Status net/neoforged/fml/VersionChecker$Status</span><br><span class="line">net/minecraftforge/fml/VersionChecker net/neoforged/fml/VersionChecker</span><br><span class="line">net/minecraftforge/fml/config/ConfigFileTypeHandler$ConfigLoadingException net/neoforged/fml/config/ConfigFileTypeHandler$ConfigLoadingException</span><br><span class="line">net/minecraftforge/fml/config/ConfigFileTypeHandler$ConfigWatcher net/neoforged/fml/config/ConfigFileTypeHandler$ConfigWatcher</span><br><span class="line">net/minecraftforge/fml/config/ConfigFileTypeHandler net/neoforged/fml/config/ConfigFileTypeHandler</span><br><span class="line">net/minecraftforge/fml/config/ConfigTracker net/neoforged/fml/config/ConfigTracker</span><br><span class="line">net/minecraftforge/fml/config/IConfigEvent$ConfigConfig net/neoforged/fml/config/IConfigEvent$ConfigConfig</span><br><span class="line">net/minecraftforge/fml/config/IConfigEvent net/neoforged/fml/config/IConfigEvent</span><br><span class="line">net/minecraftforge/fml/config/IConfigSpec net/neoforged/fml/config/IConfigSpec</span><br><span class="line">net/minecraftforge/fml/config/ModConfig$Type net/neoforged/fml/config/ModConfig$Type</span><br><span class="line">net/minecraftforge/fml/config/ModConfig net/neoforged/fml/config/ModConfig</span><br><span class="line">net/minecraftforge/fml/event/IModBusEvent net/neoforged/fml/event/IModBusEvent</span><br><span class="line">net/minecraftforge/fml/util/CertificateHelper net/neoforged/fml/util/CertificateHelper</span><br><span class="line">net/minecraftforge/fml/util/EnhancedRuntimeException$<span class="number">1</span> net/neoforged/fml/util/EnhancedRuntimeException$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/util/EnhancedRuntimeException$<span class="number">2</span> net/neoforged/fml/util/EnhancedRuntimeException$<span class="number">2</span></span><br><span class="line">net/minecraftforge/fml/util/EnhancedRuntimeException$<span class="number">3</span> net/neoforged/fml/util/EnhancedRuntimeException$<span class="number">3</span></span><br><span class="line">net/minecraftforge/fml/util/EnhancedRuntimeException$WrappedPrintStream net/neoforged/fml/util/EnhancedRuntimeException$WrappedPrintStream</span><br><span class="line">net/minecraftforge/fml/util/EnhancedRuntimeException net/neoforged/fml/util/EnhancedRuntimeException</span><br><span class="line">net/minecraftforge/fml/util/LoaderException net/neoforged/fml/util/LoaderException</span><br><span class="line">net/minecraftforge/fml/util/LoaderExceptionModCrash net/neoforged/fml/util/LoaderExceptionModCrash</span><br><span class="line">net/minecraftforge/fml/util/ObfuscationReflectionHelper$UnableToAccessFieldException net/neoforged/fml/util/ObfuscationReflectionHelper$UnableToAccessFieldException</span><br><span class="line">net/minecraftforge/fml/util/ObfuscationReflectionHelper$UnableToFindFieldException net/neoforged/fml/util/ObfuscationReflectionHelper$UnableToFindFieldException</span><br><span class="line">net/minecraftforge/fml/util/ObfuscationReflectionHelper$UnableToFindMethodException net/neoforged/fml/util/ObfuscationReflectionHelper$UnableToFindMethodException</span><br><span class="line">net/minecraftforge/fml/util/ObfuscationReflectionHelper$UnknownConstructorException net/neoforged/fml/util/ObfuscationReflectionHelper$UnknownConstructorException</span><br><span class="line">net/minecraftforge/fml/util/ObfuscationReflectionHelper net/neoforged/fml/util/ObfuscationReflectionHelper</span><br><span class="line">net/minecraftforge/fml/util/thread/EffectiveSide net/neoforged/fml/util/thread/EffectiveSide</span><br><span class="line">net/minecraftforge/fml/util/thread/SidedThreadGroup net/neoforged/fml/util/thread/SidedThreadGroup</span><br><span class="line">net/minecraftforge/fml/util/thread/SidedThreadGroups net/neoforged/fml/util/thread/SidedThreadGroups</span><br><span class="line">net/minecraftforge/fml/earlydisplay/ColourScheme$Colour net/neoforged/fml/earlydisplay/ColourScheme$Colour</span><br><span class="line">net/minecraftforge/fml/earlydisplay/ColourScheme net/neoforged/fml/earlydisplay/ColourScheme</span><br><span class="line">net/minecraftforge/fml/earlydisplay/DisplayWindow net/neoforged/fml/earlydisplay/DisplayWindow</span><br><span class="line">net/minecraftforge/fml/earlydisplay/EarlyFramebuffer net/neoforged/fml/earlydisplay/EarlyFramebuffer</span><br><span class="line">net/minecraftforge/fml/earlydisplay/ElementShader$RenderType net/neoforged/fml/earlydisplay/ElementShader$RenderType</span><br><span class="line">net/minecraftforge/fml/earlydisplay/ElementShader net/neoforged/fml/earlydisplay/ElementShader</span><br><span class="line">net/minecraftforge/fml/earlydisplay/PerformanceInfo net/neoforged/fml/earlydisplay/PerformanceInfo</span><br><span class="line">net/minecraftforge/fml/earlydisplay/QuadHelper net/neoforged/fml/earlydisplay/QuadHelper</span><br><span class="line">net/minecraftforge/fml/earlydisplay/RenderElement$BarPosition net/neoforged/fml/earlydisplay/RenderElement$BarPosition</span><br><span class="line">net/minecraftforge/fml/earlydisplay/RenderElement$ColourFunction net/neoforged/fml/earlydisplay/RenderElement$ColourFunction</span><br><span class="line">net/minecraftforge/fml/earlydisplay/RenderElement$DisplayContext net/neoforged/fml/earlydisplay/RenderElement$DisplayContext</span><br><span class="line">net/minecraftforge/fml/earlydisplay/RenderElement$Initializer net/neoforged/fml/earlydisplay/RenderElement$Initializer</span><br><span class="line">net/minecraftforge/fml/earlydisplay/RenderElement$ProgressDisplay net/neoforged/fml/earlydisplay/RenderElement$ProgressDisplay</span><br><span class="line">net/minecraftforge/fml/earlydisplay/RenderElement$Renderer net/neoforged/fml/earlydisplay/RenderElement$Renderer</span><br><span class="line">net/minecraftforge/fml/earlydisplay/RenderElement$TextGenerator net/neoforged/fml/earlydisplay/RenderElement$TextGenerator</span><br><span class="line">net/minecraftforge/fml/earlydisplay/RenderElement$TextureRenderer net/neoforged/fml/earlydisplay/RenderElement$TextureRenderer</span><br><span class="line">net/minecraftforge/fml/earlydisplay/RenderElement net/neoforged/fml/earlydisplay/RenderElement</span><br><span class="line">net/minecraftforge/fml/earlydisplay/STBHelper net/neoforged/fml/earlydisplay/STBHelper</span><br><span class="line">net/minecraftforge/fml/earlydisplay/SimpleBufferBuilder$Element net/neoforged/fml/earlydisplay/SimpleBufferBuilder$Element</span><br><span class="line">net/minecraftforge/fml/earlydisplay/SimpleBufferBuilder$Format net/neoforged/fml/earlydisplay/SimpleBufferBuilder$Format</span><br><span class="line">net/minecraftforge/fml/earlydisplay/SimpleBufferBuilder$Mode net/neoforged/fml/earlydisplay/SimpleBufferBuilder$Mode</span><br><span class="line">net/minecraftforge/fml/earlydisplay/SimpleBufferBuilder net/neoforged/fml/earlydisplay/SimpleBufferBuilder</span><br><span class="line">net/minecraftforge/fml/earlydisplay/SimpleFont$DisplayText net/neoforged/fml/earlydisplay/SimpleFont$DisplayText</span><br><span class="line">net/minecraftforge/fml/earlydisplay/SimpleFont$Glyph net/neoforged/fml/earlydisplay/SimpleFont$Glyph</span><br><span class="line">net/minecraftforge/fml/earlydisplay/SimpleFont$Pos net/neoforged/fml/earlydisplay/SimpleFont$Pos</span><br><span class="line">net/minecraftforge/fml/earlydisplay/SimpleFont net/neoforged/fml/earlydisplay/SimpleFont</span><br><span class="line">net/minecraftforge/fml/core/ModStateProvider net/neoforged/fml/core/ModStateProvider</span><br><span class="line">net/minecraftforge/fml/core/ParallelTransition net/neoforged/fml/core/ParallelTransition</span><br><span class="line">net/minecraftforge/fml/event/config/ModConfigEvent$Loading net/neoforged/fml/event/config/ModConfigEvent$Loading</span><br><span class="line">net/minecraftforge/fml/event/config/ModConfigEvent$Reloading net/neoforged/fml/event/config/ModConfigEvent$Reloading</span><br><span class="line">net/minecraftforge/fml/event/config/ModConfigEvent$Unloading net/neoforged/fml/event/config/ModConfigEvent$Unloading</span><br><span class="line">net/minecraftforge/fml/event/config/ModConfigEvent net/neoforged/fml/event/config/ModConfigEvent</span><br><span class="line">net/minecraftforge/fml/event/lifecycle/FMLClientSetupEvent net/neoforged/fml/event/lifecycle/FMLClientSetupEvent</span><br><span class="line">net/minecraftforge/fml/event/lifecycle/FMLCommonSetupEvent net/neoforged/fml/event/lifecycle/FMLCommonSetupEvent</span><br><span class="line">net/minecraftforge/fml/event/lifecycle/FMLConstructModEvent net/neoforged/fml/event/lifecycle/FMLConstructModEvent</span><br><span class="line">net/minecraftforge/fml/event/lifecycle/FMLDedicatedServerSetupEvent net/neoforged/fml/event/lifecycle/FMLDedicatedServerSetupEvent</span><br><span class="line">net/minecraftforge/fml/event/lifecycle/FMLLoadCompleteEvent net/neoforged/fml/event/lifecycle/FMLLoadCompleteEvent</span><br><span class="line">net/minecraftforge/fml/event/lifecycle/InterModEnqueueEvent net/neoforged/fml/event/lifecycle/InterModEnqueueEvent</span><br><span class="line">net/minecraftforge/fml/event/lifecycle/InterModProcessEvent net/neoforged/fml/event/lifecycle/InterModProcessEvent</span><br><span class="line">net/minecraftforge/fml/event/lifecycle/ModLifecycleEvent net/neoforged/fml/event/lifecycle/ModLifecycleEvent</span><br><span class="line">net/minecraftforge/fml/event/lifecycle/ParallelDispatchEvent net/neoforged/fml/event/lifecycle/ParallelDispatchEvent</span><br><span class="line">net/minecraftforge/fml/common/Mod$EventBusSubscriber$Bus net/neoforged/fml/common/Mod$EventBusSubscriber$Bus</span><br><span class="line">net/minecraftforge/fml/common/Mod$EventBusSubscriber net/neoforged/fml/common/Mod$EventBusSubscriber</span><br><span class="line">net/minecraftforge/fml/common/Mod net/neoforged/fml/common/Mod</span><br><span class="line">net/minecraftforge/fml/javafmlmod/AutomaticEventSubscriber net/neoforged/fml/javafmlmod/AutomaticEventSubscriber</span><br><span class="line">net/minecraftforge/fml/javafmlmod/FMLJavaModLanguageProvider$FMLModTarget net/neoforged/fml/javafmlmod/FMLJavaModLanguageProvider$FMLModTarget</span><br><span class="line">net/minecraftforge/fml/javafmlmod/FMLJavaModLanguageProvider net/neoforged/fml/javafmlmod/FMLJavaModLanguageProvider</span><br><span class="line">net/minecraftforge/fml/javafmlmod/FMLJavaModLoadingContext net/neoforged/fml/javafmlmod/FMLJavaModLoadingContext</span><br><span class="line">net/minecraftforge/fml/javafmlmod/FMLModContainer net/neoforged/fml/javafmlmod/FMLModContainer</span><br><span class="line">net/minecraftforge/fml/lowcodemod/LowCodeModContainer net/neoforged/fml/lowcodemod/LowCodeModContainer</span><br><span class="line">net/minecraftforge/fml/lowcodemod/LowCodeModLanguageProvider$LowCodeModTarget net/neoforged/fml/lowcodemod/LowCodeModLanguageProvider$LowCodeModTarget</span><br><span class="line">net/minecraftforge/fml/lowcodemod/LowCodeModLanguageProvider net/neoforged/fml/lowcodemod/LowCodeModLanguageProvider</span><br><span class="line">net/minecraftforge/fml/mclanguageprovider/MinecraftModContainer net/neoforged/fml/mclanguageprovider/MinecraftModContainer</span><br><span class="line">net/minecraftforge/fml/mclanguageprovider/MinecraftModLanguageProvider$MinecraftModTarget net/neoforged/fml/mclanguageprovider/MinecraftModLanguageProvider$MinecraftModTarget</span><br><span class="line">net/minecraftforge/fml/mclanguageprovider/MinecraftModLanguageProvider net/neoforged/fml/mclanguageprovider/MinecraftModLanguageProvider</span><br><span class="line">net/minecraftforge/fml/common/asm/CapabilityTokenSubclass$<span class="number">1</span> net/neoforged/fml/common/asm/CapabilityTokenSubclass$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/common/asm/CapabilityTokenSubclass$Holder net/neoforged/fml/common/asm/CapabilityTokenSubclass$Holder</span><br><span class="line">net/minecraftforge/fml/common/asm/CapabilityTokenSubclass net/neoforged/fml/common/asm/CapabilityTokenSubclass</span><br><span class="line">net/minecraftforge/fml/common/asm/ObjectHolderDefinalize$VanillaObjectHolderData net/neoforged/fml/common/asm/ObjectHolderDefinalize$VanillaObjectHolderData</span><br><span class="line">net/minecraftforge/fml/common/asm/ObjectHolderDefinalize net/neoforged/fml/common/asm/ObjectHolderDefinalize</span><br><span class="line">net/minecraftforge/fml/common/asm/RuntimeEnumExtender net/neoforged/fml/common/asm/RuntimeEnumExtender</span><br><span class="line">net/minecraftforge/fml/loading/BackgroundWaiter net/neoforged/fml/loading/BackgroundWaiter</span><br><span class="line">net/minecraftforge/fml/loading/ClasspathLocatorUtils net/neoforged/fml/loading/ClasspathLocatorUtils</span><br><span class="line">net/minecraftforge/fml/loading/ClasspathTransformerDiscoverer net/neoforged/fml/loading/ClasspathTransformerDiscoverer</span><br><span class="line">net/minecraftforge/fml/loading/EarlyLoadingException$ExceptionData net/neoforged/fml/loading/EarlyLoadingException$ExceptionData</span><br><span class="line">net/minecraftforge/fml/loading/EarlyLoadingException net/neoforged/fml/loading/EarlyLoadingException</span><br><span class="line">net/minecraftforge/fml/loading/FMLConfig$ConfigValue net/neoforged/fml/loading/FMLConfig$ConfigValue</span><br><span class="line">net/minecraftforge/fml/loading/FMLConfig net/neoforged/fml/loading/FMLConfig</span><br><span class="line">net/minecraftforge/fml/loading/FMLEnvironment$Keys net/neoforged/fml/loading/FMLEnvironment$Keys</span><br><span class="line">net/minecraftforge/fml/loading/FMLEnvironment net/neoforged/fml/loading/FMLEnvironment</span><br><span class="line">net/minecraftforge/fml/loading/FMLLoader net/neoforged/fml/loading/FMLLoader</span><br><span class="line">net/minecraftforge/fml/loading/FMLPaths net/neoforged/fml/loading/FMLPaths</span><br><span class="line">net/minecraftforge/fml/loading/FMLServiceProvider net/neoforged/fml/loading/FMLServiceProvider</span><br><span class="line">net/minecraftforge/fml/loading/FileUtils net/neoforged/fml/loading/FileUtils</span><br><span class="line">net/minecraftforge/fml/loading/ImmediateWindowHandler$DummyProvider net/neoforged/fml/loading/ImmediateWindowHandler$DummyProvider</span><br><span class="line">net/minecraftforge/fml/loading/ImmediateWindowHandler net/neoforged/fml/loading/ImmediateWindowHandler</span><br><span class="line">net/minecraftforge/fml/loading/ImmediateWindowProvider net/neoforged/fml/loading/ImmediateWindowProvider</span><br><span class="line">net/minecraftforge/fml/loading/JarVersionLookupHandler net/neoforged/fml/loading/JarVersionLookupHandler</span><br><span class="line">net/minecraftforge/fml/loading/LanguageLoadingProvider$ModLanguageWrapper net/neoforged/fml/loading/LanguageLoadingProvider$ModLanguageWrapper</span><br><span class="line">net/minecraftforge/fml/loading/LanguageLoadingProvider net/neoforged/fml/loading/LanguageLoadingProvider</span><br><span class="line">net/minecraftforge/fml/loading/LauncherVersion net/neoforged/fml/loading/LauncherVersion</span><br><span class="line">net/minecraftforge/fml/loading/LibraryFinder net/neoforged/fml/loading/LibraryFinder</span><br><span class="line">net/minecraftforge/fml/loading/LoadingModList$<span class="number">1</span> net/neoforged/fml/loading/LoadingModList$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/loading/LoadingModList net/neoforged/fml/loading/LoadingModList</span><br><span class="line">net/minecraftforge/fml/loading/LogMarkers net/neoforged/fml/loading/LogMarkers</span><br><span class="line">net/minecraftforge/fml/loading/MCPNamingService$<span class="number">1</span> net/neoforged/fml/loading/MCPNamingService$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/loading/MCPNamingService net/neoforged/fml/loading/MCPNamingService</span><br><span class="line">net/minecraftforge/fml/loading/MavenCoordinateResolver net/neoforged/fml/loading/MavenCoordinateResolver</span><br><span class="line">net/minecraftforge/fml/loading/ModDirTransformerDiscoverer net/neoforged/fml/loading/ModDirTransformerDiscoverer</span><br><span class="line">net/minecraftforge/fml/loading/ModJarURLHandler$ModJarURLConnection net/neoforged/fml/loading/ModJarURLHandler$ModJarURLConnection</span><br><span class="line">net/minecraftforge/fml/loading/ModJarURLHandler net/neoforged/fml/loading/ModJarURLHandler</span><br><span class="line">net/minecraftforge/fml/loading/ModSorter$<span class="number">1</span> net/neoforged/fml/loading/ModSorter$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/loading/ModSorter net/neoforged/fml/loading/ModSorter</span><br><span class="line">net/minecraftforge/fml/loading/RuntimeDistCleaner$LambdaGatherer net/neoforged/fml/loading/RuntimeDistCleaner$LambdaGatherer</span><br><span class="line">net/minecraftforge/fml/loading/RuntimeDistCleaner net/neoforged/fml/loading/RuntimeDistCleaner</span><br><span class="line">net/minecraftforge/fml/loading/StringSubstitutor$<span class="number">1</span> net/neoforged/fml/loading/StringSubstitutor$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/loading/StringSubstitutor net/neoforged/fml/loading/StringSubstitutor</span><br><span class="line">net/minecraftforge/fml/loading/StringUtils net/neoforged/fml/loading/StringUtils</span><br><span class="line">net/minecraftforge/fml/loading/TracingPrintStream net/neoforged/fml/loading/TracingPrintStream</span><br><span class="line">net/minecraftforge/fml/loading/UniqueModListBuilder$UniqueModListData net/neoforged/fml/loading/UniqueModListBuilder$UniqueModListData</span><br><span class="line">net/minecraftforge/fml/loading/UniqueModListBuilder net/neoforged/fml/loading/UniqueModListBuilder</span><br><span class="line">net/minecraftforge/fml/loading/VersionInfo net/neoforged/fml/loading/VersionInfo</span><br><span class="line">net/minecraftforge/fml/loading/VersionSupportMatrix net/neoforged/fml/loading/VersionSupportMatrix</span><br><span class="line">net/minecraftforge/fml/loading/log4j/ForgeHighlight net/neoforged/fml/loading/log4j/ForgeHighlight</span><br><span class="line">net/minecraftforge/fml/loading/log4j/SLF4JFixerLaunchPluginService net/neoforged/fml/loading/log4j/SLF4JFixerLaunchPluginService</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/AbstractJarFileDependencyLocator net/neoforged/fml/loading/moddiscovery/AbstractJarFileDependencyLocator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/AbstractJarFileModLocator net/neoforged/fml/loading/moddiscovery/AbstractJarFileModLocator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/AbstractJarFileModProvider net/neoforged/fml/loading/moddiscovery/AbstractJarFileModProvider</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/AbstractModProvider$<span class="number">1</span> net/neoforged/fml/loading/moddiscovery/AbstractModProvider$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/AbstractModProvider$DefaultModFileInfo net/neoforged/fml/loading/moddiscovery/AbstractModProvider$DefaultModFileInfo</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/AbstractModProvider net/neoforged/fml/loading/moddiscovery/AbstractModProvider</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/BackgroundScanHandler$ScanStatus net/neoforged/fml/loading/moddiscovery/BackgroundScanHandler$ScanStatus</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/BackgroundScanHandler net/neoforged/fml/loading/moddiscovery/BackgroundScanHandler</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/BuiltinGameLibraryLocator net/neoforged/fml/loading/moddiscovery/BuiltinGameLibraryLocator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ClasspathLocator net/neoforged/fml/loading/moddiscovery/ClasspathLocator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/CoreModFile net/neoforged/fml/loading/moddiscovery/CoreModFile</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ExplodedDirectoryLocator$ExplodedMod net/neoforged/fml/loading/moddiscovery/ExplodedDirectoryLocator$ExplodedMod</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ExplodedDirectoryLocator net/neoforged/fml/loading/moddiscovery/ExplodedDirectoryLocator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/InvalidModFileException net/neoforged/fml/loading/moddiscovery/InvalidModFileException</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/InvalidModIdentifier net/neoforged/fml/loading/moddiscovery/InvalidModIdentifier</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/JarInJarDependencyLocator$ModWithVersionRange net/neoforged/fml/loading/moddiscovery/JarInJarDependencyLocator$ModWithVersionRange</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/JarInJarDependencyLocator net/neoforged/fml/loading/moddiscovery/JarInJarDependencyLocator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/MavenDirectoryLocator net/neoforged/fml/loading/moddiscovery/MavenDirectoryLocator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/MinecraftLocator net/neoforged/fml/loading/moddiscovery/MinecraftLocator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModAnnotation$EnumHolder net/neoforged/fml/loading/moddiscovery/ModAnnotation$EnumHolder</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModAnnotation net/neoforged/fml/loading/moddiscovery/ModAnnotation</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModAnnotationVisitor net/neoforged/fml/loading/moddiscovery/ModAnnotationVisitor</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModClassVisitor net/neoforged/fml/loading/moddiscovery/ModClassVisitor</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModDiscoverer net/neoforged/fml/loading/moddiscovery/ModDiscoverer</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModFieldVisitor net/neoforged/fml/loading/moddiscovery/ModFieldVisitor</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModFile net/neoforged/fml/loading/moddiscovery/ModFile</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModFileInfo net/neoforged/fml/loading/moddiscovery/ModFileInfo</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModFileParser$<span class="number">1</span> net/neoforged/fml/loading/moddiscovery/ModFileParser$<span class="number">1</span></span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModFileParser net/neoforged/fml/loading/moddiscovery/ModFileParser</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModInfo$ModVersion net/neoforged/fml/loading/moddiscovery/ModInfo$ModVersion</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModInfo net/neoforged/fml/loading/moddiscovery/ModInfo</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModJarMetadata net/neoforged/fml/loading/moddiscovery/ModJarMetadata</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModListHandler net/neoforged/fml/loading/moddiscovery/ModListHandler</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModMethodVisitor net/neoforged/fml/loading/moddiscovery/ModMethodVisitor</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModValidator net/neoforged/fml/loading/moddiscovery/ModValidator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/ModsFolderLocator net/neoforged/fml/loading/moddiscovery/ModsFolderLocator</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/NightConfigWrapper net/neoforged/fml/loading/moddiscovery/NightConfigWrapper</span><br><span class="line">net/minecraftforge/fml/loading/moddiscovery/Scanner net/neoforged/fml/loading/moddiscovery/Scanner</span><br><span class="line">net/minecraftforge/fml/loading/progress/Message$MessageType net/neoforged/fml/loading/progress/Message$MessageType</span><br><span class="line">net/minecraftforge/fml/loading/progress/Message net/neoforged/fml/loading/progress/Message</span><br><span class="line">net/minecraftforge/fml/loading/progress/ProgressMeter net/neoforged/fml/loading/progress/ProgressMeter</span><br><span class="line">net/minecraftforge/fml/loading/progress/StartupNotificationManager$AgeMessage net/neoforged/fml/loading/progress/StartupNotificationManager$AgeMessage</span><br><span class="line">net/minecraftforge/fml/loading/progress/StartupNotificationManager net/neoforged/fml/loading/progress/StartupNotificationManager</span><br><span class="line">net/minecraftforge/fml/loading/targets/ArgumentList$EntryValue net/neoforged/fml/loading/targets/ArgumentList$EntryValue</span><br><span class="line">net/minecraftforge/fml/loading/targets/ArgumentList net/neoforged/fml/loading/targets/ArgumentList</span><br><span class="line">net/minecraftforge/fml/loading/targets/CommonClientLaunchHandler net/neoforged/fml/loading/targets/CommonClientLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/CommonDevLaunchHandler net/neoforged/fml/loading/targets/CommonDevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/CommonLaunchHandler$1ExplodedModPath net/neoforged/fml/loading/targets/CommonLaunchHandler$1ExplodedModPath</span><br><span class="line">net/minecraftforge/fml/loading/targets/CommonLaunchHandler$LocatedPaths net/neoforged/fml/loading/targets/CommonLaunchHandler$LocatedPaths</span><br><span class="line">net/minecraftforge/fml/loading/targets/CommonLaunchHandler net/neoforged/fml/loading/targets/CommonLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/CommonServerLaunchHandler net/neoforged/fml/loading/targets/CommonServerLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/CommonUserdevLaunchHandler net/neoforged/fml/loading/targets/CommonUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/FMLClientDevLaunchHandler net/neoforged/fml/loading/targets/FMLClientDevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/FMLClientLaunchHandler net/neoforged/fml/loading/targets/FMLClientLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/FMLClientUserdevLaunchHandler net/neoforged/fml/loading/targets/FMLClientUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/FMLDataUserdevLaunchHandler net/neoforged/fml/loading/targets/FMLDataUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/FMLServerDevLaunchHandler net/neoforged/fml/loading/targets/FMLServerDevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/FMLServerLaunchHandler net/neoforged/fml/loading/targets/FMLServerLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/FMLServerUserdevLaunchHandler net/neoforged/fml/loading/targets/FMLServerUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/FMLUserdevLaunchHandler net/neoforged/fml/loading/targets/FMLUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeClientDevLaunchHandler net/neoforged/fml/loading/targets/ForgeClientDevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeClientLaunchHandler net/neoforged/fml/loading/targets/ForgeClientLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeClientUserdevLaunchHandler net/neoforged/fml/loading/targets/ForgeClientUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeDataDevLaunchHandler net/neoforged/fml/loading/targets/ForgeDataDevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeDataUserdevLaunchHandler net/neoforged/fml/loading/targets/ForgeDataUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeGametestDevLaunchHandler net/neoforged/fml/loading/targets/ForgeGametestDevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeGametestUserdevLaunchHandler net/neoforged/fml/loading/targets/ForgeGametestUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeServerDevLaunchHandler net/neoforged/fml/loading/targets/ForgeServerDevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeServerLaunchHandler net/neoforged/fml/loading/targets/ForgeServerLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeServerUserdevLaunchHandler net/neoforged/fml/loading/targets/ForgeServerUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/targets/ForgeUserdevLaunchHandler net/neoforged/fml/loading/targets/ForgeUserdevLaunchHandler</span><br><span class="line">net/minecraftforge/fml/loading/toposort/CyclePresentException net/neoforged/fml/loading/toposort/CyclePresentException</span><br><span class="line">net/minecraftforge/fml/loading/toposort/StronglyConnectedComponentDetector net/neoforged/fml/loading/toposort/StronglyConnectedComponentDetector</span><br><span class="line">net/minecraftforge/fml/loading/toposort/TopologicalSort net/neoforged/fml/loading/toposort/TopologicalSort</span><br><span class="line">net/minecraftforge/fml/server/ServerMain$Runner net/neoforged/fml/server/ServerMain$Runner</span><br><span class="line">net/minecraftforge/fml/server/ServerMain net/neoforged/fml/server/ServerMain</span><br><span class="line">net/minecraftforge/client/ChunkRenderTypeSet$All net/neoforged/neoforge/client/ChunkRenderTypeSet$All</span><br><span class="line">net/minecraftforge/client/ChunkRenderTypeSet$IteratorImpl net/neoforged/neoforge/client/ChunkRenderTypeSet$IteratorImpl</span><br><span class="line">net/minecraftforge/client/ChunkRenderTypeSet$None net/neoforged/neoforge/client/ChunkRenderTypeSet$None</span><br><span class="line">net/minecraftforge/client/ChunkRenderTypeSet net/neoforged/neoforge/client/ChunkRenderTypeSet</span><br><span class="line">net/minecraftforge/client/ClientCommandHandler net/neoforged/neoforge/client/ClientCommandHandler</span><br><span class="line">net/minecraftforge/client/ClientCommandSourceStack net/neoforged/neoforge/client/ClientCommandSourceStack</span><br><span class="line">net/minecraftforge/client/ClientForgeMod net/neoforged/neoforge/client/ClientNeoForgeMod</span><br><span class="line">net/minecraftforge/client/ColorResolverManager net/neoforged/neoforge/client/ColorResolverManager</span><br><span class="line">net/minecraftforge/client/ConfigScreenHandler$ConfigScreenFactory net/neoforged/neoforge/client/ConfigScreenHandler$ConfigScreenFactory</span><br><span class="line">net/minecraftforge/client/ConfigScreenHandler net/neoforged/neoforge/client/ConfigScreenHandler</span><br><span class="line">net/minecraftforge/client/CreativeModeTabSearchRegistry net/neoforged/neoforge/client/CreativeModeTabSearchRegistry</span><br><span class="line">net/minecraftforge/client/DimensionSpecialEffectsManager net/neoforged/neoforge/client/DimensionSpecialEffectsManager</span><br><span class="line">net/minecraftforge/client/EntitySpectatorShaderManager net/neoforged/neoforge/client/EntitySpectatorShaderManager</span><br><span class="line">net/minecraftforge/client/ExtendedServerListData net/neoforged/neoforge/client/ExtendedServerListData</span><br><span class="line">net/minecraftforge/client/FireworkShapeFactoryRegistry$Factory net/neoforged/neoforge/client/FireworkShapeFactoryRegistry$Factory</span><br><span class="line">net/minecraftforge/client/FireworkShapeFactoryRegistry net/neoforged/neoforge/client/FireworkShapeFactoryRegistry</span><br><span class="line">net/minecraftforge/client/ForgeHooksClient$<span class="number">1</span> net/neoforged/neoforge/client/ClientHooks$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/ForgeHooksClient$ClientEvents net/neoforged/neoforge/client/ClientHooks$ClientEvents</span><br><span class="line">net/minecraftforge/client/ForgeHooksClient net/neoforged/neoforge/client/ClientHooks</span><br><span class="line">net/minecraftforge/client/ForgeRenderTypes$CustomizableTextureState net/neoforged/neoforge/client/NeoForgeRenderTypes$CustomizableTextureState</span><br><span class="line">net/minecraftforge/client/ForgeRenderTypes$Internal net/neoforged/neoforge/client/NeoForgeRenderTypes$Internal</span><br><span class="line">net/minecraftforge/client/ForgeRenderTypes net/neoforged/neoforge/client/NeoForgeRenderTypes</span><br><span class="line">net/minecraftforge/client/IArmPoseTransformer net/neoforged/neoforge/client/IArmPoseTransformer</span><br><span class="line">net/minecraftforge/client/IItemDecorator net/neoforged/neoforge/client/IItemDecorator</span><br><span class="line">net/minecraftforge/client/ItemDecoratorHandler net/neoforged/neoforge/client/ItemDecoratorHandler</span><br><span class="line">net/minecraftforge/client/NamedRenderTypeManager net/neoforged/neoforge/client/NamedRenderTypeManager</span><br><span class="line">net/minecraftforge/client/PresetEditorManager net/neoforged/neoforge/client/PresetEditorManager</span><br><span class="line">net/minecraftforge/client/RecipeBookManager net/neoforged/neoforge/client/RecipeBookManager</span><br><span class="line">net/minecraftforge/client/RenderTypeGroup net/neoforged/neoforge/client/RenderTypeGroup</span><br><span class="line">net/minecraftforge/client/RenderTypeHelper net/neoforged/neoforge/client/RenderTypeHelper</span><br><span class="line">net/minecraftforge/client/StencilManager net/neoforged/neoforge/client/StencilManager</span><br><span class="line">net/minecraftforge/client/event/ClientChatEvent net/neoforged/neoforge/client/event/ClientChatEvent</span><br><span class="line">net/minecraftforge/client/event/ClientChatReceivedEvent$Player net/neoforged/neoforge/client/event/ClientChatReceivedEvent$Player</span><br><span class="line">net/minecraftforge/client/event/ClientChatReceivedEvent$System net/neoforged/neoforge/client/event/ClientChatReceivedEvent$System</span><br><span class="line">net/minecraftforge/client/event/ClientChatReceivedEvent net/neoforged/neoforge/client/event/ClientChatReceivedEvent</span><br><span class="line">net/minecraftforge/client/event/ClientPlayerChangeGameTypeEvent net/neoforged/neoforge/client/event/ClientPlayerChangeGameTypeEvent</span><br><span class="line">net/minecraftforge/client/event/ClientPlayerNetworkEvent$Clone net/neoforged/neoforge/client/event/ClientPlayerNetworkEvent$Clone</span><br><span class="line">net/minecraftforge/client/event/ClientPlayerNetworkEvent$LoggingIn net/neoforged/neoforge/client/event/ClientPlayerNetworkEvent$LoggingIn</span><br><span class="line">net/minecraftforge/client/event/ClientPlayerNetworkEvent$LoggingOut net/neoforged/neoforge/client/event/ClientPlayerNetworkEvent$LoggingOut</span><br><span class="line">net/minecraftforge/client/event/ClientPlayerNetworkEvent net/neoforged/neoforge/client/event/ClientPlayerNetworkEvent</span><br><span class="line">net/minecraftforge/client/event/ComputeFovModifierEvent net/neoforged/neoforge/client/event/ComputeFovModifierEvent</span><br><span class="line">net/minecraftforge/client/event/ContainerScreenEvent$Render$Background net/neoforged/neoforge/client/event/ContainerScreenEvent$Render$Background</span><br><span class="line">net/minecraftforge/client/event/ContainerScreenEvent$Render$Foreground net/neoforged/neoforge/client/event/ContainerScreenEvent$Render$Foreground</span><br><span class="line">net/minecraftforge/client/event/ContainerScreenEvent$Render net/neoforged/neoforge/client/event/ContainerScreenEvent$Render</span><br><span class="line">net/minecraftforge/client/event/ContainerScreenEvent net/neoforged/neoforge/client/event/ContainerScreenEvent</span><br><span class="line">net/minecraftforge/client/event/CustomizeGuiOverlayEvent$BossEventProgress net/neoforged/neoforge/client/event/CustomizeGuiOverlayEvent$BossEventProgress</span><br><span class="line">net/minecraftforge/client/event/CustomizeGuiOverlayEvent$Chat net/neoforged/neoforge/client/event/CustomizeGuiOverlayEvent$Chat</span><br><span class="line">net/minecraftforge/client/event/CustomizeGuiOverlayEvent$DebugText net/neoforged/neoforge/client/event/CustomizeGuiOverlayEvent$DebugText</span><br><span class="line">net/minecraftforge/client/event/CustomizeGuiOverlayEvent net/neoforged/neoforge/client/event/CustomizeGuiOverlayEvent</span><br><span class="line">net/minecraftforge/client/event/EntityRenderersEvent$AddLayers net/neoforged/neoforge/client/event/EntityRenderersEvent$AddLayers</span><br><span class="line">net/minecraftforge/client/event/EntityRenderersEvent$CreateSkullModels net/neoforged/neoforge/client/event/EntityRenderersEvent$CreateSkullModels</span><br><span class="line">net/minecraftforge/client/event/EntityRenderersEvent$RegisterLayerDefinitions net/neoforged/neoforge/client/event/EntityRenderersEvent$RegisterLayerDefinitions</span><br><span class="line">net/minecraftforge/client/event/EntityRenderersEvent$RegisterRenderers net/neoforged/neoforge/client/event/EntityRenderersEvent$RegisterRenderers</span><br><span class="line">net/minecraftforge/client/event/EntityRenderersEvent net/neoforged/neoforge/client/event/EntityRenderersEvent</span><br><span class="line">net/minecraftforge/client/event/InputEvent$InteractionKeyMappingTriggered net/neoforged/neoforge/client/event/InputEvent$InteractionKeyMappingTriggered</span><br><span class="line">net/minecraftforge/client/event/InputEvent$Key net/neoforged/neoforge/client/event/InputEvent$Key</span><br><span class="line">net/minecraftforge/client/event/InputEvent$MouseButton$Post net/neoforged/neoforge/client/event/InputEvent$MouseButton$Post</span><br><span class="line">net/minecraftforge/client/event/InputEvent$MouseButton$Pre net/neoforged/neoforge/client/event/InputEvent$MouseButton$Pre</span><br><span class="line">net/minecraftforge/client/event/InputEvent$MouseButton net/neoforged/neoforge/client/event/InputEvent$MouseButton</span><br><span class="line">net/minecraftforge/client/event/InputEvent$MouseScrollingEvent net/neoforged/neoforge/client/event/InputEvent$MouseScrollingEvent</span><br><span class="line">net/minecraftforge/client/event/InputEvent net/neoforged/neoforge/client/event/InputEvent</span><br><span class="line">net/minecraftforge/client/event/ModelEvent$BakingCompleted net/neoforged/neoforge/client/event/ModelEvent$BakingCompleted</span><br><span class="line">net/minecraftforge/client/event/ModelEvent$ModifyBakingResult net/neoforged/neoforge/client/event/ModelEvent$ModifyBakingResult</span><br><span class="line">net/minecraftforge/client/event/ModelEvent$RegisterAdditional net/neoforged/neoforge/client/event/ModelEvent$RegisterAdditional</span><br><span class="line">net/minecraftforge/client/event/ModelEvent$RegisterGeometryLoaders net/neoforged/neoforge/client/event/ModelEvent$RegisterGeometryLoaders</span><br><span class="line">net/minecraftforge/client/event/ModelEvent net/neoforged/neoforge/client/event/ModelEvent</span><br><span class="line">net/minecraftforge/client/event/MovementInputUpdateEvent net/neoforged/neoforge/client/event/MovementInputUpdateEvent</span><br><span class="line">net/minecraftforge/client/event/RecipesUpdatedEvent net/neoforged/neoforge/client/event/RecipesUpdatedEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterClientCommandsEvent net/neoforged/neoforge/client/event/RegisterClientCommandsEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterClientReloadListenersEvent net/neoforged/neoforge/client/event/RegisterClientReloadListenersEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterClientTooltipComponentFactoriesEvent net/neoforged/neoforge/client/event/RegisterClientTooltipComponentFactoriesEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterColorHandlersEvent$Block net/neoforged/neoforge/client/event/RegisterColorHandlersEvent$Block</span><br><span class="line">net/minecraftforge/client/event/RegisterColorHandlersEvent$ColorResolvers net/neoforged/neoforge/client/event/RegisterColorHandlersEvent$ColorResolvers</span><br><span class="line">net/minecraftforge/client/event/RegisterColorHandlersEvent$Item net/neoforged/neoforge/client/event/RegisterColorHandlersEvent$Item</span><br><span class="line">net/minecraftforge/client/event/RegisterColorHandlersEvent net/neoforged/neoforge/client/event/RegisterColorHandlersEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterDimensionSpecialEffectsEvent net/neoforged/neoforge/client/event/RegisterDimensionSpecialEffectsEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterEntitySpectatorShadersEvent net/neoforged/neoforge/client/event/RegisterEntitySpectatorShadersEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterGuiOverlaysEvent$Ordering net/neoforged/neoforge/client/event/RegisterGuiOverlaysEvent$Ordering</span><br><span class="line">net/minecraftforge/client/event/RegisterGuiOverlaysEvent net/neoforged/neoforge/client/event/RegisterGuiOverlaysEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterItemDecorationsEvent net/neoforged/neoforge/client/event/RegisterItemDecorationsEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterKeyMappingsEvent net/neoforged/neoforge/client/event/RegisterKeyMappingsEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterNamedRenderTypesEvent net/neoforged/neoforge/client/event/RegisterNamedRenderTypesEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterParticleProvidersEvent net/neoforged/neoforge/client/event/RegisterParticleProvidersEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterPresetEditorsEvent net/neoforged/neoforge/client/event/RegisterPresetEditorsEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterRecipeBookCategoriesEvent net/neoforged/neoforge/client/event/RegisterRecipeBookCategoriesEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterShadersEvent net/neoforged/neoforge/client/event/RegisterShadersEvent</span><br><span class="line">net/minecraftforge/client/event/RegisterTextureAtlasSpriteLoadersEvent net/neoforged/neoforge/client/event/RegisterTextureAtlasSpriteLoadersEvent</span><br><span class="line">net/minecraftforge/client/event/RenderArmEvent net/neoforged/neoforge/client/event/RenderArmEvent</span><br><span class="line">net/minecraftforge/client/event/RenderBlockScreenEffectEvent$OverlayType net/neoforged/neoforge/client/event/RenderBlockScreenEffectEvent$OverlayType</span><br><span class="line">net/minecraftforge/client/event/RenderBlockScreenEffectEvent net/neoforged/neoforge/client/event/RenderBlockScreenEffectEvent</span><br><span class="line">net/minecraftforge/client/event/RenderGuiEvent$Post net/neoforged/neoforge/client/event/RenderGuiEvent$Post</span><br><span class="line">net/minecraftforge/client/event/RenderGuiEvent$Pre net/neoforged/neoforge/client/event/RenderGuiEvent$Pre</span><br><span class="line">net/minecraftforge/client/event/RenderGuiEvent net/neoforged/neoforge/client/event/RenderGuiEvent</span><br><span class="line">net/minecraftforge/client/event/RenderGuiOverlayEvent$Post net/neoforged/neoforge/client/event/RenderGuiOverlayEvent$Post</span><br><span class="line">net/minecraftforge/client/event/RenderGuiOverlayEvent$Pre net/neoforged/neoforge/client/event/RenderGuiOverlayEvent$Pre</span><br><span class="line">net/minecraftforge/client/event/RenderGuiOverlayEvent net/neoforged/neoforge/client/event/RenderGuiOverlayEvent</span><br><span class="line">net/minecraftforge/client/event/RenderHandEvent net/neoforged/neoforge/client/event/RenderHandEvent</span><br><span class="line">net/minecraftforge/client/event/RenderHighlightEvent$Block net/neoforged/neoforge/client/event/RenderHighlightEvent$Block</span><br><span class="line">net/minecraftforge/client/event/RenderHighlightEvent$Entity net/neoforged/neoforge/client/event/RenderHighlightEvent$Entity</span><br><span class="line">net/minecraftforge/client/event/RenderHighlightEvent net/neoforged/neoforge/client/event/RenderHighlightEvent</span><br><span class="line">net/minecraftforge/client/event/RenderItemInFrameEvent net/neoforged/neoforge/client/event/RenderItemInFrameEvent</span><br><span class="line">net/minecraftforge/client/event/RenderLevelStageEvent$RegisterStageEvent net/neoforged/neoforge/client/event/RenderLevelStageEvent$RegisterStageEvent</span><br><span class="line">net/minecraftforge/client/event/RenderLevelStageEvent$Stage net/neoforged/neoforge/client/event/RenderLevelStageEvent$Stage</span><br><span class="line">net/minecraftforge/client/event/RenderLevelStageEvent net/neoforged/neoforge/client/event/RenderLevelStageEvent</span><br><span class="line">net/minecraftforge/client/event/RenderLivingEvent$Post net/neoforged/neoforge/client/event/RenderLivingEvent$Post</span><br><span class="line">net/minecraftforge/client/event/RenderLivingEvent$Pre net/neoforged/neoforge/client/event/RenderLivingEvent$Pre</span><br><span class="line">net/minecraftforge/client/event/RenderLivingEvent net/neoforged/neoforge/client/event/RenderLivingEvent</span><br><span class="line">net/minecraftforge/client/event/RenderNameTagEvent net/neoforged/neoforge/client/event/RenderNameTagEvent</span><br><span class="line">net/minecraftforge/client/event/RenderPlayerEvent$Post net/neoforged/neoforge/client/event/RenderPlayerEvent$Post</span><br><span class="line">net/minecraftforge/client/event/RenderPlayerEvent$Pre net/neoforged/neoforge/client/event/RenderPlayerEvent$Pre</span><br><span class="line">net/minecraftforge/client/event/RenderPlayerEvent net/neoforged/neoforge/client/event/RenderPlayerEvent</span><br><span class="line">net/minecraftforge/client/event/RenderTooltipEvent$Color net/neoforged/neoforge/client/event/RenderTooltipEvent$Color</span><br><span class="line">net/minecraftforge/client/event/RenderTooltipEvent$GatherComponents net/neoforged/neoforge/client/event/RenderTooltipEvent$GatherComponents</span><br><span class="line">net/minecraftforge/client/event/RenderTooltipEvent$Pre net/neoforged/neoforge/client/event/RenderTooltipEvent$Pre</span><br><span class="line">net/minecraftforge/client/event/RenderTooltipEvent net/neoforged/neoforge/client/event/RenderTooltipEvent</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$BackgroundRendered net/neoforged/neoforge/client/event/ScreenEvent$BackgroundRendered</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$CharacterTyped$Post net/neoforged/neoforge/client/event/ScreenEvent$CharacterTyped$Post</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$CharacterTyped$Pre net/neoforged/neoforge/client/event/ScreenEvent$CharacterTyped$Pre</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$CharacterTyped net/neoforged/neoforge/client/event/ScreenEvent$CharacterTyped</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$Closing net/neoforged/neoforge/client/event/ScreenEvent$Closing</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$Init$Post net/neoforged/neoforge/client/event/ScreenEvent$Init$Post</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$Init$Pre net/neoforged/neoforge/client/event/ScreenEvent$Init$Pre</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$Init net/neoforged/neoforge/client/event/ScreenEvent$Init</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$KeyInput net/neoforged/neoforge/client/event/ScreenEvent$KeyInput</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$KeyPressed$Post net/neoforged/neoforge/client/event/ScreenEvent$KeyPressed$Post</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$KeyPressed$Pre net/neoforged/neoforge/client/event/ScreenEvent$KeyPressed$Pre</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$KeyPressed net/neoforged/neoforge/client/event/ScreenEvent$KeyPressed</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$KeyReleased$Post net/neoforged/neoforge/client/event/ScreenEvent$KeyReleased$Post</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$KeyReleased$Pre net/neoforged/neoforge/client/event/ScreenEvent$KeyReleased$Pre</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$KeyReleased net/neoforged/neoforge/client/event/ScreenEvent$KeyReleased</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseButtonPressed$Post net/neoforged/neoforge/client/event/ScreenEvent$MouseButtonPressed$Post</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseButtonPressed$Pre net/neoforged/neoforge/client/event/ScreenEvent$MouseButtonPressed$Pre</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseButtonPressed net/neoforged/neoforge/client/event/ScreenEvent$MouseButtonPressed</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseButtonReleased$Post net/neoforged/neoforge/client/event/ScreenEvent$MouseButtonReleased$Post</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseButtonReleased$Pre net/neoforged/neoforge/client/event/ScreenEvent$MouseButtonReleased$Pre</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseButtonReleased net/neoforged/neoforge/client/event/ScreenEvent$MouseButtonReleased</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseDragged$Post net/neoforged/neoforge/client/event/ScreenEvent$MouseDragged$Post</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseDragged$Pre net/neoforged/neoforge/client/event/ScreenEvent$MouseDragged$Pre</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseDragged net/neoforged/neoforge/client/event/ScreenEvent$MouseDragged</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseInput net/neoforged/neoforge/client/event/ScreenEvent$MouseInput</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseScrolled$Post net/neoforged/neoforge/client/event/ScreenEvent$MouseScrolled$Post</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseScrolled$Pre net/neoforged/neoforge/client/event/ScreenEvent$MouseScrolled$Pre</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$MouseScrolled net/neoforged/neoforge/client/event/ScreenEvent$MouseScrolled</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$Opening net/neoforged/neoforge/client/event/ScreenEvent$Opening</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$Render$Post net/neoforged/neoforge/client/event/ScreenEvent$Render$Post</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$Render$Pre net/neoforged/neoforge/client/event/ScreenEvent$Render$Pre</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$Render net/neoforged/neoforge/client/event/ScreenEvent$Render</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent$RenderInventoryMobEffects net/neoforged/neoforge/client/event/ScreenEvent$RenderInventoryMobEffects</span><br><span class="line">net/minecraftforge/client/event/ScreenEvent net/neoforged/neoforge/client/event/ScreenEvent</span><br><span class="line">net/minecraftforge/client/event/ScreenshotEvent net/neoforged/neoforge/client/event/ScreenshotEvent</span><br><span class="line">net/minecraftforge/client/event/TextureStitchEvent$Post net/neoforged/neoforge/client/event/TextureStitchEvent$Post</span><br><span class="line">net/minecraftforge/client/event/TextureStitchEvent net/neoforged/neoforge/client/event/TextureStitchEvent</span><br><span class="line">net/minecraftforge/client/event/ToastAddEvent net/neoforged/neoforge/client/event/ToastAddEvent</span><br><span class="line">net/minecraftforge/client/event/ViewportEvent$ComputeCameraAngles net/neoforged/neoforge/client/event/ViewportEvent$ComputeCameraAngles</span><br><span class="line">net/minecraftforge/client/event/ViewportEvent$ComputeFogColor net/neoforged/neoforge/client/event/ViewportEvent$ComputeFogColor</span><br><span class="line">net/minecraftforge/client/event/ViewportEvent$ComputeFov net/neoforged/neoforge/client/event/ViewportEvent$ComputeFov</span><br><span class="line">net/minecraftforge/client/event/ViewportEvent$RenderFog net/neoforged/neoforge/client/event/ViewportEvent$RenderFog</span><br><span class="line">net/minecraftforge/client/event/ViewportEvent net/neoforged/neoforge/client/event/ViewportEvent</span><br><span class="line">net/minecraftforge/client/event/<span class="keyword">package</span>-info net/neoforged/neoforge/client/event/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/client/event/sound/PlaySoundEvent net/neoforged/neoforge/client/event/sound/PlaySoundEvent</span><br><span class="line">net/minecraftforge/client/event/sound/PlaySoundSourceEvent net/neoforged/neoforge/client/event/sound/PlaySoundSourceEvent</span><br><span class="line">net/minecraftforge/client/event/sound/PlayStreamingSourceEvent net/neoforged/neoforge/client/event/sound/PlayStreamingSourceEvent</span><br><span class="line">net/minecraftforge/client/event/sound/SoundEngineLoadEvent net/neoforged/neoforge/client/event/sound/SoundEngineLoadEvent</span><br><span class="line">net/minecraftforge/client/event/sound/SoundEvent$SoundSourceEvent net/neoforged/neoforge/client/event/sound/SoundEvent$SoundSourceEvent</span><br><span class="line">net/minecraftforge/client/event/sound/SoundEvent net/neoforged/neoforge/client/event/sound/SoundEvent</span><br><span class="line">net/minecraftforge/client/event/sound/<span class="keyword">package</span>-info net/neoforged/neoforge/client/event/sound/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/client/extensions/IAbstractWidgetExtension net/neoforged/neoforge/client/extensions/IAbstractWidgetExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgeBakedModel net/neoforged/neoforge/client/extensions/IBakedModelExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgeBlockAndTintGetter net/neoforged/neoforge/common/extensions/IBlockAndTintGetterExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgeDimensionSpecialEffects net/neoforged/neoforge/client/extensions/IDimensionSpecialEffectsExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgeFont net/neoforged/neoforge/client/extensions/IFontExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgeGuiGraphics net/neoforged/neoforge/client/extensions/IGuiGraphicsExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgeKeyMapping net/neoforged/neoforge/client/extensions/IKeyMappingExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgeMinecraft net/neoforged/neoforge/client/extensions/IMinecraftExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgeModelBaker net/neoforged/neoforge/client/extensions/IModelBakerExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgePoseStack net/neoforged/neoforge/client/extensions/IPoseStackExtension</span><br><span class="line">net/minecraftforge/client/extensions/IForgeVertexConsumer net/neoforged/neoforge/client/extensions/IVertexConsumerExtension</span><br><span class="line">net/minecraftforge/client/extensions/common/IClientBlockExtensions$<span class="number">1</span> net/neoforged/neoforge/client/extensions/common/IClientBlockExtensions$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/extensions/common/IClientBlockExtensions net/neoforged/neoforge/client/extensions/common/IClientBlockExtensions</span><br><span class="line">net/minecraftforge/client/extensions/common/IClientFluidTypeExtensions$<span class="number">1</span> net/neoforged/neoforge/client/extensions/common/IClientFluidTypeExtensions$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/extensions/common/IClientFluidTypeExtensions net/neoforged/neoforge/client/extensions/common/IClientFluidTypeExtensions</span><br><span class="line">net/minecraftforge/client/extensions/common/IClientItemExtensions$<span class="number">1</span> net/neoforged/neoforge/client/extensions/common/IClientItemExtensions$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/extensions/common/IClientItemExtensions$FontContext net/neoforged/neoforge/client/extensions/common/IClientItemExtensions$FontContext</span><br><span class="line">net/minecraftforge/client/extensions/common/IClientItemExtensions net/neoforged/neoforge/client/extensions/common/IClientItemExtensions</span><br><span class="line">net/minecraftforge/client/extensions/common/IClientMobEffectExtensions$<span class="number">1</span> net/neoforged/neoforge/client/extensions/common/IClientMobEffectExtensions$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/extensions/common/IClientMobEffectExtensions net/neoforged/neoforge/client/extensions/common/IClientMobEffectExtensions</span><br><span class="line">net/minecraftforge/client/extensions/<span class="keyword">package</span>-info net/neoforged/neoforge/client/extensions/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/client/gui/ClientTooltipComponentManager net/neoforged/neoforge/client/gui/ClientTooltipComponentManager</span><br><span class="line">net/minecraftforge/client/gui/CreativeTabsScreenPage net/neoforged/neoforge/client/gui/CreativeTabsScreenPage</span><br><span class="line">net/minecraftforge/client/gui/LoadingErrorScreen$LoadingEntryList$LoadingMessageEntry net/neoforged/neoforge/client/gui/LoadingErrorScreen$LoadingEntryList$LoadingMessageEntry</span><br><span class="line">net/minecraftforge/client/gui/LoadingErrorScreen$LoadingEntryList net/neoforged/neoforge/client/gui/LoadingErrorScreen$LoadingEntryList</span><br><span class="line">net/minecraftforge/client/gui/LoadingErrorScreen net/neoforged/neoforge/client/gui/LoadingErrorScreen</span><br><span class="line">net/minecraftforge/client/gui/ModListScreen$<span class="number">1</span> net/neoforged/neoforge/client/gui/ModListScreen$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/gui/ModListScreen$InfoPanel net/neoforged/neoforge/client/gui/ModListScreen$InfoPanel</span><br><span class="line">net/minecraftforge/client/gui/ModListScreen$SortType$<span class="number">1</span> net/neoforged/neoforge/client/gui/ModListScreen$SortType$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/gui/ModListScreen$SortType$<span class="number">2</span> net/neoforged/neoforge/client/gui/ModListScreen$SortType$<span class="number">2</span></span><br><span class="line">net/minecraftforge/client/gui/ModListScreen$SortType net/neoforged/neoforge/client/gui/ModListScreen$SortType</span><br><span class="line">net/minecraftforge/client/gui/ModListScreen net/neoforged/neoforge/client/gui/ModListScreen</span><br><span class="line">net/minecraftforge/client/gui/ModMismatchDisconnectedScreen$MismatchInfoPanel net/neoforged/neoforge/client/gui/ModMismatchDisconnectedScreen$MismatchInfoPanel</span><br><span class="line">net/minecraftforge/client/gui/ModMismatchDisconnectedScreen net/neoforged/neoforge/client/gui/ModMismatchDisconnectedScreen</span><br><span class="line">net/minecraftforge/client/gui/ScreenUtils net/neoforged/neoforge/client/gui/ScreenUtils</span><br><span class="line">net/minecraftforge/client/gui/TitleScreenModUpdateIndicator net/neoforged/neoforge/client/gui/TitleScreenModUpdateIndicator</span><br><span class="line">net/minecraftforge/client/gui/overlay/ForgeGui$ForgeDebugScreenOverlay net/neoforged/neoforge/client/gui/overlay/ExtendedGui$ForgeDebugScreenOverlay</span><br><span class="line">net/minecraftforge/client/gui/overlay/ForgeGui net/neoforged/neoforge/client/gui/overlay/ExtendedGui</span><br><span class="line">net/minecraftforge/client/gui/overlay/GuiOverlayManager net/neoforged/neoforge/client/gui/overlay/GuiOverlayManager</span><br><span class="line">net/minecraftforge/client/gui/overlay/IGuiOverlay net/neoforged/neoforge/client/gui/overlay/IGuiOverlay</span><br><span class="line">net/minecraftforge/client/gui/overlay/NamedGuiOverlay net/neoforged/neoforge/client/gui/overlay/NamedGuiOverlay</span><br><span class="line">net/minecraftforge/client/gui/overlay/VanillaGuiOverlay net/neoforged/neoforge/client/gui/overlay/VanillaGuiOverlay</span><br><span class="line">net/minecraftforge/client/gui/widget/ExtendedButton net/neoforged/neoforge/client/gui/widget/ExtendedButton</span><br><span class="line">net/minecraftforge/client/gui/widget/ForgeSlider net/neoforged/neoforge/client/gui/widget/ExtendedSlider</span><br><span class="line">net/minecraftforge/client/gui/widget/ModListWidget$ModEntry net/neoforged/neoforge/client/gui/widget/ModListWidget$ModEntry</span><br><span class="line">net/minecraftforge/client/gui/widget/ModListWidget net/neoforged/neoforge/client/gui/widget/ModListWidget</span><br><span class="line">net/minecraftforge/client/gui/widget/ScrollPanel net/neoforged/neoforge/client/gui/widget/ScrollPanel</span><br><span class="line">net/minecraftforge/client/gui/widget/UnicodeGlyphButton net/neoforged/neoforge/client/gui/widget/UnicodeGlyphButton</span><br><span class="line">net/minecraftforge/client/loading/ClientModLoader net/neoforged/neoforge/client/loading/ClientModLoader</span><br><span class="line">net/minecraftforge/client/loading/ForgeLoadingOverlay net/neoforged/neoforge/client/loading/ForgeLoadingOverlay</span><br><span class="line">net/minecraftforge/client/loading/NoVizFallback net/neoforged/neoforge/client/loading/NoVizFallback</span><br><span class="line">net/minecraftforge/client/model/BakedModelWrapper net/neoforged/neoforge/client/model/BakedModelWrapper</span><br><span class="line">net/minecraftforge/client/model/CompositeModel$Baked$Builder net/neoforged/neoforge/client/model/CompositeModel$Baked$Builder</span><br><span class="line">net/minecraftforge/client/model/CompositeModel$Baked net/neoforged/neoforge/client/model/CompositeModel$Baked</span><br><span class="line">net/minecraftforge/client/model/CompositeModel$Data$Builder net/neoforged/neoforge/client/model/CompositeModel$Data$Builder</span><br><span class="line">net/minecraftforge/client/model/CompositeModel$Data net/neoforged/neoforge/client/model/CompositeModel$Data</span><br><span class="line">net/minecraftforge/client/model/CompositeModel$Loader net/neoforged/neoforge/client/model/CompositeModel$Loader</span><br><span class="line">net/minecraftforge/client/model/CompositeModel net/neoforged/neoforge/client/model/CompositeModel</span><br><span class="line">net/minecraftforge/client/model/DynamicFluidContainerModel$Colors net/neoforged/neoforge/client/model/DynamicFluidContainerModel$Colors</span><br><span class="line">net/minecraftforge/client/model/DynamicFluidContainerModel$ContainedFluidOverrideHandler net/neoforged/neoforge/client/model/DynamicFluidContainerModel$ContainedFluidOverrideHandler</span><br><span class="line">net/minecraftforge/client/model/DynamicFluidContainerModel$Loader net/neoforged/neoforge/client/model/DynamicFluidContainerModel$Loader</span><br><span class="line">net/minecraftforge/client/model/DynamicFluidContainerModel net/neoforged/neoforge/client/model/DynamicFluidContainerModel</span><br><span class="line">net/minecraftforge/client/model/ElementsModel$Loader net/neoforged/neoforge/client/model/ElementsModel$Loader</span><br><span class="line">net/minecraftforge/client/model/ElementsModel net/neoforged/neoforge/client/model/ElementsModel</span><br><span class="line">net/minecraftforge/client/model/EmptyModel$Baked net/neoforged/neoforge/client/model/EmptyModel$Baked</span><br><span class="line">net/minecraftforge/client/model/EmptyModel net/neoforged/neoforge/client/model/EmptyModel</span><br><span class="line">net/minecraftforge/client/model/ExtendedBlockModelDeserializer net/neoforged/neoforge/client/model/ExtendedBlockModelDeserializer</span><br><span class="line">net/minecraftforge/client/model/ForgeFaceData net/neoforged/neoforge/client/model/ExtraFaceData</span><br><span class="line">net/minecraftforge/client/model/ForgeItemModelShaper net/neoforged/neoforge/client/model/ForgeItemModelShaper</span><br><span class="line">net/minecraftforge/client/model/IDynamicBakedModel net/neoforged/neoforge/client/model/IDynamicBakedModel</span><br><span class="line">net/minecraftforge/client/model/IModelBuilder$Collecting net/neoforged/neoforge/client/model/IModelBuilder$Collecting</span><br><span class="line">net/minecraftforge/client/model/IModelBuilder$Simple net/neoforged/neoforge/client/model/IModelBuilder$Simple</span><br><span class="line">net/minecraftforge/client/model/IModelBuilder net/neoforged/neoforge/client/model/IModelBuilder</span><br><span class="line">net/minecraftforge/client/model/IQuadTransformer net/neoforged/neoforge/client/model/IQuadTransformer</span><br><span class="line">net/minecraftforge/client/model/ItemLayerModel$Loader net/neoforged/neoforge/client/model/ItemLayerModel$Loader</span><br><span class="line">net/minecraftforge/client/model/ItemLayerModel net/neoforged/neoforge/client/model/ItemLayerModel</span><br><span class="line">net/minecraftforge/client/model/QuadTransformers net/neoforged/neoforge/client/model/QuadTransformers</span><br><span class="line">net/minecraftforge/client/model/SeparateTransformsModel$Baked net/neoforged/neoforge/client/model/SeparateTransformsModel$Baked</span><br><span class="line">net/minecraftforge/client/model/SeparateTransformsModel$Loader net/neoforged/neoforge/client/model/SeparateTransformsModel$Loader</span><br><span class="line">net/minecraftforge/client/model/SeparateTransformsModel net/neoforged/neoforge/client/model/SeparateTransformsModel</span><br><span class="line">net/minecraftforge/client/model/SimpleModelState net/neoforged/neoforge/client/model/SimpleModelState</span><br><span class="line">net/minecraftforge/client/model/data/ModelData$Builder net/neoforged/neoforge/client/model/data/ModelData$Builder</span><br><span class="line">net/minecraftforge/client/model/data/ModelData net/neoforged/neoforge/client/model/data/ModelData</span><br><span class="line">net/minecraftforge/client/model/data/ModelDataManager net/neoforged/neoforge/client/model/data/ModelDataManager</span><br><span class="line">net/minecraftforge/client/model/data/ModelProperty net/neoforged/neoforge/client/model/data/ModelProperty</span><br><span class="line">net/minecraftforge/client/model/data/MultipartModelData$Builder net/neoforged/neoforge/client/model/data/MultipartModelData$Builder</span><br><span class="line">net/minecraftforge/client/model/data/MultipartModelData net/neoforged/neoforge/client/model/data/MultipartModelData</span><br><span class="line">net/minecraftforge/client/model/generators/BlockModelBuilder net/neoforged/neoforge/client/model/generators/BlockModelBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/BlockModelProvider net/neoforged/neoforge/client/model/generators/BlockModelProvider</span><br><span class="line">net/minecraftforge/client/model/generators/BlockStateProvider$<span class="number">1</span> net/neoforged/neoforge/client/model/generators/BlockStateProvider$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/model/generators/BlockStateProvider$<span class="number">2</span> net/neoforged/neoforge/client/model/generators/BlockStateProvider$<span class="number">2</span></span><br><span class="line">net/minecraftforge/client/model/generators/BlockStateProvider$ConfiguredModelList net/neoforged/neoforge/client/model/generators/BlockStateProvider$ConfiguredModelList</span><br><span class="line">net/minecraftforge/client/model/generators/BlockStateProvider net/neoforged/neoforge/client/model/generators/BlockStateProvider</span><br><span class="line">net/minecraftforge/client/model/generators/ConfiguredModel$Builder net/neoforged/neoforge/client/model/generators/ConfiguredModel$Builder</span><br><span class="line">net/minecraftforge/client/model/generators/ConfiguredModel net/neoforged/neoforge/client/model/generators/ConfiguredModel</span><br><span class="line">net/minecraftforge/client/model/generators/CustomLoaderBuilder net/neoforged/neoforge/client/model/generators/CustomLoaderBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/IGeneratedBlockState net/neoforged/neoforge/client/model/generators/IGeneratedBlockState</span><br><span class="line">net/minecraftforge/client/model/generators/ItemModelBuilder$OverrideBuilder net/neoforged/neoforge/client/model/generators/ItemModelBuilder$OverrideBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/ItemModelBuilder net/neoforged/neoforge/client/model/generators/ItemModelBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/ItemModelProvider net/neoforged/neoforge/client/model/generators/ItemModelProvider</span><br><span class="line">net/minecraftforge/client/model/generators/ModelBuilder$ElementBuilder$FaceBuilder net/neoforged/neoforge/client/model/generators/ModelBuilder$ElementBuilder$FaceBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/ModelBuilder$ElementBuilder$RotationBuilder net/neoforged/neoforge/client/model/generators/ModelBuilder$ElementBuilder$RotationBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/ModelBuilder$ElementBuilder net/neoforged/neoforge/client/model/generators/ModelBuilder$ElementBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/ModelBuilder$FaceRotation net/neoforged/neoforge/client/model/generators/ModelBuilder$FaceRotation</span><br><span class="line">net/minecraftforge/client/model/generators/ModelBuilder$RootTransformsBuilder net/neoforged/neoforge/client/model/generators/ModelBuilder$RootTransformsBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/ModelBuilder$TransformsBuilder$TransformVecBuilder net/neoforged/neoforge/client/model/generators/ModelBuilder$TransformsBuilder$TransformVecBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/ModelBuilder$TransformsBuilder net/neoforged/neoforge/client/model/generators/ModelBuilder$TransformsBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/ModelBuilder net/neoforged/neoforge/client/model/generators/ModelBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/ModelFile$ExistingModelFile net/neoforged/neoforge/client/model/generators/ModelFile$ExistingModelFile</span><br><span class="line">net/minecraftforge/client/model/generators/ModelFile$UncheckedModelFile net/neoforged/neoforge/client/model/generators/ModelFile$UncheckedModelFile</span><br><span class="line">net/minecraftforge/client/model/generators/ModelFile net/neoforged/neoforge/client/model/generators/ModelFile</span><br><span class="line">net/minecraftforge/client/model/generators/ModelProvider net/neoforged/neoforge/client/model/generators/ModelProvider</span><br><span class="line">net/minecraftforge/client/model/generators/MultiPartBlockStateBuilder$PartBuilder$ConditionGroup net/neoforged/neoforge/client/model/generators/MultiPartBlockStateBuilder$PartBuilder$ConditionGroup</span><br><span class="line">net/minecraftforge/client/model/generators/MultiPartBlockStateBuilder$PartBuilder net/neoforged/neoforge/client/model/generators/MultiPartBlockStateBuilder$PartBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/MultiPartBlockStateBuilder net/neoforged/neoforge/client/model/generators/MultiPartBlockStateBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/VariantBlockStateBuilder$PartialBlockstate net/neoforged/neoforge/client/model/generators/VariantBlockStateBuilder$PartialBlockstate</span><br><span class="line">net/minecraftforge/client/model/generators/VariantBlockStateBuilder net/neoforged/neoforge/client/model/generators/VariantBlockStateBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/loaders/CompositeModelBuilder net/neoforged/neoforge/client/model/generators/loaders/CompositeModelBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/loaders/DynamicFluidContainerModelBuilder net/neoforged/neoforge/client/model/generators/loaders/DynamicFluidContainerModelBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/loaders/ItemLayerModelBuilder net/neoforged/neoforge/client/model/generators/loaders/ItemLayerModelBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/loaders/ObjModelBuilder net/neoforged/neoforge/client/model/generators/loaders/ObjModelBuilder</span><br><span class="line">net/minecraftforge/client/model/generators/loaders/SeparateTransformsModelBuilder net/neoforged/neoforge/client/model/generators/loaders/SeparateTransformsModelBuilder</span><br><span class="line">net/minecraftforge/client/model/geometry/BlockGeometryBakingContext$VisibilityData net/neoforged/neoforge/client/model/geometry/BlockGeometryBakingContext$VisibilityData</span><br><span class="line">net/minecraftforge/client/model/geometry/BlockGeometryBakingContext net/neoforged/neoforge/client/model/geometry/BlockGeometryBakingContext</span><br><span class="line">net/minecraftforge/client/model/geometry/GeometryLoaderManager net/neoforged/neoforge/client/model/geometry/GeometryLoaderManager</span><br><span class="line">net/minecraftforge/client/model/geometry/IGeometryBakingContext net/neoforged/neoforge/client/model/geometry/IGeometryBakingContext</span><br><span class="line">net/minecraftforge/client/model/geometry/IGeometryLoader net/neoforged/neoforge/client/model/geometry/IGeometryLoader</span><br><span class="line">net/minecraftforge/client/model/geometry/IUnbakedGeometry net/neoforged/neoforge/client/model/geometry/IUnbakedGeometry</span><br><span class="line">net/minecraftforge/client/model/geometry/SimpleUnbakedGeometry net/neoforged/neoforge/client/model/geometry/SimpleUnbakedGeometry</span><br><span class="line">net/minecraftforge/client/model/geometry/StandaloneGeometryBakingContext$Builder net/neoforged/neoforge/client/model/geometry/StandaloneGeometryBakingContext$Builder</span><br><span class="line">net/minecraftforge/client/model/geometry/StandaloneGeometryBakingContext net/neoforged/neoforge/client/model/geometry/StandaloneGeometryBakingContext</span><br><span class="line">net/minecraftforge/client/model/geometry/UnbakedGeometryHelper net/neoforged/neoforge/client/model/geometry/UnbakedGeometryHelper</span><br><span class="line">net/minecraftforge/client/model/lighting/FlatQuadLighter net/neoforged/neoforge/client/model/lighting/FlatQuadLighter</span><br><span class="line">net/minecraftforge/client/model/lighting/ForgeModelBlockRenderer net/neoforged/neoforge/client/model/lighting/ForgeModelBlockRenderer</span><br><span class="line">net/minecraftforge/client/model/lighting/QuadLighter net/neoforged/neoforge/client/model/lighting/QuadLighter</span><br><span class="line">net/minecraftforge/client/model/lighting/SmoothQuadLighter net/neoforged/neoforge/client/model/lighting/SmoothQuadLighter</span><br><span class="line">net/minecraftforge/client/model/obj/ObjLoader net/neoforged/neoforge/client/model/obj/ObjLoader</span><br><span class="line">net/minecraftforge/client/model/obj/ObjMaterialLibrary$Material net/neoforged/neoforge/client/model/obj/ObjMaterialLibrary$Material</span><br><span class="line">net/minecraftforge/client/model/obj/ObjMaterialLibrary net/neoforged/neoforge/client/model/obj/ObjMaterialLibrary</span><br><span class="line">net/minecraftforge/client/model/obj/ObjModel$ModelGroup net/neoforged/neoforge/client/model/obj/ObjModel$ModelGroup</span><br><span class="line">net/minecraftforge/client/model/obj/ObjModel$ModelMesh net/neoforged/neoforge/client/model/obj/ObjModel$ModelMesh</span><br><span class="line">net/minecraftforge/client/model/obj/ObjModel$ModelObject net/neoforged/neoforge/client/model/obj/ObjModel$ModelObject</span><br><span class="line">net/minecraftforge/client/model/obj/ObjModel$ModelSettings net/neoforged/neoforge/client/model/obj/ObjModel$ModelSettings</span><br><span class="line">net/minecraftforge/client/model/obj/ObjModel net/neoforged/neoforge/client/model/obj/ObjModel</span><br><span class="line">net/minecraftforge/client/model/obj/ObjTokenizer net/neoforged/neoforge/client/model/obj/ObjTokenizer</span><br><span class="line">net/minecraftforge/client/model/obj/<span class="keyword">package</span>-info net/neoforged/neoforge/client/model/obj/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/client/model/<span class="keyword">package</span>-info net/neoforged/neoforge/client/model/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/client/model/pipeline/QuadBakingVertexConsumer$Buffered net/neoforged/neoforge/client/model/pipeline/QuadBakingVertexConsumer$Buffered</span><br><span class="line">net/minecraftforge/client/model/pipeline/QuadBakingVertexConsumer net/neoforged/neoforge/client/model/pipeline/QuadBakingVertexConsumer</span><br><span class="line">net/minecraftforge/client/model/pipeline/RemappingVertexPipeline net/neoforged/neoforge/client/model/pipeline/RemappingVertexPipeline</span><br><span class="line">net/minecraftforge/client/model/pipeline/TransformingVertexPipeline net/neoforged/neoforge/client/model/pipeline/TransformingVertexPipeline</span><br><span class="line">net/minecraftforge/client/model/pipeline/VertexConsumerWrapper net/neoforged/neoforge/client/model/pipeline/VertexConsumerWrapper</span><br><span class="line">net/minecraftforge/client/model/pipeline/<span class="keyword">package</span>-info net/neoforged/neoforge/client/model/pipeline/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/client/model/renderable/BakedModelRenderable$Context net/neoforged/neoforge/client/model/renderable/BakedModelRenderable$Context</span><br><span class="line">net/minecraftforge/client/model/renderable/BakedModelRenderable net/neoforged/neoforge/client/model/renderable/BakedModelRenderable</span><br><span class="line">net/minecraftforge/client/model/renderable/CompositeRenderable$Builder net/neoforged/neoforge/client/model/renderable/CompositeRenderable$Builder</span><br><span class="line">net/minecraftforge/client/model/renderable/CompositeRenderable$Component net/neoforged/neoforge/client/model/renderable/CompositeRenderable$Component</span><br><span class="line">net/minecraftforge/client/model/renderable/CompositeRenderable$Mesh net/neoforged/neoforge/client/model/renderable/CompositeRenderable$Mesh</span><br><span class="line">net/minecraftforge/client/model/renderable/CompositeRenderable$PartBuilder net/neoforged/neoforge/client/model/renderable/CompositeRenderable$PartBuilder</span><br><span class="line">net/minecraftforge/client/model/renderable/CompositeRenderable$Transforms net/neoforged/neoforge/client/model/renderable/CompositeRenderable$Transforms</span><br><span class="line">net/minecraftforge/client/model/renderable/CompositeRenderable net/neoforged/neoforge/client/model/renderable/CompositeRenderable</span><br><span class="line">net/minecraftforge/client/model/renderable/IRenderable net/neoforged/neoforge/client/model/renderable/IRenderable</span><br><span class="line">net/minecraftforge/client/model/renderable/ITextureRenderTypeLookup net/neoforged/neoforge/client/model/renderable/ITextureRenderTypeLookup</span><br><span class="line">net/minecraftforge/client/settings/IKeyConflictContext net/neoforged/neoforge/client/settings/IKeyConflictContext</span><br><span class="line">net/minecraftforge/client/settings/KeyConflictContext$<span class="number">1</span> net/neoforged/neoforge/client/settings/KeyConflictContext$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/settings/KeyConflictContext$<span class="number">2</span> net/neoforged/neoforge/client/settings/KeyConflictContext$<span class="number">2</span></span><br><span class="line">net/minecraftforge/client/settings/KeyConflictContext$<span class="number">3</span> net/neoforged/neoforge/client/settings/KeyConflictContext$<span class="number">3</span></span><br><span class="line">net/minecraftforge/client/settings/KeyConflictContext net/neoforged/neoforge/client/settings/KeyConflictContext</span><br><span class="line">net/minecraftforge/client/settings/KeyMappingLookup net/neoforged/neoforge/client/settings/KeyMappingLookup</span><br><span class="line">net/minecraftforge/client/settings/KeyModifier$<span class="number">1</span> net/neoforged/neoforge/client/settings/KeyModifier$<span class="number">1</span></span><br><span class="line">net/minecraftforge/client/settings/KeyModifier$<span class="number">2</span> net/neoforged/neoforge/client/settings/KeyModifier$<span class="number">2</span></span><br><span class="line">net/minecraftforge/client/settings/KeyModifier$<span class="number">3</span> net/neoforged/neoforge/client/settings/KeyModifier$<span class="number">3</span></span><br><span class="line">net/minecraftforge/client/settings/KeyModifier$<span class="number">4</span> net/neoforged/neoforge/client/settings/KeyModifier$<span class="number">4</span></span><br><span class="line">net/minecraftforge/client/settings/KeyModifier net/neoforged/neoforge/client/settings/KeyModifier</span><br><span class="line">net/minecraftforge/client/textures/ForgeTextureMetadata$Serializer net/neoforged/neoforge/client/textures/ForgeTextureMetadata$Serializer</span><br><span class="line">net/minecraftforge/client/textures/ForgeTextureMetadata net/neoforged/neoforge/client/textures/ForgeTextureMetadata</span><br><span class="line">net/minecraftforge/client/textures/ITextureAtlasSpriteLoader net/neoforged/neoforge/client/textures/ITextureAtlasSpriteLoader</span><br><span class="line">net/minecraftforge/client/textures/TextureAtlasSpriteLoaderManager net/neoforged/neoforge/client/textures/TextureAtlasSpriteLoaderManager</span><br><span class="line">net/minecraftforge/client/textures/UnitTextureAtlasSprite net/neoforged/neoforge/client/textures/UnitTextureAtlasSprite</span><br><span class="line">net/minecraftforge/common/BasicItemListing net/neoforged/neoforge/common/BasicItemListing</span><br><span class="line">net/minecraftforge/common/BiomeManager$BiomeEntry net/neoforged/neoforge/common/BiomeManager$BiomeEntry</span><br><span class="line">net/minecraftforge/common/BiomeManager$BiomeType net/neoforged/neoforge/common/BiomeManager$BiomeType</span><br><span class="line">net/minecraftforge/common/BiomeManager$TrackedList net/neoforged/neoforge/common/BiomeManager$TrackedList</span><br><span class="line">net/minecraftforge/common/BiomeManager net/neoforged/neoforge/common/BiomeManager</span><br><span class="line">net/minecraftforge/common/CreativeModeTabRegistry$<span class="number">1</span> net/neoforged/neoforge/common/CreativeModeTabRegistry$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/CreativeModeTabRegistry net/neoforged/neoforge/common/CreativeModeTabRegistry</span><br><span class="line">net/minecraftforge/common/DungeonHooks$DungeonMob net/neoforged/neoforge/common/DungeonHooks$DungeonMob</span><br><span class="line">net/minecraftforge/common/DungeonHooks net/neoforged/neoforge/common/DungeonHooks</span><br><span class="line">net/minecraftforge/common/FarmlandWaterManager net/neoforged/neoforge/common/FarmlandWaterManager</span><br><span class="line">net/minecraftforge/common/ForgeConfig$Client net/neoforged/neoforge/common/NeoForgeConfig$Client</span><br><span class="line">net/minecraftforge/common/ForgeConfig$Common net/neoforged/neoforge/common/NeoForgeConfig$Common</span><br><span class="line">net/minecraftforge/common/ForgeConfig$Server net/neoforged/neoforge/common/NeoForgeConfig$Server</span><br><span class="line">net/minecraftforge/common/ForgeConfig net/neoforged/neoforge/common/NeoForgeConfig</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$BooleanValue net/neoforged/neoforge/common/NeoForgeConfigSpec$BooleanValue</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$Builder$<span class="number">1</span> net/neoforged/neoforge/common/NeoForgeConfigSpec$Builder$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$Builder$<span class="number">2</span> net/neoforged/neoforge/common/NeoForgeConfigSpec$Builder$<span class="number">2</span></span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$Builder$BuilderConsumer net/neoforged/neoforge/common/NeoForgeConfigSpec$Builder$BuilderConsumer</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$Builder net/neoforged/neoforge/common/NeoForgeConfigSpec$Builder</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$BuilderContext net/neoforged/neoforge/common/NeoForgeConfigSpec$BuilderContext</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$ConfigValue net/neoforged/neoforge/common/NeoForgeConfigSpec$ConfigValue</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$DoubleValue net/neoforged/neoforge/common/NeoForgeConfigSpec$DoubleValue</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$EnumValue net/neoforged/neoforge/common/NeoForgeConfigSpec$EnumValue</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$IntValue net/neoforged/neoforge/common/NeoForgeConfigSpec$IntValue</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$LongValue net/neoforged/neoforge/common/NeoForgeConfigSpec$LongValue</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$Range net/neoforged/neoforge/common/NeoForgeConfigSpec$Range</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec$ValueSpec net/neoforged/neoforge/common/NeoForgeConfigSpec$ValueSpec</span><br><span class="line">net/minecraftforge/common/ForgeConfigSpec net/neoforged/neoforge/common/NeoForgeConfigSpec</span><br><span class="line">net/minecraftforge/common/ForgeHooks$<span class="number">1</span> net/neoforged/neoforge/common/CommonHooks$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/ForgeHooks$<span class="number">2</span> net/neoforged/neoforge/common/CommonHooks$<span class="number">2</span></span><br><span class="line">net/minecraftforge/common/ForgeHooks$BiomeCallbackFunction net/neoforged/neoforge/common/CommonHooks$BiomeCallbackFunction</span><br><span class="line">net/minecraftforge/common/ForgeHooks$LootTableContext net/neoforged/neoforge/common/CommonHooks$LootTableContext</span><br><span class="line">net/minecraftforge/common/ForgeHooks net/neoforged/neoforge/common/CommonHooks</span><br><span class="line">net/minecraftforge/common/ForgeI18n$CustomReadOnlyFormat net/neoforged/neoforge/common/I18nExtension$CustomReadOnlyFormat</span><br><span class="line">net/minecraftforge/common/ForgeI18n net/neoforged/neoforge/common/I18nExtension</span><br><span class="line">net/minecraftforge/common/ForgeInternalHandler net/neoforged/neoforge/common/ForgeInternalHandler</span><br><span class="line">net/minecraftforge/common/ForgeMod$<span class="number">1</span> net/neoforged/neoforge/common/NeoForgeMod$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/ForgeMod$<span class="number">2</span>$<span class="number">1</span> net/neoforged/neoforge/common/NeoForgeMod$<span class="number">2</span>$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/ForgeMod$<span class="number">2</span> net/neoforged/neoforge/common/NeoForgeMod$<span class="number">2</span></span><br><span class="line">net/minecraftforge/common/ForgeMod$<span class="number">3</span>$<span class="number">1</span> net/neoforged/neoforge/common/NeoForgeMod$<span class="number">3</span>$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/ForgeMod$<span class="number">3</span> net/neoforged/neoforge/common/NeoForgeMod$<span class="number">3</span></span><br><span class="line">net/minecraftforge/common/ForgeMod$<span class="number">4</span>$<span class="number">1</span> net/neoforged/neoforge/common/NeoForgeMod$<span class="number">4</span>$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/ForgeMod$<span class="number">4</span> net/neoforged/neoforge/common/NeoForgeMod$<span class="number">4</span></span><br><span class="line">net/minecraftforge/common/ForgeMod net/neoforged/neoforge/common/NeoForgeMod</span><br><span class="line">net/minecraftforge/common/ForgeSpawnEggItem$ColorRegisterHandler net/neoforged/neoforge/common/DeferredSpawnEggItem$ColorRegisterHandler</span><br><span class="line">net/minecraftforge/common/ForgeSpawnEggItem$CommonHandler net/neoforged/neoforge/common/DeferredSpawnEggItem$CommonHandler</span><br><span class="line">net/minecraftforge/common/ForgeSpawnEggItem net/neoforged/neoforge/common/DeferredSpawnEggItem</span><br><span class="line">net/minecraftforge/common/ForgeStatesProvider net/neoforged/neoforge/common/ForgeStatesProvider</span><br><span class="line">net/minecraftforge/common/ForgeTier net/neoforged/neoforge/common/SimpleTier</span><br><span class="line">net/minecraftforge/common/IExtensibleEnum net/neoforged/neoforge/common/IExtensibleEnum</span><br><span class="line">net/minecraftforge/common/IForgeShearable net/neoforged/neoforge/common/IShearable</span><br><span class="line">net/minecraftforge/common/IMinecartCollisionHandler net/neoforged/neoforge/common/IMinecartCollisionHandler</span><br><span class="line">net/minecraftforge/common/IPlantable net/neoforged/neoforge/common/IPlantable</span><br><span class="line">net/minecraftforge/common/LenientUnboundedMapCodec net/neoforged/neoforge/common/LenientUnboundedMapCodec</span><br><span class="line">net/minecraftforge/common/MinecraftForge net/neoforged/neoforge/common/NeoForge</span><br><span class="line">net/minecraftforge/common/PlantType net/neoforged/neoforge/common/PlantType</span><br><span class="line">net/minecraftforge/common/SoundAction net/neoforged/neoforge/common/SoundAction</span><br><span class="line">net/minecraftforge/common/SoundActions net/neoforged/neoforge/common/SoundActions</span><br><span class="line">net/minecraftforge/common/Tags$Biomes net/neoforged/neoforge/common/Tags$Biomes</span><br><span class="line">net/minecraftforge/common/Tags$Blocks net/neoforged/neoforge/common/Tags$Blocks</span><br><span class="line">net/minecraftforge/common/Tags$EntityTypes net/neoforged/neoforge/common/Tags$EntityTypes</span><br><span class="line">net/minecraftforge/common/Tags$Fluids net/neoforged/neoforge/common/Tags$Fluids</span><br><span class="line">net/minecraftforge/common/Tags$Items net/neoforged/neoforge/common/Tags$Items</span><br><span class="line">net/minecraftforge/common/Tags net/neoforged/neoforge/common/Tags</span><br><span class="line">net/minecraftforge/common/TierSortingRegistry$<span class="number">1</span> net/neoforged/neoforge/common/TierSortingRegistry$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/TierSortingRegistry$ClientEvents net/neoforged/neoforge/common/TierSortingRegistry$ClientEvents</span><br><span class="line">net/minecraftforge/common/TierSortingRegistry$SyncPacket net/neoforged/neoforge/common/TierSortingRegistry$SyncPacket</span><br><span class="line">net/minecraftforge/common/TierSortingRegistry net/neoforged/neoforge/common/TierSortingRegistry</span><br><span class="line">net/minecraftforge/common/ToolAction net/neoforged/neoforge/common/ToolAction</span><br><span class="line">net/minecraftforge/common/ToolActions net/neoforged/neoforge/common/ToolActions</span><br><span class="line">net/minecraftforge/common/UsernameCache$<span class="number">1</span> net/neoforged/neoforge/common/UsernameCache$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/UsernameCache$SaveThread net/neoforged/neoforge/common/UsernameCache$SaveThread</span><br><span class="line">net/minecraftforge/common/UsernameCache net/neoforged/neoforge/common/UsernameCache</span><br><span class="line">net/minecraftforge/common/VillagerTradingManager net/neoforged/neoforge/common/VillagerTradingManager</span><br><span class="line">net/minecraftforge/common/WorldWorkerManager$IWorker net/neoforged/neoforge/common/WorldWorkerManager$IWorker</span><br><span class="line">net/minecraftforge/common/WorldWorkerManager net/neoforged/neoforge/common/WorldWorkerManager</span><br><span class="line">net/minecraftforge/common/brewing/BrewingRecipe net/neoforged/neoforge/common/brewing/BrewingRecipe</span><br><span class="line">net/minecraftforge/common/brewing/BrewingRecipeRegistry net/neoforged/neoforge/common/brewing/BrewingRecipeRegistry</span><br><span class="line">net/minecraftforge/common/brewing/IBrewingRecipe net/neoforged/neoforge/common/brewing/IBrewingRecipe</span><br><span class="line">net/minecraftforge/common/brewing/VanillaBrewingRecipe net/neoforged/neoforge/common/brewing/VanillaBrewingRecipe</span><br><span class="line">net/minecraftforge/common/brewing/<span class="keyword">package</span>-info net/neoforged/neoforge/common/brewing/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/common/capabilities/AutoRegisterCapability net/neoforged/neoforge/common/capabilities/AutoRegisterCapability</span><br><span class="line">net/minecraftforge/common/capabilities/Capability net/neoforged/neoforge/common/capabilities/Capability</span><br><span class="line">net/minecraftforge/common/capabilities/CapabilityDispatcher net/neoforged/neoforge/common/capabilities/CapabilityDispatcher</span><br><span class="line">net/minecraftforge/common/capabilities/CapabilityManager net/neoforged/neoforge/common/capabilities/CapabilityManager</span><br><span class="line">net/minecraftforge/common/capabilities/CapabilityProvider$AsField net/neoforged/neoforge/common/capabilities/CapabilityProvider$AsField</span><br><span class="line">net/minecraftforge/common/capabilities/CapabilityProvider net/neoforged/neoforge/common/capabilities/CapabilityProvider</span><br><span class="line">net/minecraftforge/common/capabilities/CapabilityToken net/neoforged/neoforge/common/capabilities/CapabilityToken</span><br><span class="line">net/minecraftforge/common/capabilities/ForgeCapabilities$<span class="number">1</span> net/neoforged/neoforge/common/capabilities/Capabilities$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/capabilities/ForgeCapabilities$<span class="number">2</span> net/neoforged/neoforge/common/capabilities/Capabilities$<span class="number">2</span></span><br><span class="line">net/minecraftforge/common/capabilities/ForgeCapabilities$<span class="number">3</span> net/neoforged/neoforge/common/capabilities/Capabilities$<span class="number">3</span></span><br><span class="line">net/minecraftforge/common/capabilities/ForgeCapabilities$<span class="number">4</span> net/neoforged/neoforge/common/capabilities/Capabilities$<span class="number">4</span></span><br><span class="line">net/minecraftforge/common/capabilities/ForgeCapabilities net/neoforged/neoforge/common/capabilities/Capabilities</span><br><span class="line">net/minecraftforge/common/capabilities/ICapabilityProvider net/neoforged/neoforge/common/capabilities/ICapabilityProvider</span><br><span class="line">net/minecraftforge/common/capabilities/ICapabilityProviderImpl net/neoforged/neoforge/common/capabilities/ICapabilityProviderImpl</span><br><span class="line">net/minecraftforge/common/capabilities/ICapabilitySerializable net/neoforged/neoforge/common/capabilities/ICapabilitySerializable</span><br><span class="line">net/minecraftforge/common/capabilities/RegisterCapabilitiesEvent net/neoforged/neoforge/common/capabilities/RegisterCapabilitiesEvent</span><br><span class="line">net/minecraftforge/common/command/EntitySelectorManager net/neoforged/neoforge/common/command/EntitySelectorManager</span><br><span class="line">net/minecraftforge/common/command/IEntitySelectorType net/neoforged/neoforge/common/command/IEntitySelectorType</span><br><span class="line">net/minecraftforge/common/crafting/AbstractIngredient net/neoforged/neoforge/common/crafting/AbstractIngredient</span><br><span class="line">net/minecraftforge/common/crafting/CompoundIngredient$Serializer net/neoforged/neoforge/common/crafting/CompoundIngredient$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/CompoundIngredient net/neoforged/neoforge/common/crafting/CompoundIngredient</span><br><span class="line">net/minecraftforge/common/crafting/ConditionalAdvancement$Builder net/neoforged/neoforge/common/crafting/ConditionalAdvancement$Builder</span><br><span class="line">net/minecraftforge/common/crafting/ConditionalAdvancement net/neoforged/neoforge/common/crafting/ConditionalAdvancement</span><br><span class="line">net/minecraftforge/common/crafting/ConditionalRecipe$Builder net/neoforged/neoforge/common/crafting/ConditionalRecipe$Builder</span><br><span class="line">net/minecraftforge/common/crafting/ConditionalRecipe$Finished net/neoforged/neoforge/common/crafting/ConditionalRecipe$Finished</span><br><span class="line">net/minecraftforge/common/crafting/ConditionalRecipe$Serializer net/neoforged/neoforge/common/crafting/ConditionalRecipe$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/ConditionalRecipe net/neoforged/neoforge/common/crafting/ConditionalRecipe</span><br><span class="line">net/minecraftforge/common/crafting/CraftingHelper net/neoforged/neoforge/common/crafting/CraftingHelper</span><br><span class="line">net/minecraftforge/common/crafting/DifferenceIngredient$Serializer net/neoforged/neoforge/common/crafting/DifferenceIngredient$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/DifferenceIngredient net/neoforged/neoforge/common/crafting/DifferenceIngredient</span><br><span class="line">net/minecraftforge/common/crafting/IIngredientSerializer net/neoforged/neoforge/common/crafting/IIngredientSerializer</span><br><span class="line">net/minecraftforge/common/crafting/IRecipeContainer net/neoforged/neoforge/common/crafting/IRecipeContainer</span><br><span class="line">net/minecraftforge/common/crafting/IShapedRecipe net/neoforged/neoforge/common/crafting/IShapedRecipe</span><br><span class="line">net/minecraftforge/common/crafting/IntersectionIngredient$Serializer net/neoforged/neoforge/common/crafting/IntersectionIngredient$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/IntersectionIngredient net/neoforged/neoforge/common/crafting/IntersectionIngredient</span><br><span class="line">net/minecraftforge/common/crafting/MultiItemValue net/neoforged/neoforge/common/crafting/MultiItemValue</span><br><span class="line">net/minecraftforge/common/crafting/PartialNBTIngredient$Serializer net/neoforged/neoforge/common/crafting/PartialNBTIngredient$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/PartialNBTIngredient net/neoforged/neoforge/common/crafting/PartialNBTIngredient</span><br><span class="line">net/minecraftforge/common/crafting/StrictNBTIngredient$Serializer net/neoforged/neoforge/common/crafting/StrictNBTIngredient$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/StrictNBTIngredient net/neoforged/neoforge/common/crafting/StrictNBTIngredient</span><br><span class="line">net/minecraftforge/common/crafting/VanillaIngredientSerializer net/neoforged/neoforge/common/crafting/VanillaIngredientSerializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/AndCondition$Serializer net/neoforged/neoforge/common/crafting/conditions/AndCondition$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/AndCondition net/neoforged/neoforge/common/crafting/conditions/AndCondition</span><br><span class="line">net/minecraftforge/common/crafting/conditions/ConditionContext net/neoforged/neoforge/common/crafting/conditions/ConditionContext</span><br><span class="line">net/minecraftforge/common/crafting/conditions/FalseCondition$Serializer net/neoforged/neoforge/common/crafting/conditions/FalseCondition$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/FalseCondition net/neoforged/neoforge/common/crafting/conditions/FalseCondition</span><br><span class="line">net/minecraftforge/common/crafting/conditions/ICondition$IContext$<span class="number">1</span> net/neoforged/neoforge/common/crafting/conditions/ICondition$IContext$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/crafting/conditions/ICondition$IContext$<span class="number">2</span> net/neoforged/neoforge/common/crafting/conditions/ICondition$IContext$<span class="number">2</span></span><br><span class="line">net/minecraftforge/common/crafting/conditions/ICondition$IContext net/neoforged/neoforge/common/crafting/conditions/ICondition$IContext</span><br><span class="line">net/minecraftforge/common/crafting/conditions/ICondition net/neoforged/neoforge/common/crafting/conditions/ICondition</span><br><span class="line">net/minecraftforge/common/crafting/conditions/IConditionBuilder net/neoforged/neoforge/common/crafting/conditions/IConditionBuilder</span><br><span class="line">net/minecraftforge/common/crafting/conditions/IConditionSerializer net/neoforged/neoforge/common/crafting/conditions/IConditionSerializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/ItemExistsCondition$Serializer net/neoforged/neoforge/common/crafting/conditions/ItemExistsCondition$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/ItemExistsCondition net/neoforged/neoforge/common/crafting/conditions/ItemExistsCondition</span><br><span class="line">net/minecraftforge/common/crafting/conditions/ModLoadedCondition$Serializer net/neoforged/neoforge/common/crafting/conditions/ModLoadedCondition$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/ModLoadedCondition net/neoforged/neoforge/common/crafting/conditions/ModLoadedCondition</span><br><span class="line">net/minecraftforge/common/crafting/conditions/NotCondition$Serializer net/neoforged/neoforge/common/crafting/conditions/NotCondition$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/NotCondition net/neoforged/neoforge/common/crafting/conditions/NotCondition</span><br><span class="line">net/minecraftforge/common/crafting/conditions/OrCondition$Serializer net/neoforged/neoforge/common/crafting/conditions/OrCondition$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/OrCondition net/neoforged/neoforge/common/crafting/conditions/OrCondition</span><br><span class="line">net/minecraftforge/common/crafting/conditions/TagEmptyCondition$Serializer net/neoforged/neoforge/common/crafting/conditions/TagEmptyCondition$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/TagEmptyCondition net/neoforged/neoforge/common/crafting/conditions/TagEmptyCondition</span><br><span class="line">net/minecraftforge/common/crafting/conditions/TrueCondition$Serializer net/neoforged/neoforge/common/crafting/conditions/TrueCondition$Serializer</span><br><span class="line">net/minecraftforge/common/crafting/conditions/TrueCondition net/neoforged/neoforge/common/crafting/conditions/TrueCondition</span><br><span class="line">net/minecraftforge/common/crafting/<span class="keyword">package</span>-info net/neoforged/neoforge/common/crafting/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/common/data/BlockTagsProvider net/neoforged/neoforge/common/data/BlockTagsProvider</span><br><span class="line">net/minecraftforge/common/data/DatapackBuiltinEntriesProvider net/neoforged/neoforge/common/data/DatapackBuiltinEntriesProvider</span><br><span class="line">net/minecraftforge/common/data/ExistingFileHelper$IResourceType net/neoforged/neoforge/common/data/ExistingFileHelper$IResourceType</span><br><span class="line">net/minecraftforge/common/data/ExistingFileHelper$ResourceType net/neoforged/neoforge/common/data/ExistingFileHelper$ResourceType</span><br><span class="line">net/minecraftforge/common/data/ExistingFileHelper net/neoforged/neoforge/common/data/ExistingFileHelper</span><br><span class="line">net/minecraftforge/common/data/ForgeAdvancementProvider$AdvancementGenerator net/neoforged/neoforge/common/data/ForgeAdvancementProvider$AdvancementGenerator</span><br><span class="line">net/minecraftforge/common/data/ForgeAdvancementProvider net/neoforged/neoforge/common/data/ForgeAdvancementProvider</span><br><span class="line">net/minecraftforge/common/data/ForgeBiomeTagsProvider net/neoforged/neoforge/common/data/ForgeBiomeTagsProvider</span><br><span class="line">net/minecraftforge/common/data/ForgeBlockTagsProvider net/neoforged/neoforge/common/data/ForgeBlockTagsProvider</span><br><span class="line">net/minecraftforge/common/data/ForgeEntityTypeTagsProvider net/neoforged/neoforge/common/data/ForgeEntityTypeTagsProvider</span><br><span class="line">net/minecraftforge/common/data/ForgeFluidTagsProvider net/neoforged/neoforge/common/data/ForgeFluidTagsProvider</span><br><span class="line">net/minecraftforge/common/data/ForgeItemTagsProvider net/neoforged/neoforge/common/data/ForgeItemTagsProvider</span><br><span class="line">net/minecraftforge/common/data/ForgeLootTableProvider net/neoforged/neoforge/common/data/ForgeLootTableProvider</span><br><span class="line">net/minecraftforge/common/data/ForgeRecipeProvider net/neoforged/neoforge/common/data/ForgeRecipeProvider</span><br><span class="line">net/minecraftforge/common/data/ForgeSpriteSourceProvider net/neoforged/neoforge/common/data/ForgeSpriteSourceProvider</span><br><span class="line">net/minecraftforge/common/data/GlobalLootModifierProvider net/neoforged/neoforge/common/data/GlobalLootModifierProvider</span><br><span class="line">net/minecraftforge/common/data/JsonCodecProvider net/neoforged/neoforge/common/data/JsonCodecProvider</span><br><span class="line">net/minecraftforge/common/data/LanguageProvider net/neoforged/neoforge/common/data/LanguageProvider</span><br><span class="line">net/minecraftforge/common/data/ParticleDescriptionProvider$<span class="number">1</span> net/neoforged/neoforge/common/data/ParticleDescriptionProvider$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/data/ParticleDescriptionProvider net/neoforged/neoforge/common/data/ParticleDescriptionProvider</span><br><span class="line">net/minecraftforge/common/data/SoundDefinition$Sound net/neoforged/neoforge/common/data/SoundDefinition$Sound</span><br><span class="line">net/minecraftforge/common/data/SoundDefinition$SoundType net/neoforged/neoforge/common/data/SoundDefinition$SoundType</span><br><span class="line">net/minecraftforge/common/data/SoundDefinition net/neoforged/neoforge/common/data/SoundDefinition</span><br><span class="line">net/minecraftforge/common/data/SoundDefinitionsProvider$<span class="number">1</span> net/neoforged/neoforge/common/data/SoundDefinitionsProvider$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/data/SoundDefinitionsProvider net/neoforged/neoforge/common/data/SoundDefinitionsProvider</span><br><span class="line">net/minecraftforge/common/data/SpriteSourceProvider$SourceList net/neoforged/neoforge/common/data/SpriteSourceProvider$SourceList</span><br><span class="line">net/minecraftforge/common/data/SpriteSourceProvider net/neoforged/neoforge/common/data/SpriteSourceProvider</span><br><span class="line">net/minecraftforge/common/data/VanillaSoundDefinitionsProvider net/neoforged/neoforge/common/data/VanillaSoundDefinitionsProvider</span><br><span class="line">net/minecraftforge/common/data/<span class="keyword">package</span>-info net/neoforged/neoforge/common/data/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/common/extensions/IForgeAbstractMinecart net/neoforged/neoforge/common/extensions/IAbstractMinecartExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeAdvancementBuilder net/neoforged/neoforge/common/extensions/IAdvancementBuilderExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeBaseRailBlock net/neoforged/neoforge/common/extensions/IBaseRailBlockExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeBlock net/neoforged/neoforge/common/extensions/IBlockExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeBlockEntity net/neoforged/neoforge/common/extensions/IBlockExtensionEntity</span><br><span class="line">net/minecraftforge/common/extensions/IForgeBlockGetter net/neoforged/neoforge/common/extensions/IBlockExtensionGetter</span><br><span class="line">net/minecraftforge/common/extensions/IForgeBlockState net/neoforged/neoforge/common/extensions/IBlockExtensionState</span><br><span class="line">net/minecraftforge/common/extensions/IForgeBoat net/neoforged/neoforge/common/extensions/IBoatExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeBucketPickup net/neoforged/neoforge/common/extensions/IBucketPickupExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeCommandSourceStack net/neoforged/neoforge/common/extensions/IBucketPickupExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeDispensibleContainerItem net/neoforged/neoforge/common/extensions/IDispensibleContainerItemExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeEnchantment net/neoforged/neoforge/common/extensions/IEnchantmentExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeEntity net/neoforged/neoforge/common/extensions/IEntityExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeFluid net/neoforged/neoforge/common/extensions/IFluidExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeFluidState net/neoforged/neoforge/common/extensions/IFluidExtensionState</span><br><span class="line">net/minecraftforge/common/extensions/IForgeFriendlyByteBuf net/neoforged/neoforge/common/extensions/IFriendlyByteBufExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeHolderSet$SerializationType net/neoforged/neoforge/common/extensions/IHolderSetExtension$SerializationType</span><br><span class="line">net/minecraftforge/common/extensions/IForgeHolderSet net/neoforged/neoforge/common/extensions/IHolderSetExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeIntrinsicHolderTagAppender net/neoforged/neoforge/common/extensions/IIntrinsicHolderTagAppenderExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeItem net/neoforged/neoforge/common/extensions/IItemExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeItemStack net/neoforged/neoforge/common/extensions/IItemExtensionStack</span><br><span class="line">net/minecraftforge/common/extensions/IForgeLevel net/neoforged/neoforge/common/extensions/ILevelExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeLevelChunk net/neoforged/neoforge/common/extensions/ILevelExtensionChunk</span><br><span class="line">net/minecraftforge/common/extensions/IForgeLivingEntity net/neoforged/neoforge/common/extensions/ILivingEntityExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeMenuType net/neoforged/neoforge/common/extensions/IMenuTypeExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeMobEffect net/neoforged/neoforge/common/extensions/IMobEffectExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeMobEffectInstance net/neoforged/neoforge/common/extensions/IMobEffectExtensionInstance</span><br><span class="line">net/minecraftforge/common/extensions/IForgePackResources net/neoforged/neoforge/common/extensions/IPackResourcesExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgePlayer net/neoforged/neoforge/common/extensions/IPlayerExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgePotion net/neoforged/neoforge/common/extensions/IForgePotion</span><br><span class="line">net/minecraftforge/common/extensions/IForgeRawTagBuilder net/neoforged/neoforge/common/extensions/ITagBuilderExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeRecipeSerializer net/neoforged/neoforge/common/extensions/IForgeRecipeSerializer</span><br><span class="line">net/minecraftforge/common/extensions/IForgeTagAppender net/neoforged/neoforge/common/extensions/ITagAppenderExtension</span><br><span class="line">net/minecraftforge/common/extensions/IForgeTransformation net/neoforged/neoforge/common/extensions/ITransformationExtension</span><br><span class="line">net/minecraftforge/common/loot/CanToolPerformAction$Serializer net/neoforged/neoforge/common/loot/CanToolPerformAction$Serializer</span><br><span class="line">net/minecraftforge/common/loot/CanToolPerformAction net/neoforged/neoforge/common/loot/CanToolPerformAction</span><br><span class="line">net/minecraftforge/common/loot/IGlobalLootModifier net/neoforged/neoforge/common/loot/IGlobalLootModifier</span><br><span class="line">net/minecraftforge/common/loot/LootModifier net/neoforged/neoforge/common/loot/LootModifier</span><br><span class="line">net/minecraftforge/common/loot/LootModifierManager net/neoforged/neoforge/common/loot/LootModifierManager</span><br><span class="line">net/minecraftforge/common/loot/LootTableIdCondition$Builder net/neoforged/neoforge/common/loot/LootTableIdCondition$Builder</span><br><span class="line">net/minecraftforge/common/loot/LootTableIdCondition$Serializer net/neoforged/neoforge/common/loot/LootTableIdCondition$Serializer</span><br><span class="line">net/minecraftforge/common/loot/LootTableIdCondition net/neoforged/neoforge/common/loot/LootTableIdCondition</span><br><span class="line">net/minecraftforge/common/property/Properties net/neoforged/neoforge/common/property/Properties</span><br><span class="line">net/minecraftforge/common/ticket/AABBTicket net/neoforged/neoforge/common/ticket/AABBTicket</span><br><span class="line">net/minecraftforge/common/ticket/ChunkTicketManager net/neoforged/neoforge/common/ticket/ChunkTicketManager</span><br><span class="line">net/minecraftforge/common/ticket/ITicketGetter net/neoforged/neoforge/common/ticket/ITicketGetter</span><br><span class="line">net/minecraftforge/common/ticket/ITicketManager net/neoforged/neoforge/common/ticket/ITicketManager</span><br><span class="line">net/minecraftforge/common/ticket/SimpleTicket net/neoforged/neoforge/common/ticket/SimpleTicket</span><br><span class="line">net/minecraftforge/common/util/BlockSnapshot net/neoforged/neoforge/common/util/BlockSnapshot</span><br><span class="line">net/minecraftforge/common/util/CenterChunkPosComparator net/neoforged/neoforge/common/util/CenterChunkPosComparator</span><br><span class="line">net/minecraftforge/common/util/ConcatenatedListView net/neoforged/neoforge/common/util/ConcatenatedListView</span><br><span class="line">net/minecraftforge/common/util/DummySavedData net/neoforged/neoforge/common/util/DummySavedData</span><br><span class="line">net/minecraftforge/common/util/FakePlayer$FakePlayerNetHandler net/neoforged/neoforge/common/util/FakePlayer$FakePlayerNetHandler</span><br><span class="line">net/minecraftforge/common/util/FakePlayer net/neoforged/neoforge/common/util/FakePlayer</span><br><span class="line">net/minecraftforge/common/util/FakePlayerFactory$FakePlayerKey net/neoforged/neoforge/common/util/FakePlayerFactory$FakePlayerKey</span><br><span class="line">net/minecraftforge/common/util/FakePlayerFactory net/neoforged/neoforge/common/util/FakePlayerFactory</span><br><span class="line">net/minecraftforge/common/util/ForgeSoundType net/neoforged/neoforge/common/util/DeferredSoundType</span><br><span class="line">net/minecraftforge/common/util/HexDumper$Instance net/neoforged/neoforge/common/util/HexDumper$Instance</span><br><span class="line">net/minecraftforge/common/util/HexDumper net/neoforged/neoforge/common/util/HexDumper</span><br><span class="line">net/minecraftforge/common/util/INBTSerializable net/neoforged/neoforge/common/util/INBTSerializable</span><br><span class="line">net/minecraftforge/common/util/ITeleporter net/neoforged/neoforge/common/util/ITeleporter</span><br><span class="line">net/minecraftforge/common/util/ItemStackMap net/neoforged/neoforge/common/util/ItemStackMap</span><br><span class="line">net/minecraftforge/common/util/JsonUtils$<span class="number">1</span> net/neoforged/neoforge/common/util/JsonUtils$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/util/JsonUtils$<span class="number">2</span> net/neoforged/neoforge/common/util/JsonUtils$<span class="number">2</span></span><br><span class="line">net/minecraftforge/common/util/JsonUtils$<span class="number">3</span> net/neoforged/neoforge/common/util/JsonUtils$<span class="number">3</span></span><br><span class="line">net/minecraftforge/common/util/JsonUtils$<span class="number">4</span> net/neoforged/neoforge/common/util/JsonUtils$<span class="number">4</span></span><br><span class="line">net/minecraftforge/common/util/JsonUtils$ImmutableListTypeAdapter net/neoforged/neoforge/common/util/JsonUtils$ImmutableListTypeAdapter</span><br><span class="line">net/minecraftforge/common/util/JsonUtils$ImmutableMapTypeAdapter net/neoforged/neoforge/common/util/JsonUtils$ImmutableMapTypeAdapter</span><br><span class="line">net/minecraftforge/common/util/JsonUtils net/neoforged/neoforge/common/util/JsonUtils</span><br><span class="line">net/minecraftforge/common/util/Lazy$Concurrent net/neoforged/neoforge/common/util/Lazy$Concurrent</span><br><span class="line">net/minecraftforge/common/util/Lazy$Fast net/neoforged/neoforge/common/util/Lazy$Fast</span><br><span class="line">net/minecraftforge/common/util/Lazy net/neoforged/neoforge/common/util/Lazy</span><br><span class="line">net/minecraftforge/common/util/LazyOptional net/neoforged/neoforge/common/util/LazyOptional</span><br><span class="line">net/minecraftforge/common/util/LevelCapabilityData net/neoforged/neoforge/common/util/LevelCapabilityData</span><br><span class="line">net/minecraftforge/common/util/LogMessageAdapter net/neoforged/neoforge/common/util/LogMessageAdapter</span><br><span class="line">net/minecraftforge/common/util/LogicalSidedProvider net/neoforged/neoforge/common/util/LogicalSidedProvider</span><br><span class="line">net/minecraftforge/common/util/MavenVersionStringHelper net/neoforged/neoforge/common/util/MavenVersionStringHelper</span><br><span class="line">net/minecraftforge/common/util/MutableHashedLinkedMap$<span class="number">1</span> net/neoforged/neoforge/common/util/MutableHashedLinkedMap$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/util/MutableHashedLinkedMap$BasicStrategy net/neoforged/neoforge/common/util/MutableHashedLinkedMap$BasicStrategy</span><br><span class="line">net/minecraftforge/common/util/MutableHashedLinkedMap$Entry net/neoforged/neoforge/common/util/MutableHashedLinkedMap$Entry</span><br><span class="line">net/minecraftforge/common/util/MutableHashedLinkedMap$IdentityStrategy net/neoforged/neoforge/common/util/MutableHashedLinkedMap$IdentityStrategy</span><br><span class="line">net/minecraftforge/common/util/MutableHashedLinkedMap$MergeFunction net/neoforged/neoforge/common/util/MutableHashedLinkedMap$MergeFunction</span><br><span class="line">net/minecraftforge/common/util/MutableHashedLinkedMap net/neoforged/neoforge/common/util/MutableHashedLinkedMap</span><br><span class="line">net/minecraftforge/common/util/NonNullConsumer net/neoforged/neoforge/common/util/NonNullConsumer</span><br><span class="line">net/minecraftforge/common/util/NonNullFunction net/neoforged/neoforge/common/util/NonNullFunction</span><br><span class="line">net/minecraftforge/common/util/NonNullLazy net/neoforged/neoforge/common/util/NonNullLazy</span><br><span class="line">net/minecraftforge/common/util/NonNullPredicate net/neoforged/neoforge/common/util/NonNullPredicate</span><br><span class="line">net/minecraftforge/common/util/NonNullSupplier net/neoforged/neoforge/common/util/NonNullSupplier</span><br><span class="line">net/minecraftforge/common/util/RecipeMatcher net/neoforged/neoforge/common/util/RecipeMatcher</span><br><span class="line">net/minecraftforge/common/util/Size2i net/neoforged/neoforge/common/util/Size2i</span><br><span class="line">net/minecraftforge/common/util/SortedProperties net/neoforged/neoforge/common/util/SortedProperties</span><br><span class="line">net/minecraftforge/common/util/TablePrinter$Header net/neoforged/neoforge/common/util/TablePrinter$Header</span><br><span class="line">net/minecraftforge/common/util/TablePrinter net/neoforged/neoforge/common/util/TablePrinter</span><br><span class="line">net/minecraftforge/common/util/TextTable$<span class="number">1</span> net/neoforged/neoforge/common/util/TextTable$<span class="number">1</span></span><br><span class="line">net/minecraftforge/common/util/TextTable$Alignment net/neoforged/neoforge/common/util/TextTable$Alignment</span><br><span class="line">net/minecraftforge/common/util/TextTable$Column net/neoforged/neoforge/common/util/TextTable$Column</span><br><span class="line">net/minecraftforge/common/util/TextTable$Row net/neoforged/neoforge/common/util/TextTable$Row</span><br><span class="line">net/minecraftforge/common/util/TextTable net/neoforged/neoforge/common/util/TextTable</span><br><span class="line">net/minecraftforge/common/util/TransformationHelper$Deserializer net/neoforged/neoforge/common/util/TransformationHelper$Deserializer</span><br><span class="line">net/minecraftforge/common/util/TransformationHelper$TransformOrigin net/neoforged/neoforge/common/util/TransformationHelper$TransformOrigin</span><br><span class="line">net/minecraftforge/common/util/TransformationHelper net/neoforged/neoforge/common/util/TransformationHelper</span><br><span class="line">net/minecraftforge/common/util/TriPredicate net/neoforged/neoforge/common/util/TriPredicate</span><br><span class="line">net/minecraftforge/common/world/BiomeGenerationSettingsBuilder net/neoforged/neoforge/common/world/BiomeGenerationSettingsBuilder</span><br><span class="line">net/minecraftforge/common/world/BiomeModifier$Phase net/neoforged/neoforge/common/world/BiomeModifier$Phase</span><br><span class="line">net/minecraftforge/common/world/BiomeModifier net/neoforged/neoforge/common/world/BiomeModifier</span><br><span class="line">net/minecraftforge/common/world/BiomeSpecialEffectsBuilder net/neoforged/neoforge/common/world/BiomeSpecialEffectsBuilder</span><br><span class="line">net/minecraftforge/common/world/ClimateSettingsBuilder net/neoforged/neoforge/common/world/ClimateSettingsBuilder</span><br><span class="line">net/minecraftforge/common/world/ForgeBiomeModifiers$AddFeaturesBiomeModifier net/neoforged/neoforge/common/world/BiomeModifiers$AddFeaturesBiomeModifier</span><br><span class="line">net/minecraftforge/common/world/ForgeBiomeModifiers$AddSpawnsBiomeModifier net/neoforged/neoforge/common/world/BiomeModifiers$AddSpawnsBiomeModifier</span><br><span class="line">net/minecraftforge/common/world/ForgeBiomeModifiers$RemoveFeaturesBiomeModifier net/neoforged/neoforge/common/world/BiomeModifiers$RemoveFeaturesBiomeModifier</span><br><span class="line">net/minecraftforge/common/world/ForgeBiomeModifiers$RemoveSpawnsBiomeModifier net/neoforged/neoforge/common/world/BiomeModifiers$RemoveSpawnsBiomeModifier</span><br><span class="line">net/minecraftforge/common/world/ForgeBiomeModifiers net/neoforged/neoforge/common/world/BiomeModifiers</span><br><span class="line">net/minecraftforge/common/world/ForgeChunkManager$LoadingValidationCallback net/neoforged/neoforge/common/world/ForcedChunkManager$LoadingValidationCallback</span><br><span class="line">net/minecraftforge/common/world/ForgeChunkManager$TicketHelper net/neoforged/neoforge/common/world/ForcedChunkManager$TicketHelper</span><br><span class="line">net/minecraftforge/common/world/ForgeChunkManager$TicketOwner net/neoforged/neoforge/common/world/ForcedChunkManager$TicketOwner</span><br><span class="line">net/minecraftforge/common/world/ForgeChunkManager$TicketTracker net/neoforged/neoforge/common/world/ForcedChunkManager$TicketTracker</span><br><span class="line">net/minecraftforge/common/world/ForgeChunkManager net/neoforged/neoforge/common/world/ForcedChunkManager</span><br><span class="line">net/minecraftforge/common/world/MobSpawnSettingsBuilder net/neoforged/neoforge/common/world/MobSpawnSettingsBuilder</span><br><span class="line">net/minecraftforge/common/world/ModifiableBiomeInfo$BiomeInfo$Builder net/neoforged/neoforge/common/world/ModifiableBiomeInfo$BiomeInfo$Builder</span><br><span class="line">net/minecraftforge/common/world/ModifiableBiomeInfo$BiomeInfo net/neoforged/neoforge/common/world/ModifiableBiomeInfo$BiomeInfo</span><br><span class="line">net/minecraftforge/common/world/ModifiableBiomeInfo net/neoforged/neoforge/common/world/ModifiableBiomeInfo</span><br><span class="line">net/minecraftforge/common/world/ModifiableStructureInfo$StructureInfo$Builder net/neoforged/neoforge/common/world/ModifiableStructureInfo$StructureInfo$Builder</span><br><span class="line">net/minecraftforge/common/world/ModifiableStructureInfo$StructureInfo net/neoforged/neoforge/common/world/ModifiableStructureInfo$StructureInfo</span><br><span class="line">net/minecraftforge/common/world/ModifiableStructureInfo net/neoforged/neoforge/common/world/ModifiableStructureInfo</span><br><span class="line">net/minecraftforge/common/world/NoneBiomeModifier net/neoforged/neoforge/common/world/NoneBiomeModifier</span><br><span class="line">net/minecraftforge/common/world/NoneStructureModifier net/neoforged/neoforge/common/world/NoneStructureModifier</span><br><span class="line">net/minecraftforge/common/world/PieceBeardifierModifier net/neoforged/neoforge/common/world/PieceBeardifierModifier</span><br><span class="line">net/minecraftforge/common/world/StructureModifier$Phase net/neoforged/neoforge/common/world/StructureModifier$Phase</span><br><span class="line">net/minecraftforge/common/world/StructureModifier net/neoforged/neoforge/common/world/StructureModifier</span><br><span class="line">net/minecraftforge/common/world/StructureSettingsBuilder$StructureSpawnOverrideBuilder net/neoforged/neoforge/common/world/StructureSettingsBuilder$StructureSpawnOverrideBuilder</span><br><span class="line">net/minecraftforge/common/world/StructureSettingsBuilder net/neoforged/neoforge/common/world/StructureSettingsBuilder</span><br><span class="line">net/minecraftforge/data/event/GatherDataEvent$DataGeneratorConfig net/neoforged/neoforge/data/event/GatherDataEvent$DataGeneratorConfig</span><br><span class="line">net/minecraftforge/data/event/GatherDataEvent net/neoforged/neoforge/data/event/GatherDataEvent</span><br><span class="line">net/minecraftforge/data/loading/DatagenModLoader net/neoforged/neoforge/data/loading/DatagenModLoader</span><br><span class="line">net/minecraftforge/energy/EmptyEnergyStorage net/neoforged/neoforge/energy/EmptyEnergyStorage</span><br><span class="line">net/minecraftforge/energy/EnergyStorage net/neoforged/neoforge/energy/EnergyStorage</span><br><span class="line">net/minecraftforge/energy/IEnergyStorage net/neoforged/neoforge/energy/IEnergyStorage</span><br><span class="line">net/minecraftforge/entity/IEntityAdditionalSpawnData net/neoforged/neoforge/entity/IEntityAdditionalSpawnData</span><br><span class="line">net/minecraftforge/entity/PartEntity net/neoforged/neoforge/entity/PartEntity</span><br><span class="line">net/minecraftforge/event/AddPackFindersEvent net/neoforged/neoforge/event/AddPackFindersEvent</span><br><span class="line">net/minecraftforge/event/AddReloadListenerEvent$WrappedStateAwareListener net/neoforged/neoforge/event/AddReloadListenerEvent$WrappedStateAwareListener</span><br><span class="line">net/minecraftforge/event/AddReloadListenerEvent net/neoforged/neoforge/event/AddReloadListenerEvent</span><br><span class="line">net/minecraftforge/event/AnvilUpdateEvent net/neoforged/neoforge/event/AnvilUpdateEvent</span><br><span class="line">net/minecraftforge/event/AttachCapabilitiesEvent net/neoforged/neoforge/event/AttachCapabilitiesEvent</span><br><span class="line">net/minecraftforge/event/BuildCreativeModeTabContentsEvent net/neoforged/neoforge/event/BuildCreativeModeTabContentsEvent</span><br><span class="line">net/minecraftforge/event/CommandEvent net/neoforged/neoforge/event/CommandEvent</span><br><span class="line">net/minecraftforge/event/DifficultyChangeEvent net/neoforged/neoforge/event/DifficultyChangeEvent</span><br><span class="line">net/minecraftforge/event/ForgeEventFactory net/neoforged/neoforge/event/EventHooks</span><br><span class="line">net/minecraftforge/event/GameShuttingDownEvent net/neoforged/neoforge/event/GameShuttingDownEvent</span><br><span class="line">net/minecraftforge/event/GrindstoneEvent$OnPlaceItem net/neoforged/neoforge/event/GrindstoneEvent$OnPlaceItem</span><br><span class="line">net/minecraftforge/event/GrindstoneEvent$OnTakeItem net/neoforged/neoforge/event/GrindstoneEvent$OnTakeItem</span><br><span class="line">net/minecraftforge/event/GrindstoneEvent net/neoforged/neoforge/event/GrindstoneEvent</span><br><span class="line">net/minecraftforge/event/ItemAttributeModifierEvent net/neoforged/neoforge/event/ItemAttributeModifierEvent</span><br><span class="line">net/minecraftforge/event/ItemStackedOnOtherEvent net/neoforged/neoforge/event/ItemStackedOnOtherEvent</span><br><span class="line">net/minecraftforge/event/LootTableLoadEvent net/neoforged/neoforge/event/LootTableLoadEvent</span><br><span class="line">net/minecraftforge/event/ModMismatchEvent$MismatchResolutionResult net/neoforged/neoforge/event/ModMismatchEvent$MismatchResolutionResult</span><br><span class="line">net/minecraftforge/event/ModMismatchEvent$MismatchedVersionInfo net/neoforged/neoforge/event/ModMismatchEvent$MismatchedVersionInfo</span><br><span class="line">net/minecraftforge/event/ModMismatchEvent net/neoforged/neoforge/event/ModMismatchEvent</span><br><span class="line">net/minecraftforge/event/OnDatapackSyncEvent net/neoforged/neoforge/event/OnDatapackSyncEvent</span><br><span class="line">net/minecraftforge/event/PlayLevelSoundEvent$AtEntity net/neoforged/neoforge/event/PlayLevelSoundEvent$AtEntity</span><br><span class="line">net/minecraftforge/event/PlayLevelSoundEvent$AtPosition net/neoforged/neoforge/event/PlayLevelSoundEvent$AtPosition</span><br><span class="line">net/minecraftforge/event/PlayLevelSoundEvent net/neoforged/neoforge/event/PlayLevelSoundEvent</span><br><span class="line">net/minecraftforge/event/RegisterCommandsEvent net/neoforged/neoforge/event/RegisterCommandsEvent</span><br><span class="line">net/minecraftforge/event/RegisterGameTestsEvent net/neoforged/neoforge/event/RegisterGameTestsEvent</span><br><span class="line">net/minecraftforge/event/RegisterStructureConversionsEvent net/neoforged/neoforge/event/RegisterStructureConversionsEvent</span><br><span class="line">net/minecraftforge/event/ServerChatEvent net/neoforged/neoforge/event/ServerChatEvent</span><br><span class="line">net/minecraftforge/event/TagsUpdatedEvent$UpdateCause net/neoforged/neoforge/event/TagsUpdatedEvent$UpdateCause</span><br><span class="line">net/minecraftforge/event/TagsUpdatedEvent net/neoforged/neoforge/event/TagsUpdatedEvent</span><br><span class="line">net/minecraftforge/event/TickEvent$ClientTickEvent net/neoforged/neoforge/event/TickEvent$ClientTickEvent</span><br><span class="line">net/minecraftforge/event/TickEvent$LevelTickEvent net/neoforged/neoforge/event/TickEvent$LevelTickEvent</span><br><span class="line">net/minecraftforge/event/TickEvent$Phase net/neoforged/neoforge/event/TickEvent$Phase</span><br><span class="line">net/minecraftforge/event/TickEvent$PlayerTickEvent net/neoforged/neoforge/event/TickEvent$PlayerTickEvent</span><br><span class="line">net/minecraftforge/event/TickEvent$RenderTickEvent net/neoforged/neoforge/event/TickEvent$RenderTickEvent</span><br><span class="line">net/minecraftforge/event/TickEvent$ServerTickEvent net/neoforged/neoforge/event/TickEvent$ServerTickEvent</span><br><span class="line">net/minecraftforge/event/TickEvent$Type net/neoforged/neoforge/event/TickEvent$Type</span><br><span class="line">net/minecraftforge/event/TickEvent net/neoforged/neoforge/event/TickEvent</span><br><span class="line">net/minecraftforge/event/VanillaGameEvent net/neoforged/neoforge/event/VanillaGameEvent</span><br><span class="line">net/minecraftforge/event/brewing/PlayerBrewedPotionEvent net/neoforged/neoforge/event/brewing/PlayerBrewedPotionEvent</span><br><span class="line">net/minecraftforge/event/brewing/PotionBrewEvent$Post net/neoforged/neoforge/event/brewing/PotionBrewEvent$Post</span><br><span class="line">net/minecraftforge/event/brewing/PotionBrewEvent$Pre net/neoforged/neoforge/event/brewing/PotionBrewEvent$Pre</span><br><span class="line">net/minecraftforge/event/brewing/PotionBrewEvent net/neoforged/neoforge/event/brewing/PotionBrewEvent</span><br><span class="line">net/minecraftforge/event/enchanting/EnchantmentLevelSetEvent net/neoforged/neoforge/event/enchanting/EnchantmentLevelSetEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityAttributeCreationEvent net/neoforged/neoforge/event/entity/EntityAttributeCreationEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityAttributeModificationEvent net/neoforged/neoforge/event/entity/EntityAttributeModificationEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityEvent$EnteringSection net/neoforged/neoforge/event/entity/EntityEvent$EnteringSection</span><br><span class="line">net/minecraftforge/event/entity/EntityEvent$EntityConstructing net/neoforged/neoforge/event/entity/EntityEvent$EntityConstructing</span><br><span class="line">net/minecraftforge/event/entity/EntityEvent$Size net/neoforged/neoforge/event/entity/EntityEvent$Size</span><br><span class="line">net/minecraftforge/event/entity/EntityEvent net/neoforged/neoforge/event/entity/EntityEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityJoinLevelEvent net/neoforged/neoforge/event/entity/EntityJoinLevelEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityLeaveLevelEvent net/neoforged/neoforge/event/entity/EntityLeaveLevelEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityMobGriefingEvent net/neoforged/neoforge/event/entity/EntityMobGriefingEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityMountEvent net/neoforged/neoforge/event/entity/EntityMountEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityStruckByLightningEvent net/neoforged/neoforge/event/entity/EntityStruckByLightningEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityTeleportEvent$ChorusFruit net/neoforged/neoforge/event/entity/EntityTeleportEvent$ChorusFruit</span><br><span class="line">net/minecraftforge/event/entity/EntityTeleportEvent$EnderEntity net/neoforged/neoforge/event/entity/EntityTeleportEvent$EnderEntity</span><br><span class="line">net/minecraftforge/event/entity/EntityTeleportEvent$EnderPearl net/neoforged/neoforge/event/entity/EntityTeleportEvent$EnderPearl</span><br><span class="line">net/minecraftforge/event/entity/EntityTeleportEvent$SpreadPlayersCommand net/neoforged/neoforge/event/entity/EntityTeleportEvent$SpreadPlayersCommand</span><br><span class="line">net/minecraftforge/event/entity/EntityTeleportEvent$TeleportCommand net/neoforged/neoforge/event/entity/EntityTeleportEvent$TeleportCommand</span><br><span class="line">net/minecraftforge/event/entity/EntityTeleportEvent net/neoforged/neoforge/event/entity/EntityTeleportEvent</span><br><span class="line">net/minecraftforge/event/entity/EntityTravelToDimensionEvent net/neoforged/neoforge/event/entity/EntityTravelToDimensionEvent</span><br><span class="line">net/minecraftforge/event/entity/ProjectileImpactEvent net/neoforged/neoforge/event/entity/ProjectileImpactEvent</span><br><span class="line">net/minecraftforge/event/entity/SpawnPlacementRegisterEvent$MergedSpawnPredicate net/neoforged/neoforge/event/entity/SpawnPlacementRegisterEvent$MergedSpawnPredicate</span><br><span class="line">net/minecraftforge/event/entity/SpawnPlacementRegisterEvent$Operation net/neoforged/neoforge/event/entity/SpawnPlacementRegisterEvent$Operation</span><br><span class="line">net/minecraftforge/event/entity/SpawnPlacementRegisterEvent net/neoforged/neoforge/event/entity/SpawnPlacementRegisterEvent</span><br><span class="line">net/minecraftforge/event/entity/item/ItemEvent net/neoforged/neoforge/event/entity/item/ItemEvent</span><br><span class="line">net/minecraftforge/event/entity/item/ItemExpireEvent net/neoforged/neoforge/event/entity/item/ItemExpireEvent</span><br><span class="line">net/minecraftforge/event/entity/item/ItemTossEvent net/neoforged/neoforge/event/entity/item/ItemTossEvent</span><br><span class="line">net/minecraftforge/event/entity/living/AnimalTameEvent net/neoforged/neoforge/event/entity/living/AnimalTameEvent</span><br><span class="line">net/minecraftforge/event/entity/living/BabyEntitySpawnEvent net/neoforged/neoforge/event/entity/living/BabyEntitySpawnEvent</span><br><span class="line">net/minecraftforge/event/entity/living/EnderManAngerEvent net/neoforged/neoforge/event/entity/living/EnderManAngerEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingAttackEvent net/neoforged/neoforge/event/entity/living/LivingAttackEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingBreatheEvent net/neoforged/neoforge/event/entity/living/LivingBreatheEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingChangeTargetEvent$ILivingTargetType net/neoforged/neoforge/event/entity/living/LivingChangeTargetEvent$ILivingTargetType</span><br><span class="line">net/minecraftforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType net/neoforged/neoforge/event/entity/living/LivingChangeTargetEvent$LivingTargetType</span><br><span class="line">net/minecraftforge/event/entity/living/LivingChangeTargetEvent net/neoforged/neoforge/event/entity/living/LivingChangeTargetEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingConversionEvent$Post net/neoforged/neoforge/event/entity/living/LivingConversionEvent$Post</span><br><span class="line">net/minecraftforge/event/entity/living/LivingConversionEvent$Pre net/neoforged/neoforge/event/entity/living/LivingConversionEvent$Pre</span><br><span class="line">net/minecraftforge/event/entity/living/LivingConversionEvent net/neoforged/neoforge/event/entity/living/LivingConversionEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingDamageEvent net/neoforged/neoforge/event/entity/living/LivingDamageEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingDeathEvent net/neoforged/neoforge/event/entity/living/LivingDeathEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingDestroyBlockEvent net/neoforged/neoforge/event/entity/living/LivingDestroyBlockEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingDropsEvent net/neoforged/neoforge/event/entity/living/LivingDropsEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingDrownEvent net/neoforged/neoforge/event/entity/living/LivingDrownEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEntityUseItemEvent$Finish net/neoforged/neoforge/event/entity/living/LivingEntityUseItemEvent$Finish</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEntityUseItemEvent$Start net/neoforged/neoforge/event/entity/living/LivingEntityUseItemEvent$Start</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEntityUseItemEvent$Stop net/neoforged/neoforge/event/entity/living/LivingEntityUseItemEvent$Stop</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEntityUseItemEvent$Tick net/neoforged/neoforge/event/entity/living/LivingEntityUseItemEvent$Tick</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEntityUseItemEvent net/neoforged/neoforge/event/entity/living/LivingEntityUseItemEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEquipmentChangeEvent net/neoforged/neoforge/event/entity/living/LivingEquipmentChangeEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEvent$LivingJumpEvent net/neoforged/neoforge/event/entity/living/LivingEvent$LivingJumpEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEvent$LivingTickEvent net/neoforged/neoforge/event/entity/living/LivingEvent$LivingTickEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEvent$LivingVisibilityEvent net/neoforged/neoforge/event/entity/living/LivingEvent$LivingVisibilityEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingEvent net/neoforged/neoforge/event/entity/living/LivingEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingExperienceDropEvent net/neoforged/neoforge/event/entity/living/LivingExperienceDropEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingFallEvent net/neoforged/neoforge/event/entity/living/LivingFallEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingGetProjectileEvent net/neoforged/neoforge/event/entity/living/LivingGetProjectileEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingHealEvent net/neoforged/neoforge/event/entity/living/LivingHealEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingHurtEvent net/neoforged/neoforge/event/entity/living/LivingHurtEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingKnockBackEvent net/neoforged/neoforge/event/entity/living/LivingKnockBackEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingPackSizeEvent net/neoforged/neoforge/event/entity/living/LivingPackSizeEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingSwapItemsEvent$Hands net/neoforged/neoforge/event/entity/living/LivingSwapItemsEvent$Hands</span><br><span class="line">net/minecraftforge/event/entity/living/LivingSwapItemsEvent net/neoforged/neoforge/event/entity/living/LivingSwapItemsEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LivingUseTotemEvent net/neoforged/neoforge/event/entity/living/LivingUseTotemEvent</span><br><span class="line">net/minecraftforge/event/entity/living/LootingLevelEvent net/neoforged/neoforge/event/entity/living/LootingLevelEvent</span><br><span class="line">net/minecraftforge/event/entity/living/MobEffectEvent$Added net/neoforged/neoforge/event/entity/living/MobEffectEvent$Added</span><br><span class="line">net/minecraftforge/event/entity/living/MobEffectEvent$Applicable net/neoforged/neoforge/event/entity/living/MobEffectEvent$Applicable</span><br><span class="line">net/minecraftforge/event/entity/living/MobEffectEvent$Expired net/neoforged/neoforge/event/entity/living/MobEffectEvent$Expired</span><br><span class="line">net/minecraftforge/event/entity/living/MobEffectEvent$Remove net/neoforged/neoforge/event/entity/living/MobEffectEvent$Remove</span><br><span class="line">net/minecraftforge/event/entity/living/MobEffectEvent net/neoforged/neoforge/event/entity/living/MobEffectEvent</span><br><span class="line">net/minecraftforge/event/entity/living/MobSpawnEvent$AllowDespawn net/neoforged/neoforge/event/entity/living/MobSpawnEvent$AllowDespawn</span><br><span class="line">net/minecraftforge/event/entity/living/MobSpawnEvent$FinalizeSpawn net/neoforged/neoforge/event/entity/living/MobSpawnEvent$FinalizeSpawn</span><br><span class="line">net/minecraftforge/event/entity/living/MobSpawnEvent$PositionCheck net/neoforged/neoforge/event/entity/living/MobSpawnEvent$PositionCheck</span><br><span class="line">net/minecraftforge/event/entity/living/MobSpawnEvent$SpawnPlacementCheck net/neoforged/neoforge/event/entity/living/MobSpawnEvent$SpawnPlacementCheck</span><br><span class="line">net/minecraftforge/event/entity/living/MobSpawnEvent net/neoforged/neoforge/event/entity/living/MobSpawnEvent</span><br><span class="line">net/minecraftforge/event/entity/living/PotionColorCalculationEvent net/neoforged/neoforge/event/entity/living/PotionColorCalculationEvent</span><br><span class="line">net/minecraftforge/event/entity/living/ShieldBlockEvent net/neoforged/neoforge/event/entity/living/ShieldBlockEvent</span><br><span class="line">net/minecraftforge/event/entity/living/ZombieEvent$SummonAidEvent net/neoforged/neoforge/event/entity/living/ZombieEvent$SummonAidEvent</span><br><span class="line">net/minecraftforge/event/entity/living/ZombieEvent net/neoforged/neoforge/event/entity/living/ZombieEvent</span><br><span class="line">net/minecraftforge/event/entity/player/AdvancementEvent$AdvancementEarnEvent net/neoforged/neoforge/event/entity/player/AdvancementEvent$AdvancementEarnEvent</span><br><span class="line">net/minecraftforge/event/entity/player/AdvancementEvent$AdvancementProgressEvent$ProgressType net/neoforged/neoforge/event/entity/player/AdvancementEvent$AdvancementProgressEvent$ProgressType</span><br><span class="line">net/minecraftforge/event/entity/player/AdvancementEvent$AdvancementProgressEvent net/neoforged/neoforge/event/entity/player/AdvancementEvent$AdvancementProgressEvent</span><br><span class="line">net/minecraftforge/event/entity/player/AdvancementEvent net/neoforged/neoforge/event/entity/player/AdvancementEvent</span><br><span class="line">net/minecraftforge/event/entity/player/AnvilRepairEvent net/neoforged/neoforge/event/entity/player/AnvilRepairEvent</span><br><span class="line">net/minecraftforge/event/entity/player/ArrowLooseEvent net/neoforged/neoforge/event/entity/player/ArrowLooseEvent</span><br><span class="line">net/minecraftforge/event/entity/player/ArrowNockEvent net/neoforged/neoforge/event/entity/player/ArrowNockEvent</span><br><span class="line">net/minecraftforge/event/entity/player/AttackEntityEvent net/neoforged/neoforge/event/entity/player/AttackEntityEvent</span><br><span class="line">net/minecraftforge/event/entity/player/BonemealEvent net/neoforged/neoforge/event/entity/player/BonemealEvent</span><br><span class="line">net/minecraftforge/event/entity/player/CriticalHitEvent net/neoforged/neoforge/event/entity/player/CriticalHitEvent</span><br><span class="line">net/minecraftforge/event/entity/player/EntityItemPickupEvent net/neoforged/neoforge/event/entity/player/EntityItemPickupEvent</span><br><span class="line">net/minecraftforge/event/entity/player/FillBucketEvent net/neoforged/neoforge/event/entity/player/FillBucketEvent</span><br><span class="line">net/minecraftforge/event/entity/player/ItemFishedEvent net/neoforged/neoforge/event/entity/player/ItemFishedEvent</span><br><span class="line">net/minecraftforge/event/entity/player/ItemTooltipEvent net/neoforged/neoforge/event/entity/player/ItemTooltipEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PermissionsChangedEvent net/neoforged/neoforge/event/entity/player/PermissionsChangedEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerContainerEvent$Close net/neoforged/neoforge/event/entity/player/PlayerContainerEvent$Close</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerContainerEvent$Open net/neoforged/neoforge/event/entity/player/PlayerContainerEvent$Open</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerContainerEvent net/neoforged/neoforge/event/entity/player/PlayerContainerEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerDestroyItemEvent net/neoforged/neoforge/event/entity/player/PlayerDestroyItemEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$BreakSpeed net/neoforged/neoforge/event/entity/player/PlayerEvent$BreakSpeed</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$Clone net/neoforged/neoforge/event/entity/player/PlayerEvent$Clone</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$HarvestCheck net/neoforged/neoforge/event/entity/player/PlayerEvent$HarvestCheck</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$ItemCraftedEvent net/neoforged/neoforge/event/entity/player/PlayerEvent$ItemCraftedEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$ItemPickupEvent net/neoforged/neoforge/event/entity/player/PlayerEvent$ItemPickupEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$ItemSmeltedEvent net/neoforged/neoforge/event/entity/player/PlayerEvent$ItemSmeltedEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$LoadFromFile net/neoforged/neoforge/event/entity/player/PlayerEvent$LoadFromFile</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$NameFormat net/neoforged/neoforge/event/entity/player/PlayerEvent$NameFormat</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$PlayerChangeGameModeEvent net/neoforged/neoforge/event/entity/player/PlayerEvent$PlayerChangeGameModeEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$PlayerChangedDimensionEvent net/neoforged/neoforge/event/entity/player/PlayerEvent$PlayerChangedDimensionEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$PlayerLoggedInEvent net/neoforged/neoforge/event/entity/player/PlayerEvent$PlayerLoggedInEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$PlayerLoggedOutEvent net/neoforged/neoforge/event/entity/player/PlayerEvent$PlayerLoggedOutEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$PlayerRespawnEvent net/neoforged/neoforge/event/entity/player/PlayerEvent$PlayerRespawnEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$SaveToFile net/neoforged/neoforge/event/entity/player/PlayerEvent$SaveToFile</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$StartTracking net/neoforged/neoforge/event/entity/player/PlayerEvent$StartTracking</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$StopTracking net/neoforged/neoforge/event/entity/player/PlayerEvent$StopTracking</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent$TabListNameFormat net/neoforged/neoforge/event/entity/player/PlayerEvent$TabListNameFormat</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerEvent net/neoforged/neoforge/event/entity/player/PlayerEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerFlyableFallEvent net/neoforged/neoforge/event/entity/player/PlayerFlyableFallEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent$<span class="number">1</span> net/neoforged/neoforge/event/entity/player/PlayerInteractEvent$<span class="number">1</span></span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent$EntityInteract net/neoforged/neoforge/event/entity/player/PlayerInteractEvent$EntityInteract</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent$EntityInteractSpecific net/neoforged/neoforge/event/entity/player/PlayerInteractEvent$EntityInteractSpecific</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent$LeftClickBlock$Action net/neoforged/neoforge/event/entity/player/PlayerInteractEvent$LeftClickBlock$Action</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent$LeftClickBlock net/neoforged/neoforge/event/entity/player/PlayerInteractEvent$LeftClickBlock</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent$LeftClickEmpty net/neoforged/neoforge/event/entity/player/PlayerInteractEvent$LeftClickEmpty</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent$RightClickBlock net/neoforged/neoforge/event/entity/player/PlayerInteractEvent$RightClickBlock</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent$RightClickEmpty net/neoforged/neoforge/event/entity/player/PlayerInteractEvent$RightClickEmpty</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent$RightClickItem net/neoforged/neoforge/event/entity/player/PlayerInteractEvent$RightClickItem</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerInteractEvent net/neoforged/neoforge/event/entity/player/PlayerInteractEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerNegotiationEvent net/neoforged/neoforge/event/entity/player/PlayerNegotiationEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerSetSpawnEvent net/neoforged/neoforge/event/entity/player/PlayerSetSpawnEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerSleepInBedEvent net/neoforged/neoforge/event/entity/player/PlayerSleepInBedEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerSpawnPhantomsEvent net/neoforged/neoforge/event/entity/player/PlayerSpawnPhantomsEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerWakeUpEvent net/neoforged/neoforge/event/entity/player/PlayerWakeUpEvent</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerXpEvent$LevelChange net/neoforged/neoforge/event/entity/player/PlayerXpEvent$LevelChange</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerXpEvent$PickupXp net/neoforged/neoforge/event/entity/player/PlayerXpEvent$PickupXp</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerXpEvent$XpChange net/neoforged/neoforge/event/entity/player/PlayerXpEvent$XpChange</span><br><span class="line">net/minecraftforge/event/entity/player/PlayerXpEvent net/neoforged/neoforge/event/entity/player/PlayerXpEvent</span><br><span class="line">net/minecraftforge/event/entity/player/SleepingLocationCheckEvent net/neoforged/neoforge/event/entity/player/SleepingLocationCheckEvent</span><br><span class="line">net/minecraftforge/event/entity/player/SleepingTimeCheckEvent net/neoforged/neoforge/event/entity/player/SleepingTimeCheckEvent</span><br><span class="line">net/minecraftforge/event/entity/player/TradeWithVillagerEvent net/neoforged/neoforge/event/entity/player/TradeWithVillagerEvent</span><br><span class="line">net/minecraftforge/event/furnace/FurnaceFuelBurnTimeEvent net/neoforged/neoforge/event/furnace/FurnaceFuelBurnTimeEvent</span><br><span class="line">net/minecraftforge/event/level/AlterGroundEvent$StateProvider net/neoforged/neoforge/event/level/AlterGroundEvent$StateProvider</span><br><span class="line">net/minecraftforge/event/level/AlterGroundEvent net/neoforged/neoforge/event/level/AlterGroundEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$BlockToolModificationEvent net/neoforged/neoforge/event/level/BlockEvent$BlockToolModificationEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$BreakEvent net/neoforged/neoforge/event/level/BlockEvent$BreakEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$CreateFluidSourceEvent net/neoforged/neoforge/event/level/BlockEvent$CreateFluidSourceEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$CropGrowEvent$Post net/neoforged/neoforge/event/level/BlockEvent$CropGrowEvent$Post</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$CropGrowEvent$Pre net/neoforged/neoforge/event/level/BlockEvent$CropGrowEvent$Pre</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$CropGrowEvent net/neoforged/neoforge/event/level/BlockEvent$CropGrowEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$EntityMultiPlaceEvent net/neoforged/neoforge/event/level/BlockEvent$EntityMultiPlaceEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$EntityPlaceEvent net/neoforged/neoforge/event/level/BlockEvent$EntityPlaceEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$FarmlandTrampleEvent net/neoforged/neoforge/event/level/BlockEvent$FarmlandTrampleEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$FluidPlaceBlockEvent net/neoforged/neoforge/event/level/BlockEvent$FluidPlaceBlockEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$NeighborNotifyEvent net/neoforged/neoforge/event/level/BlockEvent$NeighborNotifyEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent$PortalSpawnEvent net/neoforged/neoforge/event/level/BlockEvent$PortalSpawnEvent</span><br><span class="line">net/minecraftforge/event/level/BlockEvent net/neoforged/neoforge/event/level/BlockEvent</span><br><span class="line">net/minecraftforge/event/level/ChunkDataEvent$Load net/neoforged/neoforge/event/level/ChunkDataEvent$Load</span><br><span class="line">net/minecraftforge/event/level/ChunkDataEvent$Save net/neoforged/neoforge/event/level/ChunkDataEvent$Save</span><br><span class="line">net/minecraftforge/event/level/ChunkDataEvent net/neoforged/neoforge/event/level/ChunkDataEvent</span><br><span class="line">net/minecraftforge/event/level/ChunkEvent$Load net/neoforged/neoforge/event/level/ChunkEvent$Load</span><br><span class="line">net/minecraftforge/event/level/ChunkEvent$Unload net/neoforged/neoforge/event/level/ChunkEvent$Unload</span><br><span class="line">net/minecraftforge/event/level/ChunkEvent net/neoforged/neoforge/event/level/ChunkEvent</span><br><span class="line">net/minecraftforge/event/level/ChunkTicketLevelUpdatedEvent net/neoforged/neoforge/event/level/ChunkTicketLevelUpdatedEvent</span><br><span class="line">net/minecraftforge/event/level/ChunkWatchEvent$UnWatch net/neoforged/neoforge/event/level/ChunkWatchEvent$UnWatch</span><br><span class="line">net/minecraftforge/event/level/ChunkWatchEvent$Watch net/neoforged/neoforge/event/level/ChunkWatchEvent$Watch</span><br><span class="line">net/minecraftforge/event/level/ChunkWatchEvent net/neoforged/neoforge/event/level/ChunkWatchEvent</span><br><span class="line">net/minecraftforge/event/level/ExplosionEvent$Detonate net/neoforged/neoforge/event/level/ExplosionEvent$Detonate</span><br><span class="line">net/minecraftforge/event/level/ExplosionEvent$Start net/neoforged/neoforge/event/level/ExplosionEvent$Start</span><br><span class="line">net/minecraftforge/event/level/ExplosionEvent net/neoforged/neoforge/event/level/ExplosionEvent</span><br><span class="line">net/minecraftforge/event/level/LevelEvent$CreateSpawnPosition net/neoforged/neoforge/event/level/LevelEvent$CreateSpawnPosition</span><br><span class="line">net/minecraftforge/event/level/LevelEvent$Load net/neoforged/neoforge/event/level/LevelEvent$Load</span><br><span class="line">net/minecraftforge/event/level/LevelEvent$PotentialSpawns net/neoforged/neoforge/event/level/LevelEvent$PotentialSpawns</span><br><span class="line">net/minecraftforge/event/level/LevelEvent$Save net/neoforged/neoforge/event/level/LevelEvent$Save</span><br><span class="line">net/minecraftforge/event/level/LevelEvent$Unload net/neoforged/neoforge/event/level/LevelEvent$Unload</span><br><span class="line">net/minecraftforge/event/level/LevelEvent net/neoforged/neoforge/event/level/LevelEvent</span><br><span class="line">net/minecraftforge/event/level/NoteBlockEvent$Change net/neoforged/neoforge/event/level/NoteBlockEvent$Change</span><br><span class="line">net/minecraftforge/event/level/NoteBlockEvent$Note net/neoforged/neoforge/event/level/NoteBlockEvent$Note</span><br><span class="line">net/minecraftforge/event/level/NoteBlockEvent$Octave net/neoforged/neoforge/event/level/NoteBlockEvent$Octave</span><br><span class="line">net/minecraftforge/event/level/NoteBlockEvent$Play net/neoforged/neoforge/event/level/NoteBlockEvent$Play</span><br><span class="line">net/minecraftforge/event/level/NoteBlockEvent net/neoforged/neoforge/event/level/NoteBlockEvent</span><br><span class="line">net/minecraftforge/event/level/PistonEvent$PistonMoveType net/neoforged/neoforge/event/level/PistonEvent$PistonMoveType</span><br><span class="line">net/minecraftforge/event/level/PistonEvent$Post net/neoforged/neoforge/event/level/PistonEvent$Post</span><br><span class="line">net/minecraftforge/event/level/PistonEvent$Pre net/neoforged/neoforge/event/level/PistonEvent$Pre</span><br><span class="line">net/minecraftforge/event/level/PistonEvent net/neoforged/neoforge/event/level/PistonEvent</span><br><span class="line">net/minecraftforge/event/level/SaplingGrowTreeEvent net/neoforged/neoforge/event/level/SaplingGrowTreeEvent</span><br><span class="line">net/minecraftforge/event/level/SleepFinishedTimeEvent net/neoforged/neoforge/event/level/SleepFinishedTimeEvent</span><br><span class="line">net/minecraftforge/event/server/ServerAboutToStartEvent net/neoforged/neoforge/event/server/ServerAboutToStartEvent</span><br><span class="line">net/minecraftforge/event/server/ServerLifecycleEvent net/neoforged/neoforge/event/server/ServerLifecycleEvent</span><br><span class="line">net/minecraftforge/event/server/ServerStartedEvent net/neoforged/neoforge/event/server/ServerStartedEvent</span><br><span class="line">net/minecraftforge/event/server/ServerStartingEvent net/neoforged/neoforge/event/server/ServerStartingEvent</span><br><span class="line">net/minecraftforge/event/server/ServerStoppedEvent net/neoforged/neoforge/event/server/ServerStoppedEvent</span><br><span class="line">net/minecraftforge/event/server/ServerStoppingEvent net/neoforged/neoforge/event/server/ServerStoppingEvent</span><br><span class="line">net/minecraftforge/event/village/VillageSiegeEvent net/neoforged/neoforge/event/village/VillageSiegeEvent</span><br><span class="line">net/minecraftforge/event/village/VillagerTradesEvent net/neoforged/neoforge/event/village/VillagerTradesEvent</span><br><span class="line">net/minecraftforge/event/village/WandererTradesEvent net/neoforged/neoforge/event/village/WandererTradesEvent</span><br><span class="line">net/minecraftforge/fluids/DispenseFluidContainer net/neoforged/neoforge/fluids/DispenseFluidContainer</span><br><span class="line">net/minecraftforge/fluids/FluidActionResult net/neoforged/neoforge/fluids/FluidActionResult</span><br><span class="line">net/minecraftforge/fluids/FluidInteractionRegistry$FluidInteraction net/neoforged/neoforge/fluids/FluidInteractionRegistry$FluidInteraction</span><br><span class="line">net/minecraftforge/fluids/FluidInteractionRegistry$HasFluidInteraction net/neoforged/neoforge/fluids/FluidInteractionRegistry$HasFluidInteraction</span><br><span class="line">net/minecraftforge/fluids/FluidInteractionRegistry$InteractionInformation net/neoforged/neoforge/fluids/FluidInteractionRegistry$InteractionInformation</span><br><span class="line">net/minecraftforge/fluids/FluidInteractionRegistry net/neoforged/neoforge/fluids/FluidInteractionRegistry</span><br><span class="line">net/minecraftforge/fluids/FluidStack net/neoforged/neoforge/fluids/FluidStack</span><br><span class="line">net/minecraftforge/fluids/FluidType$Properties net/neoforged/neoforge/fluids/FluidType$Properties</span><br><span class="line">net/minecraftforge/fluids/FluidType net/neoforged/neoforge/fluids/FluidType</span><br><span class="line">net/minecraftforge/fluids/FluidUtil net/neoforged/neoforge/fluids/FluidUtil</span><br><span class="line">net/minecraftforge/fluids/ForgeFlowingFluid$Flowing net/neoforged/neoforge/fluids/BaseFlowingFluid$Flowing</span><br><span class="line">net/minecraftforge/fluids/ForgeFlowingFluid$Properties net/neoforged/neoforge/fluids/BaseFlowingFluid$Properties</span><br><span class="line">net/minecraftforge/fluids/ForgeFlowingFluid$Source net/neoforged/neoforge/fluids/BaseFlowingFluid$Source</span><br><span class="line">net/minecraftforge/fluids/ForgeFlowingFluid net/neoforged/neoforge/fluids/BaseFlowingFluid</span><br><span class="line">net/minecraftforge/fluids/IFluidBlock net/neoforged/neoforge/fluids/IFluidBlock</span><br><span class="line">net/minecraftforge/fluids/IFluidTank net/neoforged/neoforge/fluids/IFluidTank</span><br><span class="line">net/minecraftforge/fluids/capability/FluidHandlerBlockEntity net/neoforged/neoforge/fluids/capability/FluidHandlerBlockEntity</span><br><span class="line">net/minecraftforge/fluids/capability/IFluidHandler$FluidAction net/neoforged/neoforge/fluids/capability/IFluidHandler$FluidAction</span><br><span class="line">net/minecraftforge/fluids/capability/IFluidHandler net/neoforged/neoforge/fluids/capability/IFluidHandler</span><br><span class="line">net/minecraftforge/fluids/capability/IFluidHandlerItem net/neoforged/neoforge/fluids/capability/IFluidHandlerItem</span><br><span class="line">net/minecraftforge/fluids/capability/ItemFluidContainer net/neoforged/neoforge/fluids/capability/ItemFluidContainer</span><br><span class="line">net/minecraftforge/fluids/capability/templates/EmptyFluidHandler net/neoforged/neoforge/fluids/capability/templates/EmptyFluidHandler</span><br><span class="line">net/minecraftforge/fluids/capability/templates/FluidHandlerItemStack$Consumable net/neoforged/neoforge/fluids/capability/templates/FluidHandlerItemStack$Consumable</span><br><span class="line">net/minecraftforge/fluids/capability/templates/FluidHandlerItemStack$SwapEmpty net/neoforged/neoforge/fluids/capability/templates/FluidHandlerItemStack$SwapEmpty</span><br><span class="line">net/minecraftforge/fluids/capability/templates/FluidHandlerItemStack net/neoforged/neoforge/fluids/capability/templates/FluidHandlerItemStack</span><br><span class="line">net/minecraftforge/fluids/capability/templates/FluidHandlerItemStackSimple$Consumable net/neoforged/neoforge/fluids/capability/templates/FluidHandlerItemStackSimple$Consumable</span><br><span class="line">net/minecraftforge/fluids/capability/templates/FluidHandlerItemStackSimple$SwapEmpty net/neoforged/neoforge/fluids/capability/templates/FluidHandlerItemStackSimple$SwapEmpty</span><br><span class="line">net/minecraftforge/fluids/capability/templates/FluidHandlerItemStackSimple net/neoforged/neoforge/fluids/capability/templates/FluidHandlerItemStackSimple</span><br><span class="line">net/minecraftforge/fluids/capability/templates/FluidTank net/neoforged/neoforge/fluids/capability/templates/FluidTank</span><br><span class="line">net/minecraftforge/fluids/capability/templates/VoidFluidHandler net/neoforged/neoforge/fluids/capability/templates/VoidFluidHandler</span><br><span class="line">net/minecraftforge/fluids/capability/wrappers/BlockWrapper$LiquidContainerBlockWrapper net/neoforged/neoforge/fluids/capability/wrappers/BlockWrapper$LiquidContainerBlockWrapper</span><br><span class="line">net/minecraftforge/fluids/capability/wrappers/BlockWrapper net/neoforged/neoforge/fluids/capability/wrappers/BlockWrapper</span><br><span class="line">net/minecraftforge/fluids/capability/wrappers/BucketPickupHandlerWrapper net/neoforged/neoforge/fluids/capability/wrappers/BucketPickupHandlerWrapper</span><br><span class="line">net/minecraftforge/fluids/capability/wrappers/FluidBlockWrapper net/neoforged/neoforge/fluids/capability/wrappers/FluidBlockWrapper</span><br><span class="line">net/minecraftforge/fluids/capability/wrappers/FluidBucketWrapper net/neoforged/neoforge/fluids/capability/wrappers/FluidBucketWrapper</span><br><span class="line">net/minecraftforge/forge/snapshots/ForgeSnapshotsMod net/neoforged/neoforge/forge/snapshots/ForgeSnapshotsMod</span><br><span class="line">net/minecraftforge/forge/snapshots/ForgeSnapshotsModClient net/neoforged/neoforge/forge/snapshots/ForgeSnapshotsModClient</span><br><span class="line">net/minecraftforge/gametest/BlockPosValueConverter net/neoforged/neoforge/gametest/BlockPosValueConverter</span><br><span class="line">net/minecraftforge/gametest/ForgeGameTestHooks net/neoforged/neoforge/gametest/GameTestHooks</span><br><span class="line">net/minecraftforge/gametest/GameTestHolder net/neoforged/neoforge/gametest/GameTestHolder</span><br><span class="line">net/minecraftforge/gametest/GameTestMain net/neoforged/neoforge/gametest/GameTestMain</span><br><span class="line">net/minecraftforge/gametest/PrefixGameTestTemplate net/neoforged/neoforge/gametest/PrefixGameTestTemplate</span><br><span class="line">net/minecraftforge/internal/BrandingControl net/neoforged/neoforge/internal/BrandingControl</span><br><span class="line">net/minecraftforge/internal/ForgeBindings$<span class="number">1</span> net/neoforged/neoforge/internal/ForgeBindings$<span class="number">1</span></span><br><span class="line">net/minecraftforge/internal/ForgeBindings net/neoforged/neoforge/internal/ForgeBindings</span><br><span class="line">net/minecraftforge/internal/TextComponentMessageFormatHandler net/neoforged/neoforge/internal/TextComponentMessageFormatHandler</span><br><span class="line">net/minecraftforge/items/IItemHandler net/neoforged/neoforge/items/IItemHandler</span><br><span class="line">net/minecraftforge/items/IItemHandlerModifiable net/neoforged/neoforge/items/IItemHandlerModifiable</span><br><span class="line">net/minecraftforge/items/ItemHandlerHelper net/neoforged/neoforge/items/ItemHandlerHelper</span><br><span class="line">net/minecraftforge/items/ItemStackHandler net/neoforged/neoforge/items/ItemStackHandler</span><br><span class="line">net/minecraftforge/items/SlotItemHandler net/neoforged/neoforge/items/SlotItemHandler</span><br><span class="line">net/minecraftforge/items/VanillaHopperItemHandler net/neoforged/neoforge/items/VanillaHopperItemHandler</span><br><span class="line">net/minecraftforge/items/VanillaInventoryCodeHooks net/neoforged/neoforge/items/VanillaInventoryCodeHooks</span><br><span class="line">net/minecraftforge/items/wrapper/CombinedInvWrapper net/neoforged/neoforge/items/wrapper/CombinedInvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/EmptyHandler net/neoforged/neoforge/items/wrapper/EmptyHandler</span><br><span class="line">net/minecraftforge/items/wrapper/EntityArmorInvWrapper net/neoforged/neoforge/items/wrapper/EntityArmorInvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/EntityEquipmentInvWrapper net/neoforged/neoforge/items/wrapper/EntityEquipmentInvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/EntityHandsInvWrapper net/neoforged/neoforge/items/wrapper/EntityHandsInvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/InvWrapper net/neoforged/neoforge/items/wrapper/InvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/PlayerArmorInvWrapper net/neoforged/neoforge/items/wrapper/PlayerArmorInvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/PlayerInvWrapper net/neoforged/neoforge/items/wrapper/PlayerInvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/PlayerMainInvWrapper net/neoforged/neoforge/items/wrapper/PlayerMainInvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/PlayerOffhandInvWrapper net/neoforged/neoforge/items/wrapper/PlayerOffhandInvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/RangedWrapper net/neoforged/neoforge/items/wrapper/RangedWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/RecipeWrapper net/neoforged/neoforge/items/wrapper/RecipeWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/ShulkerItemStackInvWrapper net/neoforged/neoforge/items/wrapper/ShulkerItemStackInvWrapper</span><br><span class="line">net/minecraftforge/items/wrapper/SidedInvWrapper$InsertLimit net/neoforged/neoforge/items/wrapper/SidedInvWrapper$InsertLimit</span><br><span class="line">net/minecraftforge/items/wrapper/SidedInvWrapper net/neoforged/neoforge/items/wrapper/SidedInvWrapper</span><br><span class="line">net/minecraftforge/logging/CrashReportExtender net/neoforged/neoforge/logging/CrashReportExtender</span><br><span class="line">net/minecraftforge/logging/PacketDump net/neoforged/neoforge/logging/PacketDump</span><br><span class="line">net/minecraftforge/network/ConfigSync net/neoforged/neoforge/network/ConfigSync</span><br><span class="line">net/minecraftforge/network/ConnectionData$ModMismatchData net/neoforged/neoforge/network/ConnectionData$ModMismatchData</span><br><span class="line">net/minecraftforge/network/ConnectionData net/neoforged/neoforge/network/ConnectionData</span><br><span class="line">net/minecraftforge/network/ConnectionType net/neoforged/neoforge/network/ConnectionType</span><br><span class="line">net/minecraftforge/network/DualStackUtils net/neoforged/neoforge/network/DualStackUtils</span><br><span class="line">net/minecraftforge/network/HandshakeHandler$HandshakeConsumer net/neoforged/neoforge/network/HandshakeHandler$HandshakeConsumer</span><br><span class="line">net/minecraftforge/network/HandshakeHandler net/neoforged/neoforge/network/HandshakeHandler</span><br><span class="line">net/minecraftforge/network/HandshakeMessages$C2SAcknowledge net/neoforged/neoforge/network/HandshakeMessages$C2SAcknowledge</span><br><span class="line">net/minecraftforge/network/HandshakeMessages$C2SModListReply net/neoforged/neoforge/network/HandshakeMessages$C2SModListReply</span><br><span class="line">net/minecraftforge/network/HandshakeMessages$LoginIndexedMessage net/neoforged/neoforge/network/HandshakeMessages$LoginIndexedMessage</span><br><span class="line">net/minecraftforge/network/HandshakeMessages$S2CChannelMismatchData net/neoforged/neoforge/network/HandshakeMessages$S2CChannelMismatchData</span><br><span class="line">net/minecraftforge/network/HandshakeMessages$S2CConfigData net/neoforged/neoforge/network/HandshakeMessages$S2CConfigData</span><br><span class="line">net/minecraftforge/network/HandshakeMessages$S2CModData net/neoforged/neoforge/network/HandshakeMessages$S2CModData</span><br><span class="line">net/minecraftforge/network/HandshakeMessages$S2CModList net/neoforged/neoforge/network/HandshakeMessages$S2CModList</span><br><span class="line">net/minecraftforge/network/HandshakeMessages$S2CRegistry net/neoforged/neoforge/network/HandshakeMessages$S2CRegistry</span><br><span class="line">net/minecraftforge/network/HandshakeMessages net/neoforged/neoforge/network/HandshakeMessages</span><br><span class="line">net/minecraftforge/network/IContainerFactory net/neoforged/neoforge/network/IContainerFactory</span><br><span class="line">net/minecraftforge/network/ICustomPacket net/neoforged/neoforge/network/ICustomPacket</span><br><span class="line">net/minecraftforge/network/LoginWrapper net/neoforged/neoforge/network/LoginWrapper</span><br><span class="line">net/minecraftforge/network/MCRegisterPacketHandler$ChannelList net/neoforged/neoforge/network/MCRegisterPacketHandler$ChannelList</span><br><span class="line">net/minecraftforge/network/MCRegisterPacketHandler net/neoforged/neoforge/network/MCRegisterPacketHandler</span><br><span class="line">net/minecraftforge/network/NetworkConstants net/neoforged/neoforge/network/NetworkConstants</span><br><span class="line">net/minecraftforge/network/NetworkDirection$Factory net/neoforged/neoforge/network/NetworkDirection$Factory</span><br><span class="line">net/minecraftforge/network/NetworkDirection net/neoforged/neoforge/network/NetworkDirection</span><br><span class="line">net/minecraftforge/network/NetworkEvent$ChannelRegistrationChangeEvent net/neoforged/neoforge/network/NetworkEvent$ChannelRegistrationChangeEvent</span><br><span class="line">net/minecraftforge/network/NetworkEvent$ClientCustomPayloadEvent net/neoforged/neoforge/network/NetworkEvent$ClientCustomPayloadEvent</span><br><span class="line">net/minecraftforge/network/NetworkEvent$ClientCustomPayloadLoginEvent net/neoforged/neoforge/network/NetworkEvent$ClientCustomPayloadLoginEvent</span><br><span class="line">net/minecraftforge/network/NetworkEvent$Context net/neoforged/neoforge/network/NetworkEvent$Context</span><br><span class="line">net/minecraftforge/network/NetworkEvent$GatherLoginPayloadsEvent net/neoforged/neoforge/network/NetworkEvent$GatherLoginPayloadsEvent</span><br><span class="line">net/minecraftforge/network/NetworkEvent$LoginPayloadEvent net/neoforged/neoforge/network/NetworkEvent$LoginPayloadEvent</span><br><span class="line">net/minecraftforge/network/NetworkEvent$PacketDispatcher$NetworkManagerDispatcher net/neoforged/neoforge/network/NetworkEvent$PacketDispatcher$NetworkManagerDispatcher</span><br><span class="line">net/minecraftforge/network/NetworkEvent$PacketDispatcher net/neoforged/neoforge/network/NetworkEvent$PacketDispatcher</span><br><span class="line">net/minecraftforge/network/NetworkEvent$RegistrationChangeType net/neoforged/neoforge/network/NetworkEvent$RegistrationChangeType</span><br><span class="line">net/minecraftforge/network/NetworkEvent$ServerCustomPayloadEvent net/neoforged/neoforge/network/NetworkEvent$ServerCustomPayloadEvent</span><br><span class="line">net/minecraftforge/network/NetworkEvent$ServerCustomPayloadLoginEvent net/neoforged/neoforge/network/NetworkEvent$ServerCustomPayloadLoginEvent</span><br><span class="line">net/minecraftforge/network/NetworkEvent net/neoforged/neoforge/network/NetworkEvent</span><br><span class="line">net/minecraftforge/network/NetworkHooks net/neoforged/neoforge/network/NetworkHooks</span><br><span class="line">net/minecraftforge/network/NetworkInitialization net/neoforged/neoforge/network/NetworkInitialization</span><br><span class="line">net/minecraftforge/network/NetworkInstance net/neoforged/neoforge/network/NetworkInstance</span><br><span class="line">net/minecraftforge/network/NetworkRegistry$ChannelBuilder net/neoforged/neoforge/network/NetworkRegistry$ChannelBuilder</span><br><span class="line">net/minecraftforge/network/NetworkRegistry$LoginPayload net/neoforged/neoforge/network/NetworkRegistry$LoginPayload</span><br><span class="line">net/minecraftforge/network/NetworkRegistry net/neoforged/neoforge/network/NetworkRegistry</span><br><span class="line">net/minecraftforge/network/PacketDistributor$PacketTarget net/neoforged/neoforge/network/PacketDistributor$PacketTarget</span><br><span class="line">net/minecraftforge/network/PacketDistributor$TargetPoint net/neoforged/neoforge/network/PacketDistributor$TargetPoint</span><br><span class="line">net/minecraftforge/network/PacketDistributor net/neoforged/neoforge/network/PacketDistributor</span><br><span class="line">net/minecraftforge/network/PlayMessages$OpenContainer net/neoforged/neoforge/network/PlayMessages$OpenContainer</span><br><span class="line">net/minecraftforge/network/PlayMessages$SpawnEntity net/neoforged/neoforge/network/PlayMessages$SpawnEntity</span><br><span class="line">net/minecraftforge/network/PlayMessages net/neoforged/neoforge/network/PlayMessages</span><br><span class="line">net/minecraftforge/network/ServerStatusPing$ChannelData net/neoforged/neoforge/network/ServerStatusPing$ChannelData</span><br><span class="line">net/minecraftforge/network/ServerStatusPing$ModInfo net/neoforged/neoforge/network/ServerStatusPing$ModInfo</span><br><span class="line">net/minecraftforge/network/ServerStatusPing net/neoforged/neoforge/network/ServerStatusPing</span><br><span class="line">net/minecraftforge/network/event/EventNetworkChannel net/neoforged/neoforge/network/event/EventNetworkChannel</span><br><span class="line">net/minecraftforge/network/filters/CommandTreeCleaner net/neoforged/neoforge/network/filters/CommandTreeCleaner</span><br><span class="line">net/minecraftforge/network/filters/ForgeConnectionNetworkFilter net/neoforged/neoforge/network/filters/ForgeConnectionNetworkFilter</span><br><span class="line">net/minecraftforge/network/filters/NetworkFilters net/neoforged/neoforge/network/filters/NetworkFilters</span><br><span class="line">net/minecraftforge/network/filters/VanillaConnectionNetworkFilter net/neoforged/neoforge/network/filters/VanillaConnectionNetworkFilter</span><br><span class="line">net/minecraftforge/network/filters/VanillaPacketFilter net/neoforged/neoforge/network/filters/VanillaPacketFilter</span><br><span class="line">net/minecraftforge/network/filters/VanillaPacketSplitter$RemoteCompatibility net/neoforged/neoforge/network/filters/VanillaPacketSplitter$RemoteCompatibility</span><br><span class="line">net/minecraftforge/network/filters/VanillaPacketSplitter net/neoforged/neoforge/network/filters/VanillaPacketSplitter</span><br><span class="line">net/minecraftforge/network/simple/IndexedMessageCodec$MessageHandler net/neoforged/neoforge/network/simple/IndexedMessageCodec$MessageHandler</span><br><span class="line">net/minecraftforge/network/simple/IndexedMessageCodec net/neoforged/neoforge/network/simple/IndexedMessageCodec</span><br><span class="line">net/minecraftforge/network/simple/SimpleChannel$MessageBuilder$ToBooleanBiFunction net/neoforged/neoforge/network/simple/SimpleChannel$MessageBuilder$ToBooleanBiFunction</span><br><span class="line">net/minecraftforge/network/simple/SimpleChannel$MessageBuilder net/neoforged/neoforge/network/simple/SimpleChannel$MessageBuilder</span><br><span class="line">net/minecraftforge/network/simple/SimpleChannel net/neoforged/neoforge/network/simple/SimpleChannel</span><br><span class="line">net/minecraftforge/registries/DataPackRegistriesHooks net/neoforged/neoforge/registries/DataPackRegistriesHooks</span><br><span class="line">net/minecraftforge/registries/DataPackRegistryEvent$DataPackRegistryData net/neoforged/neoforge/registries/DataPackRegistryEvent$DataPackRegistryData</span><br><span class="line">net/minecraftforge/registries/DataPackRegistryEvent$NewRegistry net/neoforged/neoforge/registries/DataPackRegistryEvent$NewRegistry</span><br><span class="line">net/minecraftforge/registries/DataPackRegistryEvent net/neoforged/neoforge/registries/DataPackRegistryEvent</span><br><span class="line">net/minecraftforge/registries/DeferredRegister$EventDispatcher net/neoforged/neoforge/registries/DeferredRegister$EventDispatcher</span><br><span class="line">net/minecraftforge/registries/DeferredRegister$RegistryHolder net/neoforged/neoforge/registries/DeferredRegister$RegistryHolder</span><br><span class="line">net/minecraftforge/registries/DeferredRegister net/neoforged/neoforge/registries/DeferredRegister</span><br><span class="line">net/minecraftforge/registries/ForgeDeferredRegistriesSetup net/neoforged/neoforge/registries/ForgeDeferredRegistriesSetup</span><br><span class="line">net/minecraftforge/registries/ForgeRegistries$Keys net/neoforged/neoforge/registries/ForgeRegistries$Keys</span><br><span class="line">net/minecraftforge/registries/ForgeRegistries net/neoforged/neoforge/registries/ForgeRegistries</span><br><span class="line">net/minecraftforge/registries/ForgeRegistry$<span class="number">1</span> net/neoforged/neoforge/registries/ForgeRegistry$<span class="number">1</span></span><br><span class="line">net/minecraftforge/registries/ForgeRegistry$DumpRow net/neoforged/neoforge/registries/ForgeRegistry$DumpRow</span><br><span class="line">net/minecraftforge/registries/ForgeRegistry$OverrideOwner net/neoforged/neoforge/registries/ForgeRegistry$OverrideOwner</span><br><span class="line">net/minecraftforge/registries/ForgeRegistry$RegistryCodec net/neoforged/neoforge/registries/ForgeRegistry$RegistryCodec</span><br><span class="line">net/minecraftforge/registries/ForgeRegistry$Snapshot net/neoforged/neoforge/registries/ForgeRegistry$Snapshot</span><br><span class="line">net/minecraftforge/registries/ForgeRegistry net/neoforged/neoforge/registries/ForgeRegistry</span><br><span class="line">net/minecraftforge/registries/ForgeRegistryTag net/neoforged/neoforge/registries/ForgeRegistryTag</span><br><span class="line">net/minecraftforge/registries/ForgeRegistryTagManager net/neoforged/neoforge/registries/ForgeRegistryTagManager</span><br><span class="line">net/minecraftforge/registries/GameData$<span class="number">1</span> net/neoforged/neoforge/registries/GameData$<span class="number">1</span></span><br><span class="line">net/minecraftforge/registries/GameData$AttributeCallbacks net/neoforged/neoforge/registries/GameData$AttributeCallbacks</span><br><span class="line">net/minecraftforge/registries/GameData$BlockCallbacks$<span class="number">1</span> net/neoforged/neoforge/registries/GameData$BlockCallbacks$<span class="number">1</span></span><br><span class="line">net/minecraftforge/registries/GameData$BlockCallbacks net/neoforged/neoforge/registries/GameData$BlockCallbacks</span><br><span class="line">net/minecraftforge/registries/GameData$ClearableObjectIntIdentityMap net/neoforged/neoforge/registries/GameData$ClearableObjectIntIdentityMap</span><br><span class="line">net/minecraftforge/registries/GameData$ItemCallbacks net/neoforged/neoforge/registries/GameData$ItemCallbacks</span><br><span class="line">net/minecraftforge/registries/GameData$PointOfInterestTypeCallbacks net/neoforged/neoforge/registries/GameData$PointOfInterestTypeCallbacks</span><br><span class="line">net/minecraftforge/registries/GameData net/neoforged/neoforge/registries/GameData</span><br><span class="line">net/minecraftforge/registries/IForgeRegistry$AddCallback net/neoforged/neoforge/registries/IForgeRegistry$AddCallback</span><br><span class="line">net/minecraftforge/registries/IForgeRegistry$BakeCallback net/neoforged/neoforge/registries/IForgeRegistry$BakeCallback</span><br><span class="line">net/minecraftforge/registries/IForgeRegistry$ClearCallback net/neoforged/neoforge/registries/IForgeRegistry$ClearCallback</span><br><span class="line">net/minecraftforge/registries/IForgeRegistry$CreateCallback net/neoforged/neoforge/registries/IForgeRegistry$CreateCallback</span><br><span class="line">net/minecraftforge/registries/IForgeRegistry$MissingFactory net/neoforged/neoforge/registries/IForgeRegistry$MissingFactory</span><br><span class="line">net/minecraftforge/registries/IForgeRegistry$ValidateCallback net/neoforged/neoforge/registries/IForgeRegistry$ValidateCallback</span><br><span class="line">net/minecraftforge/registries/IForgeRegistry net/neoforged/neoforge/registries/IForgeRegistry</span><br><span class="line">net/minecraftforge/registries/IForgeRegistryInternal net/neoforged/neoforge/registries/IForgeRegistryInternal</span><br><span class="line">net/minecraftforge/registries/IForgeRegistryModifiable net/neoforged/neoforge/registries/IForgeRegistryModifiable</span><br><span class="line">net/minecraftforge/registries/ILockableRegistry net/neoforged/neoforge/registries/ILockableRegistry</span><br><span class="line">net/minecraftforge/registries/IdMappingEvent$IdRemapping net/neoforged/neoforge/registries/IdMappingEvent$IdRemapping</span><br><span class="line">net/minecraftforge/registries/IdMappingEvent$ModRemapping net/neoforged/neoforge/registries/IdMappingEvent$ModRemapping</span><br><span class="line">net/minecraftforge/registries/IdMappingEvent net/neoforged/neoforge/registries/IdMappingEvent</span><br><span class="line">net/minecraftforge/registries/MissingMappingsEvent$Action net/neoforged/neoforge/registries/MissingMappingsEvent$Action</span><br><span class="line">net/minecraftforge/registries/MissingMappingsEvent$Mapping net/neoforged/neoforge/registries/MissingMappingsEvent$Mapping</span><br><span class="line">net/minecraftforge/registries/MissingMappingsEvent net/neoforged/neoforge/registries/MissingMappingsEvent</span><br><span class="line">net/minecraftforge/registries/NamespacedDefaultedWrapper$Factory net/neoforged/neoforge/registries/NamespacedDefaultedWrapper$Factory</span><br><span class="line">net/minecraftforge/registries/NamespacedDefaultedWrapper net/neoforged/neoforge/registries/NamespacedDefaultedWrapper</span><br><span class="line">net/minecraftforge/registries/NamespacedWrapper$<span class="number">1</span> net/neoforged/neoforge/registries/NamespacedWrapper$<span class="number">1</span></span><br><span class="line">net/minecraftforge/registries/NamespacedWrapper$Factory net/neoforged/neoforge/registries/NamespacedWrapper$Factory</span><br><span class="line">net/minecraftforge/registries/NamespacedWrapper net/neoforged/neoforge/registries/NamespacedWrapper</span><br><span class="line">net/minecraftforge/registries/NewRegistryEvent$RegistryData net/neoforged/neoforge/registries/NewRegistryEvent$RegistryData</span><br><span class="line">net/minecraftforge/registries/NewRegistryEvent$RegistryHolder net/neoforged/neoforge/registries/NewRegistryEvent$RegistryHolder</span><br><span class="line">net/minecraftforge/registries/NewRegistryEvent net/neoforged/neoforge/registries/NewRegistryEvent</span><br><span class="line">net/minecraftforge/registries/ObjectHolder net/neoforged/neoforge/registries/ObjectHolder</span><br><span class="line">net/minecraftforge/registries/ObjectHolderRef net/neoforged/neoforge/registries/ObjectHolderRef</span><br><span class="line">net/minecraftforge/registries/ObjectHolderRegistry$VanillaObjectHolderData net/neoforged/neoforge/registries/ObjectHolderRegistry$VanillaObjectHolderData</span><br><span class="line">net/minecraftforge/registries/ObjectHolderRegistry net/neoforged/neoforge/registries/ObjectHolderRegistry</span><br><span class="line">net/minecraftforge/registries/RegisterEvent$RegisterHelper net/neoforged/neoforge/registries/RegisterEvent$RegisterHelper</span><br><span class="line">net/minecraftforge/registries/RegisterEvent net/neoforged/neoforge/registries/RegisterEvent</span><br><span class="line">net/minecraftforge/registries/RegistryBuilder net/neoforged/neoforge/registries/RegistryBuilder</span><br><span class="line">net/minecraftforge/registries/RegistryManager net/neoforged/neoforge/registries/RegistryManager</span><br><span class="line">net/minecraftforge/registries/RegistryObject$<span class="number">1</span> net/neoforged/neoforge/registries/RegistryObject$<span class="number">1</span></span><br><span class="line">net/minecraftforge/registries/RegistryObject net/neoforged/neoforge/registries/RegistryObject</span><br><span class="line">net/minecraftforge/registries/holdersets/AndHolderSet net/neoforged/neoforge/registries/holdersets/AndHolderSet</span><br><span class="line">net/minecraftforge/registries/holdersets/AnyHolderSet net/neoforged/neoforge/registries/holdersets/AnyHolderSet</span><br><span class="line">net/minecraftforge/registries/holdersets/CompositeHolderSet net/neoforged/neoforge/registries/holdersets/CompositeHolderSet</span><br><span class="line">net/minecraftforge/registries/holdersets/HolderSetType net/neoforged/neoforge/registries/holdersets/HolderSetType</span><br><span class="line">net/minecraftforge/registries/holdersets/ICustomHolderSet net/neoforged/neoforge/registries/holdersets/ICustomHolderSet</span><br><span class="line">net/minecraftforge/registries/holdersets/NotHolderSet net/neoforged/neoforge/registries/holdersets/NotHolderSet</span><br><span class="line">net/minecraftforge/registries/holdersets/OrHolderSet net/neoforged/neoforge/registries/holdersets/OrHolderSet</span><br><span class="line">net/minecraftforge/registries/tags/IReverseTag net/neoforged/neoforge/registries/tags/IReverseTag</span><br><span class="line">net/minecraftforge/registries/tags/ITag net/neoforged/neoforge/registries/tags/ITag</span><br><span class="line">net/minecraftforge/registries/tags/ITagManager net/neoforged/neoforge/registries/tags/ITagManager</span><br><span class="line">net/minecraftforge/resource/DelegatingPackResources net/neoforged/neoforge/resource/DelegatingPackResources</span><br><span class="line">net/minecraftforge/resource/PathPackResources net/neoforged/neoforge/resource/PathPackResources</span><br><span class="line">net/minecraftforge/resource/ResourcePackLoader$<span class="number">1</span> net/neoforged/neoforge/resource/ResourcePackLoader$<span class="number">1</span></span><br><span class="line">net/minecraftforge/resource/ResourcePackLoader net/neoforged/neoforge/resource/ResourcePackLoader</span><br><span class="line">net/minecraftforge/resource/<span class="keyword">package</span>-info net/neoforged/neoforge/resource/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/server/LanguageHook net/neoforged/neoforge/server/LanguageHook</span><br><span class="line">net/minecraftforge/server/ServerLifecycleHooks net/neoforged/neoforge/server/ServerLifecycleHooks</span><br><span class="line">net/minecraftforge/server/command/ChunkGenWorker net/neoforged/neoforge/server/command/ChunkGenWorker</span><br><span class="line">net/minecraftforge/server/command/CommandHelper net/neoforged/neoforge/server/command/CommandHelper</span><br><span class="line">net/minecraftforge/server/command/ConfigCommand$ShowFile net/neoforged/neoforge/server/command/ConfigCommand$ShowFile</span><br><span class="line">net/minecraftforge/server/command/ConfigCommand net/neoforged/neoforge/server/command/ConfigCommand</span><br><span class="line">net/minecraftforge/server/command/DimensionsCommand net/neoforged/neoforge/server/command/DimensionsCommand</span><br><span class="line">net/minecraftforge/server/command/EntityCommand$EntityListCommand net/neoforged/neoforge/server/command/EntityCommand$EntityListCommand</span><br><span class="line">net/minecraftforge/server/command/EntityCommand net/neoforged/neoforge/server/command/EntityCommand</span><br><span class="line">net/minecraftforge/server/command/EnumArgument$Info$Template net/neoforged/neoforge/server/command/EnumArgument$Info$Template</span><br><span class="line">net/minecraftforge/server/command/EnumArgument$Info net/neoforged/neoforge/server/command/EnumArgument$Info</span><br><span class="line">net/minecraftforge/server/command/EnumArgument net/neoforged/neoforge/server/command/EnumArgument</span><br><span class="line">net/minecraftforge/server/command/ForgeCommand net/neoforged/neoforge/server/command/ForgeCommand</span><br><span class="line">net/minecraftforge/server/command/GenerateCommand net/neoforged/neoforge/server/command/GenerateCommand</span><br><span class="line">net/minecraftforge/server/command/ModIdArgument net/neoforged/neoforge/server/command/ModIdArgument</span><br><span class="line">net/minecraftforge/server/command/ModListCommand net/neoforged/neoforge/server/command/ModListCommand</span><br><span class="line">net/minecraftforge/server/command/TPSCommand net/neoforged/neoforge/server/command/TPSCommand</span><br><span class="line">net/minecraftforge/server/command/TagsCommand net/neoforged/neoforge/server/command/TagsCommand</span><br><span class="line">net/minecraftforge/server/command/TextComponentHelper net/neoforged/neoforge/server/command/TextComponentHelper</span><br><span class="line">net/minecraftforge/server/command/TrackCommand$ResetTrackingCommand net/neoforged/neoforge/server/command/TrackCommand$ResetTrackingCommand</span><br><span class="line">net/minecraftforge/server/command/TrackCommand$StartTrackingCommand net/neoforged/neoforge/server/command/TrackCommand$StartTrackingCommand</span><br><span class="line">net/minecraftforge/server/command/TrackCommand$TrackResults net/neoforged/neoforge/server/command/TrackCommand$TrackResults</span><br><span class="line">net/minecraftforge/server/command/TrackCommand$TrackResultsBlockEntity net/neoforged/neoforge/server/command/TrackCommand$TrackResultsBlockEntity</span><br><span class="line">net/minecraftforge/server/command/TrackCommand$TrackResultsEntity net/neoforged/neoforge/server/command/TrackCommand$TrackResultsEntity</span><br><span class="line">net/minecraftforge/server/command/TrackCommand net/neoforged/neoforge/server/command/TrackCommand</span><br><span class="line">net/minecraftforge/server/command/<span class="keyword">package</span>-info net/neoforged/neoforge/server/command/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/server/console/ConsoleCommandCompleter net/neoforged/neoforge/server/console/ConsoleCommandCompleter</span><br><span class="line">net/minecraftforge/server/console/TerminalHandler net/neoforged/neoforge/server/console/TerminalHandler</span><br><span class="line">net/minecraftforge/server/loading/ServerModLoader net/neoforged/neoforge/server/loading/ServerModLoader</span><br><span class="line">net/minecraftforge/server/permission/PermissionAPI net/neoforged/neoforge/server/permission/PermissionAPI</span><br><span class="line">net/minecraftforge/server/permission/events/PermissionGatherEvent$Handler net/neoforged/neoforge/server/permission/events/PermissionGatherEvent$Handler</span><br><span class="line">net/minecraftforge/server/permission/events/PermissionGatherEvent$Nodes net/neoforged/neoforge/server/permission/events/PermissionGatherEvent$Nodes</span><br><span class="line">net/minecraftforge/server/permission/events/PermissionGatherEvent net/neoforged/neoforge/server/permission/events/PermissionGatherEvent</span><br><span class="line">net/minecraftforge/server/permission/exceptions/UnregisteredPermissionException net/neoforged/neoforge/server/permission/exceptions/UnregisteredPermissionException</span><br><span class="line">net/minecraftforge/server/permission/handler/DefaultPermissionHandler net/neoforged/neoforge/server/permission/handler/DefaultPermissionHandler</span><br><span class="line">net/minecraftforge/server/permission/handler/IPermissionHandler net/neoforged/neoforge/server/permission/handler/IPermissionHandler</span><br><span class="line">net/minecraftforge/server/permission/handler/IPermissionHandlerFactory net/neoforged/neoforge/server/permission/handler/IPermissionHandlerFactory</span><br><span class="line">net/minecraftforge/server/permission/nodes/PermissionDynamicContext net/neoforged/neoforge/server/permission/nodes/PermissionDynamicContext</span><br><span class="line">net/minecraftforge/server/permission/nodes/PermissionDynamicContextKey net/neoforged/neoforge/server/permission/nodes/PermissionDynamicContextKey</span><br><span class="line">net/minecraftforge/server/permission/nodes/PermissionNode$PermissionResolver net/neoforged/neoforge/server/permission/nodes/PermissionNode$PermissionResolver</span><br><span class="line">net/minecraftforge/server/permission/nodes/PermissionNode net/neoforged/neoforge/server/permission/nodes/PermissionNode</span><br><span class="line">net/minecraftforge/server/permission/nodes/PermissionType net/neoforged/neoforge/server/permission/nodes/PermissionType</span><br><span class="line">net/minecraftforge/server/permission/nodes/PermissionTypes net/neoforged/neoforge/server/permission/nodes/PermissionTypes</span><br><span class="line">net/minecraftforge/server/permission/<span class="keyword">package</span>-info net/neoforged/neoforge/server/permission/<span class="keyword">package</span>-info</span><br><span class="line">net/minecraftforge/server/timings/ForgeTimings net/neoforged/neoforge/server/timings/ForgeTimings</span><br><span class="line">net/minecraftforge/server/timings/TimeTracker net/neoforged/neoforge/server/timings/TimeTracker</span><br><span class="line">net/minecraftforge/versions/forge/ForgeVersion net/neoforged/neoforge/versions/forge/ForgeVersion</span><br><span class="line">net/minecraftforge/versions/mcp/MCPVersion net/neoforged/neoforge/versions/mcp/MCPVersion</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> neoforge </tag>
            
            <tag> Minecraft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03-neoforge-The big Registry system update is here</title>
      <link href="/2023/11/25/03-neoforge-The-big-Registry-system-update-is-here/"/>
      <url>/2023/11/25/03-neoforge-The-big-Registry-system-update-is-here/</url>
      
        <content type="html"><![CDATA[<h1 id="注册表系统大更新来了"><a href="#注册表系统大更新来了" class="headerlink" title="注册表系统大更新来了"></a>注册表系统大更新来了</h1><h2 id="Introduction-介绍"><a href="#Introduction-介绍" class="headerlink" title="Introduction 介绍"></a>Introduction 介绍</h2><p>NeoForge 20.2.59-beta 版刚刚发布了注册表系统的重大更新！我们的主要目标是尽可能简化代码，并使其与原版 Minecraft 中的注册表系统保持一致。</p><p>这篇博文将介绍所做的最重要的更改，作为模组制作者的迁移指南。</p><p>这次重做是我们最初的 20.2 版本发布后进行的三项重大重做中的第一个。未来几周将进行彻底检修的另外两个系统是<strong>capabilities</strong>和 <strong>networking</strong>.。一旦这些也发布，我们的目标是发布 20.2 稳定版本。</p><h2 id="Using-the-registries-使用注册表"><a href="#Using-the-registries-使用注册表" class="headerlink" title="Using the registries 使用注册表"></a>Using the registries 使用注册表</h2><p>此前，NeoForge 注册表系统与原版完全分开。现在，我们使用原生的现有注册表系统，并添加了一些与 mod 支持相关的内容。</p><p>这意味着 <code>IForgeRegistry</code> 被替换为普通的 <code>Registry</code> 。 NeoForge 通过 <code>IRegistryExtension</code> 向普通 <code>Registry</code> 类型添加了一些方法。以下是更改后的方法的概述：</p><table><thead><tr><th><code>IForgeRegistry</code></th><th><code>Registry</code></th></tr></thead><tbody><tr><td><code>getValue(ResourceLocation)</code></td><td><code>get(ResourceLocation)</code></td></tr><tr><td><code>getKeys()</code></td><td><code>keySet()</code></td></tr><tr><td><code>getValues().stream()</code></td><td><code>stream()</code></td></tr><tr><td><code>getHolder(T)Optional&lt;Holder&gt;</code></td><td><code>wrapAsHolder(T)Holder?</code></td></tr><tr><td><code>tags()</code></td><td>Use <code>getTag(TagKey)</code> and the HolderSet API 使用 <code>getTag(TagKey)</code> 和 HolderSet API</td></tr></tbody></table><p>现在应该通过 <code>BuiltInRegistries</code> 访问 Minecraft 本身定义的注册表：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- ForgeRegistries.ITEMS.getValue(new ResourceLocation(&quot;minecraft:diamond&quot;));</span></span><br><span class="line"><span class="addition">+ BuiltInRegistries.ITEM.get(new ResourceLocation(&quot;minecraft:diamond&quot;));</span></span><br></pre></td></tr></table></figure><p>NeoForge 定义的注册表可以通过 <code>NeoForgeRegistries</code> 访问。它们不再包裹在 <code>Supplier</code> 中，可以直接使用：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- ForgeRegistries.FLUID_TYPES.get().getValue(new ResourceLocation(&quot;mymod:fancyfluid&quot;));</span></span><br><span class="line"><span class="addition">+ NeoForgeRegistries.FLUID_TYPES.get(new ResourceLocation(&quot;mymod:fancyfluid&quot;));</span></span><br></pre></td></tr></table></figure><h2 id="Registration-登记"><a href="#Registration-登记" class="headerlink" title="Registration 登记"></a>Registration 登记</h2><p>注册仍然发生在 <code>RegisterEvent</code> 中，我们仍然建议模组作者使用 <code>DeferredRegister</code> 来抽象事件。</p><p><code>RegistryObject</code> 被 <code>DeferredHolder</code> 取代，它实现了 vanilla 的 <code>Holder</code> 接口。将对象注册到延迟寄存器时，我们推荐两个选项：</p><ul><li>如果您不需要任何 <code>Holder</code> 函数，则可以使用 <code>Supplier</code> 作为字段类型。</li><li>否则，请使用 <code>DeferredHolder</code> 和两个通用参数（一个用于注册表，一个用于您的对象类型）。</li></ul><p>这是一个例子：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  private static final DeferredRegister&lt;Enchantment&gt; ENCHANTMENTS = DeferredRegister.create(Registries.ENCHANTMENT, &quot;mymod&quot;);</span><br><span class="line"></span><br><span class="line"><span class="deletion">- public static final RegistryObject&lt;Enchantment&gt; MAGIC =</span></span><br><span class="line"><span class="deletion">-         ENCHANTMENTS.register(&quot;magic&quot;, () -&gt; new MagicEnchantment(/* create enchantment */));</span></span><br><span class="line"> // Supplier only:</span><br><span class="line"><span class="addition">+ public static final Supplier&lt;MagicEnchantment&gt; MAGIC =</span></span><br><span class="line"><span class="addition">+         ENCHANTMENTS.register(&quot;magic&quot;, () -&gt; new MagicEnchantment(/* create enchantment */));</span></span><br><span class="line">  // Access to both Holder and the exact object type:</span><br><span class="line"><span class="addition">+ public static final DeferredHolder&lt;Enchantment, MagicEnchantment&gt; MAGIC =</span></span><br><span class="line"><span class="addition">+         ENCHANTMENTS.register(&quot;magic&quot;, () -&gt; new MagicEnchantment(/* create enchantment */));</span></span><br></pre></td></tr></table></figure><p>NeoForge 还为实现 <code>ItemLike</code> 的项目和块提供 <code>DeferredHolder</code> 和 <code>DeferredRegister</code> 专门化。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Make sure you use the special DeferredRegister.Blocks and DeferredRegister.Items types,</span></span><br><span class="line"><span class="comment">// NOT DeferredRegister&lt;Block&gt; or DeferredRegister&lt;Item&gt;!</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister.<span class="type">Blocks</span> <span class="variable">BLOCKS</span> <span class="operator">=</span> DeferredRegister.createBlocks(<span class="string">&quot;mymod&quot;</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister.<span class="type">Items</span> <span class="variable">ITEMS</span> <span class="operator">=</span> DeferredRegister.createItems(<span class="string">&quot;mymod&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// If you are registering blocks or items directly, use a normal `register` call:</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredBlock&lt;MyBlock&gt; MY_BLOCK = BLOCKS.register(<span class="string">&quot;my_block&quot;</span>, () -&gt; <span class="keyword">new</span> <span class="title class_">MyBlock</span>(<span class="comment">/* create block */</span>));</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredItem&lt;MyItem&gt; MY_ITEM = ITEMS.register(<span class="string">&quot;my_item&quot;</span>, () -&gt; <span class="keyword">new</span> <span class="title class_">MyItem</span>(<span class="comment">/* create item */</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// There are also a few extra helper functions.</span></span><br><span class="line"><span class="comment">// `registerBlock` to directly register a `new Block` from some block properties:</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredBlock&lt;Block&gt; MY_SIMPLE_BLOCK =</span><br><span class="line">        BLOCKS.registerBlock(<span class="string">&quot;simple_block&quot;</span>, BlockBehaviour.Properties.of().mapColor(MapColor.STONE));</span><br><span class="line"><span class="comment">// `registerItem` to directly register a `new Item` from some item properties:</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredItem&lt;Item&gt; MY_SIMPLE_ITEM =</span><br><span class="line">        ITEMS.registerItem(<span class="string">&quot;simple_item&quot;</span>, <span class="keyword">new</span> <span class="title class_">Item</span>.Properties().stacksTo(<span class="number">1</span>));</span><br><span class="line"><span class="comment">// `registerBlockItem` to directly register a `new BlockItem` for a block:</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredItem&lt;BlockItem&gt; MY_BLOCK_ITEM =</span><br><span class="line">        ITEMS.registerBlockItem(MY_BLOCK);</span><br></pre></td></tr></table></figure><p>像往常一样，不要忘记将 mod 总线传递给 <code>DeferredRegister</code> ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mod(&quot;mymod&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMod</span> &#123;</span><br><span class="line">    <span class="comment">// In case you missed it, mod constructors can now receive a number of optional arguments,</span></span><br><span class="line">    <span class="comment">// including the mod&#x27;s event bus. Unrelated to registries, but still pretty cool. ;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyMod</span><span class="params">(IEventBus modEventBus)</span> &#123;</span><br><span class="line">        ENCHANTMENTS.register(modEventBus);</span><br><span class="line">        BLOCKS.register(modEventBus);</span><br><span class="line">        ITEMS.register(modEventBus);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Custom-registries-自定义注册表"><a href="#Custom-registries-自定义注册表" class="headerlink" title="Custom registries 自定义注册表"></a>Custom registries 自定义注册表</h2><p>自定义注册表是使用 <code>RegistryBuilder</code> 创建的，并且必须注册到 <code>NewRegistryEvent</code> 。它们现在可以保存在静态字段中，就像 <code>BuiltInRegistries</code> 或 <code>NeoForgeRegistries</code> 中的注册表一样。</p><p>这是一个注册示例，使用 <code>DeferredRegister</code> 提供的辅助方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Create a registry key - we don&#x27;t have a registry yet so give the key to DeferredRegister.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ResourceKey&lt;Registry&lt;Custom&gt;&gt; CUSTOM_REGISTRY_KEY =</span><br><span class="line">        ResourceKey.createRegistryKey(<span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(<span class="string">&quot;mymod:custom&quot;</span>));</span><br><span class="line"><span class="comment">// Create the DeferredRegister with our registry key.</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Custom&gt; CUSTOMS =</span><br><span class="line">        DeferredRegister.create(CUSTOM_REGISTRY_KEY, <span class="string">&quot;mymod&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// We can register objects as usual...</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Holder&lt;Custom&gt; CUSTOM_OBJECT =</span><br><span class="line">        CUSTOMS.register(<span class="string">&quot;custom_object&quot;</span>, () -&gt; <span class="keyword">new</span> <span class="title class_">Custom</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// And here is how to create the registry!</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Registry&lt;Custom&gt; CUSTOM_REGISTRY =</span><br><span class="line">        CUSTOMS.makeRegistry(builder -&gt; <span class="comment">/* use builder to configure registry if needed */</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Remember to register CUSTOMS in the mod constructor!</span></span><br></pre></td></tr></table></figure><p>另一种方法是直接使用 <code>RegistryBuilder</code> 创建注册表，并手动注册它：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// We still need a registry key.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ResourceKey&lt;Registry&lt;Custom&gt;&gt; CUSTOM_REGISTRY_KEY =</span><br><span class="line">        ResourceKey.createRegistryKey(<span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(<span class="string">&quot;mymod:custom&quot;</span>));</span><br><span class="line"><span class="comment">// Create the registry directly...</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Registry&lt;Custom&gt; CUSTOM_REGISTRY = <span class="keyword">new</span> <span class="title class_">RegistryBuilder</span>&lt;&gt;(CUSTOM_REGISTRY_KEY)</span><br><span class="line">    <span class="comment">// configure the builder if you want, for example with .sync(true)</span></span><br><span class="line">    <span class="comment">// then build the registry</span></span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Remember to tell NeoForge about your registry! For example:</span></span><br><span class="line">modEventBus.addListener(NewRegistryEvent.class, event -&gt; event.register(CUSTOM_REGISTRY));</span><br></pre></td></tr></table></figure><h2 id="That’s-it-就是这样！"><a href="#That’s-it-就是这样！" class="headerlink" title="That’s it! 就是这样！"></a>That’s it! 就是这样！</h2><p>像往常一样，如果您有任何问题，请在 <code>#modder-support-1.20</code> 频道中的 Discord 服务器上提问。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> noeforge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02-neoforge-Event system changes in NeoForge 20.2</title>
      <link href="/2023/11/25/02-neoforge-Event-system-changes-in-NeoForge-20-2/"/>
      <url>/2023/11/25/02-neoforge-Event-system-changes-in-NeoForge-20-2/</url>
      
        <content type="html"><![CDATA[<h1 id="Event-system-changes-in-NeoForge-20-2-NeoForge-20-2-中的事件系统更改"><a href="#Event-system-changes-in-NeoForge-20-2-NeoForge-20-2-中的事件系统更改" class="headerlink" title="Event system changes in NeoForge 20.2(NeoForge 20.2 中的事件系统更改)"></a>Event system changes in NeoForge 20.2(NeoForge 20.2 中的事件系统更改)</h1><h2 id="Introduction-介绍"><a href="#Introduction-介绍" class="headerlink" title="Introduction 介绍"></a>Introduction 介绍</h2><p>在过去的几周里，我们一直致力于更新我们的event system。这篇博文将详细介绍所做的所有更改，作为更新到 NeoForge 20.2 的模组制作者的迁移指南。</p><p>请注意，这篇文章不涵盖特定事件，而是对事件机制本身所做的更改。</p><h2 id="Key-changes-主要变化"><a href="#Key-changes-主要变化" class="headerlink" title="Key changes 主要变化"></a>Key changes 主要变化</h2><h3 id="Package-change-包变化"><a href="#Package-change-包变化" class="headerlink" title="Package change 包变化"></a>Package change 包变化</h3><p>根包从 <code>net.minecraftforge.eventbus</code> 更改为 <code>net.neoforged.bus</code> 。因此，API 现在位于 <code>net.neoforged.bus.api</code> 中。</p><p>迁移示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- import net.minecraftforge.eventbus.api.EventBus;</span><br><span class="line">+ import net.neoforged.bus.api.EventBus;</span><br></pre></td></tr></table></figure><p>如果您错过了它，可以使用一个重新映射脚本来应用所有包更改。<a href="https://gist.github.com/Technici4n/facbcdf18ce1a556b76e6027180c32ce">Renaming script for the class renames introduced in the 20.2 NeoForge release (github.com)</a></p><h3 id="Cancellable-event-changes-可取消的活动变更"><a href="#Cancellable-event-changes-可取消的活动变更" class="headerlink" title="Cancellable event changes (可取消的活动变更)"></a>Cancellable event changes (可取消的活动变更)</h3><p>可取消事件现在应该实现 <code>ICancellableEvent</code> 而不是使用 <code>@Cancelable</code> 注释：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- @Cancelable</span></span><br><span class="line"><span class="deletion">- public class MyEvent extends Event &#123;</span></span><br><span class="line"><span class="addition">+ public class MyEvent extends Event implements ICancellableEvent &#123;</span></span><br><span class="line">      // Your event code</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>使用 <code>setCanceled(true)</code> 取消事件，使用 <code>isCanceled()</code> 检查事件是否被取消。这并没有改变。</p><p><code>post</code> 现在返回已发布的事件，而不是事件是否被取消。您可以对结果调用 <code>isCanceled()</code> 来实现之前的行为：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- if (NeoForge.EVENT_BUS.post(new MyEvent())) &#123;</span></span><br><span class="line"><span class="addition">+ if (NeoForge.EVENT_BUS.post(new MyEvent()).isCanceled()) &#123;</span></span><br><span class="line">      // Do something if the event was canceled</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="更新了-SubscribeEvent-语义"><a href="#更新了-SubscribeEvent-语义" class="headerlink" title="更新了 @SubscribeEvent 语义"></a>更新了 <code>@SubscribeEvent</code> 语义</h3><p>我们更改了有关当对象或类 <code>register</code> 被添加到事件总线时如何检测 <code>@SubscribeEvent</code> 方法的一些详细信息：</p><p>将对象或类注册到新行为的新行为如下：</p><ul><li>目标对象中的所有 <code>@SubscribeEvent</code> 方法（无论可见性如何）均已注册。不再有 <code>@SubscribeEvent</code> 方法的继承，现在可以使用私有方法。</li><li>注册类的超类或超接口不允许有任何使用 <code>@SubscribeEvent</code> 声明的方法。这可以防止开发人员认为继承有效的错误。</li><li>如果任何 <code>@SubscribeEvent</code> 方法的静态性不匹配，则会抛出错误： <code>Class</code> 的注册必须是 <code>static</code> ，并且对象的注册必须是非 <code>static</code> 。这可以防止 <code>static</code> 被遗忘或不必要的错误。</li><li>如果不存在 <code>@SubscribeEvent</code> 方法，则会抛出错误。这可以防止忘记 <code>@SubscribeEvent</code> 注释。</li></ul><h3 id="abstract-事件无法再监听"><a href="#abstract-事件无法再监听" class="headerlink" title="abstract 事件无法再监听"></a><code>abstract</code> 事件无法再监听</h3><p>无法再监听 <code>abstract</code> 事件。这应该有助于防止开发人员意外监听超类的错误，例如监听 <code>SomeEvent</code> 而不是 <code>SomeEvent.Pre</code> 。 <code>abstract</code> 事件的所有超类现在都必须是抽象的。</p><p>将许多 NeoForge 事件处理为 <code>abstract</code> 来防止开发人员犯错误。</p><h3 id="更新了-mod-总线语义"><a href="#更新了-mod-总线语义" class="headerlink" title="更新了 mod 总线语义"></a>更新了 mod 总线语义</h3><p>Forge 总线将不再允许监听器实现 <code>IModBusEvent</code> 的事件。这应该可以防止订阅错误的事件总线。</p><p>此外，通过 <code>ModLoader</code> 在 mod 总线上分派的事件（例如所有 NeoForge 注册事件）现在尊重不同总线之间的事件优先级。 （例如，使用 <code>EventPriority.LOW</code> 注册的侦听器将始终在使用 <code>EventPriority.NORMAL</code> 注册的其他 mods 的侦听器之前运行。）</p><p>我们为 <code>IEventBus#addListener</code> 的 lambda 注册添加了一些方便的重载。例如，现在可以进行以下操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bus.addListener(SomeEvent.class, event -&gt; &#123;</span><br><span class="line">    <span class="comment">// Listener code here.</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Generic-events-已弃用并删除"><a href="#Generic-events-已弃用并删除" class="headerlink" title="Generic events 已弃用并删除"></a>Generic events 已弃用并删除</h3><p>Generic events 已经是删除的废弃状态，并将在将来删除 <a href="https://neoforged.net/news/20.2eventbus-changes/#fn:1">1</a> 。我们鼓励模组制作者不再使用他们。 NeoForge 仍然仅将它们用于 <code>AttachCapabilitiesEvent</code> 。我们将在功能重做中解决这个问题。</p><h3 id="Event-results-正在逐步淘汰"><a href="#Event-results-正在逐步淘汰" class="headerlink" title="Event results 正在逐步淘汰"></a>Event results 正在逐步淘汰</h3><p>目前，仅弃用删除 <code>@Event.HasResult</code> 注释。我们最终将删除 <code>getResult()</code> 和 <code>setResult(result)</code> 方法，但是 NeoForge 中的许多事件仍然依赖于它们。</p><p>如果您对某些事件使用此注释，我们鼓励您改用自定义 <code>enum</code> 类型，因为它们对于 API 用户来说更清晰。</p><p>如果您仅使用 <code>getResult</code> 和 <code>setResult</code> 方法，则无需执行任何操作。</p><h2 id="Other-changes-其他变化"><a href="#Other-changes-其他变化" class="headerlink" title="Other changes 其他变化"></a>Other changes 其他变化</h2><ul><li><p>删除子类转换器：以前，事件子类的无参数构造函数必须是 <code>public</code> 。现在情况已不再如此 - 如果您愿意，您现在可以创建这样的构造函数 <code>protected</code> 、包私有或 <code>private</code> 。</p></li><li><p><code>Event#getPhase</code> 和 <code>Event#setPhase</code> 已删除。</p></li><li><p>现在，在调用 <code>Event#setResult</code> 时会检查 <code>@Event.HasResult</code> 。 <code>Event#hasResult</code> 和 <code>Event#getResult</code> 现已最终确定。</p></li><li><p><code>EventListenerHelper</code> 已从 API 中删除。</p></li><li><p><code>EventListener</code> 使用 <code>toString</code> 进行人类可读的描述（ <code>listenerName</code> 已删除）。</p></li><li><p>性能改进：自动删除不可取消事件的 <code>isCanceled</code> 检查。</p></li><li><p><code>IEventListener</code> 被重命名为 <code>EventListener</code> 并出于性能原因更改为抽象类。</p></li><li><p>ModLauncher 挂钩被删除，大大简化了事件总线的实现。</p></li><li><p><code>IEventBusInvokeDispatcher</code> 已被删除。</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> neoforge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01-neoforge-NeoForge 20.2 for Minecraft 1.20.2</title>
      <link href="/2023/11/25/01-neoforge-NeoForge-20-2-for-Minecraft-1-20-2/"/>
      <url>/2023/11/25/01-neoforge-NeoForge-20-2-for-Minecraft-1-20-2/</url>
      
        <content type="html"><![CDATA[<h1 id="NeoForge-20-2-for-Minecraft-1-20-2-（NeoForge20-2支持我的世界1-20-2）"><a href="#NeoForge-20-2-for-Minecraft-1-20-2-（NeoForge20-2支持我的世界1-20-2）" class="headerlink" title="NeoForge 20.2 for Minecraft 1.20.2 （NeoForge20.2支持我的世界1.20.2）"></a>NeoForge 20.2 for Minecraft 1.20.2 （NeoForge20.2支持我的世界1.20.2）</h1><p>NeoForge for Minecraft 1.20.2 的第一个测试版现已发布。请尝试一下，使用它，使用它进行开发，并向我们提供反馈！我们还不稳定，因此预计未来几周会发生一些重大变化。</p><p>对于玩家来说，您可以直接从 <a href="https://neoforged.net/">https://neoforged.net/</a> 获取最新的安装程序。</p><p>对于模组作者来说，这篇博文的其余部分适合您。</p><h2 id="Versioning-（版本）"><a href="#Versioning-（版本）" class="headerlink" title="Versioning （版本）"></a>Versioning （版本）</h2><p>NeoForge 版本今后将使用以下版本格式： <code>&lt;minecraft_minor&gt;.&lt;minecraft_patch&gt;.&lt;number&gt;(-beta)</code> 。这意味着 Minecraft 1.20.2 的所有版本都将格式化为 <code>20.2.*</code> 。 <code>-beta</code> 标签表示该版本不稳定，并且可能会在“number”版本之间发生重大更改。</p><h2 id="Toolchain-Updates（-工具链更新）"><a href="#Toolchain-Updates（-工具链更新）" class="headerlink" title="Toolchain Updates（ 工具链更新）"></a>Toolchain Updates（ 工具链更新）</h2><p>我们现在到处都在使用 MojMaps。这极大地简化了工具链、简化了 mod 构建、允许调试正在运行的 modpack 以及许多其他好处。</p><p>Gradle 插件（现在称为 NeoGradle）进行了大幅重写，为 mod 和 NeoForge 的开发人员提供了大幅加速，并带来了许多可用性优势。要迁移您的构建脚本，请查看更新的 MDK。</p><p>我们预计新的工具链将更加易于使用。如果您需要帮助，Discord 服务器上的 <code>#modder-support-1.20</code> 就是您所寻找的。像往常一样，请报告您可能发现的任何错误，以便我们修复它。</p><h2 id="NeoForge-Changes-（NeoForge-的变化）"><a href="#NeoForge-Changes-（NeoForge-的变化）" class="headerlink" title="NeoForge Changes （NeoForge 的变化）"></a>NeoForge Changes （NeoForge 的变化）</h2><p>所有包都已更改为 <code>net.neoforged</code> 。我们还在 NeoForge 本身中重命名了一些类。以下是这些重命名的完整列表。</p><p>如果您的 mod 是用 Java 编写的，您可以使用此重新映射脚本自动应用类和包重命名。</p><p>NeoForge 的新 modid 是… <code>neoforge</code> 。这意味着您必须更新 <code>mods.toml</code> 文件，以及可能仍引用 <code>forge</code> modid 的任何资源。</p><p>一个值得注意的例外是标签，它目前仍然位于 <code>forge</code> 命名空间下。我们正在与 Fabric 协调，提供两个加载程序共享的新约定，但这仅从 Minecraft 1.21 开始可用。</p><h2 id="Event-System-Changes（-事件系统变更）"><a href="#Event-System-Changes（-事件系统变更）" class="headerlink" title="Event System Changes（ 事件系统变更）"></a>Event System Changes（ 事件系统变更）</h2><p>我们对事件系统进行了多项改进。您可以在我们的专门博客文章中阅读有关它们的所有信息。</p><h2 id="Minecraft-Changes-（我的世界的变化）"><a href="#Minecraft-Changes-（我的世界的变化）" class="headerlink" title="Minecraft Changes （我的世界的变化）"></a>Minecraft Changes （我的世界的变化）</h2><p>Minecraft 1.20.2 本身带来了一些变化。我们将来将提供入门&#x2F;指南。</p><h2 id="Coming-Soon-（即将推出）"><a href="#Coming-Soon-（即将推出）" class="headerlink" title="Coming Soon （即将推出）"></a>Coming Soon （即将推出）</h2><p>在稳定 20.2 之前，我们希望在未来几周内做出一些改变。</p><p>我们将重新设计我们的能力和注册系统，以解决长期存在的问题。如果您使用它们，您的模组可能会损坏。如果您对讨论感兴趣，我们鼓励您加入我们的 Discord 服务器并查看 <code>#brainstorming</code> 论坛频道。</p><p>我们还将调整我们的网络挂钩和协议，以适应 Mojang 引入的新配置阶段。</p><p>这些是我们的大型短期计划，但我们也欢迎各种较小的贡献。 NeoForge 的重大变更窗口现已开放，我们预计它会保持开放一段时间！现在是开始处理 Pull 请求的好时机。</p><h2 id="1-20-1-Plans-（1-20-1-计划）"><a href="#1-20-1-Plans-（1-20-1-计划）" class="headerlink" title="1.20.1 Plans （1.20.1 计划）"></a>1.20.1 Plans （1.20.1 计划）</h2><p>我们的首要任务是为未来做好准备，并在未来几年尽可能地改进 NeoForge。这只能在最新的分支上进行。</p><p>然而，如果时间允许，我们仍然会合并针对 1.20.1 分支的 PR，前提是它们也提交到 1.20.2 分支并被 1.20.2 分支接受。</p><h2 id="Final-Notes-（最后的注释）"><a href="#Final-Notes-（最后的注释）" class="headerlink" title="Final Notes （最后的注释）"></a>Final Notes （最后的注释）</h2><p>感谢为移植提供帮助的团队成员。感谢社区耐心等待此版本。感谢所有选择加入我们这次冒险的人。我们期待继续为您改进 NeoForge。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> Neoforge更新汉化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mincraft源码06-block</title>
      <link href="/2023/11/23/Mincraft%E6%BA%90%E7%A0%8106-block/"/>
      <url>/2023/11/23/Mincraft%E6%BA%90%E7%A0%8106-block/</url>
      
        <content type="html"><![CDATA[<h1 id="Block"><a href="#Block" class="headerlink" title="Block"></a>Block</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Block</span> <span class="keyword">extends</span> <span class="title class_">BlockBehaviour</span> <span class="keyword">implements</span> <span class="title class_">ItemLike</span>, net.neoforged.neoforge.common.extensions.IBlockExtension &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个缓存,通过一个 VoxelShape 快速判断它是否是一个完整的方块</span></span><br><span class="line"> LoadingCache&lt;VoxelShape, Boolean&gt; SHAPE_FULL_BLOCK_CACHE</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 邻近方块更新标记</span></span><br><span class="line">UPDATE_NEIGHBORS </span><br><span class="line">    <span class="comment">// 通知客户端方块改变标记 </span></span><br><span class="line">UPDATE_CLIENTS</span><br><span class="line">    <span class="comment">//  不可见的方块改变标记</span></span><br><span class="line">  UPDATE_INVISIBLE</span><br><span class="line">    <span class="comment">// 立即更新标记</span></span><br><span class="line">UPDATE_IMMEDIATE</span><br><span class="line">    <span class="comment">// 更新时使用已知的方块形状标记</span></span><br><span class="line">UPDATE_KNOWN_SHAPE </span><br><span class="line">UPDATE_SUPPRESS_DROPS </span><br><span class="line">UPDATE_MOVE_BY_PISTON </span><br><span class="line">UPDATE_NONE </span><br><span class="line">UPDATE_ALL </span><br><span class="line">UPDATE_ALL_IMMEDIATE</span><br><span class="line">INDESTRUCTIBLE</span><br><span class="line">INSTANT </span><br><span class="line">UPDATE_LIMIT </span><br><span class="line">    <span class="comment">//// 定义Block状态的状态定义,用于映射Block到其状态</span></span><br><span class="line">StateDefinition&lt;Block, BlockState&gt; stateDefinition;</span><br><span class="line">    <span class="comment">// Block的默认状态</span></span><br><span class="line"> BlockState defaultBlockState;</span><br><span class="line">    <span class="comment">// Block的描述ID,可为空</span></span><br><span class="line">String descriptionId;</span><br><span class="line">    <span class="comment">// 与这个Block相关的Item,可为空 </span></span><br><span class="line">Item item;</span><br><span class="line">    <span class="comment">// 用于遮挡(光照)计算的缓存大小</span></span><br><span class="line"><span class="type">int</span> <span class="variable">CACHE_SIZE</span> <span class="operator">=</span> <span class="number">2048</span>;</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 获取BlockState的id,如果为null则返回0  </span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">(<span class="meta">@Nullable</span> BlockState )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 通过id获取BlockState,如果不存在则返回AIR的默认状态</span></span><br><span class="line">     BlockState <span class="title function_">stateById</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 通过Item获取其相关的Block,如果不是BlockItem则返回AIR</span></span><br><span class="line">     Block <span class="title function_">byItem</span><span class="params">(<span class="meta">@Nullable</span> Item )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 当一个BlockState被另一个取代时,移动实体到上方避免卡住</span></span><br><span class="line">     BlockState <span class="title function_">pushEntitiesUp</span><span class="params">(_)</span> &#123;</span><br><span class="line">      </span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//创建一个表示方块碰撞箱的VoxelShape,输入是原始像素大小,会自动缩放到1/16大小</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> VoxelShape <span class="title function_">box</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//// 根据相邻方块更新方块状态</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> BlockState <span class="title function_">updateFromNeighbourShapes</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 更新方块或者销毁</span></span><br><span class="line">     <span class="keyword">void</span> <span class="title function_">updateOrDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">         <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 更新或销毁方块</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">updateOrDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">Block</span><span class="params">(BlockBehaviour.Properties )</span> </span><br><span class="line">       <span class="comment">//此处实现</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 判断一个BlockState是否是用于连接检查的例外</span></span><br><span class="line">     <span class="type">boolean</span> <span class="title function_">isExceptionForConnection</span><span class="params">(BlockState )</span> &#123;</span><br><span class="line">           <span class="comment">// 如果是树叶Block、障碍物、南瓜、瓜块、潜影盒等返回true</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//// 直接返回是否随机tick的属性</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isRandomlyTicking</span><span class="params">(BlockState )</span> </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//该方法用于判断是否应该渲染方块的某个面。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">shouldRenderFace</span><span class="params">(BlockState , BlockGetter , BlockPos , Direction , BlockPos )</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删了 刚体</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//该方法用于判断指定方块形状的指定方向的面是否完整</span></span><br><span class="line">     <span class="type">boolean</span> <span class="title function_">isFaceFull</span><span class="params">(VoxelShape , Direction )</span> &#123;</span><br><span class="line">       <span class="comment">///获取指定方块形状的指定方向的面的形状，并判断该形状是否是完整方块</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 该方法用于判断指定方块形状是否是完整方块</span></span><br><span class="line">     <span class="type">boolean</span> <span class="title function_">isShapeFullBlock</span><span class="params">(VoxelShape )</span> &#123;</span><br><span class="line">       <span class="comment">//通过缓存对象判断指定方块形状是否是完整方块，并返回结果</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//// 该方法用于判断指定方块状态是否向下传播天空光照</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">propagatesSkylightDown</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">//// 该方法用于执行方块的动画更新</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">animateTick</span><span class="params">(BlockState , Level , BlockPos , RandomSource )</span> &#123;</span><br><span class="line">       <span class="comment">// 该方法为空，没有具体的实现</span></span><br><span class="line">       <span class="comment">//低于传送门</span></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">//// 该方法用于销毁方块</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">(LevelAccessor , BlockPos , BlockState )</span> &#123;</span><br><span class="line">        </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">/// 该方法用于获取方块掉落的物品堆列表</span></span><br><span class="line">     List&lt;ItemStack&gt; getDrops &#123;</span><br><span class="line">       <span class="comment">//// 创建一个掉落参数构建器，并设置掉落上下文的相关参数</span></span><br><span class="line"> </span><br><span class="line">       <span class="comment">//调用方块状态的getDrops方法获取物品堆列表，并返回结果</span></span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//// 该方法用于获取方块掉落的物品堆列表，包括了更多的参数</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> List&lt;ItemStack&gt; <span class="title function_">getDrops</span><span class="params">(</span></span><br><span class="line"><span class="params">      BlockState , ServerLevel , BlockPos ,  BlockEntity ,  Entity , ItemStack </span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line">       <span class="comment">// 创建一个掉落参数构建器，并设置掉落上下文的相关参数</span></span><br><span class="line">    </span><br><span class="line">       <span class="comment">//// 调用方块状态的getDrops方法获取物品堆列表，并返回结果</span></span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//// 该方法用于让方块掉落资源</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">dropResources</span><span class="params">(BlockState , Level , BlockPos )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//// 该方法用于让方块掉落资源</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">dropResources</span><span class="params">(BlockState , LevelAccessor , BlockPos ,  BlockEntity )</span> &#123;</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">//// 重载方法：该方法用于让方块掉落资源，并指定是否掉落经验球</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">dropResources</span><span class="params">(</span></span><br><span class="line"><span class="params">      BlockState , Level , BlockPos , <span class="meta">@Nullable</span> BlockEntity , <span class="meta">@Nullable</span> Entity , ItemStack </span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line">       <span class="comment">//// 调用原始的dropResources方法，并设置dropXp参数为true</span></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="comment">///// 重载方法：该方法用于让方块掉落资源，并指定是否掉落经验球</span></span><br><span class="line">     <span class="keyword">void</span> <span class="title function_">dropResources</span><span class="params">(BlockState , Level , BlockPos , <span class="meta">@Nullable</span> BlockEntity , <span class="meta">@Nullable</span> Entity  ItemStack , <span class="type">boolean</span> dropXp)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">//// 该方法用于在指定位置生成一个掉落物实体</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">popResource</span><span class="params">(Level , BlockPos , ItemStack )</span> &#123;</span><br><span class="line">       <span class="comment">//// 计算掉落物的生成位置</span></span><br><span class="line">    </span><br><span class="line">       <span class="comment">//// 调用popResource方法生成掉落物实体并添加到世界中</span></span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">        <span class="comment">//这里说的乱，等我之后有时间重新配音，先用旧视频的配音。</span></span><br><span class="line">        <span class="comment">//掉落延迟是玩家拾取的间隔</span></span><br><span class="line">        <span class="comment">// 这里的就是在此方块生成掉落物</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//// 该方法用于在指定位置的指定方向生成一个掉落物实体</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">popResourceFromFace</span><span class="params">(Level , BlockPos , Direction , ItemStack )</span> &#123;</span><br><span class="line">       <span class="comment">/// 根据方向计算掉落物的生成位置</span></span><br><span class="line">     </span><br><span class="line">      <span class="comment">//// 调用popResource方法生成掉落物实体并添加到世界中</span></span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 该方法用于生成掉落物实体并添加到世界中</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">popResource</span><span class="params">(Level , Supplier&lt;ItemEntity&gt; , ItemStack )</span> </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 该方法用于在指定位置生成经验球实体</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">popExperience</span><span class="params">(ServerLevel , BlockPos , <span class="type">int</span> )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法返回方块的爆炸抗性</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">//Forge: Use more sensitive version</span></span><br><span class="line">     getExplosionResistance() &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 该方法在方块被爆炸时调用</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> wasExploded &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法在实体踩踏方块时调用</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stepOn</span><span class="params">(Level , BlockPos , BlockState , Entity )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法用于在放置方块时获取方块的状态</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">public</span> BlockState <span class="title function_">getStateForPlacement</span><span class="params">(BlockPlaceContext )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法在玩家破坏方块时调用</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playerDestroy</span><span class="params">(Level , Player , BlockPos , BlockState , <span class="meta">@Nullable</span> BlockEntity , ItemStack )</span> &#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//// 调用dropResources方法丢弃方块的资源（不包括经验球）</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//// 该方法在方块被放置时调用</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setPlacedBy</span><span class="params">(Level , BlockPos , BlockState , <span class="meta">@Nullable</span> LivingEntity , ItemStack )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/// 该方法判断方块是否可以重生</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isPossibleToRespawnInThis</span><span class="params">(BlockState )</span> &#123;</span><br><span class="line">       <span class="comment">//// 如果方块不是实心且不是液体，则可以重生</span></span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//// 该方法返回方块的名称</span></span><br><span class="line">   <span class="keyword">public</span> MutableComponent <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法返回方块的描述标识</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getDescriptionId</span><span class="params">()</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法在实体掉落到方块上时调用</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fallOn</span><span class="params">(Level , BlockState , BlockPos , Entity , <span class="type">float</span> )</span> &#123;</span><br><span class="line">       <span class="comment">// 使实体受到摔落伤害</span></span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法在实体掉落到方块上后更新实体状态</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateEntityAfterFallOn</span><span class="params">(BlockGetter , Entity )</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法返回方块的克隆itemstack</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">//Forge: Use more sensitive version</span></span><br><span class="line">    ItemStack <span class="title function_">getCloneItemStack</span><span class="params">(BlockGetter , BlockPos , BlockState )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法返回方块的摩擦系数</span></span><br><span class="line">    <span class="type">float</span> <span class="title function_">getFriction</span><span class="params">()</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法返回方块的速度因子</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getSpeedFactor</span><span class="params">()</span> &#123;</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法返回方块的跳跃因子</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getJumpFactor</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法在方块被破坏时生成破坏粒子效果</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">spawnDestroyParticles</span><span class="params">(Level , Player , BlockPos , BlockState )</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//// 该方法在玩家即将破坏方块时调用</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playerWillDestroy</span><span class="params">(Level, BlockPos , BlockState , Player )</span> &#123;</span><br><span class="line">       <span class="comment">//// 生成破坏粒子效果</span></span><br><span class="line">       <span class="comment">//// 如果方块属于GUARDED_BY_PIGLINS标签，则激怒周围的猪灵</span></span><br><span class="line"><span class="comment">// 发送方块销毁的游戏事件</span></span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法处理方块与降水的交互（例如雨、雪等</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handlePrecipitation</span><span class="params">(BlockState , Level , BlockPos , Biome.Precipitation )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法确定方块在爆炸中是否会掉落</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">//Forge: Use more sensitive version</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">dropFromExplosion</span><span class="params">(Explosion )</span> &#123;</span><br><span class="line">   </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 该方法用于创建方块的状态定义</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">createBlockStateDefinition</span><span class="params">(StateDefinition.Builder&lt;Block, BlockState&gt; )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 该方法返回方块的状态定义</span></span><br><span class="line">    StateDefinition&lt;Block, BlockState&gt; <span class="title function_">getStateDefinition</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 该方法注册方块的默认状态</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">registerDefaultState</span><span class="params">(BlockState p_49960_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 该方法返回方块的默认状态</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">final</span> BlockState <span class="title function_">defaultBlockState</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">//// 该方法通过另一个方块的状态来设置当前方块的状态</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">final</span> BlockState <span class="title function_">withPropertiesOf</span><span class="params">(BlockState )</span> &#123;</span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 该方法复制一个方块状态的属性值到另一个方块状态中</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Comparable</span>&lt;T&gt;&gt; BlockState <span class="title function_">copyProperty</span><span class="params">(BlockState p_152455_, BlockState , Property&lt;T&gt; )</span> &#123;</span><br><span class="line">       <span class="comment">// 使用另一个方块状态的属性值设置当前方块状态的属性值</span></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 该方法返回方块的声音类型</span></span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">//Forge: Use more sensitive version &#123;@link IForgeBlockState#getSoundType(IWorldReader, BlockPos, Entity) &#125;</span></span><br><span class="line">   <span class="keyword">public</span> SoundType <span class="title function_">getSoundType</span><span class="params">(BlockState )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 重写的方法，返回方块对应的物品对象</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> Item <span class="title function_">asItem</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line"><span class="comment">// 返回物品对象forge部分删除了</span></span><br><span class="line"> <span class="comment">// Forge: Vanilla caches the items, update with registry replacements.</span></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 判断方块是否具有动态形状</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasDynamicShape</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="comment">// 添加悬停文本，用于显示方块的信息</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">appendHoverText</span><span class="params">(ItemStack p_49816_, <span class="meta">@Nullable</span> BlockGetter p_49817_, List&lt;Component&gt; p_49818_, TooltipFlag p_49819_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 重写的方法，返回当前方块对象</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> Block <span class="title function_">asBlock</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 重写的方法，判断方块是否能支撑植物</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canSustainPlant</span><span class="params">(BlockState state, BlockGetter world, BlockPos pos, Direction facing, net.neoforged.neoforge.common.IPlantable plantable)</span> &#123;</span><br><span class="line">       <span class="comment">// 获取植物的方块状态和植物类型</span></span><br><span class="line">     </span><br><span class="line"><span class="comment">// 如果植物是仙人掌</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">// 如果植物是甘蔗，当前方块也是甘蔗</span></span><br><span class="line">     </span><br><span class="line"><span class="comment">// 如果植物是 BushBlock，并且可以放置在当前方块上</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">// 根据植物类型进行判断</span></span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 尝试掉落经验的方法，接受服务器级别、方块坐标、物品堆叠和经验提供者作为参数</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">tryDropExperience</span><span class="params">(ServerLevel , BlockPos , ItemStack , IntProvider )</span> </span><br><span class="line">     </span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 第一个方块状态、第二个方块状态和方向的私有字段</span></span><br><span class="line"><span class="comment">// 比较的方块，可以自己去看相关内容</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">BlockStatePairKey</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写的 equals 方法，判断两个 BlockStatePairKey 对象是否相等</span></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object )</span> &#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> Java </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文03：MF-SRCDNet</title>
      <link href="/2023/11/23/%E8%AE%BA%E6%96%8703%EF%BC%9AMF-SRCDNet/"/>
      <url>/2023/11/23/%E8%AE%BA%E6%96%8703%EF%BC%9AMF-SRCDNet/</url>
      
        <content type="html"><![CDATA[<h1 id="MF-SRCDNet：多传感器高分辨率遥感图像的多特征融合超分辨率建筑物变化检测框架"><a href="#MF-SRCDNet：多传感器高分辨率遥感图像的多特征融合超分辨率建筑物变化检测框架" class="headerlink" title="MF-SRCDNet：多传感器高分辨率遥感图像的多特征融合超分辨率建筑物变化检测框架"></a>MF-SRCDNet：多传感器高分辨率遥感图像的多特征融合超分辨率建筑物变化检测框架</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>建筑变化检测对于评估土地利用、土地覆盖变化和可持续发展至关重要。然而，由于多传感器分辨率不匹配以及高分辨率图像特征的复杂性，传统的建筑物变化检测方法在准确性和适用性方面存在问题。在本研究中，我们提出了一种基于深度学习的多特征融合超分辨率建筑变化检测框架（MF-SRCDNet），包括超分辨率（SR）、多特征融合和变化检测（CD）模块。SR模块引入Res-UNet网络来生成具有丰富语义信息的统一SR图像。为了提高MF SRCDNet在复杂建筑检测中的性能，设计了一种有效的直角边缘视觉特征，并将其与具有改进特征提取器的CD模块融合。与不同的模块相比，所提出的方法在三个数据集中分别获得了0.881、0.857和0.964的最高FI值。结果还表明，在不同的双时间图像分辨率尺度差异实验中，鲁棒性得到了提高。本研究提出的方法可以应用于各种复杂场景，构建具有较强模型泛化能力的CD任务。</p><ul><li>建筑变化检测的作用，或者本文的应用意义</li><li>传统方法存在准确性和适用性存在的问题以及原因是什么</li><li>本论文是怎么解决这个问题的。提出了MF-SRCDNet。</li><li>MF-SRCDNet是基于什么的</li><li>网络结构包含了哪几部分</li><li>SR模块的形式，引入Res-UNet原因</li><li>设计特色的直接边缘特征提高了性能</li><li>CD网络的结构</li><li>说明本论文呢网络模型和方法的有效性和鲁棒性以及复杂场景的适用性。</li></ul><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p>建筑物是人类活动的重要场所。在全球城市化日益加剧的背景下，对建筑物新建、拆除、改建和扩建的变化进行动态监测，对自然资源管理、城市可持续发展、灾害应急管理、，以及生态环境保护（Zhu et al.2022）。变<strong>化检测（CD）</strong>方法可以识别同一地理区域内不同阶段的<strong>遥感图像（RSIs）</strong>之间的差异（Singh，1989）。近年来，遥感技术迅速发展，世界各国都发射了高分辨率光学卫星，如QuickBird、Worldview-3和SuperView-1。高空间分辨率遥感图像RSI提供了更丰富的建筑轮廓和改进的纹理细节，并逐渐成为检测精细建筑变化的主要数据源。</p><ul><li>建筑变化检测的意义</li><li>变化检测的作用</li><li>时代发展带来的遥感图像的变化</li></ul><p>RSI构建CD的传统方法通常根据分析单元分为两类：基于像素的方法和面向对象的CD方法。然而基于像素的CD方法无法处理图像元素变化较大、经历大量”椒盐卷饼噪声“的场景。面向对象的CD方法的准确性严重受分割结果的影响，并且由于其分类器结构较浅，其深度特征提取受到限制（Wang et al.，2021）。深度学习（DL）近年来，可以从原始数据中自动提取复杂、层次和非线性语义特征的方法已被广泛用于高分辨率RSI特征智能CD（Shafique et al.，2022）。然而，大多数传统的DL策略使用后分类比较或直接分类方法。以前的CD结果的最终精度很容易受到分类图的影响，导致误差的积累（Ding et al.，2021）。后者可能导致图像中存在严重的“同义词谱”问题，无法有效区分变化特征信息。因此，可以同时输入和处理双时态图像的Siamese神经网络已逐渐成为CD的主流网络框架（Shi et al.，2021）。特别是，Chen和Shi（2020）通过将<strong>金字塔时空注意力机制</strong>引入Siamese神经网络，生成了更具鉴别力的时间和位置变化特征。使用两个公共数据集获得的结果具有较高的准确性。</p><ul><li>传统遥感图像的CD分类</li><li>基于像素的遥感图像的传统CD存问题</li><li>基于面向对象的遥感图像的CD存在问题</li><li>深度学习可以应用于高分辨率RSI的CD</li><li>大多数DL使用的方法</li><li>后分类方法中的问题</li><li>直接分类方法中的问题</li><li>Siamese神经网络成为主流CD网络原因</li><li>Siamese神经网络如何更进一步提高了准确性。</li></ul><p>然而，在现实世界的场景中，由于同源HR传感器观测的困难（例如，云和雾等恶劣天气条件）、成本、重访期和观测范围的限制，大多数双时间RSI在HR图像区域中只有低分辨率（LR）图像可用（Gong et al.，2016），而现有的CD方法可以很容易地应用于上述场景。为了解决双时间图像中的空间分辨率失配问题，先前的研究已经使用下采样或插值来统一HR和LR图像的分辨率。然而CD精度最终受到这两种方法的影响，因为前者导致了没有原始精确空间信息的下采样HR图片，而后者无法轻易恢复LR图像的附加语义信息（Wang et al.，2022a）。DL超分辨率（SR）重建方法以其强大的图像语义信息恢复能力克服了不同传感器固有分辨率的限制。这为多传感器HR图像的CD提供了巨大的可能性。刘等人（2021）结合SR生成对抗性网络（SRGAN）设计了一种基于SR的CD网络，并为模拟的双时间分辨率差图像获得了更好的构建CD结果。然而，在上述双时间HR图像的CD研究中，没有考虑真正的传感器和分辨率差异情况。同时，目前使用的大多数SR图像生成器仅使用残差网络，这可能会显著增加训练时间，并且不能完全保留用于重建的空间和局部细节信息。</p><ul><li>为什么同源HR传感器中大多数双时间的遥感HR图像区域中只有低分辨率图像可用。</li><li>先前的研究方法是怎么解决分辨率不一一样的问题</li><li>下采样方法和插值方法都存在的问题</li><li>深度学习的的超分辨率重建方法具有哪些特点，为HR图像CD提供了可能性</li><li>刘等人（2021）结合了SRGAN的CD网络，获得了良好的构建CD效果。</li><li>刘等人（2021）的网络没有考虑传感器和分辨率的问题</li><li>以及大多数SR网络仅使用残差网络导致的问题</li></ul><p>此外，由于图像之间特征的类间相似性和类内可变性，HR图像的光谱分辨率的降低阻碍了对城镇和村庄中微小而复杂的个体结构的检测（孙和王，2018）。最新的DL方法只通过使用更深的卷积层或不同的注意力机制来获取原始图像的抽象特征，而不考虑提取更有效地描述详细信息的衍生特征，如建筑物边缘和位置。一些研究已经克服了上述问题，并通过在原始HR图像中包含附加视觉特征来提高建筑CD的准确性。例如，Huang等人（2020）通过将从多时相RSI中提取的平面和垂直特征与光谱特征相结合，应用变化幅度阈值来更准确地提取额外的建筑面积。同样，张等人（2021）在多源高分辨率RSI的光谱特征中添加了额外的纹理和形状特征，并将其与所提出的W-Net网络融合，以获得比单一光谱特征输入法更高的建筑CD精度。此外，由于HR图像包含丰富的空间细节信息，添加更多的特征组合并不一定会产生更好的结果（Wang et al.，2022b）。相反，不正确地应用特征可能会降低构建CD的准确性。因此，有必要设计既能减少数据冗余又能减少背景的视觉特征图像的白噪声，并突出建筑物中的变化。</p><ul><li>HR图像对复杂的个体结构检测的较差的原因</li><li>最新的深度学习方法是怎么提取原始图像的特征的，忽略了衍生特征。</li><li>一些论文重视衍生信息。黄和张</li><li>盲目增加衍生特征检测存在问题，以及原因</li><li>需要精心设计衍生特征的检测</li></ul><p>总之，在本文中，我们提出了一种基于DL的多特征融合SR变化检测框架（MF-SRCDNet），用于检测来自多个传感器的高分辨率RSI的建筑变化信息。所提出的MF-SRCDNet主要包括SR重建网络、多特征融合和CD网络三个模块，以解决双时图像分辨率不一致和图像特征提取困难的问题。本研究的主要贡献如下。</p><p>（1） 我们为多传感器HR图像的CD任务提供了一种新的SR网络。它生成的SR图像不仅与初始HR图像的分辨率相匹配，还保留了更多的空间细节，并学习了类似的传感器特征，如视角和照明，从而有效地减少了伪变化问题，提高了数据的可用性。<br>（2） 我们设计了一种直角边缘视觉特征，称为哈里斯线性线段检测（LSD）。提取的特征减少了传统特征中存在的数据冗余和背景白噪声问题，并显著增强了建筑物变化区域的位置和边缘信息。<br>（3） 我们将融合的多个特征与改进的特征提取器的双分支CD模块连接。这解决了现有CD策略中复杂场景的错误累积大和特征提取不足的问题。<br>（4） 我们介绍了一种新的具有挑战性的多传感器HR图像数据集（WXCD数据集），专门用于构建CD任务。所提出的MF-SRCDNet在三个CD数据集上进行了测试和评估，定性和定量结果都显示出优异的性能。它可以嵌入到其他基线网络中，以管理构建CD的不同复杂现实情况。</p><ul><li>本论文的提出的网络基于什么解决什么问题</li><li>MF-SRCDNet包含的模块</li><li>解决什么问题</li><li>本文贡献<ul><li>SR网络的作用功能，效果。</li><li>本文设计的衍生特征作用功能，效果</li><li>本文的CD模块的特点，解决了错误积累和特征提取不足的问题</li><li>介绍了多传感器的HR图像数据集（WXCD）数据集，它可以嵌入到其他的网络中。</li></ul></li></ul><p><img src="https://s2.loli.net/2023/11/23/7l6Ru1UkNQJTaxe.png" alt="image-20231123164552016"></p><h2 id="2-方法"><a href="#2-方法" class="headerlink" title="2.方法"></a>2.方法</h2><h3 id="2-1-MF-SRCDNet框架结构"><a href="#2-1-MF-SRCDNet框架结构" class="headerlink" title="2.1.MF-SRCDNet框架结构"></a>2.1.MF-SRCDNet框架结构</h3><p>所提出的MF-SRCDNet框架的三个主要组成部分如图所示。1。第一个组件是DL SR模块，用于将LR图像从多传感器双时间图像重建为SR图像。SR模块主要包括图像变换和损失网络。第二部分是多特征融合策略，用于进一步挖掘空间分辨率匹配后的双时间图像的纹理、形状和几何等多特征信息。第三部分是用于获取建筑变化结果的深度学习CD模块，主要包括特征提取器、金字塔时空注意力模块和度量模块。</p><ul><li>MF-SRCDNet网路的构成</li><li>SR模块的构成和SR模块的作用</li><li>多特征融合策略模块的构成以及作用</li><li>CD模块的构成和作用</li></ul><p>提出的MF-SRCDNet框架流程如下：</p><p>（1） 构建CD所需的多传感器双时间T1 HR图像和T2 LR图像表示为$$I_{T1}^{HR}$$和$$I_{T2}^{LR}$$。首先，使用双三次插值算法将$$I_{T1}^{HR}$$下采样到与$$I_{T2}^{LR}$$相同的分辨率，并将生成的$$I_{T1}^{LR}$$和初始$$I_{T1}^{HR}$$作为样本训练集输入SR模块的图像变换网络。</p><p>（2） SR模块分为培训和执行阶段。在训练阶段，图像转换网络通过学习LR和HR图像之间的映射关系，将$$I_{T1}^{LR}$$转换为具有与$$I_{T1}^{HR}$$相同分辨率的$$I_{T1}^{SR}$$图像。然后，损失网络分别提取$$I_{T1}^{SR}$$和初始$$I_{T1}^{HR}$$的特征图。并引入感知损失函数来减少特征图之间的视差。图像转换网络随后根据损失值调整其权重因子，以生成与初始$$I_{T1}^{HR}$$相似的最终$$I_{T1}^{SR}$$。在执行阶段，T2阶段的LR图像$$I_{T2}^{LR}$$被输入到经过训练的SR模块，以生成具有丰富语义信息的$$I_{T2}^{SR}$$。</p><p>（3） 随后，计算空间分辨率匹配的双时间图像$$I_{T1}^{HR}$$和$$I_{T2}^{SR}$$的Harris LSD直角边缘视觉特征，并将其与图像的红-绿-蓝（RGB）光谱特征融合，作为深度学习CD模块的输入数据集。<br>（4） 最后，将CD模块应用于训练不同的特征组合数据集。使用在特征提取器中具有共享权重的改进的ResNet152网络来提取数据集的分层特征。然后在金字塔时空注意力模块中获得增强的多尺度时空关系特征。初始CD预测结果由度量模块生成，然后在使用形态学滤波算法对结果进行去噪后获得最终的构建CD图。</p><p>值得注意的是，我们提出的框架可以应用于具有不同周期和分辨率的各种CD任务：例如，与上述示例相比，我们的框架也可以应用于T1 LR图像和T2 HR图像的情况。</p><ul><li>整个网络的运行流程<ul><li>获得训练SR模块的低分辨率图片和高分辨率图片</li><li>在SR模块训练模式下判别生成SR图像和HR图像的loss</li><li>在SR模块正常下生成T2的SR图片</li><li>将T2的SR图片和T1HR图片进行LSD特征提取和RGB光谱特征融合。</li><li>融合的内容输入到CD中</li><li>经过改进的ResNet152和金字塔的时空注意模块获得多尺度的时空关系，由度量模块获得初始结果，滤波得到最终结构。</li></ul></li></ul><h3 id="2-2-超分辨率（SR）模块"><a href="#2-2-超分辨率（SR）模块" class="headerlink" title="2.2.超分辨率（SR）模块"></a>2.2.超分辨率（SR）模块</h3><p><strong>图像转换网络。</strong>我们使用Res-UNet（Cao和Zhang，2020）结合残差网络和U-Net的优势，用残差单元取代U-Net的普通卷积单元，以加速网络训练，方便信息传播，并提高网络在分辨率恢复过程中提取和保留空间细节信息的能力。Res-UNet网络的结构如图1所示。1，它包括三个组件：编码器、解码器和桥接器。编码器最初使用3 x 3卷积和整流线性单元（ReLU）来提取LR样本图像的浅层特征，然后通过2×2最大池化操作和残差联单元对LR图像进行下采样和提取深度特征。残差单元基于ResNet50（Lei和Shi，2021），它包含三个卷积层、ReLU层和批量归一化（BN）层，shortcut用于将输入图像X调整为不同的大小（如图2所示）。桥接器进行复制和残差连接操作，以将编码器的特征映射与解码器相结合。随后，解码器使用2×2上采样卷积来恢复特征图分辨率，以确保与HR图像的一致性。最后，通过1×1卷积层获得SR图像。</p><p><img src="https://s2.loli.net/2023/11/23/uoIiAjh6GFVXWH1.png" alt="image-20231123173516415"></p><ul><li>SR模块的使用的工具，以及提供的效果</li><li>SR模块的构成</li><li>解码器的构成，作用</li><li>残差单元的构成</li><li>桥接器和解码器的作用</li></ul><p>损失网络。在接收到Res-UNet输出的SR图像后，我们使用具有固定参数的预训练VGG-16（Ge et al.，2021）作为损失网络，将其与原始HR图像分离（如图1所示）。VGG-16具有五个卷积层、三个完全连接层和一个使用softmax函数的图像分布输出。使用最大池操作将这些层彼此隔离。此外，它包括一系列感知损失函数（Johnson等人，2016），用于减少SR图像和原始HR图像之间的特征图差异，从而提高计算效率。最终结果表示SR图像和原始HR图像之间的连续接近度。感知损失计算如下：<br>$$<br>Loss_{per} &#x3D; \frac{1}{C * H * W}||N(I_{T1}^{SR})-N(I_{T1}^{HR})||^2<br>$$<br>其中，C、H和W分别表示特征图的通道数量、长度和宽度，N表示损失网络。</p><ul><li>损失网络的构成</li><li>VGG-16网络构成</li><li>最大池化层的作用</li><li>VGG-16的损失函数的作用</li><li>损失计算方法</li></ul><h3 id="2-3-多特征融合策略"><a href="#2-3-多特征融合策略" class="headerlink" title="2.3.多特征融合策略"></a>2.3.多特征融合策略</h3><p>为了帮助CD模块识别建筑物的变化和不变区域，我们在基于图像边缘、形状和几何信息的空间分辨率匹配后，提取了双时间图像的Harris-LSD右边缘视觉特征。为了进行充分的比较，我们还提取了形态构建指数（MBI）特征和非最大抑制索贝尔（NMS-Sobel）特征。然后，我们将这些特征中的每一个与图像光谱特征融合，作为CD模块的输入数据集。</p><ul><li>为了帮助CD模块识别建筑的变化和不变化的区域，设计那些特征以及特征提取。</li></ul><p><strong>Harris角点检测器和线段检测器结合了直角边缘特征</strong>。建筑物通常以大量的哈里斯角点和直线段为特征。然而，单次使用角点特征往往会导致信息丢失，而单次使用线段特征会导致大量重复的无意义线段（Hao et al.，2021）。因此，我们使用Harris角点检测器和LSD算法的组合来提取建筑区域的直角边缘特征。Harris LSD直角边的定义如下。在距离提取的Harris角点一定的欧几里得距离内，存在两个彼此近似垂直的直线段，并且在长度上满足一定的要求。Harris LSD直角边被定义为满足上述要求的两个直线段。该计算公式如下：<br>$$<br>|\lambda_{i} - 90^{\circ}| &lt; \varphi _ {1}<br>$$</p><p>$$<br>\begin{cases}<br>D_{1} &lt; \varphi_{2}<br> \<br>D_{2} &lt; \varphi_{2}<br>\end{cases}<br>$$</p><p>$$<br>\begin{cases}<br>\varphi_{3}&lt;l_{1}&lt;\varphi_{4}<br>\<br>\varphi_{3}&lt;l_{2}&lt;\varphi_{4}<br>\end{cases}<br>$$</p><p>其中：$$\lambda_i$$表示两条直线段之间的角度；$$D_1$$和$$D_2$$表示从提取的Harris角点的最近端点起的两个直线段的欧几里得距离；并且l1和l2表示两个直线段的长度；$$\varphi_{1}$$、$$\varphi_{2}$$、$$\varphi_{3}$$和$$\varphi_{4}$$分别表示已知角度阈值、距离阈值、最小长度阈值和最大长度阈值。在单独检测角点和线段后，我们保留任何被视为直角边的线段；否则，线段将被删除。Harris LSD特征用于消除特征冗余、背景白噪声和非建筑区域，提取的建筑直边更清晰、更精确。在该实验中，用于确定角点的阈值被设置为0.08，$$\varphi_{1}$$、$$\varphi_{2}$$、$$\varphi_{3}$$和$$\varphi_{4}$$分别被设置为0.5、50、10和150。计算出的Harris LSD特征如图3（b）所示。</p><ul><li>Harris LSD 直角起到了什么作用</li><li>怎么设计获得Harris LSD直角，如何计算的，以及其中的常量设置是什么。</li></ul><p><strong>形态构建指数特征</strong>。MBI使用一组形态学算子（如形状、方向、亮度和对比度）提取建筑结构特征（Huang和Zhang，2011）。其计算如下：<br>$$<br>MBI &#x3D; \frac{\sum_{d,s}DMP_{WTH}(d,s)}{D \times S}<br>$$</p><p>其中d和s分别表示线性结构元件的方向和比例。DMPwth表示重建形态白顶帽（WTH）值之后的微分形态轮廓（DMP）。D和S分别表示可以确定建筑轮廓的方向和比例的数量；$$ S&#x3D;((s_{max} - s_{min})&#x2F; \bigtriangleup s) + 1  $$ 。在本研究中，线性结构元素smin的标度设置为3，smax设置为30，$$\bigtriangleup s$$设置为1。计算图像的MBI特征如图所示。第3（c）段。</p><ul><li>形态构建指数特征MBI作用，计算公式，常量设置。</li></ul><p>非最大抑制索贝尔特征。在检测过程中，原始的Sobel边缘检测算法可能导致大量杂乱和错误检测的边缘（例如，边缘位置附近的屋顶线）。因此，我们使用非极大值抑制算法消除了大多数非边缘点（Lei et al.，2022）。Sobel计算之后在（x，y）位置处的梯度图像M（x，y）的非最大抑制计算如下：<br>$$<br>G(x,y) &#x3D; \begin{cases}<br>M(x,y),M(x,y) &gt;&#x3D;M(x-1,y) &amp; M(x,y) &gt;&#x3D; M(x+1,y)&amp;\theta(x,y)&#x3D;0<br>\<br>M(x,y),M(x,y) &gt;&#x3D;M(x-1,y-1) &amp; M(x,y) &gt;&#x3D; M(x+1,y+1)&amp;\theta(x,y)&#x3D;1<br>\<br>M(x,y),M(x,y) &gt;&#x3D;M(x,y-1) &amp; M(x,y) &gt;&#x3D; M(x+1,y+1)&amp;\theta(x,y)&#x3D;2<br>\<br>M(x,y),M(x,y) &gt;&#x3D;M(x-1,y+1) &amp; M(x,y) &gt;&#x3D; M(x+1,y-1)&amp;\theta(x,y)&#x3D;3<br>\end{cases}<br>$$<br>其中，G（x，y）是非最大值抑制过程后的新梯度值，并完成计算以获得NMS-Sobel特征，如图所示。第3（d）段。</p><p><img src="https://s2.loli.net/2023/11/24/mVaJbgp3cweGOUt.png" alt="image-20231124150228727"></p><ul><li>原始的Sobel算法存在的问题，以及本文做出的改进方法，以及计算方法。</li></ul><h3 id="2-4-变化检测模块"><a href="#2-4-变化检测模块" class="headerlink" title="2.4.变化检测模块"></a>2.4.变化检测模块</h3><p>在获得具有匹配分辨率的多特征融合图像后，进行了构建CD任务。MF SRCDNet使用一个改进的STANet PAM模型来检测变化，该模型是一个具有Siamese结构的DL网络。<br>特征提取器。删除全局池化层和完全连接层后，我们使用ResNet152（赵等人，2022）作为特征提取器，这是一个比原始STANet的ResNet18层更深的网络，可以训练来提取更复杂的图像特征。表1列出了修改后的ResNet152网络结构。首先，使用7×7卷积核提取图像的浅层特征。然后使用步长为原始图像大小的2到一半的最大池化层来减少特征图。为了进一步提取比ResNet18的通道深度多1024和2048维的抽象图像特征，我们使用了四个深度残差块。</p><ul><li>如何构建CD任务，MF-SRCDNet使用模型以及网络结构</li><li>特征提取器ResNet152使用的网络的网络结构，作用</li></ul><p><img src="https://s2.loli.net/2023/11/24/738Ma5ZqR6YwCGp.png" alt="image-20231124150725906"></p><p><strong>金字塔时空注意力模块（PAM</strong>）。如图1所示，PAM包含四个分支，每个分支将特征张量均匀地划分为与尺度相关的子区域。然后使用基础时空注意力模块（BAM）在每个分支中更新子区域像素的局部注意力特征。（程等，2021）。最后，使用1 x 1卷积运算来连接来自四个分支的更新特征，并将特征图放大到原始图像大小。此外，多尺度全局时空注意力特征$$Z_{T1}$$和$$Z_{T2}$$是通过将它们与原始残差特征张量$$F_{T1}$$和$$F_{T2}$$相加而形成的，从而增强了模型获取详细信息的检测能力。每个分支的BAM结构如图4所示。它结合了将ResNet152在双时间图像中提取的中间特征转换为特征图F，通过卷积运算将其转换为三个特征图K、Q和V，然后使用一系列变形和加权运算以获得局部注意力特征Z。</p><ul><li>PAM的组成作用，ZT1和ZT2是获得方法，详细的由F得到Z的过程。</li></ul><p><strong>度量模块</strong>。度量模块通过阐明特征之间的欧几里得距离来确定双时间特征之间的相似性，并使用批量平衡对比度损失（BCL）（Chen和Shi，2020）来优化距离图和地面实况之间的差距，从而生成受伪变化区域影响较小的距离图。最后，使用直接的阈值分割，从距离图中导出精确的CD图。</p><ul><li>度量模块的作用，使用的损失函数，工作原理，最后如何得出精确的CD图。</li></ul><p><img src="https://s2.loli.net/2023/11/24/yxpXfKS3DskNZm9.png" alt="image-20231124152000377"></p><h2 id="3-实验结果及分析"><a href="#3-实验结果及分析" class="headerlink" title="3.实验结果及分析"></a>3.实验结果及分析</h2><h3 id="3-1-数据集描述"><a href="#3-1-数据集描述" class="headerlink" title="3.1.数据集描述"></a>3.1.数据集描述</h3><p>（1） WXCD数据集。由于只有少数多源RSI数据集可用于CD任务，我们手工制作了一个数据集，专门用于构建具有多个传感器的高分辨率RSI的CD。表2中列出了所使用的具体参数。选择无人机（UAV）和SuperView-1（SV-1）图像作为RGB波段的原始图像，并使用ArcGIS软件手动对两幅时间图像之间有显著变化的建筑区域进行矢量注释，并将其转换为Tiff格式。场地独特的自然和人文环境、复杂多样的建筑形式和场景，以及不同拍摄角度和光线变化的双时间图像的传感器特性，对建筑CD任务的挑战比其他公开可用的数据集更大（如图所示）。第5（1）段。该数据集可在<a href="https://doi.org/10.6084/m9.migshare.22231501.v1%E4%B8%8A%E6%89%BE%E5%88%B0%E3%80%82">https://doi.org/10.6084/m9.migshare.22231501.v1上找到。</a></p><ul><li>WXCD数据集是什么数据集，为什么自己做数据集，以及做的方法流程。怎么获得</li></ul><p>（2） GZCD数据集（Peng et al.，2020）。该数据集位于中国广州郊区，在收集期间，广州经历了快速的城市化，并包含了建筑形状和大小的许多变化。它有复杂多样的建筑类型，从大型工厂到小型移动房屋（如图所示）。第5（2）段。由于该数据集的双时间图像具有相同的分辨率，因此它们仅用于所提出方法的无分辨率差异实验，以测试模型的泛化能力。表2中列出了本研究中使用的参数。数据集来源于https:&#x2F;github.com&#x2F;daifeng2016&#x2F;Change-DetectionDataset-for High Resolution Satellite Imagery。</p><ul><li>GZCD数据集包含的内容，在本实验中的作用。</li></ul><p>（3） BCDD数据集（Ji et al.，2018）。该数据集的双时间图像具有不同的空间分辨率，为多源HR图像构建CD实验提供了数据支持。我们在数据集中选择了一个形状和类型各异的建筑密集区域作为实验区域（如图5（3）所示），具体参数如表2所示。数据集来源于<a href="http://gpcv.whu.edu.cn/data/building_dataset.html%E3%80%82">http://gpcv.whu.edu.cn/data/building_dataset.html。</a></p><ul><li>BCDD数据集的内容，以及在在本论文中作用。</li></ul><h3 id="3-2模型实施细节"><a href="#3-2模型实施细节" class="headerlink" title="3.2模型实施细节"></a>3.2模型实施细节</h3><p><strong>软件和硬件环境配置</strong>。这项研究中使用的计算机配备了一块11GB的NVIDIA GeForce GTX 2080超级显卡和一块32G的内存条。所提出的方法是使用PyTorch框架实现的。</p><p><strong>超分辨率重建</strong>。我们使用三种SR方法，双三次插值（bicubic）、CycleGAN和MF-SRCDNet，来重建多传感器HR图像。我们将WXCD数据集的SV-1时间图像0.5米的空间分辨率重新配置为0.2米，以匹配无人机时间图像的空间分辨率。随后，我们将BCDD数据集的时间图像0.2 m的空间分辨率重新配置为0.075 m，以确保与后时间图像的空间分辨率一致。此外，考虑到GZCD数据集不存在真正的分辨率差异，我们只对其进行了特征融合和CD方法的比较实验。</p><ul><li>我们采用了什么方法构建超分辨率重建</li><li>对数据集进行了什么处理</li></ul><p><strong>特色组合训练模式</strong>。我们将融合的多特征图像分为四种不同的组合模式：RGB、RGB+MBI（RGBM）、RGB+NMS-Sobel（RGBN）和RGB+Harris LSD（RGBH）。<br><strong>样本分配</strong>。我们根据一般的深度学习样本比例，将数据集测试区域随机划分为训练、验证和测试区域，其中训练、验证、测试样本集的比例为6:1:3。<br><strong>模型训练参数设置</strong>。该方法的训练参数为：训练轮20个epochs；学习率为0.001；激活函数为ReLU函数，batch设置为4个，优化算法采用sto-custic梯度下降法；损失函数使用批量平衡对比度损失来减少正负变化样本的不平衡效应。<br><strong>预处理方法</strong>。我们使用形态学滤波算法对所有CD结果进行去噪。形态学滤波通过扩张、侵蚀和打开或关闭操作改进获得的图像质量。在本研究中，Erode运算主要使用ENVI 5.3软件进行，我们将卷积核设置为5×5，循环设置为1。</p><h3 id="3-3-比较方法和评估指标"><a href="#3-3-比较方法和评估指标" class="headerlink" title="3.3.比较方法和评估指标"></a>3.3.比较方法和评估指标</h3><h4 id="3-3-1-比较方法"><a href="#3-3-1-比较方法" class="headerlink" title="3.3.1.比较方法"></a>3.3.1.比较方法</h4><p>为了验证MF-SRCDNet的有效性，我们将其与其他SR方法以及深度学习CD方法进行了比较和分析。SR方法包括Bicubic（Tu et al.，2017）和CycleGAN（Li et al.，2021）。CD方法包括U-Net（Song et al.，2021）、PSPNet（Shen et al.，2022）、Faster R-CNN（Bai et al.，2020）、DeepLabV3+（Yao等人，2021）和Mask R-CNN（Han等人，2021年）。<br>值得注意的是，上述五种深度学习CD方法对双时间图像差异策略数据集进行了实验，结果表明，差异策略可以获得比融合策略更高的精度（Wang et al.，2018）。这是通过从前时间图像中提取后时间图像的逐像素子牵引来获得的，用于与所提出的框架的Siamese神经网络进行比较。</p><ul><li>与不同的SR网络和CD方法进行了比较，验证MF-SRCDNet的有效性。</li><li>差异策略和融合策略的比较，以及为什么差异策略比融合策略更好的效果</li></ul><h4 id="3-3-2评估指标"><a href="#3-3-2评估指标" class="headerlink" title="3.3.2评估指标"></a>3.3.2评估指标</h4><p>结果可分为四种情况：真阳性（TP）、假阴性（FN）、假阳性（FP）和真阴性（TN），这取决于在变化和不变区域中对模型的检测。TP是被正确检测为变化区域的像素的数量；TN是被正确检测为未改变区域的像素的数量；FP是将未改变区域错误地检测为改变区域的像素的数目；FN是将改变的区域错误地检测为未改变的区域的像素的数量。我们使用基于像素的混淆矩阵来计算这些值，并应用精度（Pre）、召回率（Rec）、F1分数（F1）、总体精度（OA）和kappa系数（KC）五个精度评估指标来检查每个模块算法在构建多源高分辨率RSI CD时的预测性能。每个精度评估指标的具体方程式如下：<br>$$<br>Pre &#x3D; \frac{TP}{TP+FP}<br>$$</p><p>$$<br>Rec &#x3D; \frac{TP}{TP+FN}<br>$$</p><p>$$<br>F1 &#x3D; 2 \times \frac{Pre \times Rec}{Pre \times Rec}<br>$$</p><p>$$<br>OA &#x3D; \frac{TP+FN}{TP+FN+FP+TN}<br>$$</p><p>$$<br>R &#x3D; \frac{(TP+FN)(TP+FP)+(TN+FN)(TN+FP)}{(TP+TN+FP+FN)^2}<br>$$</p><p>$$<br>KC &#x3D; \frac{OA-R}{1-R}<br>$$</p><h3 id="3-4-实验结果的比较"><a href="#3-4-实验结果的比较" class="headerlink" title="3.4.实验结果的比较"></a>3.4.实验结果的比较</h3><h4 id="3-4-1-定量比较"><a href="#3-4-1-定量比较" class="headerlink" title="3.4.1.定量比较"></a>3.4.1.定量比较</h4><p>根据表3至表5，首先，MF SRCDNet重建的WXCD和BCDD数据集大多优于Bicubic和CycleGAN方法在构建每个特征组合的CD的精度方面，最高的F1值分别为0.881和0.964，最大值分别为0.092和0.044。此外，在所有三个数据集中，RGBM、RGBN和RGBH分别获得比RGB特征更高的F1、KC和OA。第三，考虑到多特征融合的CD精度，RGBH在不同数据集中的KC优于其他特征组合。GZCD数据集的最小改进为0.033，WXCD（MF-SRCDNet）数据集的最大改进为0.104。尽管RGBM和RGBN也具有高CD精度，但它们的结果不太稳定。</p><p>根据表6至表8，不同CD方法的MF-SRCDNet重建的WXCD和BCDD数据集的CD精度仍然大多超过Bicubic和CycleGAN方法，其中FI值的最小和最大改进分别为0.024和0.007，以及0.186和0.25。其次，U-Net、PSPNet、deep-LabV3+、Faster R-CNN和Mask R-CNN这五种深度学习CD方法在CD方面存在很大差异在三个数据集中，特别是在KC度量的tems中，与MF-SRCDNet相比的准确性。平均而言，在每个数据集中，MF SRCDNet比次高级算法的改进幅度为0.091。这可能与早期的图像处理策略有关，并且MF SRCDNet的暹罗结构在图像处理过程中产生的累积误差低于差分策略。</p><p><img src="https://s2.loli.net/2023/11/24/fP9dOWkZ5osr4jg.png" alt="image-20231124163216507"></p><p><img src="https://s2.loli.net/2023/11/24/8UCw7Q9IrFmgvOB.png" alt="image-20231124163223921"></p><p><img src="https://s2.loli.net/2023/11/24/3pC6j2aykXSNM4m.png" alt="image-20231124163240711"></p><p><img src="https://s2.loli.net/2023/11/24/bp38Xga7D4QEmU5.png" alt="image-20231124163251935"></p><h4 id="3-4-2-视觉对比"><a href="#3-4-2-视觉对比" class="headerlink" title="3.4.2.视觉对比"></a>3.4.2.视觉对比</h4><p>如图6和图7所示（TN、TP、FN和FP的解释见第3.3.2节），MF SRCDNet重建后的每个数据集的大多数对建筑物CD显示出最佳的视觉效果。特别是，对于WXCD数据集的每个特征组合，所提出的方法检测到的建筑物的FP比Bicubic和CycleGAN方法少得多，如图6所示。对于WXCD数据集，总体CD效果也优于其他两种SR方法，如图7所示。这对应于表3中较高的Pre和表6中较高的F1量化结果。对于BCDD数据集，所提出的方法检测到更完整的建筑物，这对应于表4和表7中较高的Rec。<br>对于不同的特征组合，在大多数数据集中，RGBH优于其他特征组合（图6）。特别是，其他特征组合经历了严重的建筑边界溢出，而RGBH可以更好地区分密集建筑区域中的变化区域，并保留更完整的间隔。就整体视觉效果而言，这些附加的特征组合仍然优于从RGB特征中获得的CD结果。</p><p>对于不同的CD方法，MF-SRCDNet在每个数据集的密集、连续的建筑集群、大型体育场和其他变化区域中检测到更准确、更完整的边缘信息，总体CD效果优于其他CD方法（图7）。U-Net和PSPNet检测到了极为破碎的建筑边缘，并包含大量的FN和FP。DeepLabV3+结果也错误地检测到了更多的像素，尽管FN减少了。更快的R-CNN对建筑位置变化有相对较好的识别能力；然而，由于它只能输出方形检测帧，结果无法准确描述建筑占地面积，从而产生许多溢出。Mask R-CNN非常重视建立变化边界；然而，结果也包含更多的遗漏检测。</p><ul><li>从视觉上对比了不同的SR策略和不同的SR的CD策略的效果。</li></ul><p><img src="https://s2.loli.net/2023/11/24/4WnZviwB3TxXgEt.png" alt="image-20231124170306342"></p><p><img src="https://s2.loli.net/2023/11/24/tPRxNuMCABc8Eld.png" alt="image-20231124170316332"></p><h2 id="4-消融实验与讨论"><a href="#4-消融实验与讨论" class="headerlink" title="4.消融实验与讨论"></a>4.消融实验与讨论</h2><h3 id="4-1分辨率尺度差异的影响"><a href="#4-1分辨率尺度差异的影响" class="headerlink" title="4.1分辨率尺度差异的影响"></a>4.1分辨率尺度差异的影响</h3><p>为了进一步验证MF-SRCDNet的稳健性，我们根据密集建筑的后时间图像的分辨率尺度进行了两组比较实验：</p><p>（1）四倍空间</p><p>分辨率小尺度差异实验（X4）；首先，我们使用双三次插值将WXCD和BCDD数据集的T2时间图像下采样到与T1时间HR图像分辨率相差四倍的图像。然后通过SR方法将这些模拟的LR图像重建为具有与Tl时间图像相同分辨率的SR图像；然后我们使用它们作为输入数据集进行后续处理。（2） 八倍空间分辨率大尺度差异实验（X8）：该实验的图像操作与X4实验相似。</p><ul><li>如何获得低分辨率的图片</li></ul><p><strong>不同规模差异实验的表现。</strong>如表9所示，与之前直接基于SR图像实验的表3相比，在两个数据集的X4实验下，所有SR方法的CD精度都有所降低。在WXCD数据集中，Bicubic方法显示F1和KC值的下降幅度最大，分别为0.052和0.097；CycleGAN方法显示F1和KC值分别为0.035和0.094；MF SRCDNet在X4标度差处保持了最大CD精度，FI和KC值分别为0.859和0.715，分别仅下降了0.022和0.041。当标度差增加到X8时，所有方法都进一步降低了基于X4的CD精度。特别是，在WXCD数据集中，Bicubic、CycleGAN和MF-SRCDNet方法的KC值分别下降了0.05、0.052和0.036。在BCDD数据集中，上述方法的KC值分别降低了0.03、0.032和0.053。</p><p>图图8显示，在WXCD和BCDD数据集的X4实验中，双三次方法都有很大程度的漏检。这种情况在具有较大尺度差异的X8实验中更为严重，并且大型白色平台被错误地检测为建筑变化区域（图8，第三行Bicubic）。CycleGAN的CD可视化略好于Bicubic方法，但在X4实验中，它不能有效区分规则的建筑变化边界，并且观察到大量的溢出，在X8实验下，该方法遗漏了大量的建筑变化像素，尤其是对于大体积建筑（图8，第四行Cycle-GAN）。MF-SRCDNet的CD可视化结果较少受到分辨率下降尺度差异的影响，并且可以更清楚地检测每个数据集在不同尺度差异实验下建筑物足迹形成的变化。值得注意的是，与Bicubic和CycleGAN不同，MF-SRCDNet可以通过X8实验检测小建筑面积的变化信息（图8，第四行MF-SRCDN），而当两种SR方法都有大量遗漏检测时，MF-SRC DNet检测到更多的建筑变化区域。</p><ul><li>在4X情况下和8X情况下分别比较了CD的效果</li></ul><p><strong>图像重建的质量。</strong>我们使用两个指标，峰值信噪比（PSNR）和结构相似性（SSIM），来定量比较重建图像的质量。从表10所示的总体来看，在每个数据集X4实验中，每个SR方法的图像质量都略高，但在所有X8实验中都观察到了显著的下降，特别是在SSIM中。对于特定的比较，Bicubic方法的PSNR和SSIM在两个数据集中都具有最低值。Cycle-GAN的恢复图像质量显示出一些改善，但这可能是由于其循环结构过于关注来自不同传感器的图像特征之间的转换，导致在HR图像中生成伴随着杂乱光谱色块的SR图像（图7，第二行T2 CycleGAN）。尽管MF-SRCDNet在所有数据集实验中都获得了更高的图像质量，这表明它保持恢复接近原始图像的能力比其他方法更强，但在X8实验中，它与参考图像的结构信息存在很大差距。</p><ul><li>设计了两个指标比较了不同的SR策略下的图片效果</li></ul><p><img src="https://s2.loli.net/2023/11/24/uQv9b8cxn6Zz2sa.png" alt="image-20231124172338254"></p><p><img src="https://s2.loli.net/2023/11/24/XztUCDauvfgAFkK.png" alt="image-20231124172352401"></p><p><img src="https://s2.loli.net/2023/11/24/jzyGXITA28CqBLx.png" alt="image-20231124172358187"></p><h3 id="4-2-特征融合的影响"><a href="#4-2-特征融合的影响" class="headerlink" title="4.2.特征融合的影响"></a>4.2.特征融合的影响</h3><p>为了验证不同特征组合模式对所提出的MF-SRCDNet的影响，我们使用不同的特征融合策略在WXCD和BCDD（MF-SRCDN）数据集上训练模型，并获得训练和验证损失曲线。图9显示两个数据集的RGBH损失曲线都表现出更快的收敛速度，表明包含Harris LSD特征可以提高模型的训练效率；RGBH的损失曲线振荡较小，突出了其在训练和验证过程中的卓越稳定性；此外，在两次验证损失中，只有RGBH降至0.5和0.25以下，突显了其提高模型训练精度的能力。虽然RGBM和RGBN也表现出相对较强的训练效果，但它们在稳定性和准确性方面存在一些缺点。</p><ul><li>研究不同的融合策略对训练效率，稳定性，精度的影响</li></ul><p><img src="https://s2.loli.net/2023/11/24/hQL1KcC9YVkl7ab.png" alt="image-20231124172540294"></p><h3 id="4-3-ResNet层数的影响"><a href="#4-3-ResNet层数的影响" class="headerlink" title="4.3.ResNet层数的影响"></a>4.3.ResNet层数的影响</h3><p>为了验证所提出方法提高ResNet层数的有效性，我们将预先训练的ResNet18、ResNet34、ResNet50、ResNet101和ResNet152迁移到STANet PAM模型的特征提取层，并在基于MF-SRCDNet的WXCD和BCDD数据集上获得了CD的准确性和效率。图10</p><p>表明ResNet的不同层对所提出方法的CD结果的影响是显著的，并且基于ResNet152的层可以获得比其他层更高的F1、KC和OA值，同时还保持尽可能低的训练经过时间。</p><ul><li>探讨ResNet的层数对CD的影响</li></ul><p><img src="https://s2.loli.net/2023/11/24/ZPj1gONfEIYDxsd.png" alt="image-20231124172759056"></p><h3 id="4-4-讨论"><a href="#4-4-讨论" class="headerlink" title="4.4.讨论"></a>4.4.讨论</h3><p>通过在多传感器高分辨率RSI中构建CD的对比实验，我们可以得出以下结果分析。<br>（1） 所设计的SR模块可以解决双时间图像中分辨率不匹配的问题，同时在更大程度上保留重建的高分辨率图像中的语义信息。与其他SR方法相比，我们的模块可以在不同分辨率尺度的差异实验中更稳定地检测建筑物的变化。然而，它在具有极其大规模差异的场景中有局限性，其中图像空间结构难以恢复（图8，第八行T2 MF-SRCDNet图像）。</p><ul><li>SR模块的有效性和不足</li></ul><p>（2） 提取并融合的视觉特征Harris-LSD可以有效地辅助CD网络检测建筑物的角点位置和直角边缘信息，在各种复杂场景中表现出更好的适应性。然而，由于对圆形或拐角建筑物不敏感，该特征可能会出现漏检问题（图6，第一行MF-SRCDNet）。此外，它主要关注边缘信息，导致一些大型建筑的内部信息检测不完整（图8，第四行MR SRCDNet）。</p><ul><li>提出的Harris-LSD等方法辅助CD网路检测的有效性和不足</li></ul><p>（3） 改进的CD网络在所有三个具有挑战性的数据集中都实现了更好的变化检测准确性和可视化，具有更强的泛化能力。然而，由于不同传感器的限制，真实CD场景的可用样本通常是稀疏的，并且DL模型需要大量的训练样本，这可能导致模型训练不足。</p><ul><li>CD网络的有效性以及不足</li></ul><p>此外，本研究侧重于建筑变化和非变化的二元变化检测，考虑较少捕捉更深层次的“从到”语义变化信息，例如从住宅建筑到商业建筑的变化。未来可以通过研究少量镜头学习方法和语义变化检测来改善这些情况。</p><ul><li>本论文呢着重点和没考虑的问题</li></ul><h2 id="5-结论"><a href="#5-结论" class="headerlink" title="5.结论"></a>5.结论</h2><p>在本研究中，我们提出了一种用于多传感器HR图像的多特征融合SR构建变化检测框架（MF-SRCDNet）。首先，我们设计了一个基于Res-UNet、VGG16和感知损失的新SR模块，将分辨率不匹配的双时间图像重建为SR图像，并有效地恢复图像的空间细节信息，从而提高多源RSI的数据可解码性。此外，我们提取了一个新的视觉特征Harris-LSD，并将其与图像光谱特征融合。这种融合的特征数据集增强了图像的建筑位置和边缘特征，减少了建筑CD任务中位置不准确和边缘不清晰的问题。最后，我们修改了ResNet152网络，并将其部署在CD模块的特征提取器中，以增强模型提取复杂场景特征的能力。我们在三个数据集中验证了MF-SRCDNet的稳健性和有效性。与其他SR方法、特征组合和CD方法相比，MF SRCDNet在不同分辨率差异的情况下实现了更好的CD性能，并检测到更全面的建筑物和更准确的边缘，尤其是在小型建筑物上。因此，它在检测建筑物的详细信息方面显示出综合优势<br>改变</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 遥感 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft05-Itemstack源码</title>
      <link href="/2023/11/19/Minecraft05-Itemstack%E6%BA%90%E7%A0%81/"/>
      <url>/2023/11/19/Minecraft05-Itemstack%E6%BA%90%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="itemstack代码"><a href="#itemstack代码" class="headerlink" title="itemstack代码"></a>itemstack代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 它扩展了一些能力提供者和物品堆叠扩展。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ItemStack</span> <span class="keyword">extends</span>  <span class="title class_">net</span>.neoforged.neoforge.common.capabilities.CapabilityProvider&lt;ItemStack&gt; <span class="keyword">implements</span> <span class="title class_">net</span>.neoforged.neoforge.common.extensions.IItemStackExtension &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//这行代码声明了一个 capNBT，它是一个复合标签对象，用于存储物品的额外信息。</span></span><br><span class="line">CompoundTag capNBT;</span><br><span class="line">    <span class="comment">//这行代码创建了一个静态的 LOGGER，用于记录日志。</span></span><br><span class="line"> Logger LOGGER</span><br><span class="line">    <span class="comment">//这行代码创建了一个静态的空 ItemStack 对象。</span></span><br><span class="line">ItemStack EMPTY </span><br><span class="line"></span><br><span class="line">    <span class="comment">//接下来的几行声明了一些常量，例如用于标记附魔、显示名称、物品描述等的字符串常量。</span></span><br><span class="line"> TAG_ENCH </span><br><span class="line"> TAG_DISPLAY </span><br><span class="line"> TAG_DISPLAY_NAME </span><br><span class="line"> TAG_LORE  </span><br><span class="line"> TAG_DAMAGE </span><br><span class="line"> TAG_COLOR </span><br><span class="line"> TAG_UNBREAKABLE</span><br><span class="line">TAG_REPAIR_COST</span><br><span class="line"> TAG_CAN_DESTROY_BLOCK_LIST</span><br><span class="line"> TAG_CAN_PLACE_ON_BLOCK_LIST </span><br><span class="line"> TAG_HIDE_FLAGS </span><br><span class="line">Component DISABLED_ITEM_TOOLTIP </span><br><span class="line"><span class="type">int</span> DONT_HIDE_TOOLTIP</span><br><span class="line">Style LORE_STYLE </span><br><span class="line">     </span><br><span class="line">    <span class="comment">//这行代码声明了一个私有的整数 count，表示物品的堆叠数量。</span></span><br><span class="line">    <span class="type">int</span> count;</span><br><span class="line">    <span class="comment">//这行代码声明了一个私有的整数 popTime，可能是与弹出（pop）时间相关的值。</span></span><br><span class="line">    <span class="type">int</span> popTime;</span><br><span class="line">    <span class="comment">//这行代码声明了一个已过时的、可空的 item，可能是表示物品。</span></span><br><span class="line">     Item item;</span><br><span class="line">    <span class="comment">//这行代码声明了一个可空的 tag，可能是用于表示物品的标签信息</span></span><br><span class="line">    CompoundTag tag;</span><br><span class="line">    <span class="comment">//这行代码声明了一个可空的 entityRepresentation，可能是表示物品对应的实体。</span></span><br><span class="line"> Entity entityRepresentation;</span><br><span class="line">    <span class="comment">//这行代码声明了一个可空的 adventureBreakCheck，可能是用于冒险模式下的破坏检查</span></span><br><span class="line">AdventureModeCheck adventureBreakCheck;</span><br><span class="line">    <span class="comment">// 这行代码声明了一个可空的 adventurePlaceCheck，可能是用于冒险模式下的放置检查。</span></span><br><span class="line">AdventureModeCheck adventurePlaceCheck;</span><br><span class="line"><span class="comment">//这个方法返回一个可选的 TooltipComponent，可能是获取物品的提示信息图像。</span></span><br><span class="line"> getTooltipImage() &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//并设置物品堆叠数量为 1。</span></span><br><span class="line">    ItemStack( ) &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//接受一个 Holder&lt;Item&gt; 参数，并设置物品堆叠数量为 1。</span></span><br><span class="line">    ItemStack() &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//接受一个 ItemLike 类型的参数、一个整数参数和一个可选的 CompoundTag 参数，并执行一些初始化操作。</span></span><br><span class="line">    ItemStack(ItemLike , <span class="type">int</span> , Optional&lt;CompoundTag&gt; ) &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个构造函数接受一个 Holder&lt;Item&gt; 类型的参数和一个整数参数，并调用另一个构造函数进行初始化。</span></span><br><span class="line">    ItemStack(Holder&lt;Item&gt; , <span class="type">int</span> ) &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个构造函数接受一个 ItemLike 类型的参数和一个整数参数，并调用另一个构造函数进行初始化，并传递了一个空的 CompoundTag。</span></span><br><span class="line">    ItemStack(ItemLike , <span class="type">int</span> ) &#123; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这个构造函数接受一个 ItemLike 类型的参数、一个整数参数和一个可空的 CompoundTag 参数，并执行了一些初始化操作，包括设置物品的标签和数量等。</span></span><br><span class="line">    ItemStack(ItemLike , <span class="type">int</span> , <span class="meta">@Nullable</span> CompoundTag ) &#123;</span><br><span class="line"><span class="comment">//此处具体实现自己去看</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//使用类类型和布尔值 ( true ) 调用超类构造函数（在本例中可能是 Object 类）。这将使用提供的参数初始化超类。</span></span><br><span class="line">    ItemStack(<span class="meta">@Nullable</span> Void ) &#123;<span class="comment">//</span></span><br><span class="line">   <span class="comment">//  EMPTY属性的构造</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    ItemStack(CompoundTag ) &#123;</span><br><span class="line"><span class="comment">//此处实现</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//尝试使用提供的 CompoundTag 创建一个新的 ItemStack 对象。</span></span><br><span class="line">    <span class="keyword">static</span> ItemStack <span class="title function_">of</span><span class="params">(CompoundTag )</span> &#123;</span><br><span class="line">   <span class="comment">//此处实现</span></span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//检itemstack是否为空。如果itemstack为空或计数为 0 或委托项为 Items.AIR ，则返回 true 。</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">     <span class="comment">//判断itemstack</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">//将项目堆栈分成两个物品堆栈。它创建一个具有指定计数的新物品堆栈，并将当前物品堆栈的计数减少该数量。</span></span><br><span class="line">    ItemStack <span class="title function_">split</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">shrink()<span class="comment">//方法</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 创建物品堆栈的副本，并将原始物品堆栈的计数设置为 0。如果原始物品堆栈为空，则返回空堆栈。</span></span><br><span class="line">    ItemStack <span class="title function_">copyAndClear</span><span class="params">()</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 返回与堆栈关联的项目。如果堆栈为空，则返回 Items.AIR 。</span></span><br><span class="line">    Item <span class="title function_">getItem</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">///</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//获取该item的holder。</span></span><br><span class="line">    Holder&lt;Item&gt; <span class="title function_">getItemHolder</span><span class="params">()</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//检查item是否属于指定标签。</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">is</span><span class="params">(TagKey&lt;Item&gt; p_204118_)</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//检查项目是否与指定项目相同。</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">is</span><span class="params">(Item p_150931_)</span> &#123;</span><br><span class="line">     </span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//这些方法检查item是否满足特定条件或谓词。</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">is</span><span class="params">(Predicate&lt;Holder&lt;Item&gt;&gt; p_220168_)</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">is</span><span class="params">(Holder&lt;Item&gt; p_220166_)</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">is</span><span class="params">(HolderSet&lt;Item&gt; p_298683_)</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//返回与该item关联的标签stream。</span></span><br><span class="line">    Stream&lt;TagKey&lt;Item&gt;&gt; <span class="title function_">getTags</span><span class="params">()</span> &#123;</span><br><span class="line">      </span><br><span class="line">       </span><br><span class="line"><span class="comment">//处理上下文中项目的使用（就像在块上使用项目）。如果自定义函数不在客户端，它会挂钩。</span></span><br><span class="line">    InteractionResult <span class="title function_">useOn</span><span class="params">(UseOnContext )</span> &#123;</span><br><span class="line">    <span class="comment">//这几个方法都是在方块右键调用，调用对应Item的useOn，</span></span><br><span class="line">        <span class="comment">//注入指mixin</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//与 useOn 类似，但专门用于第一次使用。</span></span><br><span class="line">    InteractionResult <span class="title function_">onItemUseFirst</span><span class="params">(UseOnContext p_41662_)</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//此方法是一个名为 onItemUse 的私有函数。它需要一个 UseOnContext 对象  和一个将 UseOnContext 映射到 InteractionResult 的回调函数</span></span><br><span class="line">    InteractionResult <span class="title function_">onItemUse</span><span class="params">(UseOnContext , java.util.function.Function&lt;UseOnContext, InteractionResult&gt; )</span> &#123;</span><br><span class="line">     <span class="comment">// 判断一些内容，调用useon方法</span></span><br><span class="line">        <span class="comment">//这几个方法都是在方块右键调用，调用对应Item的useOn，</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//此方法检索特定方块状态下物品的破坏速度。它将计算委托给关联的 Item 对象的 getDestroySpeed 方法。</span></span><br><span class="line">    <span class="type">float</span> <span class="title function_">getDestroySpeed</span><span class="params">(BlockState )</span> &#123;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">       <span class="comment">// 它将操作委托给关联的 Item 对象的 use 方法，该方法与提供的 Level 、 Player 和 InteractionHand </span></span><br><span class="line">    InteractionResultHolder&lt;ItemStack&gt; <span class="title function_">use</span><span class="params">(Level , Player , InteractionHand )</span> &#123;</span><br><span class="line">      <span class="comment">// 右键使用方法，例如末影珍珠</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//该方法表示该item已使用完毕。它将此完成操作委托给关联的 Item 对象的 finishUsingItem 方法并返回结果 ItemStack 。</span></span><br><span class="line">    ItemStack <span class="title function_">finishUsingItem</span><span class="params">(Level , LivingEntity )</span> &#123;</span><br><span class="line">      <span class="comment">// 例如弓箭</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//它将item的 ID、计数、关联标签（如果存在）和附加功能数据保存到提供的 CompoundTag 中。</span></span><br><span class="line">    CompoundTag <span class="title function_">save</span><span class="params">(CompoundTag )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//此方法获取此特定 ItemStack 允许的最大堆栈大小。它将调用委托给关联的 Item 对象的 getMaxStackSize 方法。</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getMaxStackSize</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 物品是否可以继续堆叠</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isStackable</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 检查物品是否可损坏。</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isDamageableItem</span><span class="params">()</span> &#123;</span><br><span class="line">     <span class="comment">//是否有耐久</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//检查物品是否损坏（掉了耐久）</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isDamaged</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="comment">//是否已经掉了耐久</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getDamageValue</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//检索物品的损伤的耐久,不是最大，就是当前耐久值</span></span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//设物品的耐久</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setDamageValue</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//检索物品可以承受的最大耐久</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getMaxDamage</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">//这个最大</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//：模拟由于使用或损坏而导致的耐久性损失。</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">hurt</span><span class="params">(<span class="type">int</span> , RandomSource , <span class="meta">@Nullable</span> ServerPlayer )</span> &#123;</span><br><span class="line">    <span class="comment">// 对附魔耐久的物品进行处理</span></span><br><span class="line">       </span><br><span class="line"><span class="comment">//存在玩家并且耐久度损失值不为 0，则触发耐久度变化触发器 </span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//计算并设置新的损坏值，然后返回是否物品已经达到或超过最大损坏值，表示物品已经磨损或损坏。</span></span><br><span class="line">       <span class="comment">//此处实现</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 减少耐久，如果为0就破坏</span></span><br><span class="line">    &lt;T <span class="keyword">extends</span> <span class="title class_">LivingEntity</span>&gt; <span class="keyword">void</span> <span class="title function_">hurtAndBreak</span><span class="params">(<span class="type">int</span> , T , Consumer&lt;T&gt; )</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 耐久条是否可见</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isBarVisible</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 耐久条宽度</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getBarWidth</span><span class="params">()</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 耐久条颜色</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getBarColor</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 和其他的itemstack堆叠时候</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">overrideStackedOnOther</span><span class="params">(Slot , ClickAction , Player )</span> &#123;</span><br><span class="line">    <span class="comment">//此处实现</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 其他的itemstack和自己堆叠时候</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">overrideOtherStackedOnMe</span><span class="params">(ItemStack , Slot , ClickAction , Player , SlotAccess )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 对敌人造成伤害，如果攻击成功则玩家增加分数</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">hurtEnemy</span><span class="params">(LivingEntity , Player )</span> &#123;</span><br><span class="line">      <span class="comment">//此处 </span></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 用该物品挖去方块，如果成功则增加玩家分数</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">mineBlock</span><span class="params">(Level , BlockState , BlockPos , Player )</span> &#123;</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 该物品是否是正确物品才能掉落</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isCorrectToolForDrops</span><span class="params">(BlockState )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 用该物品和活着的实体交互</span></span><br><span class="line">    InteractionResult <span class="title function_">interactLivingEntity</span><span class="params">(Player , LivingEntity , InteractionHand )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 复制一个itemstack</span></span><br><span class="line">    ItemStack <span class="title function_">copy</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 复制itemstack并设置不同的数量</span></span><br><span class="line">   <span class="keyword">public</span> ItemStack <span class="title function_">copyWithCount</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 两个itemstack是否相同</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">matches</span><span class="params">(ItemStack , ItemStack )</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 是否同样物品</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isSameItem</span><span class="params">(ItemStack , ItemStack )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 是否相同的tag</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isSameItemSameTags</span><span class="params">(ItemStack , ItemStack )</span> &#123;</span><br><span class="line">     <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 获得物品的getDescriptionId</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getDescriptionId</span><span class="params">()</span> &#123;</span><br><span class="line">   </span><br><span class="line">       <span class="comment">//tostirng()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 背包的tick每tick回调 更新poptime 以及 条用物品的inventoryTick方法</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inventoryTick</span><span class="params">(Level , Entity , <span class="type">int</span> , <span class="type">boolean</span> )</span> &#123;</span><br><span class="line">       <span class="comment">// item.tick()</span></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCraftedBy</span><span class="params">(Level , Player , <span class="type">int</span> )</span> &#123;</span><br><span class="line">       <span class="comment">// 调用物品的 onCraftedBy 方法，处理物品被合成的情况</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUseDuration</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//获取物品的使用持续时间</span></span><br><span class="line">       item.userduration()</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> UseAnim <span class="title function_">getUseAnimation</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 获取物品的使用动画类型</span></span><br><span class="line">       <span class="comment">//枚举</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">releaseUsing</span><span class="params">(Level , LivingEntity p_1676_, <span class="type">int</span> )</span> &#123;</span><br><span class="line">       <span class="comment">//物品使用结束时触发的方法</span></span><br><span class="line">       <span class="comment">//应该是前后关系</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">useOnRelease</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//  检查物品是否在释放时使用</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasTag</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//检查物品是否有标签</span></span><br><span class="line">   &#125;</span><br><span class="line">       <span class="comment">//提示的部分代码我删了，想看去看这类。</span></span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"> <span class="comment">// 返回tag</span></span><br><span class="line">   <span class="keyword">public</span> CompoundTag <span class="title function_">getTag</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 返回tag如果没有就创建</span></span><br><span class="line">   <span class="keyword">public</span> CompoundTag <span class="title function_">getOrCreateTag</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 返回对应string的tag，如果不存在则创建返回</span></span><br><span class="line">   <span class="keyword">public</span> CompoundTag <span class="title function_">getOrCreateTagElement</span><span class="params">(String )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 返回包含对应string的tag，不存在则返回null</span></span><br><span class="line">   <span class="meta">@Nullable</span></span><br><span class="line">   <span class="keyword">public</span> CompoundTag <span class="title function_">getTagElement</span><span class="params">(String )</span> &#123;</span><br><span class="line">     </span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 移除string的tag</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeTagKey</span><span class="params">(String )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 返回附魔的tag</span></span><br><span class="line">   <span class="keyword">public</span> ListTag <span class="title function_">getEnchantmentTags</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 设置tag</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTag</span><span class="params">(<span class="meta">@Nullable</span> CompoundTag )</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 获得鼠标悬浮时候名字</span></span><br><span class="line">   <span class="keyword">public</span> Component <span class="title function_">getHoverName</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 设置名字</span></span><br><span class="line">   <span class="keyword">public</span> ItemStack <span class="title function_">setHoverName</span><span class="params">(<span class="meta">@Nullable</span> Component p_41715_)</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 重置名字</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">resetHoverName</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 自定义悬浮名字</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasCustomHoverName</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 根据物品的不同内容添加提示信息，例如附魔</span></span><br><span class="line">   <span class="keyword">public</span> List&lt;Component&gt; <span class="title function_">getTooltipLines</span><span class="params">(<span class="meta">@Nullable</span> Player , TooltipFlag )</span> &#123;</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//表示显示工具提示。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">shouldShowInTooltip</span><span class="params">(<span class="type">int</span> , ItemStack.TooltipPart )</span> &#123;</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">       <span class="comment">// 物品添加附魔显示的内容</span></span><br><span class="line"><span class="comment">//用于向给定的 List&lt;Component&gt; 中追加附魔的名称。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">appendEnchantmentNames</span><span class="params">(List&lt;Component&gt; , ListTag )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否具有附魔</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasFoil</span><span class="params">()</span> &#123;<span class="comment">//当前的itemstack是否具有附魔。</span></span><br><span class="line">       </span><br><span class="line">   </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 获得物品稀有度</span></span><br><span class="line">   <span class="keyword">public</span> Rarity <span class="title function_">getRarity</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 物品是否可以附魔</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEnchantable</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 用于给物品附魔。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">enchant</span><span class="params">(Enchantment , <span class="type">int</span> )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 该物品附魔过</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEnchanted</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">       <span class="comment">//这里删除了这部分</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得基础修复花费经验</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getBaseRepairCost</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 设置花费经验 </span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRepairCost</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//返回item堆栈的显示名称。显示名称是将鼠标悬停在库存中的项目上时显示的名称。</span></span><br><span class="line">   <span class="keyword">public</span> Component <span class="title function_">getDisplayName</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//检查itemstack是否具有指定块的冒险模式地点标签。冒险模式放置标签用于确定该物品是否可以放置在冒险模式下的指定方块上。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasAdventureModePlaceTagForBlock</span><span class="params">(Registry&lt;Block&gt; p_204122_, BlockInWorld p_204123_)</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//此方法检查itemstack是否具有指定块的冒险模式中断标记。冒险模式破坏标签用于确定该物品是否可以用于破坏冒险模式中的指定方块。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasAdventureModeBreakTagForBlock</span><span class="params">(Registry&lt;Block&gt; p_204129_, BlockInWorld p_204130_)</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPopTime</span><span class="params">()</span> &#123;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPopTime</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCount</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">       </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 物品count增加指定数目</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">grow</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 物品count减少指定数目</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shrink</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 获得物品的使用时间</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUseTick</span><span class="params">(Level , LivingEntity , <span class="type">int</span> )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// Forge 中已弃用此方法，不应使用。它调用item实体所代表的项目的 onDestroyed() 方法。</span></span><br><span class="line">   <span class="comment">/** <span class="doctag">@deprecated</span> Forge: Use &#123;<span class="doctag">@linkplain</span> IItemStackExtension#onDestroyed(ItemEntity, net.minecraft.world.damagesource.DamageSource) damage source sensitive version&#125; */</span></span><br><span class="line">   <span class="meta">@Deprecated</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroyed</span><span class="params">(ItemEntity )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//此方法返回该物品是否可食用。它调用项目实体所代表的项目的 isEdible() 方法。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEdible</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       <span class="comment">//以删</span></span><br><span class="line">       </span><br><span class="line"><span class="comment">//此方法返回消耗物品时播放的声音事件。它调用项目实体所代表的项目的 getDrinkingSound() 方法。</span></span><br><span class="line">   <span class="keyword">public</span> SoundEvent <span class="title function_">getDrinkingSound</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">//此方法返回消耗物品时播放的声音事件。它调用项目实体所代表的项目的 getEatingSound() 方法。</span></span><br><span class="line">   <span class="keyword">public</span> SoundEvent <span class="title function_">getEatingSound</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//这行代码声明了一个名为 TooltipPart 的枚举。枚举是一种特殊的数据类型，可以用来表示一组有限的值。在这种情况下，TooltipPart 枚举用于表示物品提示中可显示的部分。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">enum</span> <span class="title class_">TooltipPart</span> &#123;</span><br><span class="line">       <span class="comment">//这行代码定义了 TooltipPart 枚举的所有成员。每个成员都表示一个可显示在物品提示中的部分。</span></span><br><span class="line">      ENCHANTMENTS, <span class="comment">// 附魔</span></span><br><span class="line">      MODIFIERS,<span class="comment">// 属性修改</span></span><br><span class="line">      UNBREAKABLE,<span class="comment">// 耐久</span></span><br><span class="line">      CAN_DESTROY,<span class="comment">// 是否可以破坏</span></span><br><span class="line">      CAN_PLACE,<span class="comment">// 是否可以放置</span></span><br><span class="line">      ADDITIONAL,<span class="comment">// 物品的附加信息</span></span><br><span class="line">      DYE,<span class="comment">// 染色</span></span><br><span class="line">      UPGRADES;<span class="comment">// 升级信息</span></span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> java </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sai软件下载地址备份</title>
      <link href="/2023/11/18/sai%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E5%A4%87%E4%BB%BD/"/>
      <url>/2023/11/18/sai%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="源视频地址"><a href="#源视频地址" class="headerlink" title="源视频地址"></a>源视频地址</h1><p><a href="https://www.bilibili.com/video/BV1fL4y1a7cB/">【Sai】如何下载使用！提供安装教程（附带笔刷）_哔哩哔哩_bilibili</a></p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>万恶封面党~ 好久没有更新视频啦~ 今天趁着没有偷懒做一期教程吧~ 超简单，易懂易学的教程还不得人手一份~ 然后呢~ 喜欢的话不要忘记三连加关注哦<del>这次一定！！！ 对啦</del>忘记提供链接了</p><p> 附上：链接：<a href="https://pan.baidu.com/s/198xb60399uz0DysUB_AWjw">https://pan.baidu.com/s/198xb60399uz0DysUB_AWjw</a> </p><p>提取码：x5ol</p>]]></content>
      
      
      
        <tags>
            
            <tag> 绘画 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bilibili自动点赞代码解析</title>
      <link href="/2023/11/18/Bilibili%E8%87%AA%E5%8A%A8%E7%82%B9%E8%B5%9E%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/11/18/Bilibili%E8%87%AA%E5%8A%A8%E7%82%B9%E8%B5%9E%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="原地址"><a href="#原地址" class="headerlink" title="原地址"></a>原地址</h2><p><a href="https://github.com/howxcheng/BiliBili_Auto_Like/blob/main/autoLike.js">BiliBili_Auto_Like&#x2F;autoLike.js at main · howxcheng&#x2F;BiliBili_Auto_Like (github.com)</a></p><h2 id="原作者"><a href="#原作者" class="headerlink" title="原作者"></a>原作者</h2><p><a href="https://github.com/howxcheng">howxcheng (程昊) (github.com)</a></p><h2 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name           Bilibili自动点赞</span></span><br><span class="line"><span class="comment">// @name-en        Bilibili_Auto_Like</span></span><br><span class="line"><span class="comment">// @namespace      http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version        2.1</span></span><br><span class="line"><span class="comment">// @description    哔哩哔哩视频、番剧自动点赞</span></span><br><span class="line"><span class="comment">// @author         Howxcheng</span></span><br><span class="line"><span class="comment">// @match          *://*.bilibili.com/video/*</span></span><br><span class="line"><span class="comment">// @match          *://*.bilibili.com/bangumi/*</span></span><br><span class="line"><span class="comment">// @homepageURL    https://github.com/howxcheng/BiliBili_Auto_Like</span></span><br><span class="line"><span class="comment">// @supportURL     https://github.com/howxcheng/BiliBili_Auto_Like/issues</span></span><br><span class="line"><span class="comment">// @icon           https://t1.gstatic.com/faviconV2?client=SOCIAL&amp;type=FAVICON&amp;fallback_opts=TYPE,SIZE,URL&amp;url=http://bilibili.com&amp;size=16</span></span><br><span class="line"><span class="comment">// @license        MIT</span></span><br><span class="line"><span class="comment">// @run-at         document-start</span></span><br><span class="line"><span class="comment">// @grant          unsafeWindow</span></span><br><span class="line"><span class="comment">// @grant          GM_xmlhttpRequest</span></span><br><span class="line"><span class="comment">// @grant          GM_getResourceText</span></span><br><span class="line"><span class="comment">// @grant          GM_notification</span></span><br><span class="line"><span class="comment">// @grant          GM_openInTab</span></span><br><span class="line"><span class="comment">// @grant          GM_getValue</span></span><br><span class="line"><span class="comment">// @grant          GM_setValue</span></span><br><span class="line"><span class="comment">// @grant          GM_addStyle</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="string">&quot;use strict&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> <span class="variable constant_">WIDE_MODE_SWITCH</span> = <span class="literal">false</span>; <span class="comment">// 是否启用&lt;自动宽屏模式&gt;,true:开启,false:关闭</span></span><br><span class="line">  <span class="keyword">var</span> <span class="variable constant_">LIKE_TIME_OUT</span> = <span class="number">0</span>; <span class="comment">// 延迟点赞时间,单位:毫秒</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> originUrl = <span class="variable language_">document</span>.<span class="property">location</span>.<span class="title function_">toString</span>();</span><br><span class="line">  <span class="keyword">var</span> like_lock = <span class="literal">false</span>; <span class="comment">// 点赞计时器锁</span></span><br><span class="line">  <span class="keyword">var</span> like_timer = <span class="literal">null</span>; <span class="comment">// 点赞计时</span></span><br><span class="line">  <span class="keyword">var</span> like_count = <span class="number">0</span>; <span class="comment">// 点赞失败计数器</span></span><br><span class="line">  <span class="keyword">var</span> wide_lock = <span class="literal">false</span>; <span class="comment">// 宽屏计时器锁</span></span><br><span class="line">  <span class="keyword">var</span> wide_timer = <span class="literal">null</span>; <span class="comment">// 宽屏计时器锁</span></span><br><span class="line">  <span class="keyword">var</span> wide_count = <span class="number">0</span>; <span class="comment">// 宽屏失败计数器</span></span><br><span class="line">  <span class="keyword">var</span> main_timer = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">var</span> main_lock = <span class="literal">true</span>;</span><br><span class="line">  main_timer = <span class="built_in">setInterval</span>(changeEvent, <span class="number">1000</span>);  <span class="comment">// setInterval是一个函数，可以每隔一定的时间执行一个函数。这里是每隔1000毫秒（1秒）执行changeEvent函数，用于检测页面是否加载完成。</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">(<span class="params">_e</span>) =&gt;</span> &#123;<span class="comment">//可以在文档上添加一个事件处理器。这里是在文档上添加一个点击事件处理器，当用户点击文档时，执行一个匿名函数。这个匿名函数使用了箭头函数的语法，可以简化函数的定义。这个匿名函数的参数是_e，表示事件对象，但是这里没有用到，所以用下划线开头表示忽略。</span></span><br><span class="line">    <span class="comment">// console.log(&quot;监控到点击事件&quot;);</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//这个匿名函数的内容是使用setTimeout函数延迟500毫秒（0.5秒）执行另一个匿名函数。这个匿名函数的内容是获取当前的网址，和原始的网址比较，如果不同，说明用户点击了其他的视频或番剧，那么就需要重新执行changeEvent函数，所以就设置一个新的计时器，每隔500毫秒执行一次changeEvent函数，并且把main_lock变量设为true，表示主计时器被锁定，避免重复设置计时器。</span></span><br><span class="line">      <span class="keyword">var</span> currentUrl = <span class="variable language_">document</span>.<span class="property">location</span>.<span class="title function_">toString</span>();</span><br><span class="line">      <span class="keyword">if</span> (currentUrl !== originUrl) &#123;</span><br><span class="line">        <span class="comment">// console.log(&quot;url不同，执行操作&quot;);</span></span><br><span class="line">        <span class="keyword">if</span> (!main_lock) &#123;</span><br><span class="line">          main_lock = <span class="literal">true</span>;</span><br><span class="line">          main_timer = <span class="built_in">setInterval</span>(changeEvent, <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">500</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">    <span class="comment">//定义了changeEvent函数，用于检测页面是否加载完成，以及是否需要执行点赞和宽屏的操作。</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">changeEvent</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//changeEvent函数的内容是判断文档的状态是否为&quot;complete&quot;，表示文档已经加载完成，可以进行操作。如果是，那么就判断like_lock和wide_lock变量是否为false，表示点赞和宽屏的计时器是否被锁定。</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">readyState</span> === <span class="string">&quot;complete&quot;</span>) &#123;</span><br><span class="line">      <span class="comment">// console.log(&quot;执行&quot;);</span></span><br><span class="line">      <span class="keyword">if</span> (!like_lock) &#123;</span><br><span class="line">        like_lock = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// console.log(&quot;like锁定&quot;);</span></span><br><span class="line">        like_count = <span class="number">0</span>;</span><br><span class="line">        like_timer = <span class="built_in">setInterval</span>(clickLike, <span class="number">500</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable constant_">WIDE_MODE_SWITCH</span> &amp;&amp; !wide_lock) &#123;</span><br><span class="line">         <span class="comment">//如果没有被锁定，那么就设置相应的计时器，每隔500毫秒执行clickLike和setWideMode函数，用于实现点赞和宽屏的功能，并且把相应的锁和计数器设为true和0，表示开始执行操作。</span></span><br><span class="line">        wide_lock = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// console.log(&quot;wide锁定&quot;);</span></span><br><span class="line">        wide_count = <span class="number">0</span>;</span><br><span class="line">        wide_timer = <span class="built_in">setInterval</span>(setWideMode, <span class="number">500</span>);</span><br><span class="line">      &#125;</span><br><span class="line">        <span class="comment">//然后清除主计时器，更新原始的网址，把main_lock变量设为false，表示主计时器被解锁，可以重新设置。</span></span><br><span class="line">      <span class="built_in">clearInterval</span>(main_timer);</span><br><span class="line">      originUrl = <span class="variable language_">document</span>.<span class="property">location</span>.<span class="title function_">toString</span>();</span><br><span class="line">      <span class="comment">// console.log(&quot;timer解锁&quot;);</span></span><br><span class="line">      main_lock = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 自动宽屏模式</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">setWideMode</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wide_count++;<span class="comment">// 计数器++ </span></span><br><span class="line">    <span class="keyword">var</span> _set_wide_mode_button = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div[class=&quot;bpx-player-ctrl-btn bpx-player-ctrl-wide&quot;]&#x27;</span>);<span class="comment">// 获得宽频按钮</span></span><br><span class="line">    <span class="keyword">if</span> (_set_wide_mode_button !== <span class="literal">null</span>) &#123;<span class="comment">//如果宽屏按钮不为空</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        _set_wide_mode_button.<span class="title function_">click</span>();<span class="comment">//尝试点击按钮</span></span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="comment">// console.log(error);</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// console.log(&quot;非宽屏，切换宽屏,次数：&quot; + wide_count);</span></span><br><span class="line">      wide_count = <span class="number">64</span>;<span class="comment">// 计数器设置为64</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div[class=&quot;bpx-player-ctrl-btn bpx-player-ctrl-wide bpx-state-entered&quot;]&#x27;</span>) !== <span class="literal">null</span>) &#123;<span class="comment">//如果按钮不存在</span></span><br><span class="line">      <span class="comment">// console.log(&quot;宽屏，跳过,次数：&quot; + wide_count);</span></span><br><span class="line">      wide_count = <span class="number">64</span>;<span class="comment">//计数器设置为64</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (wide_count &lt;= <span class="number">60</span>) <span class="keyword">return</span>;<span class="comment">//如果计数器小于60，宽屏按钮存在，但是为点击到,则返回</span></span><br><span class="line">    <span class="comment">// console.log(&quot;wide解锁&quot;);</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(wide_timer);<span class="comment">//清除wide_timer计数器</span></span><br><span class="line">    <span class="title function_">goToSuitable</span>();<span class="comment">//滚到合适位置</span></span><br><span class="line">    wide_lock = <span class="literal">false</span>;<span class="comment">//宽屏锁关闭</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 滚动至合适位置</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">goToSuitable</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(&#123;</span><br><span class="line">        <span class="attr">top</span>: <span class="number">92</span>,</span><br><span class="line">        <span class="attr">behavior</span>: <span class="string">&quot;smooth&quot;</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 点赞</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">clickLike</span>(<span class="params"></span>) &#123;</span><br><span class="line">    like_count++;<span class="comment">//点赞计数器</span></span><br><span class="line">    <span class="keyword">var</span> _like_button = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div[class=&#x27;video-like video-toolbar-left-item&#x27;]&quot;</span>);<span class="comment">//获得点赞按钮</span></span><br><span class="line">    <span class="keyword">if</span> (_like_button !== <span class="literal">null</span>) &#123; <span class="comment">// 点赞按钮存在</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// // console.log(&quot;正在点赞&quot;);</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span></span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            _like_button.<span class="title function_">click</span>();</span><br><span class="line">            <span class="title class_">Toast</span>(<span class="string">&quot;已自动点赞&quot;</span>, <span class="number">3000</span>);</span><br><span class="line">          &#125;, <span class="variable constant_">LIKE_TIME_OUT</span>) <span class="comment">// 阻塞，延迟LIKE_TIME_OUT时间点赞执行，并提示信息。默认为0秒</span></span><br><span class="line">        );</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="comment">// console.log(error);</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// console.log(&quot;未点赞，正在点赞,次数：&quot; + like_count);</span></span><br><span class="line">      like_count = <span class="number">64</span>; <span class="comment">// 点赞成功 设置计数器64</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div[class=&#x27;video-like video-toolbar-left-item on&#x27;]&quot;</span>) !== <span class="literal">null</span>) &#123;<span class="comment">// 获得点赞按钮失败</span></span><br><span class="line">      <span class="comment">// console.log(&quot;已点赞,次数：&quot; + like_count);</span></span><br><span class="line">      like_count = <span class="number">64</span>;<span class="comment">//设置计数器64</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (like_count &lt;= <span class="number">60</span>) <span class="keyword">return</span>; <span class="comment">// 如果点赞小于64则说明存在点赞按钮未点击到，500ms后重新点赞</span></span><br><span class="line">    <span class="comment">// console.log(&quot;like解锁&quot;);</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(like_timer);<span class="comment">//点赞成功，清楚计数器</span></span><br><span class="line">    like_lock = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//界面toast提示</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">Toast</span>(<span class="params">msg, duration</span>) &#123;</span><br><span class="line">    duration = <span class="built_in">isNaN</span>(duration) ? <span class="number">3000</span> : duration;</span><br><span class="line">    <span class="keyword">var</span> m = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    m.<span class="property">innerHTML</span> = msg;</span><br><span class="line">    m.<span class="property">style</span>.<span class="property">cssText</span> =</span><br><span class="line">      <span class="string">&quot;font-family:siyuan;max-width:60%;min-width: 150px;padding:0 14px;height: 40px;color: rgb(255, 255, 255);line-height: 40px;text-align: center;border-radius: 4px;position: fixed;top: 10%;left: 50%;transform: translate(-50%, -50%);z-index: 999999;background: rgba(0, 0, 0,.7);font-size: 16px;&quot;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(m);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> d = <span class="number">0.5</span>;</span><br><span class="line">      m.<span class="property">style</span>.<span class="property">webkitTransition</span> = <span class="string">&quot;-webkit-transform &quot;</span> + d + <span class="string">&quot;s ease-in, opacity &quot;</span> + d + <span class="string">&quot;s ease-in&quot;</span>;</span><br><span class="line">      m.<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(m);</span><br><span class="line">      &#125;, d * <span class="number">1000</span>);</span><br><span class="line">    &#125;, duration);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> bilibili </tag>
            
            <tag> 自动点赞 </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文-02-Super Resolution Based Change Detection Network with Stacked Attention Module for Images With Different Resolutions</title>
      <link href="/2023/11/16/%E8%AE%BA%E6%96%87-02-Super-Resolution-Based-Change-Detection-Network-with-Stacked-Attention-Module-for-Images-With-Different-Resolutions/"/>
      <url>/2023/11/16/%E8%AE%BA%E6%96%87-02-Super-Resolution-Based-Change-Detection-Network-with-Stacked-Attention-Module-for-Images-With-Different-Resolutions/</url>
      
        <content type="html"><![CDATA[<h1 id="Super-Resolution-Based-Change-Detection-Network-with-Stacked-Attention-Module-for-Images-With-Different-Resolutions-基于叠加注意力模块的超分辨率变化检测网络"><a href="#Super-Resolution-Based-Change-Detection-Network-with-Stacked-Attention-Module-for-Images-With-Different-Resolutions-基于叠加注意力模块的超分辨率变化检测网络" class="headerlink" title="Super Resolution Based Change Detection Network with Stacked Attention Module for Images With Different Resolutions(基于叠加注意力模块的超分辨率变化检测网络)"></a>Super Resolution Based Change Detection Network with Stacked Attention Module for Images With Different Resolutions(基于叠加注意力模块的超分辨率变化检测网络)</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h3 id="什么是变化检测："><a href="#什么是变化检测：" class="headerlink" title="什么是变化检测："></a>什么是变化检测：</h3><p>变化检测（CD）旨在基于双时态图像来区分表面变化。</p><h3 id="变化检测通常采用不同分辨率的双时间图像的原因："><a href="#变化检测通常采用不同分辨率的双时间图像的原因：" class="headerlink" title="变化检测通常采用不同分辨率的双时间图像的原因："></a>变化检测通常采用不同分辨率的双时间图像的原因：</h3><p>由于<strong>高分辨率（HR）</strong>图像通常不能随时间连续采集，因此在实际应用中，变化检测（CD)通常采用不同分辨率的双时间图像。</p><h3 id="传统的基于亚像素的CD方法使用的是什么图像："><a href="#传统的基于亚像素的CD方法使用的是什么图像：" class="headerlink" title="传统的基于亚像素的CD方法使用的是什么图像："></a>传统的基于亚像素的CD方法使用的是什么图像：</h3><p>不同分辨率的图像。</p><h3 id="传统的基于亚像素的CD方法当使用HR图像时会存在什么问题："><a href="#传统的基于亚像素的CD方法当使用HR图像时会存在什么问题：" class="headerlink" title="传统的基于亚像素的CD方法当使用HR图像时会存在什么问题："></a>传统的基于亚像素的CD方法当使用HR图像时会存在什么问题：</h3><p>亚稳态（sub-stantial error accumulation）误差积累。</p><h3 id="为什么传统的基于亚像素的CD方法当使用HR图像时会出现亚稳态误差积累："><a href="#为什么传统的基于亚像素的CD方法当使用HR图像时会出现亚稳态误差积累：" class="headerlink" title="为什么传统的基于亚像素的CD方法当使用HR图像时会出现亚稳态误差积累："></a>为什么传统的基于亚像素的CD方法当使用HR图像时会出现亚稳态误差积累：</h3><p>这是因为组内异质性（intraclass heterogeneity ）和组间相似性（ interclass similarity）。</p><h3 id="为什么需要提出一种新的CD方法？"><a href="#为什么需要提出一种新的CD方法？" class="headerlink" title="为什么需要提出一种新的CD方法？"></a>为什么需要提出一种新的CD方法？</h3><p>有必要开发一种新的CD方法，使用更适合HR图像的不同分辨率的图像。</p><h3 id="本论文提出的新的CD方法是什么？"><a href="#本论文提出的新的CD方法是什么？" class="headerlink" title="本论文提出的新的CD方法是什么？"></a>本论文提出的新的CD方法是什么？</h3><p>本论文提出了一种具有堆叠注意力模块（stacked attention module SAM）的基于超分辨率的变化检测网络（super-resolution-based SRCDNet）</p><h3 id="本论文网络模型的构成包含了："><a href="#本论文网络模型的构成包含了：" class="headerlink" title="本论文网络模型的构成包含了："></a>本论文网络模型的构成包含了：</h3><p>SRCDNet采用了一个包含生成器和鉴别器的SR模块。</p><h3 id="生成器和鉴别器的SR模块的作用是："><a href="#生成器和鉴别器的SR模块的作用是：" class="headerlink" title="生成器和鉴别器的SR模块的作用是："></a>生成器和鉴别器的SR模块的作用是：</h3><p>生成器和鉴别器的超分辨率（SR）模块，通过对抗性学习直接学习SR图像，并克服双时态图像之间的分辨率差异</p><h3 id="特征提取器包含了？"><a href="#特征提取器包含了？" class="headerlink" title="特征提取器包含了？"></a>特征提取器包含了？</h3><p>由五个卷积块注意力模块（CBAM）组成的SAM</p><h3 id="注意力模块（CBAM）组成的SAM的作用是什么？"><a href="#注意力模块（CBAM）组成的SAM的作用是什么？" class="headerlink" title="注意力模块（CBAM）组成的SAM的作用是什么？"></a>注意力模块（CBAM）组成的SAM的作用是什么？</h3><p>为了增强多尺度特征中的有用信息。</p><h3 id="变化决策模块是如何学习的？"><a href="#变化决策模块是如何学习的？" class="headerlink" title="变化决策模块是如何学习的？"></a>变化决策模块是如何学习的？</h3><p>通过基于度量学习的</p><h3 id="变化决策模块的作用是什么？"><a href="#变化决策模块的作用是什么？" class="headerlink" title="变化决策模块的作用是什么？"></a>变化决策模块的作用是什么？</h3><p>块获得最终的变化图，其中计算双时态特征之间的距离图</p><h3 id="本论文的模型在那些数据集上进行了测试？"><a href="#本论文的模型在那些数据集上进行了测试？" class="headerlink" title="本论文的模型在那些数据集上进行了测试？"></a>本论文的模型在那些数据集上进行了测试？</h3><p>建筑变化检测数据集（BCDD）和季节变化检测数据集中（CDD）</p><h3 id="在建筑变化检测数据集（BCDD）和季节变化检测数据集中（CDD）上进行了什么研究？"><a href="#在建筑变化检测数据集（BCDD）和季节变化检测数据集中（CDD）上进行了什么研究？" class="headerlink" title="在建筑变化检测数据集（BCDD）和季节变化检测数据集中（CDD）上进行了什么研究？"></a>在建筑变化检测数据集（BCDD）和季节变化检测数据集中（CDD）上进行了什么研究？</h3><p>消融研究和对比实验</p><h3 id="论文是如何保证泛化性的？"><a href="#论文是如何保证泛化性的？" class="headerlink" title="论文是如何保证泛化性的？"></a>论文是如何保证泛化性的？</h3><p>在谷歌数据集上进行的真实图像实验，充分证明了该方法的优越性。</p><h3 id="本论文源码地址："><a href="#本论文源码地址：" class="headerlink" title="本论文源码地址："></a>本论文源码地址：</h3><p>https: &#x2F;&#x2F;github.com&#x2F;liumency&#x2F;SRCDNet</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="变化检测作用"><a href="#变化检测作用" class="headerlink" title="变化检测作用"></a>变化检测作用</h3><p>识别同一区域的双时图像中的地表变化</p><h3 id="变化检测的作用"><a href="#变化检测的作用" class="headerlink" title="变化检测的作用"></a>变化检测的作用</h3><ul><li>土地资源调查</li><li>生态监测与保护</li><li>城市规划</li><li>提供定量数据</li></ul><h3 id="变化检测特点是"><a href="#变化检测特点是" class="headerlink" title="变化检测特点是"></a>变化检测特点是</h3><ul><li>由于其能够以高的时间效率提供大范围地表的丰富信息</li></ul><h3 id="多光谱卫星图形在过去几十年的发展应用在了多光谱卫星图像。"><a href="#多光谱卫星图形在过去几十年的发展应用在了多光谱卫星图像。" class="headerlink" title="多光谱卫星图形在过去几十年的发展应用在了多光谱卫星图像。"></a>多光谱卫星图形在过去几十年的发展应用在了多光谱卫星图像。</h3><h3 id="传统的对于光谱分析的CD方法是什么"><a href="#传统的对于光谱分析的CD方法是什么" class="headerlink" title="传统的对于光谱分析的CD方法是什么"></a>传统的对于光谱分析的CD方法是什么</h3><ul><li>化向量分析（CVA）[9]</li><li>主成分分析（PCA）[10]</li></ul><h3 id="传统分析方法是怎么进行工作的"><a href="#传统分析方法是怎么进行工作的" class="headerlink" title="传统分析方法是怎么进行工作的"></a>传统分析方法是怎么进行工作的</h3><ul><li>主要利用双时态图像中的光谱信息</li></ul><h3 id="多光谱图像本身具有什么特点，这样的特点有导致了什么问题？"><a href="#多光谱图像本身具有什么特点，这样的特点有导致了什么问题？" class="headerlink" title="多光谱图像本身具有什么特点，这样的特点有导致了什么问题？"></a>多光谱图像本身具有什么特点，这样的特点有导致了什么问题？</h3><ul><li>图像的光谱分辨率和空间分辨率相互制约，多光谱卫星图像的空间分辨率通常较低，难以实现精确的CD。</li></ul><h3 id="目前的遥感的发展导致在过去的几十年里，多光谱卫星图像高分辨率图像已成为CD的主要数据源，尤其在细粒度场景，如城市更新-11-。"><a href="#目前的遥感的发展导致在过去的几十年里，多光谱卫星图像高分辨率图像已成为CD的主要数据源，尤其在细粒度场景，如城市更新-11-。" class="headerlink" title="目前的遥感的发展导致在过去的几十年里，多光谱卫星图像高分辨率图像已成为CD的主要数据源，尤其在细粒度场景，如城市更新[11]。"></a>目前的遥感的发展导致在过去的几十年里，多光谱卫星图像高分辨率图像已成为CD的主要数据源，尤其在细粒度场景，如城市更新[11]。</h3><h3 id="新的方法是什么，他为什么能解决这个问题。有哪些方法？"><a href="#新的方法是什么，他为什么能解决这个问题。有哪些方法？" class="headerlink" title="新的方法是什么，他为什么能解决这个问题。有哪些方法？"></a>新的方法是什么，他为什么能解决这个问题。有哪些方法？</h3><ul><li>基于深度学习的方法</li><li>深度学习的方法，包括强大的特征学习结构，即卷积神经网络，从HR图像中分层提取空间和语义特征[12]</li><li>基于分类的方法[13]-[15]</li><li>基于度量学习的方法[16]、[17]。</li></ul><h3 id="HR图像优点："><a href="#HR图像优点：" class="headerlink" title="HR图像优点："></a>HR图像优点：</h3><p>改善地球表面现象的特征</p><h3 id="HR图像存在问题："><a href="#HR图像存在问题：" class="headerlink" title="HR图像存在问题："></a>HR图像存在问题：</h3><p>观测范围小、时间分辨率低以及云和雾的影响</p><h3 id="造成HR图像存在问题的原因："><a href="#造成HR图像存在问题的原因：" class="headerlink" title="造成HR图像存在问题的原因："></a>造成HR图像存在问题的原因：</h3><p>气象和技术影响</p><h3 id="这些问题对HR图形会有什么影响："><a href="#这些问题对HR图形会有什么影响：" class="headerlink" title="这些问题对HR图形会有什么影响："></a>这些问题对HR图形会有什么影响：</h3><p>限制HR图像调查的实际能力和影响</p><h3 id="传统的变化检测的方法特点："><a href="#传统的变化检测的方法特点：" class="headerlink" title="传统的变化检测的方法特点："></a>传统的变化检测的方法特点：</h3><p>依赖相同分辨率的双时图像分析。</p><h3 id="为什么传统的变化检测的方法不能够解决遥感的变化检测问题？特别是在大规模下。"><a href="#为什么传统的变化检测的方法不能够解决遥感的变化检测问题？特别是在大规模下。" class="headerlink" title="为什么传统的变化检测的方法不能够解决遥感的变化检测问题？特别是在大规模下。"></a>为什么传统的变化检测的方法不能够解决遥感的变化检测问题？特别是在大规模下。</h3><p>让我们假设我们在时间T1获得了某个区域的HR图像，但只有与时间T2相对应的低分辨率（LR）图像可用；然后，我们需要使用不同分辨率的双时态图像来检测T1和T2之间发生的变化。因此，为了实现大规模和快速的CD，通常需要在现实应用中使用不同分辨率的双时态图像[18]-[20]。</p><p><strong>说明现实中大多数时候的不同时间的遥感的图像的分辨率是不同的。</strong></p><h3 id="传统的方法是怎么解决这样的问题的？"><a href="#传统的方法是怎么解决这样的问题的？" class="headerlink" title="传统的方法是怎么解决这样的问题的？"></a>传统的方法是怎么解决这样的问题的？</h3><p>最直观的方法是简单地将HR图像下采样到LR图像的分辨率[21]，或者将LR图像插值到HR图像的分辨率，以获得具有相同分辨率的双时态图像[22]，然后使用常见的CD方法来检测变化。</p><h3 id="这两种方法分别由什么问题？"><a href="#这两种方法分别由什么问题？" class="headerlink" title="这两种方法分别由什么问题？"></a>这两种方法分别由什么问题？</h3><p>第一种方法核心的下采样步骤导致缺乏结果的详细空间信息，这导致所获得结果的精度严重下降。</p><p>第二种方法没有考虑应用于遥感图像的常见插值操作（如线性、双线性和双三次插值）中的语义信息，这导致实现感兴趣区域的详细信息的能力不足。</p><h3 id="除了最简单的插值方法外还有什么方法解决不同分辨率下的图像问题？"><a href="#除了最简单的插值方法外还有什么方法解决不同分辨率下的图像问题？" class="headerlink" title="除了最简单的插值方法外还有什么方法解决不同分辨率下的图像问题？"></a>除了最简单的插值方法外还有什么方法解决不同分辨率下的图像问题？</h3><p>在这种情况下，基于亚像素的方法是最普遍的。</p><p>亚像素映射（SPM）从粗分辨率图像中获得精细分辨率土地覆盖图 具有优异能力[23]-[25]。</p><p>Ling等人[26]首先将SPM引入CD，使用不同分辨率的图像（简称“不同分辨率CD”），提出了一种空间模式。</p><h4 id="什么空间模式："><a href="#什么空间模式：" class="headerlink" title="什么空间模式："></a>什么空间模式：</h4><p>亚像素尺度的LCC地图的空间模式</p><h4 id="手段是："><a href="#手段是：" class="headerlink" title="手段是："></a>手段是：</h4><p>空间相关性原理</p><p>一种新的土地覆盖变化（LCC）规则</p><p>Wang等人[27]提出了一种具有SPM的Hopfield神经网络，以克服陆地卫星和中分辨率成像光谱仪（MODIS）图像在亚像素分辨率LCCs中的分辨率差异。</p><p>李等人[28]将迭代超分辨率CD方法应用于陆地卫星MODIS CD，该方法结合了端元估计、光谱分解和SPM。</p><p>吴等人[29]提出了一种反向传播神经网络，用于从软分类中获得亚像素LCC图</p><h3 id="SPM方法是什么方法，在上面方面是有效的，在HR图形上存在什么问题，为什么要开发新的CD方法。"><a href="#SPM方法是什么方法，在上面方面是有效的，在HR图形上存在什么问题，为什么要开发新的CD方法。" class="headerlink" title="SPM方法是什么方法，在上面方面是有效的，在HR图形上存在什么问题，为什么要开发新的CD方法。"></a>SPM方法是什么方法，在上面方面是有效的，在HR图形上存在什么问题，为什么要开发新的CD方法。</h3><p>这些基于SPM的方法通过在以前的精细分辨率土地覆盖图和粗分辨率图像之间建立映射来获得精细分辨率变化图，并且已被证明在处理遥感图像CD的大尺度差异方面是有效的，特别是在陆地卫星和MODIS图像上。然而，在这些情况下，精细分辨率变化图的精度在很大程度上受到前一精细分辨率土地覆盖图精度的限制，导致冗余误差积累。由于HR图像中的组内异质性和组间相似性，这样的问题对于HR图像来说将更加严重。因此，迫切需要为不同空间分辨率的HR图像开发更精确的CD方法。</p><h3 id="本论文提出的网络基于什么的？做什么用的？本论文呢是如何解决冗余错误的问题的？对SR图像和HR图像是怎么处理的？以及SAM的组成和作用是什么？对比损失的作用是什么？"><a href="#本论文提出的网络基于什么的？做什么用的？本论文呢是如何解决冗余错误的问题的？对SR图像和HR图像是怎么处理的？以及SAM的组成和作用是什么？对比损失的作用是什么？" class="headerlink" title="本论文提出的网络基于什么的？做什么用的？本论文呢是如何解决冗余错误的问题的？对SR图像和HR图像是怎么处理的？以及SAM的组成和作用是什么？对比损失的作用是什么？"></a>本论文提出的网络基于什么的？做什么用的？本论文呢是如何解决冗余错误的问题的？对SR图像和HR图像是怎么处理的？以及SAM的组成和作用是什么？对比损失的作用是什么？</h3><p>在本文中，我们提出了一种端到端的，基于超分辨率的，用于不同分辨率变化检测的，变化检测网络（SRCDNet）。为了解决双时态图像空间分辨率不匹配的问题，SRCDNet采用超分辨率模块（SRM）直接从LR图像中学习超分辨率图像，以恢复更多的语义信息并避免冗余错误。然后将SR图像与对应于其他时间戳的HR图像一起输入到特征提取器中。为了充分提取HR图像中的多级信息，以便于后续预测，还将由五个卷积块注意力模块（CBAM）组成的堆叠注意力模块（SAM）添加到特征提取器中。然后，为了从双时态图像的多尺度特征中学习精确的变化图，计算特征之间的距离图，并将其与基本事实进行比较，其中采用对比损失（度量学习中的常见损失）来帮助增加变化区域的距离，减少不变区域的距离。最后，可以通过简单的阈值处理从距离图中获得变化图。</p><h3 id="本论文研究的贡献，如何解决了误差积累的问题，如何有效的提取层次特征，进行了那些研究保证了精度。"><a href="#本论文研究的贡献，如何解决了误差积累的问题，如何有效的提取层次特征，进行了那些研究保证了精度。" class="headerlink" title="本论文研究的贡献，如何解决了误差积累的问题，如何有效的提取层次特征，进行了那些研究保证了精度。"></a>本论文研究的贡献，如何解决了误差积累的问题，如何有效的提取层次特征，进行了那些研究保证了精度。</h3><p>1） 我们提供了一个端到端的基于超分辨率的HR图像光盘网络；所提出的方案通过LR图像和初始HR图像之间的映射来学习SR图像，以避免传统的基于亚像素的方法中遇到的误差累积。</p><p>2） 我们将由五个CBAM块组成的SAM集成到网络的特征提取器中，以增强层次特征中的有效信息，获得更可区分的特征对，这可以通过度量学习极大地帮助后续的变化决策。</p><p>3） 在两个常见的变化检测数据集（CDD）上进行了比较实验，即构建变化检测数据集中（BCDD）[30]和CDD[31]，以验证SRCDNet的有效性，并构建了一个基于谷歌数据集[32]的真实图像数据集，以在真实图像上进一步测试SRCDNet。结果表明，该模型不仅在BCDD和CDD中模拟的不同分辨率图像上具有最先进的SOTA性能，而且在真实图像上也获得了最高的精度。</p><h3 id="本文的结构"><a href="#本文的结构" class="headerlink" title="本文的结构"></a>本文的结构</h3><p>本文的其余部分组织如下：第二节进一步介绍了一些相关工作。第三节介绍了关于拟议网络的详细信息。第四节阐述了本研究中进行的所有实验的设置。在第五节中，我们介绍了我们的结果和详细分析。第六节讨论了不同设置对模型的影响。最后，我们在第七节中总结这篇文章。</p><h2 id="相关工作"><a href="#相关工作" class="headerlink" title="相关工作"></a>相关工作</h2><h3 id="A-基于深度学习的CD"><a href="#A-基于深度学习的CD" class="headerlink" title="A. 基于深度学习的CD"></a>A. 基于深度学习的CD</h3><p>在<strong>全卷积网络（FCN）[33]提供了一种更直观的密集预测方法之后，</strong>许多基于FCN及其变体，</p><p>特别是U-Net [34]的方法已被提出用于<strong>像素级CD</strong>。</p><p>Daudt等人[14]基于U-Net探索了三种不同的图像输入方法，包括早期融合、Siamese_difference和Siamese_concatenation，用于<strong>双时相CD</strong>。</p><p>为了充分利<strong>用双时相图像中的全局和局部信息</strong>，Peng等人[35]提<strong>出了U-Net+</strong>+，采用多尺度特征融合策略生成最终的变化图。</p><p>U-Net的<strong>编码器-解码器结</strong>构通常用于<strong>语义分割任务，</strong>其中<strong>编码器</strong>用于提取<strong>双时相图像的多级语义特征</strong>，<strong>解码器</strong>用于从<strong>分层特征中恢复空间信息</strong>，并通过<strong>分类生成</strong>CD图。</p><p>近年来，一些研究<strong>将度量学习引入CD</strong>中，以替换<strong>解码器</strong>的<strong>上采样过</strong>程，通过计算<strong>双时相图像的特征之间的</strong>距<strong>离直接</strong>获得变化图。</p><p>在训练过程中，“<strong>未更改”特征之间</strong>的距离被最小化，而“<strong>更改”特征之间的</strong>距离被最大化；<strong>损失函数</strong>在此过程中起着重要作用。</p><p>例如，Zhang等人[36]使用改进的<strong>三元组损失</strong>来学习成对<strong>特征中多尺度信息之间的语义关系</strong>。</p><p>Wang等人[37]使用对比损失来检测基于使<strong>用Siamese卷积网络</strong>提取的特征的变化。为了<strong>减轻CD中类别不平衡的影响</strong>，Chen和Shi[16]采用批<strong>量对比损失</strong>来训练所提出的<strong>时空注意力网络</strong>（STANet）。</p><h3 id="B-CD策略"><a href="#B-CD策略" class="headerlink" title="B CD策略"></a>B CD策略</h3><p>虽然高分辨率（HR）图像由于组内异质性和组间相似性的影响而导致误报警或漏报警，但已经尝试了许多方法来生成更具有区分性的特征，包括循环神经网络（RNN）[38]和注意机制。</p><p>Papadomanolaki等人[13]将长短期记忆块（LSTMs）[39]集成到FCN中，以检测Sentinel-2图像中的城市变化，并证明了<strong>RNN</strong>对于<strong>捕捉图像之间的光谱或时间关系是</strong>有效的。</p><p>此外，Song等人[40]将卷积LSTM与3-D FCN相结合，以捕获高光谱图像中的<strong>联合光谱-空间-时间特征</strong>。尽管RNN可以在多光谱和高光谱输入上很好地工作，但由于HR图像中<strong>光谱信息不频繁和双时相图像中时间信息不足</strong>，它们仍然受到限制。</p><p>由于<strong>注意机制能够增强提取特征中的有用信息</strong>，因此已经采用注意机制更好地利用HR图像中丰富的空间信息。</p><p>Chen和Shi[16]在CD网络的特征提取器中集成了<strong>自注意模块，以</strong>加强<strong>双时相特征之间的时空关</strong>系。Chen等人[17]为每个双时相特征使用双CBAM [41]来强调图像中的变化信息，从而促进了基于度量学习的变化决策。然而，由于内存限制，在现有的有效利用空间信息进行CD的方法中，<strong>注意机制通常仅应用于高级语义特征，而忽略了浅层特征的增强。</strong></p><h3 id="C-超分辨率"><a href="#C-超分辨率" class="headerlink" title="C 超分辨率"></a>C 超分辨率</h3><p>由于图像质量在许多视觉应用中起着至关重要的作用，超分辨率旨在从LR图像中获得更高质量的图像。近年来，深度学习的繁荣为图像超分辨率带来了新的解决方案，特别是针对单幅图像超分辨率（SSIR）。为了在从LR图像重建HR图像时更好地恢复图像的详细信息，Dong等人[42]首次将CNN引入SR应用程序作为超分辨率卷积神经网络（SRCNN）。此后，研究人员已经相继提出了一系列有效的SR算法。Kim等人[43]通过将SRCNN和Visual Geometry Group（VGG）骨干结合起来，设计了一个名为very deep super-resolution（VDSR）的具有20层的深度神经网络。Kim等人[44]还为SR提出了一种深度递归卷积网络（DRCN）。鉴于生成对抗网络（GANs）[45]在其他各个领域的出色表现，Ledig等人[46]将GAN应用于SR，并提出了超分辨率生成对抗网络（SRGAN），该网络在当时实现了SOTA性能。结合上述研究，我们提出了一种深度度量学习变化检测网络（CDNet），将超分辨率集成到其中，以学习从LR图像到HR图像的映射，并使用注意机制获取更有效的多尺度特征，用于不同分辨率的CD。</p><h2 id="III-方法论"><a href="#III-方法论" class="headerlink" title="III. 方法论"></a>III. 方法论</h2><p>本节提供了所提出方法的简要概述，随后详细描述了每个部分及模型的优化过程。</p><h3 id="A-概述"><a href="#A-概述" class="headerlink" title="A. 概述"></a>A. 概述</h3><p>SRCDNet如图1所示，由两部分组成：超分辨率（SR）模块和CD模块。基于GAN架构，SR模块由生成器和判别器组成，旨在将双时相图像的LR图像重建为HR图像。CD模块负责特征提取和CD。特征提取器中集成了一个SAM和五个CBAM，这是一种轻量级的注意机制，可以增强特征的通道和空间信息，以提取多尺度特征。之后，采用深度度量学习进行后续变化决策。</p><p>假设我们需要检测在T1获得的高分辨率（HR）图像和在T2获得的低分辨率（LR）图像之间的变化，其分辨率差异可以表示为N（N &#x3D; 4,8）。给定T1和T2的一组HR双时相图像，分别称为$$ I^{HR}<em>{T1}$$和 $$I</em>{T2}^{HR}$$，以及相应的变化注释Y。 $$I_{T2}^{HR}$$将被下采样N次以生成T2的LR图像，可以称为$$I^{LR}<em>{T2}$$。因此，我们可以获得由一组图像$$(I</em>{T1}^{HR},I_{T2}^{HR},I_{T2}^{LR}) &#x3D; {(i_{T1}^{HR},i_{T2}^{HR},i_{T2}^{LR})^1,…,(i_{T1}^{HR},i_{T2}^{HR},i_{T2}^{LR})}$$^n ，n∈N 组成的训练集，以及地面实况$$ GT &#x3D; {gt^1，..，gt^n}，n∈N$$，然后可以总结SRCDNet的流程如下。</p><p>1）将$$I_{T2}^{LR}$$输入SR模块的生成器G，生成器G将生成T2的SR图像，即$$I_{T2}^{SR} &#x3D; G(I_{T2}^{LR})$$，与$$I_{T2}^{HR}$$相同大小;之后，判别器D负责学习通过损失$${Loss}<em>{d}$$来区分$$I</em>{T2}^{SR}$$和$$I_{T2}^{HR}$$，$${Loss}<em>{d}$$由判别器的输出D($$I</em>{T2}^{SR}$$)和D($$I_{T2}^{HR}$$)构成。</p><p>2)然后，$$ I_{T1}^{HR}$$和$$I_{T2}^{SR}$$都被输入到共享权重的特征提取器中，以获得分层特征。在将四个中间特征堆叠成一个之前，应用了前四个CBAM。然后，在堆叠后的特征上应用第五个CBAM块。</p><p>3)此后，根据双时相特征$$f_{r1}$$和$$f_{r2}$$计算距离图dt，以测量$$ I_{T1}^{HR}$$和$$I_{T2}^{SR}$$之间的距离，然后与真值gt进行比较，得到对比损失$$Loss_{CD}$$。然后优化度量$$Loss_{CD}$$，以拉开真值上变化区域之间的距离，缩小不变区域之间的距离。<br>4)最后，根据$$I_{T2}^{SR}$$和$$I_{T2}^{HR}$$之间的差异、判别器的结果和CD性能$$Loss_{CD}$$，优化生成器G，以生成具有丰富语义信息的SR图像。</p><p><img src="https://s2.loli.net/2023/11/17/Exi1WsrbvNUhG53.png" alt="image-20231117103903545"></p><p>值得注意的是，当双时态图像之间没有空间分辨率差异时，通过去除SR模块，SRCDNet可以很容易地退化为简单的CDNet；这一细节显著提高了模型的通用性。</p><h3 id="B-超分辨率模块"><a href="#B-超分辨率模块" class="headerlink" title="B 超分辨率模块"></a>B 超分辨率模块</h3><p>SR模块的结构受到了SRGAN方案的启发，其中一个生成器负责从LR图像生成SR图像，而一个判别器负责区分SR图像和初始的HR图像，直到它们彼此无法区分，然后生成器就能够输出足够进行细粒度CD的SR图像。</p><blockquote><p>这段内容是介绍了SR模块的设计原理，它是基于生成对抗网络（GAN）的思想，利用一个生成器和一个判别器来实现超分辨率（SR）的效果。生成器的目标是从低分辨率（LR）图像生成高分辨率（HR）图像，判别器的目标是判断生成的图像是否真实。当判别器无法区分真假时，说明生成器达到了最优，能够输出高质量的SR图像，这对于变化检测（CD）是有利的，因为可以提高检测的精度。</p></blockquote><p>生成器首先使用一个9×9的卷积层来捕获输入LR图像的浅层特征，然后使用五个残差块来提取高层特征。每个残差块由两个3×3的卷积层组成，后面跟着一个批量归一化（BN）层，其中第一个是一个参数化整流线性单元（PReLU）层，作为激活层。残差块进一步提取的深层特征与第一个卷积层得到的浅层特征融合，得到具有丰富空间和语义信息的特征。然后，使用M个子像素卷积层来增加特征的大小，使之与HR图像相同。由于每个子像素卷积层可以通过像素洗牌操作将输入特征的大小放大两倍，所以M的值可以通过M &#x3D; log2N来计算。最后，生成器通过一个全卷积层产生SR图像。</p><p>判别器继承了VGG-19的结构，包含八个卷积层，其中使用了BN层和泄漏ReLU函数。两个全连接层和一个sigmoid函数用于输出输入图像的分布，这是一个二分类任务。由于判别器的目标是区分SR图像和HR图像，所以通过对抗训练可以促使生成器生成更接近原始HR图像的SR样本。</p><blockquote><p>这段内容是介绍了SR模块的生成器和判别器的网络结构，它们分别负责从LR图像生成SR图像和从SR图像和HR图像中进行真假判断。生成器使用了卷积层、残差块和子像素卷积层来提取和放大特征，判别器使用了VGG-19的结构来进行分类。通过对抗训练，生成器和判别器可以相互促进，使得生成的SR图像更加逼真。.</p></blockquote><h3 id="C-CD-模块"><a href="#C-CD-模块" class="headerlink" title="C CD 模块"></a>C CD 模块</h3><p>SR模块的目的是产生与HR图像相似的SR图像，而CD模块的任务是基于SR图像和另一个时刻的HR图像生成精确的变化图。SRCDNet中的CD模块采用度量学习的方法，基于特征提取器的特征来获得变化图。</p><p>我们使用一个预训练的ResNet-18作为特征提取器，去掉了最后的全连接层，将其扩展为一个孪生结构，以接收双时相的输入。一个步长为一的7×7卷积层用于提取具有丰富空间信息的浅层特征，后面跟着一个BN层和ReLU函数，然后使用一个步长为二的最大池化层。然后，使用四个残差块来充分利用图像中的信息。每个残差块的输出特征的大小分别是输入图像的1&#x2F;2、1&#x2F;4、1&#x2F;8和1&#x2F;8，通道数分别是64、128、256和512。</p><p>为了充分捕获多尺度特征中的有效信息，我们在特征提取器中集成了一个SAM和五个CBAM。具体来说，四个CBAM块分别应用于每个残差块的输出特征，以强调有用的信息；这些特征然后统一调整为原始图像大小的一半，并融合成具有多尺度信息的特征。然后，第五个CBAM块被应用，以使后续检测的特征对更加可区分。</p><p>每个CBAM块包含两部分：一个通道注意力模块，用于捕获通道间的关系，和一个空间注意力模块，用于探索空间间的上下文信息。给定一个大小为<strong>C x H x W的特征F</strong>，在通道注意力模块中，首先分别对输入特征应用一个平均池化层和一个最大池化层，以得到两个大小为C × 1 x 1的向量，然后使用一个包含两个1 × 1卷积层的共享权重的多层感知器（MLP）模块，来学习并给每个通道赋予权重。最后，将两个因子相加得到一个，然后应用一个sigmoid函数$$\sigma $$，得到通道<strong>注意力图因子</strong>，可以表示为<br>$$<br>M_c(F)&#x3D;\sigma(MLP(Avg(F))+MLP(Max(F)))<br>$$<br>经过通道注意力模块的加权后，得到的<strong>通道精化特征</strong>F’是$$M_c(F)$$和F的乘积，可以表示为<br>$$<br>F’ &#x3D; M_c(F) \otimes  F<br>$$<br>然后，空间注意力模块会作用于大小为<strong>C x H x W的特征F</strong>‘，它与F的大小相同。这里，一个平均池化层和一个最大池化层被用来将F’压缩成两个大小为1 x H x W的矩阵，然后将它们堆叠成一个，并输入到一个3 x 3的卷积层。最后，通过一个sigmoid函数，得<strong>到空间精化矩阵</strong>，可以表示为<br>$$<br>M_s(F’)&#x3D;\sigma(f^{3*3})(Avg(F’);Max(F’))<br>$$<br>因此，<strong>CBAM精化特征</strong>可以通过以下公式得到：<br>$$<br>F’’ &#x3D; M_s(F’)\otimes F’<br>$$<br>由于CBAM不改变输入特征的大小，所以第五个CBAM的输出特征对保持了原始图像一半的大小，之间用欧氏距离来衡量它们的相似度。距离图需要插值到原始图像的相同大小，然后用对比损失作为度量来衡量距离图和真值之间的差异。之后，通过度量的优化，真值上变化区域的距离增加，而不变区域的距离减少。换句话说，我们可以通过度量学习得到距离图，使得变化区域和不变区域之间的值差异尽可能大。因此，我们可以通过阈值分割从距离图中得到更精确的变化图。</p><h3 id="D部分损失函数"><a href="#D部分损失函数" class="headerlink" title="D部分损失函数"></a>D部分损失函数</h3><p>我们的网络中有三个子模型需要优化：SR模块中的判别器,生成器和CD网络。每个子模型的目标如下所述。<br>1)判别器：在接收到$$I_{T2}^{HR}$$和$$I_{T1}^{SR}$$作为输入后，判别器输出输入图像为$$I_{T2}^{HR}$$的概率。为了提高判别器准确区分$$I_{T2}^{HR}$$和$$I_{T1}^{SR}$$的能力，判别器的损失函数设计如下：<br>$$<br>Loss_D &#x3D; 1 - D(I_{T2}^{SR}) + D(G(I_{T2}^{LR}))<br>$$<br>根据公式，判别器在对抗训练后对高分辨率图像输出接近1的概率，对超分辨率图像输出接近0的概率</p><p>2)变化网络：然后，$$I_{T2}^{SR}$$和$$I_{T1}^{HR}$$一起输入到CDNet中，其中用连体特征提取器提取双时相输入的多尺度特征。基于经过CBAM块增强的特征对，计算特征对之间的欧氏距离图，然后根据这个距离图，用阈值分割生成最终的变化图。因此，CDNet的目标是根据真值图，尽可能地拉开距离图上“变化”区域和“不变”区域的对应值。因此，用一个批量对比损失来帮助最小化距离图上“不变”区域之间的距离，最大化“变化”区域之间的距离，可以表示为：<br>$$<br>Loss_{CD} &#x3D; \sum_{i,j&#x3D;0}^{M}\frac{1}{2}[(1-gt_{i,j})dt_{i,j}^2+gt_{i,j}max(dt_{i,j}-m^2)]<br>$$</p><p>其中M表示dt的大小；dt(i,j)和gt(i,j)分别表示距离图和真值图在点(i,j)处的值，其中i,j∈[0,M)；m是用来过滤掉超过阈值的像素的边界，实验中设为2。</p><p>3)生成器：生成器的损失由以下几部分组成：图像损失、内容损失、对抗损失和变化损失。图像损失通过计算$$I_{T2}^{SR}$$和$$I_{T2}^{HR}$$之间的均方误差（MSE）来衡量它们在像素空间上的对齐程度。图像损失可以表示为<br>$$<br>l_{MSE} &#x3D; \sum_{i,j&#x3D;0}^{M}({I_{T2}^{HR}}<em>{i,j}-G(I</em>{T2}^{LR})<em>{i,j})<br>$$<br>由于像素对齐很难在图像中保留详细信息，因此内容丢失更多地关注感知相似性。具体地说，内容损失计算通过预训练的VGG-19网络获得的$$I</em>{T2}^{SR}$$和$$I_{T2}^{HR}$$的某些特征图之间的MSE，以产生视觉上更逼真的SR图像。内容损失的公式为</p><p>$$<br>l_{MSE}^{VGG} &#x3D; \sum_{i,j&#x3D;0}^{M}(\phi <em>{VGG}(I</em>{T2}^{HR})<em>{i,j}-\phi <em>{VGG}(G(I</em>{T2}^{LR})</em>{i,j}))<br>$$<br>虽然鉴别器设计用于区分$$I_{T2}^{SR}$$和$$I_{T2}^{HR}$$，但生成器旨在通过对抗性损失增加鉴别器误判的概率，其定义如下：<br>$$<br>l_D &#x3D; 1 - D(G(I_{T2}^{LR}))<br>$$<br>为了使SR图像在像素和感知上与原始HR图像相似，并同时改进CD结果，CDNet中使用的批量对比损失也被添加到生成器的损失中。总之，优化器的优化目标是:<br>$$<br>Loss_G &#x3D; l_{MSE}+al^{VGG}<em>{MSE}+bl_D+rLoss</em>{CD}<br>$$<br>其中a，b，r不同损失的平衡因子</p><p><img src="https://s2.loli.net/2023/11/17/Dqc2Fh6C78ngSNx.png" alt="image-20231117163410757"></p><blockquote><p>这段内容是介绍了CD模块的网络结构，它是基于特征提取器和度量学习的方法来实现变化检测的。特征提取器使用了一个预训练的ResNet-18，通过一个孪生结构来处理双时相的输入，提取出深层的特征。度量学习的方法是根据特征之间的距离来判断是否发生了变化，从而生成变化图。</p><p>这段内容是介绍了CD模块中特征提取器的结构，它使用了一个SAM和五个CBAM来增强多尺度特征的信息。SAM是一个空间注意力模块，用于提取空间上的变化信息。CBAM是一个通道和空间注意力模块，用于分别提取通道和空间上的有用信息。特征提取器使用了一个预训练的ResNet-18，通过一个孪生结构来处理双时相的输入，提取出深层的特征。然后，通过CBAM和SAM来对特征进行融合和加权，使得特征更加适合后续</p><p>这段内容是介绍了CBAM块的具体计算过程，它包括通道注意力模块和空间注意力模块两个部分。通道注意力模块通过平均池化和最大池化来提取通道间的关系，然后通过一个共享权重的MLP模块来给每个通道赋予权重，最后通过一个sigmoid函数来得到通道注意力图因子。空间注意力模块通过平均池化和最大池化来提取空间间的信息，然后通过一个3 x 3的卷积层来得到空间注意力图因子。最后，通过两个注意力图因子的乘积，得到CBAM精化特征，用于后续的变化检测。</p><p>这段内容是关于一种基于CBAM的变化检测方法，它利用欧氏距离和对比损失来度量特征对的相似度，并通过度量学习和阈值分割来生成变化图。</p></blockquote><h2 id="IV实验的设置"><a href="#IV实验的设置" class="headerlink" title="IV实验的设置"></a>IV实验的设置</h2><h3 id="A-数据集"><a href="#A-数据集" class="headerlink" title="A. 数据集"></a>A. 数据集</h3><p>我们的实验使用了三个变化检测数据集（CDDs），它们的概况如下。</p><p>建筑变化检测数据集（BCDD）：BCDD [29] 提供了 0.2m对 的图像，大小为 32507 x 15354，以及它们之间的建筑变化的真值。由于双时相图像是在地震发生前后选取的，所以这些区域包含了各种建筑变化，包括建筑重建和更新。为了方便模型的训练和测试，我们将图像裁剪成 7434 个大小为 256 x 256 的无重叠的块，然后按照 8:1:1 的比例随机划分为训练集、验证集和测试集。为了避免过拟合，我们对训练集中的图像进行了旋转，以增加数据的多样性。<br>变化检测数据集（CDD）：CDD [30] 包含了 16000 对真实的季节变化的 Google Earth 图像对，大小为 256 x 256，其中包括 10000 个训练样本、3000 个验证样本和 3000 个测试样本。CDD 的空间分辨率非常高，为 3-100 cm，它不仅提供了常见物体（如建筑、道路和森林）的变化信息，还提供了许多细节物体（如汽车和坦克）的变化信息。虽然 BCDD 和 CDD 都是具有相同分辨率的双时相图像的变化检测数据集，但是对于不同分辨率的变化检测实验，还需要进一步的处理。因此，我们对 BCDD 和 CDD 中的 T2 图像进行了 N(N &#x3D; 4, 8) 倍的双三次下采样，以获得相应的低分辨率图像，用于后续的实验。BCDD 和 CDD 中不同分辨率的样本示例如图 2 所示。</p><p>Google DataSet:，它是由中国广州的 Google Earth 图像构建的，19对图像，大小为 0.55m，大小从 1006 x 1168 像素到 4936 x 5224 像素不等。所有的图像都是在 2006 年到 2019 年之间收集的，当时广州正处于快速发展的时期。因此，这个数据集提供了各种形状和大小的建筑变化。在我们的实验中，对于数据集中 T2 时刻的 19 张图像，我们从 Google Earth 上获取了相同日期的分辨率为 2.2-m 的对应图像，从而构建了一个具有 4 倍分辨率差异的真实图像数据集。然后，这个真实图像数据集被切分成 1118 对无重叠的样本对，并按照 6:2:2 的比例划分为训练集、验证集和测试集。训练集通过随机旋转和翻转进行了进一步的增强。重构的真实图像数据集中不同分辨率的样本示例如图 2 所示。</p><p><img src="https://s2.loli.net/2023/11/17/wmMVYvK8PrRNOys.png" alt="image-20231117165103373"></p><p><img src="https://s2.loli.net/2023/11/17/oEvuScmiCaljnIs.png" alt="image-20231117165128193"></p><h3 id="B-实验设计"><a href="#B-实验设计" class="headerlink" title="B 实验设计"></a>B 实验设计</h3><p>为了充分验证所提出的 SRCDNet 的有效性，我们设计了三组实验。<br>I) 消融实验：首先在 BCDD 和 CDD 上进行了消融实验，以测试 SRCDNet 中不同模块的有效性。由于所提出的 SRCDNet 旨在解决双时相图像在变化检测中的分辨率差异问题，因此这部分的实验涉及到四倍分辨率差异（X4）和八倍分辨率差异（X8）的情况。<br>\2) 对比实验：然后与其他变化检测方法进行了对比实验，以检验 SRCDNet 的优越性。由于 SRCDNet 也可以转化为一个普通的变化检测模型，除了 X4 和 X8 的实验外，还涉及到了没有分辨率差异（X1）的初始图像的实验，以检查模型的灵活性。<br>\3) 真实图像实验：为了进一步探究 SRCDNet 在真实图像上的效用，我们在具有四倍分辨率差异的 Google 数据集上进行了真实图像实验。此外，我们还将在 BCDD 和 CDD 上训练的模型迁移到 Google 数据集上，以探索现有的大规模变化检测数据集在真实图像上的应用潜力。</p><h3 id="C-Baselines"><a href="#C-Baselines" class="headerlink" title="C Baselines"></a>C Baselines</h3><p>为了验证所提出的 SRCDNet，我们引入了五种最先进的变化检测方法作为对比。每种方法的简要描述如下。</p><ol><li>全卷积-早期融合（FC-EF）[30]：基于 U-Net 结构，FC-EF 网络通过将双时相图像作为多光谱输入进行融合来检测变化。跳跃连接用于将编码器的特征传递到解码器，以恢复每一层的空间信息。</li><li>全卷积-孪生差异（FC-Siam-Diff）[30]：FC-EF 的一个变体，FC-Siam-Diff 网络将编码器扩展为一个孪生结构，以接收双时相输入并分别提取它们的特征。在差分操作之后，孪生编码器中同一层的特征通过跳跃连接传递到解码器。</li><li>全卷积-孪生连接（FC-Siam-Conc）[14]：FC-Siam-Conc 也采用了与 FC-Siam-Diff 相同的孪生编码器，但是在将孪生编码器中同一层的特征传递到解码器之前，先进行连接，而不是使用差分操作。</li><li>BiDateNet [14]：BiDateNet 将 LSTM 块集成到具有 U-Net 结构的全卷积网络的跳跃连接中，以学习双时相图像之间的时间依赖性，从而帮助检测变化。</li><li>空间-时间注意力网络（STANet）[16]：STANet 是一种基于度量学习的变化检测网络，它提供了一个空间-时间注意力模块，以进一步利用特征中的空间信息和时间关系。<br>需要注意的是，上述所有的基准方法都要求双时相输入具有相同的分辨率，因此在 X4 和 X8 的实验中，低分辨率图像会被双三次插值到原始图像的大小，以便作为对比方法的输入。</li></ol><h3 id="D-implementations"><a href="#D-implementations" class="headerlink" title="D implementations"></a>D implementations</h3><p>我们使用 PyTorch 库实现了 SRCDNet。对于总共 100 个训练周期，我们使用了一个初始率为 0.0001 的 Adam 优化器来促进模型的收敛。训练过程中采用了八个批次的大小。BN 和 Dropout 层都被采用来避免过拟合。生成器的损失函数中的 a, b和 r 分别被设置为 0.006、0.001 和 0.001。在训练过程中，每个周期都会计算最新模型在验证集上的准确率，以便及时保存最佳模型。此外，当验证集上的准确率在 50 个周期内不增加时，采用提前停止的策略。所有的基准方法都在 GeForce RTX 2080ti 显卡上运行，以提高训练效率。</p><p>我们采用了四个常用的指标来衡量不同方法的变化检测性能：精确度、召回率、F1-分数和 IoU。假设 TP、FP、TN 和 FN 分别表示真正例、假正例、真负例和假负例，那么精确度和召回率可以定义如下<br>$$<br>precision &#x3D; \frac{TP}{TP+FP}<br>$$</p><p>$$<br>recall &#x3D; \frac{TP}{TP+FN}<br>$$</p><p>根据公式，精确度表示假警率，而召回率表示漏警率，两者之间存在着权衡。因此，为了获得更全面的评估，F1 分数将精确度和召回率结合起来，可以表示为如下公式：<br>$$<br>F1 &#x3D; \frac{2precision * recall}{precision + recall}<br>$$<br>IoU 表示检测结果和真值之间的交集和并集比率，可以直观地表示为<br>$$<br>IoU &#x3D; \frac{TP}{FP+TP+FN}<br>$$<br>此外，峰值信噪比（PSNR）和结构相似性（SSIM）被用作衡量通过双三次插值和超分辨率恢复的图像质量的指标。PSNR 是最广泛使用的衡量图像质量的指标，它是基于均方误差（MSE）来计算的。给定一个灰度图像 X 和参考图像 Y，X 和 Y 之间的 MSE 可以表示为<br>$$<br>MSE &#x3D; \frac{1}{hw}\sum_{i&#x3D;0}^{h-1}\sum_{j&#x3D;0}^{w-1}[X(i,j)-Y(i,j)]^2<br>$$<br>其中 h 和 w 分别是 X 和 Y 的高度和宽度。<br>然后，图像 X 的 PSNR 可以通过以下公式计算：<br>$$<br>PSNR &#x3D; 10 * log10(\frac{MAX(X)^2}{MSE})<br>$$<br>其中 MAX(X) 表示 X 中的最大值。PSNR 的值越大，X 越接近 Y。在我们的实验中，RGB 图像需要转换为灰度图像，以便计算 PSNR。</p><p>从上述公式可以看出，PSNR 只关注 X 和 Y 在像素值上的接近程度，忽略了图像的视觉效果。为了弥补这个缺陷，SSIM 通常被用作辅助，它考虑了亮度（&#x2F;）、对比度（c）和结构（s）三个组成部分。这三个组成部分可以计算为<br>$$<br>l(X,Y) &#x3D; \frac{2\mu x\mu y + c_1}{\mu x^2 + \mu y ^2 +c_1}<br>$$</p><p>$$<br>c(X,Y) &#x3D; \frac{2\sigma x\sigma y + c_2}{\sigma x^2+\sigma y^2+c_2}<br>$$</p><p>$$<br>s(X,Y) &#x3D; \frac{2 \sigma xy + c_2}{2\sigma x \sigma y + c_2}<br>$$</p><p>其中 $$\mu$$ 和 $$\sigma$$ 分别是均值和方差的操作，c 和 c2 是为了避免除以零而设置的常数。<br>然后，X 和 Y 之间的 SSIM 可以表示为<br>$$<br>SSIM(X,Y)&#x3D;l(X,Y)*c(X,Y)*s(X,Y)<br> &#x3D; \frac{(2\mu x \mu y + C_1)(2\sigma _{XY} + C_2)}{(\mu ^ 2x + \mu ^ 2y + c_1)(\sigma ^ 2 + \sigma^2+c_2)}<br>$$<br>SSIM 的范围是 [0, 1]，SSIM 的值越大，X 越接近 Y。</p><h2 id="V-结果和分析"><a href="#V-结果和分析" class="headerlink" title="V 结果和分析"></a>V 结果和分析</h2><h3 id="A-消融实验"><a href="#A-消融实验" class="headerlink" title="A. 消融实验"></a>A. 消融实验</h3><p>为了验证SAM和SRM的有效性，我们首先在BCDD和CDD上对两种分辨率差异（X4和X8）进行了SRCDNet的消融实验。没有SAM和SRM的SRCDNet被设为基础模型。然后，将SAM添加到基础模型作为第二个基线，将SRM添加到基础模型作为第三个基线。使用LR图像的双三次插值图像作为输入，因为前两个基线不包含SRM。</p><p>X4图像的消融实验：如表I所示，基础模型在两个数据集上都表现最差，BCDD上的F1值最低为77.53%，CDD上的F1值最低为86.56%。通过集成SAM，BCDD上的F1值显著提高到84.07%，CDD上的F1值也提高到88.77%。值得注意的是，与基础模型相比，第二个基线的精确率大大提高，这表明SAM可以帮助更准确地提取变化。与基础模型相比，包含SRM的第三个基线也获得了更好的检测结果，BCDD上的F1值为79.81%，CDD上的F1值为87.53%。因此，将SAM和SRM都集成到基础模型中的SRCDNet，在两个数据集上都优于所有基线，BCDD上的F1值最高为85.66%，CDD上的F1值最高为90.02%。</p><p>如图4所示，基础模型在两个数据集上的表现都很差。更具体地说，BCDD中的建筑变化有明显的溢出效应，而CDD中对应的变化则大量缺失。第二个基线可以解决上述问题，并且由于SAM的存在，大大提高了检测的准确性。通过集成SRM来生成细粒度的SR图像进行CD，第三个基线的结果具有更精确的变化边界。然而，这还不够准确，因为基础模型的检测性能较差。因此，通过结合SAM和SRM的优势，SRCDNet可以在两个数据集上获得最精确的变化图，基于输出的SR图像。</p><p>\2) X8图像的消融实验：在BCDD上对8x LR图像进行的消融实验与对4x LR图像进行的消融实验具有相同的趋势。基础模型只能获得72.26%的F1值，而集成SAM的模型能够将F1值提高到77.22%，集成SRM的模型能够将F1值提高到75.17%。SRCDNet远远超过了上述基线，F1值为81.69%，IoU为69.05%，这充分证明了结合SAM和SRM的可行性。</p><p>基础模型在CDD上的表现是所有基线中最差的，F1值为77.99%。虽然在之前的实验中，集成SAM比集成SRM更有效，但在CDD上对8x LR图像进行的实验中，却出现了相反的效果。具体来说，集成SAM的第二个基线的F1值提高到79.91%，而由于添加了SRM，集成SRM的第三个基线的F1值提高到80.59%。这可能是因为SRM可以通过有效地恢复图像信息，增强对CDD中图像中小变化的提取。尽管如此，SRCDNet仍然具有最高的F1值，为83.24%，比其他基线都要高得多。</p><p>根据图5，与基于双三次图像的基础模型和基础+SAM模型相比，基础+SRM模型和SRCDNet由于集成了SRM，可以更好地捕捉BCDD上的建筑边界。此外，它们还可以由于SR图像具有更多的细节信息，显著减轻漏报的情况。由于CDD中小物体的信息很难从双三次图像中恢复，基础模型和基础+SAM模型在CDD上得到的变化结果也存在许多漏报。虽然恢复8x LR图像是困难的，但在SRM的帮助下，基础+SRM模型和SRCDNet可以得到更全面的变化结果。</p><p>3)不同恢复图像的比较：根据上述的消融实验，有两种不同的方法，双三次插值和SR，可以用来从LR图像中恢复细节信息。虽然Base+SRM模型和SRCDNet都采用了SRM来从LR图像生成SR图像，但对于每组实验，都有三组恢复图像用于CD。因此，我们使用两个常用的指标，即PSNR和SSIM，来定量地比较不同恢复图像的效果，并进一步了解SRCDNet中不同模块的作用。<br>从表II可以看出，双三次图像在每个比较实验中都获得了最低的PSNR和SSIM。此外，使用Base+SRM模型得到的SR图像的指标有一定程度的提高，这说明SRM可以产生比双三次插值更高质量的恢复图像。使用SRCDNet得到的SR图像在所有实验中都达到了最高的PSNR和SSIM，比使用Base+SRM模型得到的SR图像的指标略高。这进一步证明了前面提到的，SAM和SRM的结合对CD有积极的影响。<br>另一个值得注意的现象是，在X4图像的实验中，集成SRM导致了PSNR和SSIM的更大提高。因此，与X8实验相比，通过SRM可以恢复更多的图像信息。这表明，分辨率差异越大，图像信息的损失越大，这给图像恢复带来了很大的困难。</p><p><img src="https://s2.loli.net/2023/11/17/w2lRog5kxQXZ1CE.png" alt="image-20231117175630107"></p><p><img src="https://s2.loli.net/2023/11/17/DC84V9mF3BgrsKd.png" alt="image-20231117175827735"></p><p><img src="https://s2.loli.net/2023/11/17/2TqSIUxoHpcPCti.png" alt="image-20231117175846488"></p><p><img src="https://s2.loli.net/2023/11/17/eLcPo2tzq9sMfiv.png" alt="image-20231117180008533"></p><h3 id="B-比较实验"><a href="#B-比较实验" class="headerlink" title="B. 比较实验"></a>B. 比较实验</h3><p>在X1图像上的性能：如表III所示，我们提出的方法在BCDD数据集上优于所有的基准方法，具有最高的召回率、F1和IoU，分别为90.13%、87.40%和77.63%，以及非常高的精确度84.84%。STANet排名第二，其F1和IoU分别为84.96%和73.86%，分别比我们的方法低2.44%和3.77%。BiDateNet在基于U-Net的方法中取得了最好的结果，其F1和IoU分别为83.55%和71.75%，从而证明了RNNs增强双时相图像中时间关系的可行性。FC-Siam-diff在三种FCN变体中表现最好，其次是FC-Siam-conc和FC-EF。<br>在CDD数据集上，我们提出的方法和STANet再次取得了最好的性能，这进一步证明了基于度量学习的方法相比传统的基于分类的方法的优越性。虽然我们提出的方法达到了最高的F1和IoU，分别为92.94%和86.81%，STANet则获得了相对较低的F1和IoU，分别为91.44%和84.23%，这表明了SAM的有效性。排名第三的BiDataNet具有最高的精确度95.98%。与BCDD数据集上的结果相反，FC-Siam-conc比FC-Siam-diff表现更好，其F1和IoU分别提高了2.97%和4.44%。这可能归因于CDD数据集包含了各种细粒度的对象，通过跳跃连接中双时相特征的差分操作过滤掉了许多有用的信息，而连接则可以更好地保存特征中的这些信息。上述结果通过可视化比较进一步验证，如图6所示，我们提出的方法获得了最佳的可视化性能。所有的方法都可以准确地提取BCDD数据集中新建的建筑物。此外，FC-EF和FC-Siam-diff存在许多漏报，这与两种方法的低召回率相对应，如表I所示。与其他方法相比，我们提出的方法能够捕捉更精确的建筑物轮廓，这对于实际应用具有重要意义。<strong>值得注意的是，我们的方法是唯一一个能够检测到建筑物减少的方法，如图6的第二行所示。</strong><br>至于CDD数据集，只有对应于大面积的变化才能被三种FCN变体提取出来，这解释了它们的高精度和低召回率，如表I所示。受益于LSTM块的集成，BiDateNet比其他基于U-Net的方法更擅长提取小的变化。两种基于度量学习的方法都擅长捕捉小的变化，包括汽车和道路。STANet可以提取最多的小变化，但结果显示出溢出效应，导致其高召回率但低精度，如表I所示。从可视化结果来看，<strong>我们提出的方法不仅可以精确地提取小的变化，而且还可以更好地保持它们的边界和形状。</strong><br>在X4图像上的性能：如表III所示，当双时相图像之间存在4x的分辨率差异时，与X1图像的实验相比，所有方法在BCDD数据集上的F1和IoU都略有下降。更具体地说，SRCDNet在BCDD数据集上获得了最高的F1和IoU，分别为85.66%和74.91%，分别比X1实验中获得的结果低1.74%和2.72%。虽然STANet在X1实验中优于BiDateNet，但它们在X4实验中获得了相似的结果，其F1分数分别为81.96%和81.97%，这表明STANet更受分辨率差异的影响。在三种FCN变体中，FC-Siam-diff表现最好，其次是FC-Siam-conc，最后是FC-EF，这与X1实验的结果一致。<br>所有基线方法在CDD数据集上的准确度都下降得更明显。FC-Siam-conc具有最差的检测结果，其F1为73.67%，比X1实验低12.23%。FC-Siam-diff的F1略高，为76.15%。值得注意的是，FC-EF在三种FCN变体中获得了最高的F1，为76.58%，仅比X1实验低2.07%。BiDateNet和STANet的F1值非常接近，分别为86.28%和86.49%，分别比X1实验低3.73%和4.95%。在这种情况下，SRCDNET仍然获得了非常高的F1和IoU，分别为90.02%和81.86%，其F1只降低了2.92%。</p><p>这些方法的可视化比较如图7所示。从4x双三次插值图像中，BCDD数据集中的大多数建筑物变化都可以相对完整地检测出来，这表明由于建筑物的尺寸较大，4x的分辨率差异可以在一定程度上通过双三次插值来缓解。这也解释了为什么在X4图像的实验中的准确度只比X1图像的实验略有下降。然而，与SRCDNet得到的结果相比，基于比较方法得到的建筑物变化的边界不够规则和平滑。这可以归因于SRCDNet生成的SR图像可以比双三次插值图像更好地恢复建筑物的边界信息。此外，虽然一些与建筑物相邻的裸地容易被提取为建筑物变化的一部分，但SRCDNet可以有效地减少这些伪变化，如图7的第三行所示。<br>与BCDD数据集相比，CDD数据集具有更高的空间分辨率，因此包含了更多的细节变化，这些变化很难在4x双三次插值图像中重建；因此，与X1图像的实验相比，比较方法的准确度显著下降。虽然一些细节变化，如小巷和汽车，在比较方法的结果中很少见到，但SRCDNet是唯一能够检测到这些变化的方法，这进一步证明了SR模块在恢复空间和语义信息方面的有效性。除了提取更小的变化，SRCDNet在提取大面积变化，如土地变化和建筑物变化方面也表现出更好的性能。因此，定量和可视化的比较充分证明了SRCDNet在两个数据集的4x LR图像上的有效性。<br>\3) 在X8图像上的性能：X8实验比较了所有基线方法在8x LR图像上的性能，如表III所示。在BCDD数据集上，与X4实验相比，所有方法的准确度都进一步降低。FC-Siam-conc具有最高的准确度降低，其F1最低，为69.01%，其次是BiDateNet，其F1为70.01%。FC-EF的F1从76.69%降低到73.49%，它受分辨率差异的影响最小。FC-Siam-diff在基于U-Net的模型中获得了最高的F1准确度，为77.21%。STANet获得了77.31%的F1和69.05%的IoU。尽管分辨率差异很大，SRCDNet仍然优于所有的比较方法，获得了最高的F1为81.69%和IoU为69.05%。<br>从LR图像中恢复许多小物体是很困难的，因此，在CDD数据集上获得的准确度低于在BCDD数据集上获得的准确度。更具体地说，SRCDNet达到了最高的检测率，其F1为83.32%和IoU为71.40%，分别比X4实验中获得的结果低6.70%和10.46%。此外，BiDateNet的F1从86.28%降低到78.29%，而STANet的F1从86.49%降低到77.29%。由于三种FCN变体提取小变化的能力较差，在X8图像的实验中，这三种方法的准确度没有大幅降低。<br>X8图像的实验的可视化结果如图8所示。考虑到图8中第1-3行的BCDD数据集上的结果，可以看出，由于分辨率差异很大，很难基于双三次插值图像获得规则的建筑物边界。此外，还有很多漏报，即许多体积较小的房屋被漏掉。然而，SRCDNet可以更好地解决上述问题，生成更精确的变化结果。可以看出，尽管存在8x的分辨率差异，但由于有足够的先验知识，SR图像仍然可以很好地恢复建筑物的信息。<br>在CDD数据集上也发生了许多漏报，这与所有方法的低召回率相一致，如表I所示。这是因为通过双三次插值很难完全恢复初始HR图像中的信息，这些信息在8x下采样后被大大减少。因此，不仅小的变化，如小巷和汽车，而且一些建筑物变化也被漏掉或不完全检测出来。值得注意的是，与双三次插值图像相比，SRCDNet输出的SR图像更好地从8x LR图像中恢复了信息，这对后续的CD有很大的帮助，导致更完整和准确的变化结果。</p><h3 id="C-在Google数据集上的真实图像实验"><a href="#C-在Google数据集上的真实图像实验" class="headerlink" title="C. 在Google数据集上的真实图像实验"></a>C. 在Google数据集上的真实图像实验</h3><p>在前两节中，我们在两个模拟数据集BCDD和CDD上进行了充分的消融研究和比较实验，验证了SRCDNet在解决CD中分辨率差异问题方面的有效性。接下来，我们将在Google数据集上进行比较实验，进一步测试模型在真实图像上的效果。此外，为了探索大数据集的应用潜力，我们还通过采用在BCDD和CDD上预训练的模型来应用于Google数据集，进行了迁移学习实验。</p><ol><li><p>性能分析：所有的基线方法首先在Google数据集上从头开始训练，其中SRCDNet仍然取得了最好的准确度，其F1为77.13%，IoU为62.77%，表明该模型在具有4倍分辨率差异的真实图像上也有很好的效果。STANet和BiDateNet分别获得了75.27%和74.79%的F1，明显优于其他三种基于U-Net的模型，反映了注意力机制模型的增益效果。<br>图9展示了不同大小的建筑物的CD结果。可以看到，基于U-Net的模型的结果中存在许多伪变化，这可以归因于一些包括道路在内的不透水表面的变化很容易被误分类为建筑物。由于具有更好的判别能力，STANet和SRCDNet可以获得更准确的结果。此外，与双三次插值恢复的图像相比，SRCDNet恢复的图像可以更好地恢复建筑物的轮廓，从而进一步保证了建筑物CD的准确性。</p></li><li><p>迁移学习分析：近年来，基于高分辨率遥感图像的CDD被提出用于测试CD算法，许多先进的算法在这些数据集上取得了良好的结果。然而，由于不同数据之间的域转移，一个在一个数据集上训练的模型有时很难直接应用于真实图像。目前，解决这个问题的主流方法之一是迁移学习。因此，这部分也设计了迁移学习实验，旨在探索将大数据集应用于真实图像的潜力。每个基线方法都会通过加载在BCDD和CDD上训练得到的最佳模型作为起点，在重建的具有4x分辨率差异的Google数据集上进行微调。<br>根据表IV，与从头开始训练相比，每个基线方法的准确度都通过微调得到了提高。对于FC-EF，FC-Siam-diff和FC-Siam-conc，BCDD上的预训练模型比CDD上的预训练模型具有稍好的增益效果。可能的原因在于，BCDD和Google数据集都关注建筑物变化，并且具有相似的高层特征，因此为上述结构相对简单的模型提供了更直接的增强。而对于BiDateNet，STANet和SRCDNet，情况则相反。这可能是由于CDD的数量更大，可以提供更多有利于这些复杂模型中注意力机制模块训练的多样化特征。总之，迁移学习实验表明，大数据集上的预训练模型可以改善真实图像上的CD结果。此外，与其他基线方法相比，BCDD和CDD上的预训练模型对SRCDNet具有最大的增益效果，其F1分别提高了2.49%和3.07%。</p></li></ol><h2 id="VI-讨论"><a href="#VI-讨论" class="headerlink" title="VI. 讨论"></a>VI. 讨论</h2><p>在本节中，我们对SRCDNet进行了进一步的实验和讨论：首先，使用不同的下采样策略得到的LR图像作为模型的输入，来测试模型对不同输入图像的鲁棒性；然后，设置比较实验来检验损失函数的敏感性。<br>A. 不同下采样策略的比较<br>如前所述，在比较实验中，BCDD和CDD中的第二阶段图像被双三次插值下采样，以获得模拟的LR图像。然而，在实际中，可用的图像可能更复杂。因此，为了验证模型对不同输入的鲁棒性，采用了不同的下采样策略，包括最近邻和双线性，来获得BCDD的两组更多的X4和X8图像进行比较。<br>表V中的结果显示，使用不同的下采样策略得到的准确度差异不显著，这表明SRCDNet对不同的输入具有良好的鲁棒性。对于X4图像的实验，“双三次”输入获得了最高的准确度，而对于X8图像的实验，“双线性”输入表现最好。“最近邻”输入在X4和X8图像的实验中都获得了最低的准确度。原因可能是最近邻下采样得到的LR图像包含更多的噪声，如图10所示。此外，SRCDNet可以为所有三种不同的输入生成具有良好视觉效果的恢复图像，这进一步验证了模型的良好鲁棒性。<br>B. 损失函数的敏感性实验<br>在训练SRCDNet的过程中，损失函数中的一个值2在平衡生成器优化的CD结果的收益方面起着至关重要的作用。因此，我们在BCDD上进行了敏感性实验，通过设置一组以0.25 x 10为步长的数字来探索损失函数的敏感性。结果如表VI所示。<br>BCDD数据集上的结果表明，不同的r值对变化结果有很大的影响，换句话说，损失函数对r值是敏感的。更具体地说，当r从0.25 x 10-3增加到1 x 10-3时，CD结果的准确度逐渐增加，而当r&#x3D;1 × 10-3时，获得了最佳的准确度。当r&gt;1 × 10-3时，准确度开始波动。基于上述结果，建议在应用时选择一个接近1 × 10-3的r值。</p><h2 id="VII-结论"><a href="#VII-结论" class="headerlink" title="VII. 结论"></a>VII. 结论</h2><p>我们提出了一个端到端的SRCDNet，用于具有不同分辨率的双时相图像。为了克服双时相图像之间的分辨率差异，我们采用了一个由生成器和判别器组成的SRM，用于将低分辨率图像恢复到高分辨率图像的大小，这在从低分辨率图像生成逼真的超分辨率图像方面已被证明是有效的。一个连体特征提取器从两个输入图像中提取多尺度特征：一个超分辨率图像和一个与不同时间戳对应的高分辨率图像，然后在这些特征上应用一个SAM，以捕获更多有用的通道和空间信息。SRCDNet采用深度度量学习来学习最终的变化图。消融实验验证了SRM和SAM在SRCDNet中的有效性。然后在BCDD和CDD上进行了比较实验，其中SRCDNet不仅在相同分辨率的图像上获得了最好的结果，而且在4倍和8倍不同分辨率的图像上也优于其他比较方法，这充分证明了SRCDNet在多分辨率CD方面具有一般性和实用性的能力。在具有4倍分辨率差异的Google数据集上进行的真实图像实验进一步验证了SRCDNet在真实图像上的有效性。在未来，我们寻求探索其他不同分辨率CD的方法，并促进深度学习在CD应用中的发展。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 遥感 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft源码-04-铁砧代码</title>
      <link href="/2023/11/15/Minecraft%E6%BA%90%E7%A0%81-04-%E9%93%81%E7%A0%A7%E4%BB%A3%E7%A0%81/"/>
      <url>/2023/11/15/Minecraft%E6%BA%90%E7%A0%81-04-%E9%93%81%E7%A0%A7%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="AnvilBlock类"><a href="#AnvilBlock类" class="headerlink" title="AnvilBlock类"></a>AnvilBlock类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">AnvilBlock</span> <span class="keyword">extends</span> <span class="title class_">FallingBlock</span> &#123;</span><br><span class="line">    <span class="comment">// 朝向</span></span><br><span class="line">FACING </span><br><span class="line">    <span class="comment">//碰撞box</span></span><br><span class="line"> BASE</span><br><span class="line"> X_LEG1 </span><br><span class="line"> X_LEG2 </span><br><span class="line"> X_TOPe Z_LEG1</span><br><span class="line"> Z_LEG2 </span><br><span class="line"> Z_TOP</span><br><span class="line">    <span class="comment">// x轴碰撞box</span></span><br><span class="line">  X_AXIS_AABB </span><br><span class="line">    <span class="comment">// z轴碰撞box</span></span><br><span class="line"> Z_AXIS_AABB</span><br><span class="line">    <span class="comment">// gui的标题</span></span><br><span class="line">Component CONTAINER_TITLE </span><br><span class="line">    <span class="comment">// 掉落每block造成伤害</span></span><br><span class="line"> FALL_DAMAGE_PER_DISTANCE</span><br><span class="line">    <span class="comment">// 最大造成伤害 </span></span><br><span class="line"> FALL_DAMAGE_MAX</span><br><span class="line"></span><br><span class="line">    <span class="title function_">AnvilBlock</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 设置默认为北方</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//方块被放置时获取方块的状态。它接受一个BlockPlaceContext对象作为参数，并返回一个BlockState对象，该对象表示方块的状态。</span></span><br><span class="line">     getStateForPlacement() &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 如果方块在客户端（即玩家的设备）上，它将返回InteractionResult.SUCCESS。否则，它将打开一个新的菜单，并返回InteractionResult.CONSUME。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     use() &#123;</span><br><span class="line">      <span class="keyword">if</span> () &#123;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 打开一个menu</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"> <span class="comment">//方法用于返回一个新的菜单提供者，该提供者在玩家与方块交互时打开一个新的菜单。</span></span><br><span class="line">     getMenuProvider(_) &#123;</span><br><span class="line">      <span class="comment">// 返回一个SimpleMenuProvider</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 获取方块的形状。它接受一个BlockState对象、一个BlockGetter对象和一个BlockPos对象作为参数，并返回一个VoxelShape对象，该对象表示方块的形状。</span></span><br><span class="line">   </span><br><span class="line">     getShape() &#123;</span><br><span class="line">       <span class="comment">//根据 x z 返回不同的碰撞box</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//falling方法用于处理方块下落时造成的伤害。它接受一个FallingBlockEntity对象作为参数，并设置该对象的伤害属性。</span></span><br><span class="line">     falling( ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//onLand和onBrokenAfterFall方法用于处理方块落地和破碎后的事件。它们接受一个Level对象、一个BlockPos对象和一个BlockState对象作为参数，并在方块落地或破碎后触发一个level事件。</span></span><br><span class="line">   </span><br><span class="line">     onLand(_) &#123;</span><br><span class="line">       <span class="comment">// 播发声音</span></span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     onBrokenAfterFall() &#123;</span><br><span class="line">       <span class="comment">// 播放声音</span></span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//获取方块下落时造成的伤害源。这个方法接受一个Entity对象作为参数，并返回一个DamageSource对象，该对象表示方块下落时造成的伤害源。</span></span><br><span class="line">    getFallDamageSource( ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//处理方块被损坏的情况。如果方块是ANVIL，那么它会变成破损的ANVIL。如果方块是破损的ANVIL，那么它会变成损坏的ANVIL。如果方块既不是ANVIL也不是破损的ANVIL，那么这个方法将返回null。</span></span><br><span class="line">    BlockState <span class="title function_">damage</span><span class="params">( )</span> &#123;</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">     </span><br><span class="line"><span class="comment">//rotate方法用于处理方块旋转的情况。这个方法接受一个BlockState对象和一个Rotation对象作为参数，并返回一个新的BlockState对象，该对象表示方块旋转后的状态。</span></span><br><span class="line">   </span><br><span class="line">     rotate() &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//于定义方块的状态。这个方法接受一个StateDefinition.Builder对象作为参数，并添加方块的朝向状态。</span></span><br><span class="line">   </span><br><span class="line">     createBlockStateDefinition(.Buil) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//判断方块是否可以被路径查找。这个方法接受一个BlockState对象、一个BlockGetter对象、一个BlockPos对象和一个PathComputationType对象作为参数，并返回一个布尔值，表示方块是否可以被路径查找。在这个例子中，方块不可以被路径查找。</span></span><br><span class="line">     isPathfindable( ,  ,  ,  ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">//获取方块的粉尘颜色。这个方法接受一个BlockState对象、一个BlockGetter对象和一个BlockPos对象作为参数，并返回一个整数，表示方块的粉尘颜色。</span></span><br><span class="line">   </span><br><span class="line">     getDustColor() &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="AnvilMenu-类"><a href="#AnvilMenu-类" class="headerlink" title="AnvilMenu 类"></a>AnvilMenu 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">AnvilMenu</span> <span class="keyword">extends</span> <span class="title class_">ItemCombinerMenu</span> &#123;</span><br><span class="line">    <span class="comment">// 输入slot 0</span></span><br><span class="line">INPUT_SLOT</span><br><span class="line">    <span class="comment">// 另一个输入slot 1 </span></span><br><span class="line">ADDITIONAL_SLOT</span><br><span class="line">    <span class="comment">// 输出slot 2</span></span><br><span class="line"> RESULT_SLOT </span><br><span class="line">    <span class="comment">// 日志</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">LOGGER</span> <span class="operator">=</span> LogUtils.getLogger();</span><br><span class="line">    <span class="comment">// 表示是否开启调试模式。</span></span><br><span class="line">DEBUG_COST </span><br><span class="line">    <span class="comment">// 用于表示物品名称的最大长度。</span></span><br><span class="line">MAX_NAME_LENGTH </span><br><span class="line">    <span class="comment">// 用于表示修复物品的数量成本。</span></span><br><span class="line"> repairItemCountCost;</span><br><span class="line">    <span class="comment">// 用于表示物品的名称。</span></span><br><span class="line">itemName;</span><br><span class="line">    <span class="comment">// cost是一个DataSlot对象，用于表示修复的成本。</span></span><br><span class="line"> cost</span><br><span class="line">    <span class="comment">// 定义的常量，用于表示修复的不同成本。</span></span><br><span class="line"> COST_FAIL </span><br><span class="line"> COST_BASE </span><br><span class="line"> COST_ADDED_BASE </span><br><span class="line"> COST_REPAIR_MATERIAL </span><br><span class="line"> COST_REPAIR_SACRIFICE </span><br><span class="line"> COST_INCOMPATIBLE_PENALTY </span><br><span class="line"> COST_RENAME </span><br><span class="line">    <span class="comment">// 是定义的常量，用于表示输入槽、额外槽和结果槽的X坐标。</span></span><br><span class="line">INPUT_SLOT_X_PLACEMENT</span><br><span class="line"> ADDITIONAL_SLOT_X_PLACEMENT</span><br><span class="line">RESULT_SLOT_X_PLACEMENT</span><br><span class="line">    <span class="comment">// Y坐标</span></span><br><span class="line"><span class="type">int</span> SLOT_Y_PLACEMENT</span><br><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">AnvilMenu</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 创建slot的定义。</span></span><br><span class="line">   </span><br><span class="line">     createInputSlotDefinitions() &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//判断方块是否是铁砧。</span></span><br><span class="line"> </span><br><span class="line">     isValidBlock(BlockState ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//判断玩家是否可以拿起物品。</span></span><br><span class="line">     mayPickup(Player , <span class="type">boolean</span> ) &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//处理玩家拾取物品的事件。</span></span><br><span class="line">    donTake(Player , ItemStack) &#123;</span><br><span class="line">       <span class="comment">// 生存模式</span></span><br><span class="line">      <span class="keyword">if</span> () &#123;</span><br><span class="line">          <span class="comment">//扣除玩家cost的经验</span></span><br><span class="line">      &#125;</span><br><span class="line">       <span class="comment">//定义了一个名为breakChance的浮点数变量，用于表示破损的概率,这个概率是通过调用net.neoforged.neoforge.common.CommonHooks.onAnvilRepair方法计算得出的</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//清空第一个输入槽的物品。</span></span><br><span class="line">        </span><br><span class="line">       <span class="comment">//检查repairItemCountCost的值。如果repairItemCountCost大于0，那么获取第二个输入槽的物品，并检查它的数量是否大于repairItemCountCost。如果是，那么将repairItemCountCost从物品的数量中减去，并将减少后的物品重新放入第二个输入槽。否则，清空第二个输入槽的物品。</span></span><br><span class="line">      <span class="keyword">if</span> () &#123;</span><br><span class="line">       </span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//将cost的值设置为0。</span></span><br><span class="line">        </span><br><span class="line">       <span class="comment">//执行一个lambda表达式，该表达式用于处理铁砧的破损。如果玩家生存模式，并且铁砧的状态是铁砧，并且随机数小于breakChance，那么调用AnvilBlock.damage方法破损铁砧，并触发相应的破损事件。否则，触发破损事件。</span></span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//用于计算修复物品的结果。</span></span><br><span class="line">  createResult() &#123;</span><br><span class="line">       <span class="comment">//获取第一个输入槽的物品，并将cost的值设置为1。</span></span><br><span class="line">       </span><br><span class="line">      </span><br><span class="line">       <span class="comment">//初始化三个整数变量i、j和k，用于存储修复的成本。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="comment">//检查第一个输入槽的物品是否为空。如果为空，那么清空结果槽的物品，并将cost的值设置为0。</span></span><br><span class="line">      <span class="keyword">if</span> ()) &#123;</span><br><span class="line">          </span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//一个输入槽的物品不为空，那么复制第一个输入槽的物品，并获取第二个输入槽的物品。然后，获取第一个输入槽的物品的附魔列表，并计算修复的成本。</span></span><br><span class="line">          </span><br><span class="line">       </span><br><span class="line"><span class="comment">//然后，检查是否需要修复物品。如果不需要，那么返回。</span></span><br><span class="line">        </span><br><span class="line">          </span><br><span class="line">          <span class="comment">//果需要修复物品，那么检查第二个输入槽的物品是否为空。如果不为空，那么检查第一个输入槽的物品是否可以被修复，并计算修复的成本。</span></span><br><span class="line">         <span class="keyword">if</span> () &#123;</span><br><span class="line">           </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//如果第一个输入槽的物品不可以被修复，那么检查第二个输入槽的物品是否可以用来修复第一个输入槽的物品。如果可以，那么计算修复的成本。</span></span><br><span class="line">               <span class="keyword">if</span> () &#123;</span><br><span class="line">                 </span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> () &#123;</span><br><span class="line">                </span><br><span class="line">                  <span class="keyword">if</span> () &#123;</span><br><span class="line">                   </span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">                  <span class="keyword">if</span> () &#123;</span><br><span class="line">                    </span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;</span><br><span class="line"><span class="comment">//如果第二个输入槽的物品不能用来修复第一个输入槽的物品，那么检查第二个输入槽的物品的附魔列表。</span></span><br><span class="line"><span class="comment">//如果第二个输入槽的物品的附魔列表不为空，那么遍历附魔列表，并对每个附魔进行处理。如果附魔不为空，那么获取第一个输入槽的物品的附魔列表中的该附魔的等级，或者如果第一个输入槽的物品的附魔列表中没有该附魔，那么获取第二个输入槽的物品的附魔列表中的该附魔的等级。然后，如果附魔的等级不相等，那么将较大的等级设置为新的等级。如果新的等级超过了附魔的最大等级，那么将新的等级设置为附魔的最大等级。然后，将新的等级添加到第一个输入槽的物品的附魔列表中。</span></span><br><span class="line">              </span><br><span class="line"><span class="comment">//如果所有的附魔都不能添加到第一个输入槽的物品的附魔列表中，那么清空结果槽的物品，并将cost的值设置为0。</span></span><br><span class="line">               <span class="keyword">if</span> () &#123;</span><br><span class="line">                </span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"><span class="comment">//第一个输入槽的物品的名称不为空，并且不是空格，那么检查第一个输入槽的物品的名称是否与第二个输入槽的物品的名称相同。如果不相同，那么将k的值设置为1，并将i的值增加k的值。然后，将第一个输入槽的物品的名称设置为itemName。</span></span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">          <span class="comment">//如果flag为真，并且第一个输入槽的物品不可以被附魔，那么将itemstack1的值设置为空。</span></span><br><span class="line">       </span><br><span class="line">      </span><br><span class="line"><span class="comment">//然后，将cost的值设置为j和i的和。</span></span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line">          <span class="comment">//如果i的值小于等于0，那么将itemstack1的值设置为空。</span></span><br><span class="line">         </span><br><span class="line">      </span><br><span class="line"><span class="comment">//如果k的值等于i的值，并且k的值大于0，并且cost的值大于等于40，那么将cost的值设置为39。</span></span><br><span class="line">         </span><br><span class="line">      </span><br><span class="line"><span class="comment">//如果cost的值大于等于40，并且玩家没有无敌模式，那么将itemstack1的值设置为空。</span></span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line"><span class="comment">//如果itemstack1的值不为空，那么获取第一个输入槽的物品的基础修复成本，并检查第二个输入槽的物品是否为空。如果不为空，并且第二个输入槽的物品的基础修复成本大于第一个输入槽的物品的基础修复成本，那么将第二个输入槽的物品的基础修复成本设置为新的修复成本。</span></span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line"><span class="comment">//如果k的值不等于i的值，或者k的值等于0，那么将新的修复成本计算为增加的修复成本。</span></span><br><span class="line">          </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line"><span class="comment">//然后，将新的修复成本设置为itemstack1的修复成本，并将itemstack1的附魔列表设置为map。</span></span><br><span class="line">         </span><br><span class="line">      </span><br><span class="line"><span class="comment">//最后，将itemstack1的值设置为结果槽的物品，并广播更改。</span></span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"><span class="comment">//它接受一个整数作为参数 ( p_39026_ )，这可能代表该项目的基本成本。然后，该方法返回基本成本乘以 2，然后再增加 1。这表明基本成本每增加一个单位，维修成本就会增加 100%</span></span><br><span class="line">  &#125;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line"><span class="comment">// 它接受一个字符串作为参数 ( )，这是该物品的新名称。该方法首先使用 validateName 方法验证名称。如果名称有效且与当前项目名称不同，则该方法设置新名称，更新slot 2 中项目的悬停名称（如果存在），然后调用createResult方法。如果名称无效或与当前项目名称相同，则该方法返回 </span></span><br><span class="line">     setItemName(String ) &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//它接受一个字符串作为参数 (  )，这是要验证的名称。该方法使用 SharedConstants.filterText 过滤文本，并检查过滤后文本的长度是否小于或等于50。如果是，则返回过滤后的文本；否则，返回过滤后的文本。否则，返回 null </span></span><br><span class="line"></span><br><span class="line">      validateName(String ) &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//此方法返回该项目的当前成本。它通过调用 cost 对象上的 get 方法来完成此操作。</span></span><br><span class="line">     getCost() &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//此方法设置项目的最大成本。它接受一个整数作为参数 ( value )，这是新的最大成本。然后，该方法通过调用 cost 对象 ayokoding.com 上的 set 方法将 cost 对象设置为新的最大成本。</span></span><br><span class="line">     setMaximumCost(<span class="type">int</span> ) &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="AnvilScreen类"><a href="#AnvilScreen类" class="headerlink" title="AnvilScreen类"></a>AnvilScreen类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用于为游戏中的铁砧创建图形用户界面 (GUI)。</span></span><br><span class="line"><span class="comment">//类只能在游戏的客户端加载</span></span><br><span class="line"><span class="meta">@OnlyIn(...)</span></span><br><span class="line"><span class="comment">//它扩展了 ItemCombinerScreen&lt;AnvilMenu&gt; ，这表明它是一种允许玩家以某种方式组合项目的屏幕。</span></span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">AnvilScreen</span> <span class="keyword">extends</span> <span class="title class_">ItemCombinerScreen</span>&lt;AnvilMenu&gt; &#123;</span><br><span class="line">    <span class="comment">//用于存储 GUI 中使用的各种精灵的位置。这些精灵可能用于在屏幕上绘制 GUI 元素。</span></span><br><span class="line"> TEXT_FIELD_SPRITE</span><br><span class="line">   [....]</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    <span class="comment">// name 是一个 EditBox ，玩家可以使用它来输入项目的名称。</span></span><br><span class="line">    EditBox ;</span><br><span class="line">    <span class="comment">//。 player 是一个 Player 对象，代表正在使用 anvil 的玩家。</span></span><br><span class="line">     Player ;</span><br><span class="line"><span class="comment">//它需要三个参数： AnvilMenu 、 Inventory 和 Component 。</span></span><br><span class="line">     </span><br><span class="line">    <span class="comment">//AnvilMenu 可能是玩家使用铁砧时显示的Menu。 Inventory 可能是玩家的背包， Component 可能是屏幕上显示的标题</span></span><br><span class="line">    AnvilScreen(AnvilMenu , Inventory , Component ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//屏幕初始化时被调用。它设置屏幕的 GUI 元素，包括用于输入项目名称的 EditBox 和初始焦点</span></span><br><span class="line">  </span><br><span class="line">     subInit() &#123;</span><br><span class="line">     ....</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//调整屏幕大小时会调用此方法。它保存 EditBox 的当前值，重新初始化屏幕，然后恢复 EditBox 的值。</span></span><br><span class="line">resize(,  ,  ) &#123;</span><br><span class="line">   ....</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">//当按下某个键时会调用此方法。它检查该键是否为转义键，如果是，则关闭容器。否则，它会检查 EditBox 是否可以使用输入，如果不能，则将按键传递给超类</span></span><br><span class="line">     keyPressed() &#123;</span><br><span class="line">      ....</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//当item名称更改时调用此方法。它检查菜单槽 0 中的项目是否有项目，如果有，它会向服务器发送一个数据包以将该项目重命名该item</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">onNameChanged</span><span class="params">( )</span> &#123;</span><br><span class="line">     .....</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">//调用此方法以在屏幕上呈现标签。它检查物品的成本，如果成本大于0，它会根据成本以及玩家是否负担得起来设置文本和文本本身的颜色。如果成本大于或等于 40 并且玩家不是创造模式，则会将文本设置为“太昂贵”。如果成本小于 40，则会将文本设置为“维修成本：[成本]”。如果result slot没有item，则会将文本设置为空。然后它在屏幕上绘制文本</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">renderLabels</span><span class="params">()</span> &#123;</span><br><span class="line">     ......</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">//调用该方法来渲染屏幕背景。它根据插槽 0 是否有项目来 blit（绘制）精灵 </span></span><br><span class="line">     renderBg() &#123;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">//调用该方法来渲染屏幕的前景。它呈现用于输入item名称 的 EditBox 。</span></span><br><span class="line">     renderFg() &#123;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">//调用此方法以在屏幕上呈现错误图标。它检查插槽 0 和 1 是否有item，以及结果插槽是否没有item，如果满足这些条件，它会为错误图标生成一个 sprite。</span></span><br><span class="line">     renderErrorIcon() &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"> slotChanged() &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ServerGamePacketListenerImpl-类"><a href="#ServerGamePacketListenerImpl-类" class="headerlink" title="ServerGamePacketListenerImpl 类"></a>ServerGamePacketListenerImpl 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  handleRenameItem(ServerboundRenameItemPacket ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 服务器处理改变命名的发包</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="ItemCombinerMenu-类"><a href="#ItemCombinerMenu-类" class="headerlink" title="ItemCombinerMenu 类"></a>ItemCombinerMenu 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">ItemCombinerMenu</span> <span class="keyword">extends</span> <span class="title class_">AbstractContainerMenu</span> &#123;</span><br><span class="line">    <span class="comment">// 玩家背包行</span></span><br><span class="line">NVENTORY_SLOTS_PER_ROW </span><br><span class="line">    <span class="comment">// 玩家背包列</span></span><br><span class="line">INVENTORY_SLOTS_PER_COLUMN</span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">ContainerLevelAccess ;</span><br><span class="line"> Player ;</span><br><span class="line"><span class="comment">//输入 slot</span></span><br><span class="line">nputSlots;</span><br><span class="line">    <span class="comment">// 输入 slot indexinputSlotIndexes;</span></span><br><span class="line">    <span class="comment">// result slot</span></span><br><span class="line">resultSlots</span><br><span class="line">resultSlotIndex;</span><br><span class="line"><span class="comment">// 子类实现方法</span></span><br><span class="line">    <span class="comment">// 能否被拿起</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="type">boolean</span> <span class="title function_">mayPickup</span><span class="params">(Player , <span class="type">boolean</span> )</span>;</span><br><span class="line"><span class="comment">// 能否拿出</span></span><br><span class="line"> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onTake</span><span class="params">(Player , ItemStack )</span>;</span><br><span class="line"><span class="comment">// 是否合法方块</span></span><br><span class="line"> <span class="keyword">abstract</span> <span class="type">boolean</span> <span class="title function_">isValidBlock</span><span class="params">(BlockState )</span>;</span><br><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line">    ItemCombinerMenu(<span class="meta">@Nullable</span> MenuType&lt;?&gt; , <span class="type">int</span> , Inventory , ContainerLevelAccess p_39776_) &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 创建输入slot</span></span><br><span class="line">     createInputSlots(ItemCombinerMenuSlotDefinition ) &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 创建输出的slot</span></span><br><span class="line">     createResultSlot() &#123;</span><br><span class="line">、</span><br><span class="line">          <span class="comment">// 能否被放置</span></span><br><span class="line"><span class="comment">// 能否被拿起，调用抽象方法，由子类实现</span></span><br><span class="line"><span class="comment">// 能否被拿出，调用抽象方法，由子类实现</span></span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建玩家的背包</span></span><br><span class="line">     createInventorySlots( ) &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 合成结果，子类实现</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">createResult</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入的slot创建函数，子类实现</span></span><br><span class="line">    <span class="keyword">abstract</span> ItemCombinerMenuSlotDefinition <span class="title function_">createInputSlotDefinitions</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建simplecontainer</span></span><br><span class="line">    SimpleContainer <span class="title function_">createContainer</span><span class="params">(<span class="type">int</span> )</span> &#123;</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">          <span class="comment">// 重写方法，当内容改变时候，设置赃位</span></span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line">      &#125;;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//slots改变时候，如果不是输入slot则调用createresult方法。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">slotsChanged</span><span class="params">( )</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当移除当前的menu时候</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removed</span><span class="params">(Player )</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 判断是否合法位置打开menu</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">stillValid</span><span class="params">(Player )</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// shift的快速移动</span></span><br><span class="line">    ItemStack <span class="title function_">quickMoveStack</span><span class="params">(Player , <span class="type">int</span> )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="ItemCombinerScreen类"><a href="#ItemCombinerScreen类" class="headerlink" title="ItemCombinerScreen类"></a>ItemCombinerScreen类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@OnlyIn(Dist.CLIENT)</span></span><br><span class="line"> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">ItemCombinerScreen</span>&lt;T <span class="keyword">extends</span> <span class="title class_">ItemCombinerMenu</span>&gt; <span class="keyword">extends</span> <span class="title class_">AbstractContainerScreen</span>&lt;T&gt; <span class="keyword">implements</span> <span class="title class_">ContainerListener</span> &#123;</span><br><span class="line">    <span class="comment">// menuResource</span></span><br><span class="line">     menuResource;</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">ItemCombinerScreen</span><span class="params">(T , Inventory , Component , ResourceLocation )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// 子类实现</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">subInit</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">// init函数</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 关闭scrren时候移除 SlotListener</span></span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span>  <span class="title function_">removed</span><span class="params">()</span> &#123;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 渲染</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">render</span><span class="params">()</span> &#123;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 渲染文字 子类实现</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">renderFg</span><span class="params">(GuiGraphics p_283399_, <span class="type">int</span> p_98928_, <span class="type">int</span> p_98929_, <span class="type">float</span> p_98930_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 渲染背景图片，以及error图片</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">renderBg</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">renderErrorIcon</span><span class="params">(GuiGraphics p_281990_, <span class="type">int</span> p_266822_, <span class="type">int</span> p_267045_)</span>;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 两个接口的方法</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dataChanged</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">slotChanged</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> Java </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>14-pytorch-model understanding with captum</title>
      <link href="/2023/11/15/14-pytorch-model-understanding-with-captum/"/>
      <url>/2023/11/15/14-pytorch-model-understanding-with-captum/</url>
      
        <content type="html"><![CDATA[<h1 id="MODEL-UNDERSTANDING-WITH-CAPTUM"><a href="#MODEL-UNDERSTANDING-WITH-CAPTUM" class="headerlink" title="MODEL UNDERSTANDING WITH CAPTUM"></a>MODEL UNDERSTANDING WITH CAPTUM</h1><p>Captum（拉丁语中的“理解”）是一个开源、可扩展的库，用于构建在 PyTorch 上的模型可解释性。</p><p>随着模型复杂性的增加以及由此导致的透明度的缺乏，模型可解释性方法变得越来越重要。模型理解既是一个活跃的研究领域，也是使用机器学习跨行业实际应用的重点领域。 Captum 提供最先进的算法，包括集成梯度，为研究人员和开发人员提供一种简单的方法来了解哪些特征有助于模型的输出。</p><p>captum.ai 网站上提供了完整的文档、API 参考以及针对特定主题的一套教程。</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Captum 的模型可解释性方法是根据归因。 Captum 中提供三种归因：</p><ul><li>特征归因<strong>Feature Attribution</strong> 试图根据生成特定输出的输入的特征来解释该输出。根据评论中的某些单词来解释电影评论是正面还是负面，就是特征归因的一个例子。</li><li>层归因<strong>Layer Attribution</strong> 检查特定输入后模型隐藏层的活动。在层属性示例中检查卷积层响应于输入图像的空间映射输出。</li><li>神经元<strong>Neuron Attribution</strong>归因与层归因类似，但侧重于单个神经元的活动。</li></ul><p>在这个交互式笔记本中，我们将了解特征归因和图层归因。</p><p>三种归因类型中的每一种都有多种与其关联的归因算法。许多归因算法分为两大类：</p><ul><li>基于梯度的算法计算模型输出、层输出或神经元激活相对于输入的后向梯度。积分梯度（针对特征）、层梯度*激活和神经元电导都是基于梯度的算法。</li><li>基于扰动的算法检查模型、层或神经元的输出随输入变化的变化。输入扰动可以是定向的或随机的。遮挡、特征消融和特征排列都是基于扰动的算法。</li></ul><p>我们将在下面研究这两种类型的算法。</p><p>特别是在涉及大型模型的情况下，以易于将归因数据与正在检查的输入特征相关联的方式可视化归因数据可能很有价值。虽然当然可以使用 Matplotlib、Plotly 或类似工具创建您自己的可视化，但 Captum 提供了特定于其属性的增强工具：</p><ul><li><code>captum.attr.visualization</code> 模块（下面导入为 <code>viz</code> ）提供了有用的功能来可视化与图像相关的属性。</li><li>Captum Insights 是 Captum 之上的一个易于使用的 API，它提供了一个可视化小部件，其中包含针对图像、文本和任意模型类型的现成可视化效果。</li></ul><p>这两个可视化工具集都将在本笔记本中演示。前几个示例将重点关注计算机视觉用例，但最后的 Captum Insights 部分将演示多模型、视觉问答模型中归因的可视化。</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>在开始之前，您需要有一个 Python 环境：</p><ul><li>Python 版本 3.6 或更高版本</li><li>对于 Captum Insights 示例，Flask 1.1 或更高版本以及 Flask-Compress（建议使用最新版本）</li><li>PyTorch 1.2 或更高版本（推荐最新版本）</li><li>TorchVision 0.6 或更高版本（推荐最新版本）</li><li>Captum（推荐最新版本）</li><li>Matplotlib 版本 3.3.4，因为 Captum 当前使用 Matplotlib 函数，其参数已在更高版本中重命名</li></ul><p>要在 Anaconda 或 pip 虚拟环境中安装 Captum，请使用以下适合您环境的命令：</p><p>With <code>conda</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch torchvision captum flask-compress matplotlib=<span class="number">3.3</span><span class="number">.4</span> -c pytorch</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>With <code>pip</code>: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch torchvision captum matplotlib==<span class="number">3.3</span><span class="number">.4</span> Flask-Compress</span><br></pre></td></tr></table></figure><h2 id="A-First-Example"><a href="#A-First-Example" class="headerlink" title="A First Example"></a>A First Example</h2><p>首先，让我们举一个简单、直观的例子。我们将从在 ImageNet 数据集上预训练的 ResNet 模型开始。我们将获得测试输入，并使用不同的特征归因算法来检查输入图像如何影响输出，并查看一些测试图像的输入归因图的有用可视化。</p><p>首先，一些导入库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">import</span> torchvision.models <span class="keyword">as</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> captum</span><br><span class="line"><span class="keyword">from</span> captum.attr <span class="keyword">import</span> IntegratedGradients, Occlusion, LayerGradCam, LayerAttribution</span><br><span class="line"><span class="keyword">from</span> captum.attr <span class="keyword">import</span> visualization <span class="keyword">as</span> viz</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os, sys</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.colors <span class="keyword">import</span> LinearSegmentedColormap</span><br></pre></td></tr></table></figure><p>现在我们将使用 TorchVision 模型库下载预训练的 ResNet。由于我们没有进行训练，因此我们现在将其置于评估模式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = models.resnet18(weights=<span class="string">&#x27;IMAGENET1K_V1&#x27;</span>)</span><br><span class="line">model = model.<span class="built_in">eval</span>()</span><br></pre></td></tr></table></figure><p>您获得此交互式笔记本的位置还应该有一个 <code>img</code> 文件夹，其中包含文件 <code>cat.jpg</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test_img = Image.<span class="built_in">open</span>(<span class="string">&#x27;img/cat.jpg&#x27;</span>)</span><br><span class="line">test_img_data = np.asarray(test_img)</span><br><span class="line">plt.imshow(test_img_data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>我们的 ResNet 模型是在 ImageNet 数据集上进行训练的，并期望图像具有一定的大小，通道数据标准化为特定的值范围。我们还将提取我们的模型识别的类别的人类可读标签列表 - 该列表也应该位于 <code>img</code> 文件夹中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># model expects 224x224 3-color image</span></span><br><span class="line">transform = transforms.Compose([</span><br><span class="line"> transforms.Resize(<span class="number">224</span>),</span><br><span class="line"> transforms.CenterCrop(<span class="number">224</span>),</span><br><span class="line"> transforms.ToTensor()</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment"># standard ImageNet normalization</span></span><br><span class="line">transform_normalize = transforms.Normalize(</span><br><span class="line">     mean=[<span class="number">0.485</span>, <span class="number">0.456</span>, <span class="number">0.406</span>],</span><br><span class="line">     std=[<span class="number">0.229</span>, <span class="number">0.224</span>, <span class="number">0.225</span>]</span><br><span class="line"> )</span><br><span class="line"></span><br><span class="line">transformed_img = transform(test_img)</span><br><span class="line">input_img = transform_normalize(transformed_img)</span><br><span class="line">input_img = input_img.unsqueeze(<span class="number">0</span>) <span class="comment"># the model requires a dummy batch dimension</span></span><br><span class="line"></span><br><span class="line">labels_path = <span class="string">&#x27;img/imagenet_class_index.json&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(labels_path) <span class="keyword">as</span> json_data:</span><br><span class="line">    idx_to_labels = json.load(json_data)</span><br></pre></td></tr></table></figure><p>现在，我们可以问一个问题：我们的模型认为这张图像代表什么？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">output = model(input_img)</span><br><span class="line">output = F.softmax(output, dim=<span class="number">1</span>)</span><br><span class="line">prediction_score, pred_label_idx = torch.topk(output, <span class="number">1</span>)</span><br><span class="line">pred_label_idx.squeeze_()</span><br><span class="line">predicted_label = idx_to_labels[<span class="built_in">str</span>(pred_label_idx.item())][<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Predicted:&#x27;</span>, predicted_label, <span class="string">&#x27;(&#x27;</span>, prediction_score.squeeze().item(), <span class="string">&#x27;)&#x27;</span>)</span><br></pre></td></tr></table></figure><p>我们已经确认 ResNet 认为我们的猫图像实际上就是一只猫。但为什么模型认为这是猫的图像呢？</p><p>为了找到这个问题的答案，我们求助于 Captum。</p><h2 id="Feature-Attribution-with-Integrated-Gradients"><a href="#Feature-Attribution-with-Integrated-Gradients" class="headerlink" title="Feature Attribution with Integrated Gradients"></a>Feature Attribution with Integrated Gradients</h2><p>特征归因将特定输出归因于输入的特征。它使用特定的输入（这里是我们的测试图像）来生成每个输入特征与特定输出特征的相对重要性的地图。</p><p>集成梯度是 Captum 中可用的特征归因算法之一。积分梯度通过近似模型输出相对于输入的梯度积分，为每个输入特征分配重要性分数。</p><p>在我们的例子中，我们将采用输出向量的特定元素 - 即指示模型对其所选类别的置信度的元素 - 并使用积分梯度来了解输入图像的哪些部分对该输出做出了贡献。</p><p>一旦我们从积分梯度中获得重要性图，我们将使用 Captum 中的可视化工具来提供重要性图的有用表示。 Captum 的 <code>visualize_image_attr()</code> 功能提供了多种用于自定义归因数据显示的选项。在这里，我们传入一个自定义的 Matplotlib 颜色图。</p><p>使用 <code>integrated_gradients.attribute()</code> 调用运行单元通常需要一两分钟。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Initialize the attribution algorithm with the model</span></span><br><span class="line">integrated_gradients = IntegratedGradients(model)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ask the algorithm to attribute our output target to</span></span><br><span class="line">attributions_ig = integrated_gradients.attribute(input_img, target=pred_label_idx, n_steps=<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Show the original image for comparison</span></span><br><span class="line">_ = viz.visualize_image_attr(<span class="literal">None</span>, np.transpose(transformed_img.squeeze().cpu().detach().numpy(), (<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>)),</span><br><span class="line">                      method=<span class="string">&quot;original_image&quot;</span>, title=<span class="string">&quot;Original Image&quot;</span>)</span><br><span class="line"></span><br><span class="line">default_cmap = LinearSegmentedColormap.from_list(<span class="string">&#x27;custom blue&#x27;</span>,</span><br><span class="line">                                                 [(<span class="number">0</span>, <span class="string">&#x27;#ffffff&#x27;</span>),</span><br><span class="line">                                                  (<span class="number">0.25</span>, <span class="string">&#x27;#0000ff&#x27;</span>),</span><br><span class="line">                                                  (<span class="number">1</span>, <span class="string">&#x27;#0000ff&#x27;</span>)], N=<span class="number">256</span>)</span><br><span class="line"></span><br><span class="line">_ = viz.visualize_image_attr(np.transpose(attributions_ig.squeeze().cpu().detach().numpy(), (<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>)),</span><br><span class="line">                             np.transpose(transformed_img.squeeze().cpu().detach().numpy(), (<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>)),</span><br><span class="line">                             method=<span class="string">&#x27;heat_map&#x27;</span>,</span><br><span class="line">                             cmap=default_cmap,</span><br><span class="line">                             show_colorbar=<span class="literal">True</span>,</span><br><span class="line">                             sign=<span class="string">&#x27;positive&#x27;</span>,</span><br><span class="line">                             title=<span class="string">&#x27;Integrated Gradients&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在上图中，您应该看到积分梯度为我们提供了图像中猫位置周围最强的信号。</p><h2 id="Feature-Attribution-with-Occlusion"><a href="#Feature-Attribution-with-Occlusion" class="headerlink" title="Feature Attribution with Occlusion"></a>Feature Attribution with Occlusion</h2><p>基于梯度的归因方法有助于通过直接计算出相对于输入的输出变化来理解模型。基于扰动的归因方法通过引入输入变化来衡量对输出的影响，更直接地解决这个问题。闭塞就是这样一种方法。它涉及替换输入图像的部分，并检查对输出信号的影响。</p><p>下面，我们设置遮挡归因。与配置卷积神经网络类似，您可以指定目标区域的大小和步幅长度来确定各个测量的间距。我们将使用 <code>visualize_image_attr_multiple()</code> 可视化遮挡归因的输出，按区域显示正面和负面归因的热图，并使用正面归因区域掩盖原始图像。遮罩提供了一个非常有启发性的视图，让我们了解模型发现猫照片中的哪些区域最“像猫”。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">occlusion = Occlusion(model)</span><br><span class="line"></span><br><span class="line">attributions_occ = occlusion.attribute(input_img,</span><br><span class="line">                                       target=pred_label_idx,</span><br><span class="line">                                       strides=(<span class="number">3</span>, <span class="number">8</span>, <span class="number">8</span>),</span><br><span class="line">                                       sliding_window_shapes=(<span class="number">3</span>,<span class="number">15</span>, <span class="number">15</span>),</span><br><span class="line">                                       baselines=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_ = viz.visualize_image_attr_multiple(np.transpose(attributions_occ.squeeze().cpu().detach().numpy(), (<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>)),</span><br><span class="line">                                      np.transpose(transformed_img.squeeze().cpu().detach().numpy(), (<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>)),</span><br><span class="line">                                      [<span class="string">&quot;original_image&quot;</span>, <span class="string">&quot;heat_map&quot;</span>, <span class="string">&quot;heat_map&quot;</span>, <span class="string">&quot;masked_image&quot;</span>],</span><br><span class="line">                                      [<span class="string">&quot;all&quot;</span>, <span class="string">&quot;positive&quot;</span>, <span class="string">&quot;negative&quot;</span>, <span class="string">&quot;positive&quot;</span>],</span><br><span class="line">                                      show_colorbar=<span class="literal">True</span>,</span><br><span class="line">                                      titles=[<span class="string">&quot;Original&quot;</span>, <span class="string">&quot;Positive Attribution&quot;</span>, <span class="string">&quot;Negative Attribution&quot;</span>, <span class="string">&quot;Masked&quot;</span>],</span><br><span class="line">                                      fig_size=(<span class="number">18</span>, <span class="number">6</span>)</span><br><span class="line">                                     )</span><br></pre></td></tr></table></figure><p>我们再次看到包含猫的图像区域具有更大的重要性。</p><h2 id="Layer-Attribution-with-Layer-GradCAM"><a href="#Layer-Attribution-with-Layer-GradCAM" class="headerlink" title="Layer Attribution with Layer GradCAM"></a>Layer Attribution with Layer GradCAM</h2><p>层归因允许您将模型中隐藏层的活动归因于输入的特征。下面，我们将使用层归因算法来检查模型中卷积层之一的活动。</p><p>GradCAM 计算目标输出相对于给定层的梯度、每个输出通道（输出的维度 2）的平均值，并将每个通道的平均梯度乘以层激活。将所有通道的结果相加。 GradCAM 是为卷积网络设计的；由于卷积层的活动通常在空间上映射到输入，因此 GradCAM 属性通常会被上采样并用于屏蔽输入。</p><p>层归因的设置与输入归因类似，不同之处在于除了模型之外，您还必须在模型中指定要检查的隐藏层。如上所述，当我们调用 <code>attribute()</code> 时，我们指定感兴趣的目标类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">layer_gradcam = LayerGradCam(model, model.layer3[<span class="number">1</span>].conv2)</span><br><span class="line">attributions_lgc = layer_gradcam.attribute(input_img, target=pred_label_idx)</span><br><span class="line"></span><br><span class="line">_ = viz.visualize_image_attr(attributions_lgc[<span class="number">0</span>].cpu().permute(<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>).detach().numpy(),</span><br><span class="line">                             sign=<span class="string">&quot;all&quot;</span>,</span><br><span class="line">                             title=<span class="string">&quot;Layer 3 Block 1 Conv 2&quot;</span>)</span><br></pre></td></tr></table></figure><p>我们将使用 LayerAttribution 基类中的便捷方法 <code>interpolate()</code> 对该属性数据进行上采样，以便与输入图像进行比较。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upsamp_attr_lgc = LayerAttribution.interpolate(attributions_lgc, input_img.shape[<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(attributions_lgc.shape)</span><br><span class="line"><span class="built_in">print</span>(upsamp_attr_lgc.shape)</span><br><span class="line"><span class="built_in">print</span>(input_img.shape)</span><br><span class="line"></span><br><span class="line">_ = viz.visualize_image_attr_multiple(upsamp_attr_lgc[<span class="number">0</span>].cpu().permute(<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>).detach().numpy(),</span><br><span class="line">                                      transformed_img.permute(<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>).numpy(),</span><br><span class="line">                                      [<span class="string">&quot;original_image&quot;</span>,<span class="string">&quot;blended_heat_map&quot;</span>,<span class="string">&quot;masked_image&quot;</span>],</span><br><span class="line">                                      [<span class="string">&quot;all&quot;</span>,<span class="string">&quot;positive&quot;</span>,<span class="string">&quot;positive&quot;</span>],</span><br><span class="line">                                      show_colorbar=<span class="literal">True</span>,</span><br><span class="line">                                      titles=[<span class="string">&quot;Original&quot;</span>, <span class="string">&quot;Positive Attribution&quot;</span>, <span class="string">&quot;Masked&quot;</span>],</span><br><span class="line">                                      fig_size=(<span class="number">18</span>, <span class="number">6</span>))</span><br></pre></td></tr></table></figure><p>诸如此类的可视化可以让您对隐藏层如何响应输入有新的见解。</p><h2 id="Visualization-with-Captum-Insights"><a href="#Visualization-with-Captum-Insights" class="headerlink" title="Visualization with Captum Insights"></a>Visualization with Captum Insights</h2><p>Captum Insights 是一个构建在 Captum 之上的可解释性可视化小部件，旨在促进模型理解。 Captum Insights 跨图像、文本和其他特征工作，帮助用户了解特征归因。它允许您可视化多个输入&#x2F;输出对的归因，并提供图像、文本和任意数据的可视化工具。</p><p>在笔记本的这一部分中，我们将使用 Captum Insights 可视化多个图像分类推理。</p><p>首先，让我们收集一些图像，看看模型对它们的看法。为了增加多样性，我们将带上我们的猫、茶壶和三叶虫化石：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">imgs = [<span class="string">&#x27;img/cat.jpg&#x27;</span>, <span class="string">&#x27;img/teapot.jpg&#x27;</span>, <span class="string">&#x27;img/trilobite.jpg&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> img <span class="keyword">in</span> imgs:</span><br><span class="line">    img = Image.<span class="built_in">open</span>(img)</span><br><span class="line">    transformed_img = transform(img)</span><br><span class="line">    input_img = transform_normalize(transformed_img)</span><br><span class="line">    input_img = input_img.unsqueeze(<span class="number">0</span>) <span class="comment"># the model requires a dummy batch dimension</span></span><br><span class="line"></span><br><span class="line">    output = model(input_img)</span><br><span class="line">    output = F.softmax(output, dim=<span class="number">1</span>)</span><br><span class="line">    prediction_score, pred_label_idx = torch.topk(output, <span class="number">1</span>)</span><br><span class="line">    pred_label_idx.squeeze_()</span><br><span class="line">    predicted_label = idx_to_labels[<span class="built_in">str</span>(pred_label_idx.item())][<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Predicted:&#x27;</span>, predicted_label, <span class="string">&#x27;/&#x27;</span>, pred_label_idx.item(), <span class="string">&#x27; (&#x27;</span>, prediction_score.squeeze().item(), <span class="string">&#x27;)&#x27;</span>)</span><br></pre></td></tr></table></figure><p>……看起来我们的模型正确地识别了它们 - 但当然，我们想更深入地挖掘。为此，我们将使用 Captum Insights 小部件，我们使用下面导入的 <code>AttributionVisualizer</code> 对象对其进行配置。 <code>AttributionVisualizer</code> 需要批量数据，因此我们将引入 Captum 的 <code>Batch</code> 帮助器类。我们将专门查看图像，因此我们还将导入 <code>ImageFeature</code> 。</p><p>我们使用以下参数配置 <code>AttributionVisualizer</code> ：</p><ul><li>一系列要检查的模型（在我们的例子中，只有一个）</li><li>评分函数，允许 Captum Insights 从模型中提取前 k 个预测</li><li>我们的模型所训练的类的有序的、人类可读的列表</li><li>要查找的功能列表 - 在我们的例子中是 <code>ImageFeature</code></li><li>数据集，它是一个可迭代对象，返回批量输入和标签 - 就像您用于训练一样</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> captum.insights <span class="keyword">import</span> AttributionVisualizer, Batch</span><br><span class="line"><span class="keyword">from</span> captum.insights.attr_vis.features <span class="keyword">import</span> ImageFeature</span><br><span class="line"></span><br><span class="line"><span class="comment"># Baseline is all-zeros input - this may differ depending on your data</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">baseline_func</span>(<span class="params"><span class="built_in">input</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">input</span> * <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># merging our image transforms from above</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">full_img_transform</span>(<span class="params"><span class="built_in">input</span></span>):</span><br><span class="line">    i = Image.<span class="built_in">open</span>(<span class="built_in">input</span>)</span><br><span class="line">    i = transform(i)</span><br><span class="line">    i = transform_normalize(i)</span><br><span class="line">    i = i.unsqueeze(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">input_imgs = torch.cat(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> i: full_img_transform(i), imgs)), <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">visualizer = AttributionVisualizer(</span><br><span class="line">    models=[model],</span><br><span class="line">    score_func=<span class="keyword">lambda</span> o: torch.nn.functional.softmax(o, <span class="number">1</span>),</span><br><span class="line">    classes=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> k: idx_to_labels[k][<span class="number">1</span>], idx_to_labels.keys())),</span><br><span class="line">    features=[</span><br><span class="line">        ImageFeature(</span><br><span class="line">            <span class="string">&quot;Photo&quot;</span>,</span><br><span class="line">            baseline_transforms=[baseline_func],</span><br><span class="line">            input_transforms=[],</span><br><span class="line">        )</span><br><span class="line">    ],</span><br><span class="line">    dataset=[Batch(input_imgs, labels=[<span class="number">282</span>,<span class="number">849</span>,<span class="number">69</span>])]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>请注意，与我们上面的归因不同，运行上面的单元格根本不需要太多时间。这是因为 Captum Insights 允许您在可视化小部件中配置不同的归因算法，然后它将计算并显示归因。该过程将需要几分钟。</p><p>运行下面的单元格将呈现 Captum Insights 小部件。然后，您可以选择归因方法及其参数，根据预测类别或预测正确性过滤模型响应，查看模型的预测以及相关概率，并查看与原始图像相比的归因热图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">visualizer.render()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13-pytorch-training with pytorch</title>
      <link href="/2023/11/15/13-pytorch-training-with-pytorch/"/>
      <url>/2023/11/15/13-pytorch-training-with-pytorch/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>在过去的视频中，我们讨论并演示了：</p><ul><li>使用 torch.nn 模块的神经网络层和函数构建模型</li><li>自动梯度计算的机制，这是基于梯度的模型训练的核心</li><li>使用 TensorBoard 可视化训练进度和其他活动</li></ul><p>在本视频中，我们将向您的库存添加一些新工具：</p><ul><li>我们将熟悉数据集和数据加载器抽象，以及它们如何简化在训练循环期间向模型提供数据的过程</li><li>我们将讨论特定的损失函数以及何时使用它们</li><li>我们将了解 PyTorch 优化器，它实现根据损失函数的结果调整模型权重的算法</li></ul><p>最后，我们将把所有这些放在一起，并看到完整的 PyTorch 训练循环的实际运行。</p><h2 id="Dataset-and-DataLoader"><a href="#Dataset-and-DataLoader" class="headerlink" title="Dataset and DataLoader"></a>Dataset and DataLoader</h2><p><code>Dataset</code> 和 <code>DataLoader</code> 类封装了从存储中提取数据并将其批量暴露给训练循环的过程。</p><p><code>Dataset</code> 负责访问和处理单个数据实例。</p><p><code>DataLoader</code> 从 <code>Dataset</code> 中提取数据实例（自动或使用您定义的采样器），批量收集它们，然后返回它们以供训练循环使用。 <code>DataLoader</code> 适用于所有类型的数据集，无论它们包含什么类型的数据。</p><p>在本教程中，我们将使用 TorchVision 提供的 Fashion-MNIST 数据集。我们使用 <code>torchvision.transforms.Normalize()</code> 对图像图块内容的分布进行零中心和标准化，并下载训练和验证数据分割。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"></span><br><span class="line"><span class="comment"># PyTorch TensorBoard support</span></span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">transform = transforms.Compose(</span><br><span class="line">    [transforms.ToTensor(),</span><br><span class="line">    transforms.Normalize((<span class="number">0.5</span>,), (<span class="number">0.5</span>,))])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create datasets for training &amp; validation, download if necessary</span></span><br><span class="line">training_set = torchvision.datasets.FashionMNIST(<span class="string">&#x27;./data&#x27;</span>, train=<span class="literal">True</span>, transform=transform, download=<span class="literal">True</span>)</span><br><span class="line">validation_set = torchvision.datasets.FashionMNIST(<span class="string">&#x27;./data&#x27;</span>, train=<span class="literal">False</span>, transform=transform, download=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create data loaders for our datasets; shuffle for training, not for validation</span></span><br><span class="line">training_loader = torch.utils.data.DataLoader(training_set, batch_size=<span class="number">4</span>, shuffle=<span class="literal">True</span>)</span><br><span class="line">validation_loader = torch.utils.data.DataLoader(validation_set, batch_size=<span class="number">4</span>, shuffle=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Class labels</span></span><br><span class="line">classes = (<span class="string">&#x27;T-shirt/top&#x27;</span>, <span class="string">&#x27;Trouser&#x27;</span>, <span class="string">&#x27;Pullover&#x27;</span>, <span class="string">&#x27;Dress&#x27;</span>, <span class="string">&#x27;Coat&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sandal&#x27;</span>, <span class="string">&#x27;Shirt&#x27;</span>, <span class="string">&#x27;Sneaker&#x27;</span>, <span class="string">&#x27;Bag&#x27;</span>, <span class="string">&#x27;Ankle Boot&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Report split sizes</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Training set has &#123;&#125; instances&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(training_set)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Validation set has &#123;&#125; instances&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(validation_set)))</span><br></pre></td></tr></table></figure><p>与往常一样，让我们将数据可视化作为健全性检查：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># Helper function for inline image display</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">matplotlib_imshow</span>(<span class="params">img, one_channel=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="keyword">if</span> one_channel:</span><br><span class="line">        img = img.mean(dim=<span class="number">0</span>)</span><br><span class="line">    img = img / <span class="number">2</span> + <span class="number">0.5</span>     <span class="comment"># unnormalize</span></span><br><span class="line">    npimg = img.numpy()</span><br><span class="line">    <span class="keyword">if</span> one_channel:</span><br><span class="line">        plt.imshow(npimg, cmap=<span class="string">&quot;Greys&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        plt.imshow(np.transpose(npimg, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>)))</span><br><span class="line"></span><br><span class="line">dataiter = <span class="built_in">iter</span>(training_loader)</span><br><span class="line">images, labels = <span class="built_in">next</span>(dataiter)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a grid from the images and show them</span></span><br><span class="line">img_grid = torchvision.utils.make_grid(images)</span><br><span class="line">matplotlib_imshow(img_grid, one_channel=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>.join(classes[labels[j]] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)))</span><br></pre></td></tr></table></figure><h2 id="The-Model"><a href="#The-Model" class="headerlink" title="The Model"></a>The Model</h2><p>我们将在本示例中使用的模型是 LeNet-5 的变体 - 如果您看过本系列之前的视频，它应该很熟悉。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="comment"># PyTorch models inherit from torch.nn.Module</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GarmentClassifier</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(GarmentClassifier, self).__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, <span class="number">5</span>)</span><br><span class="line">        self.pool = nn.MaxPool2d(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">6</span>, <span class="number">16</span>, <span class="number">5</span>)</span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">16</span> * <span class="number">4</span> * <span class="number">4</span>, <span class="number">120</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">120</span>, <span class="number">84</span>)</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">84</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.pool(F.relu(self.conv1(x)))</span><br><span class="line">        x = self.pool(F.relu(self.conv2(x)))</span><br><span class="line">        x = x.view(-<span class="number">1</span>, <span class="number">16</span> * <span class="number">4</span> * <span class="number">4</span>)</span><br><span class="line">        x = F.relu(self.fc1(x))</span><br><span class="line">        x = F.relu(self.fc2(x))</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model = GarmentClassifier()</span><br></pre></td></tr></table></figure><h2 id="Loss-Function"><a href="#Loss-Function" class="headerlink" title="Loss Function"></a>Loss Function</h2><p>对于这个例子，我们将使用交叉熵损失。出于演示目的，我们将创建一批虚拟输出和标签值，通过损失函数运行它们，并检查结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">loss_fn = torch.nn.CrossEntropyLoss()</span><br><span class="line"></span><br><span class="line"><span class="comment"># NB: Loss functions expect data in batches, so we&#x27;re creating batches of 4</span></span><br><span class="line"><span class="comment"># Represents the model&#x27;s confidence in each of the 10 classes for a given input</span></span><br><span class="line">dummy_outputs = torch.rand(<span class="number">4</span>, <span class="number">10</span>)</span><br><span class="line"><span class="comment"># Represents the correct class among the 10 being tested</span></span><br><span class="line">dummy_labels = torch.tensor([<span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">7</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(dummy_outputs)</span><br><span class="line"><span class="built_in">print</span>(dummy_labels)</span><br><span class="line"></span><br><span class="line">loss = loss_fn(dummy_outputs, dummy_labels)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Total loss for this batch: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(loss.item()))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tensor([[<span class="number">0.7026</span>, <span class="number">0.1489</span>, <span class="number">0.0065</span>, <span class="number">0.6841</span>, <span class="number">0.4166</span>, <span class="number">0.3980</span>, <span class="number">0.9849</span>, <span class="number">0.6701</span>, <span class="number">0.4601</span>,</span><br><span class="line">         <span class="number">0.8599</span>],</span><br><span class="line">        [<span class="number">0.7461</span>, <span class="number">0.3920</span>, <span class="number">0.9978</span>, <span class="number">0.0354</span>, <span class="number">0.9843</span>, <span class="number">0.0312</span>, <span class="number">0.5989</span>, <span class="number">0.2888</span>, <span class="number">0.8170</span>,</span><br><span class="line">         <span class="number">0.4150</span>],</span><br><span class="line">        [<span class="number">0.8408</span>, <span class="number">0.5368</span>, <span class="number">0.0059</span>, <span class="number">0.8931</span>, <span class="number">0.3942</span>, <span class="number">0.7349</span>, <span class="number">0.5500</span>, <span class="number">0.0074</span>, <span class="number">0.0554</span>,</span><br><span class="line">         <span class="number">0.1537</span>],</span><br><span class="line">        [<span class="number">0.7282</span>, <span class="number">0.8755</span>, <span class="number">0.3649</span>, <span class="number">0.4566</span>, <span class="number">0.8796</span>, <span class="number">0.2390</span>, <span class="number">0.9865</span>, <span class="number">0.7549</span>, <span class="number">0.9105</span>,</span><br><span class="line">         <span class="number">0.5427</span>]])</span><br><span class="line">tensor([<span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">7</span>])</span><br><span class="line">Total loss <span class="keyword">for</span> this batch: <span class="number">2.428950071334839</span></span><br></pre></td></tr></table></figure><h2 id="Optimizer"><a href="#Optimizer" class="headerlink" title="Optimizer"></a>Optimizer</h2><p>在这个例子中，我们将使用简单的动量随机梯度下降。</p><p>尝试此优化方案的一些变化可能会很有启发：</p><ul><li>学习率决定优化器采取的步骤的大小。就准确性和收敛时间而言，不同的学习率对训练结果有何影响？</li><li>动量将优化器推向多个步骤中梯度最强的方向。改变这个值对你的结果有什么影响？</li><li>尝试一些不同的优化算法，例如平均 SGD、Adagrad 或 Adam。您的结果有何不同？</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Optimizers specified in the torch.optim package</span></span><br><span class="line">optimizer = torch.optim.SGD(model.parameters(), lr=<span class="number">0.001</span>, momentum=<span class="number">0.9</span>)</span><br></pre></td></tr></table></figure><h2 id="The-Training-Loop"><a href="#The-Training-Loop" class="headerlink" title="The Training Loop"></a>The Training Loop</h2><p>下面，我们有一个执行一个训练周期的函数。它枚举来自 DataLoader 的数据，并在循环的每次传递中执行以下操作：</p><ul><li>从DataLoader获取一批训练数据</li><li>将优化器的梯度归零</li><li>执行推理 - 即从模型中获取输入批次的预测</li><li>计算该组预测与数据集标签的损失</li><li>计算学习权重的后向梯度</li><li>告诉优化器执行一个学习步骤 - 即根据我们选择的优化算法，根据观察到的该批次的梯度来调整模型的学习权重</li><li>它报告每 1000 批次的损失。</li><li>最后，它报告最后 1000 个批次的平均每批次损失，以便与验证运行进行比较</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">train_one_epoch</span>(<span class="params">epoch_index, tb_writer</span>):</span><br><span class="line">    running_loss = <span class="number">0.</span></span><br><span class="line">    last_loss = <span class="number">0.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Here, we use enumerate(training_loader) instead of</span></span><br><span class="line">    <span class="comment"># iter(training_loader) so that we can track the batch</span></span><br><span class="line">    <span class="comment"># index and do some intra-epoch reporting</span></span><br><span class="line">    <span class="keyword">for</span> i, data <span class="keyword">in</span> <span class="built_in">enumerate</span>(training_loader):</span><br><span class="line">        <span class="comment"># Every data instance is an input + label pair</span></span><br><span class="line">        inputs, labels = data</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Zero your gradients for every batch!</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Make predictions for this batch</span></span><br><span class="line">        outputs = model(inputs)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Compute the loss and its gradients</span></span><br><span class="line">        loss = loss_fn(outputs, labels)</span><br><span class="line">        loss.backward()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Adjust learning weights</span></span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Gather data and report</span></span><br><span class="line">        running_loss += loss.item()</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">1000</span> == <span class="number">999</span>:</span><br><span class="line">            last_loss = running_loss / <span class="number">1000</span> <span class="comment"># loss per batch</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;  batch &#123;&#125; loss: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(i + <span class="number">1</span>, last_loss))</span><br><span class="line">            tb_x = epoch_index * <span class="built_in">len</span>(training_loader) + i + <span class="number">1</span></span><br><span class="line">            tb_writer.add_scalar(<span class="string">&#x27;Loss/train&#x27;</span>, last_loss, tb_x)</span><br><span class="line">            running_loss = <span class="number">0.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> last_loss</span><br></pre></td></tr></table></figure><h3 id="Per-Epoch-Activity"><a href="#Per-Epoch-Activity" class="headerlink" title="Per-Epoch Activity"></a>Per-Epoch Activity</h3><p>每个时期我们需要做一次以下几件事：</p><ul><li>通过检查一组未用于训练的数据的相对损失来执行验证，并报告这一点</li><li>保存模型的副本</li></ul><p>在这里，我们将在 TensorBoard 中进行报告。这将需要进入命令行来启动 TensorBoard，并在另一个浏览器选项卡中将其打开。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Initializing in a separate cell so we can easily add more epochs to the same run</span></span><br><span class="line">timestamp = datetime.now().strftime(<span class="string">&#x27;%Y%m%d_%H%M%S&#x27;</span>)</span><br><span class="line">writer = SummaryWriter(<span class="string">&#x27;runs/fashion_trainer_&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(timestamp))</span><br><span class="line">epoch_number = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">EPOCHS = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">best_vloss = <span class="number">1_000_000.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(EPOCHS):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;EPOCH &#123;&#125;:&#x27;</span>.<span class="built_in">format</span>(epoch_number + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Make sure gradient tracking is on, and do a pass over the data</span></span><br><span class="line">    model.train(<span class="literal">True</span>)</span><br><span class="line">    avg_loss = train_one_epoch(epoch_number, writer)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    running_vloss = <span class="number">0.0</span></span><br><span class="line">    <span class="comment"># Set the model to evaluation mode, disabling dropout and using population</span></span><br><span class="line">    <span class="comment"># statistics for batch normalization.</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Disable gradient computation and reduce memory consumption.</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> i, vdata <span class="keyword">in</span> <span class="built_in">enumerate</span>(validation_loader):</span><br><span class="line">            vinputs, vlabels = vdata</span><br><span class="line">            voutputs = model(vinputs)</span><br><span class="line">            vloss = loss_fn(voutputs, vlabels)</span><br><span class="line">            running_vloss += vloss</span><br><span class="line"></span><br><span class="line">    avg_vloss = running_vloss / (i + <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;LOSS train &#123;&#125; valid &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(avg_loss, avg_vloss))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Log the running loss averaged per batch</span></span><br><span class="line">    <span class="comment"># for both training and validation</span></span><br><span class="line">    writer.add_scalars(<span class="string">&#x27;Training vs. Validation Loss&#x27;</span>,</span><br><span class="line">                    &#123; <span class="string">&#x27;Training&#x27;</span> : avg_loss, <span class="string">&#x27;Validation&#x27;</span> : avg_vloss &#125;,</span><br><span class="line">                    epoch_number + <span class="number">1</span>)</span><br><span class="line">    writer.flush()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Track best performance, and save the model&#x27;s state</span></span><br><span class="line">    <span class="keyword">if</span> avg_vloss &lt; best_vloss:</span><br><span class="line">        best_vloss = avg_vloss</span><br><span class="line">        model_path = <span class="string">&#x27;model_&#123;&#125;_&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(timestamp, epoch_number)</span><br><span class="line">        torch.save(model.state_dict(), model_path)</span><br><span class="line"></span><br><span class="line">    epoch_number += <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">EPOCH <span class="number">1</span>:</span><br><span class="line">  batch <span class="number">1000</span> loss: <span class="number">1.6334228584356607</span></span><br><span class="line">  batch <span class="number">2000</span> loss: <span class="number">0.8325267538074403</span></span><br><span class="line">  batch <span class="number">3000</span> loss: <span class="number">0.7359380583595484</span></span><br><span class="line">  batch <span class="number">4000</span> loss: <span class="number">0.6198329215242994</span></span><br><span class="line">  batch <span class="number">5000</span> loss: <span class="number">0.6000315657821484</span></span><br><span class="line">  batch <span class="number">6000</span> loss: <span class="number">0.555109024874866</span></span><br><span class="line">  batch <span class="number">7000</span> loss: <span class="number">0.5260250487388112</span></span><br><span class="line">  batch <span class="number">8000</span> loss: <span class="number">0.4973462742221891</span></span><br><span class="line">  batch <span class="number">9000</span> loss: <span class="number">0.4781935699362075</span></span><br><span class="line">  batch <span class="number">10000</span> loss: <span class="number">0.47880298678041433</span></span><br><span class="line">  batch <span class="number">11000</span> loss: <span class="number">0.45598648857555235</span></span><br><span class="line">  batch <span class="number">12000</span> loss: <span class="number">0.4327470133750467</span></span><br><span class="line">  batch <span class="number">13000</span> loss: <span class="number">0.41800182418141046</span></span><br><span class="line">  batch <span class="number">14000</span> loss: <span class="number">0.4115047634313814</span></span><br><span class="line">  batch <span class="number">15000</span> loss: <span class="number">0.4211296908891527</span></span><br><span class="line">LOSS train <span class="number">0.4211296908891527</span> valid <span class="number">0.414460688829422</span></span><br><span class="line">EPOCH <span class="number">2</span>:</span><br><span class="line">  batch <span class="number">1000</span> loss: <span class="number">0.3879808729066281</span></span><br><span class="line">  batch <span class="number">2000</span> loss: <span class="number">0.35912817339546743</span></span><br><span class="line">  batch <span class="number">3000</span> loss: <span class="number">0.38074520684120944</span></span><br><span class="line">  batch <span class="number">4000</span> loss: <span class="number">0.3614532373107213</span></span><br><span class="line">  batch <span class="number">5000</span> loss: <span class="number">0.36850082185724753</span></span><br><span class="line">  batch <span class="number">6000</span> loss: <span class="number">0.3703581801643886</span></span><br><span class="line">  batch <span class="number">7000</span> loss: <span class="number">0.38547042514081115</span></span><br><span class="line">  batch <span class="number">8000</span> loss: <span class="number">0.37846584360170527</span></span><br><span class="line">  batch <span class="number">9000</span> loss: <span class="number">0.3341486988377292</span></span><br><span class="line">  batch <span class="number">10000</span> loss: <span class="number">0.3433013284947956</span></span><br><span class="line">  batch <span class="number">11000</span> loss: <span class="number">0.35607743899174965</span></span><br><span class="line">  batch <span class="number">12000</span> loss: <span class="number">0.3499939931873523</span></span><br><span class="line">  batch <span class="number">13000</span> loss: <span class="number">0.33874178926000603</span></span><br><span class="line">  batch <span class="number">14000</span> loss: <span class="number">0.35130289171106416</span></span><br><span class="line">  batch <span class="number">15000</span> loss: <span class="number">0.3394507191307202</span></span><br><span class="line">LOSS train <span class="number">0.3394507191307202</span> valid <span class="number">0.3581162691116333</span></span><br><span class="line">EPOCH <span class="number">3</span>:</span><br><span class="line">  batch <span class="number">1000</span> loss: <span class="number">0.3319729989422485</span></span><br><span class="line">  batch <span class="number">2000</span> loss: <span class="number">0.29558994361863006</span></span><br><span class="line">  batch <span class="number">3000</span> loss: <span class="number">0.3107374766407593</span></span><br><span class="line">  batch <span class="number">4000</span> loss: <span class="number">0.3298987646112146</span></span><br><span class="line">  batch <span class="number">5000</span> loss: <span class="number">0.30858693152241906</span></span><br><span class="line">  batch <span class="number">6000</span> loss: <span class="number">0.33916381367447684</span></span><br><span class="line">  batch <span class="number">7000</span> loss: <span class="number">0.3105102765217889</span></span><br><span class="line">  batch <span class="number">8000</span> loss: <span class="number">0.3011080777524912</span></span><br><span class="line">  batch <span class="number">9000</span> loss: <span class="number">0.3142058177240979</span></span><br><span class="line">  batch <span class="number">10000</span> loss: <span class="number">0.31458891937109</span></span><br><span class="line">  batch <span class="number">11000</span> loss: <span class="number">0.31527258940579483</span></span><br><span class="line">  batch <span class="number">12000</span> loss: <span class="number">0.31501667268342864</span></span><br><span class="line">  batch <span class="number">13000</span> loss: <span class="number">0.3011875962628328</span></span><br><span class="line">  batch <span class="number">14000</span> loss: <span class="number">0.30012811454350596</span></span><br><span class="line">  batch <span class="number">15000</span> loss: <span class="number">0.31833117976446373</span></span><br><span class="line">LOSS train <span class="number">0.31833117976446373</span> valid <span class="number">0.3307691514492035</span></span><br><span class="line">EPOCH <span class="number">4</span>:</span><br><span class="line">  batch <span class="number">1000</span> loss: <span class="number">0.2786161053752294</span></span><br><span class="line">  batch <span class="number">2000</span> loss: <span class="number">0.27965198021690596</span></span><br><span class="line">  batch <span class="number">3000</span> loss: <span class="number">0.28595415444140965</span></span><br><span class="line">  batch <span class="number">4000</span> loss: <span class="number">0.292985666413857</span></span><br><span class="line">  batch <span class="number">5000</span> loss: <span class="number">0.3069892351147719</span></span><br><span class="line">  batch <span class="number">6000</span> loss: <span class="number">0.29902250939945224</span></span><br><span class="line">  batch <span class="number">7000</span> loss: <span class="number">0.2863366014406201</span></span><br><span class="line">  batch <span class="number">8000</span> loss: <span class="number">0.2655441066541243</span></span><br><span class="line">  batch <span class="number">9000</span> loss: <span class="number">0.3045048695363293</span></span><br><span class="line">  batch <span class="number">10000</span> loss: <span class="number">0.27626545656517554</span></span><br><span class="line">  batch <span class="number">11000</span> loss: <span class="number">0.2808379335970967</span></span><br><span class="line">  batch <span class="number">12000</span> loss: <span class="number">0.29241049340573955</span></span><br><span class="line">  batch <span class="number">13000</span> loss: <span class="number">0.28030834131941446</span></span><br><span class="line">  batch <span class="number">14000</span> loss: <span class="number">0.2983542350126445</span></span><br><span class="line">  batch <span class="number">15000</span> loss: <span class="number">0.3009556676162611</span></span><br><span class="line">LOSS train <span class="number">0.3009556676162611</span> valid <span class="number">0.41686952114105225</span></span><br><span class="line">EPOCH <span class="number">5</span>:</span><br><span class="line">  batch <span class="number">1000</span> loss: <span class="number">0.2614263167564495</span></span><br><span class="line">  batch <span class="number">2000</span> loss: <span class="number">0.2587047562422049</span></span><br><span class="line">  batch <span class="number">3000</span> loss: <span class="number">0.2642477260621345</span></span><br><span class="line">  batch <span class="number">4000</span> loss: <span class="number">0.2825975873669813</span></span><br><span class="line">  batch <span class="number">5000</span> loss: <span class="number">0.26987933717705165</span></span><br><span class="line">  batch <span class="number">6000</span> loss: <span class="number">0.2759250026817317</span></span><br><span class="line">  batch <span class="number">7000</span> loss: <span class="number">0.26055969463163275</span></span><br><span class="line">  batch <span class="number">8000</span> loss: <span class="number">0.29164007206353565</span></span><br><span class="line">  batch <span class="number">9000</span> loss: <span class="number">0.2893096504513578</span></span><br><span class="line">  batch <span class="number">10000</span> loss: <span class="number">0.2486029507305684</span></span><br><span class="line">  batch <span class="number">11000</span> loss: <span class="number">0.2732803234480907</span></span><br><span class="line">  batch <span class="number">12000</span> loss: <span class="number">0.27927226484491985</span></span><br><span class="line">  batch <span class="number">13000</span> loss: <span class="number">0.2686819267635074</span></span><br><span class="line">  batch <span class="number">14000</span> loss: <span class="number">0.24746483912148323</span></span><br><span class="line">  batch <span class="number">15000</span> loss: <span class="number">0.27903492261294194</span></span><br><span class="line">LOSS train <span class="number">0.27903492261294194</span> valid <span class="number">0.31206756830215454</span></span><br></pre></td></tr></table></figure><p>要加载模型的保存版本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">saved_model = GarmentClassifier()</span><br><span class="line">saved_model.load_state_dict(torch.load(PATH))</span><br></pre></td></tr></table></figure><p>加载模型后，它就可以满足您的任何需要 - 更多训练、推理或分析。</p><p>请注意，如果您的模型具有影响模型结构的构造函数参数，则您需要提供它们并将模型配置为与保存模型时的状态相同。</p><h2 id="Other-Resources"><a href="#Other-Resources" class="headerlink" title="Other Resources"></a>Other Resources</h2><ul><li>有关数据实用程序的文档，包括 Dataset 和 DataLoader，位于 pytorch.org</li><li>关于使用固定内存进行 GPU 训练的说明</li><li>有关 TorchVision、TorchText 和 TorchAudio 中可用数据集的文档</li><li>有关 PyTorch 中可用损失函数的文档</li><li>torch.optim 包的文档，其中包括优化器和相关工具，例如学习率调度</li><li>有关保存和加载模型的详细教程</li><li>pytorch.org 的教程部分包含有关各种训练任务的教程，包括不同领域的分类、生成对抗网络、强化学习等</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12-pytorch-pytorch tensorboard support</title>
      <link href="/2023/11/15/12-pytorch-pytorch-tensorboard-support/"/>
      <url>/2023/11/15/12-pytorch-pytorch-tensorboard-support/</url>
      
        <content type="html"><![CDATA[<h1 id="PYTORCH-TENSORBOARD-SUPPORT"><a href="#PYTORCH-TENSORBOARD-SUPPORT" class="headerlink" title="PYTORCH TENSORBOARD SUPPORT"></a>PYTORCH TENSORBOARD SUPPORT</h1><h2 id="Before-You-Start"><a href="#Before-You-Start" class="headerlink" title="Before You Start"></a>Before You Start</h2><p>要运行本教程，您需要安装 PyTorch、TorchVision、Matplotlib 和 TensorBoard。</p><p>With <code>conda</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch torchvision -c pytorch</span><br><span class="line">conda install matplotlib tensorboard</span><br></pre></td></tr></table></figure><p>With pip:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch torchvision matplotlib tensorboard</span><br></pre></td></tr></table></figure><p>安装依赖项后，在安装它们的 Python 环境中重新启动此笔记本。</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>在本笔记本中，我们将针对 Fashion-MNIST 数据集训练 LeNet-5 的变体。 Fashion-MNIST 是一组描绘各种服装的图像图块，其中有十个类别标签指示所描绘服装的类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PyTorch model and training necessities</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"></span><br><span class="line"><span class="comment"># Image datasets and image manipulation</span></span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"></span><br><span class="line"><span class="comment"># Image display</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># PyTorch TensorBoard support</span></span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line"><span class="comment"># In case you are using an environment that has TensorFlow installed,</span></span><br><span class="line"><span class="comment"># such as Google Colab, uncomment the following code to avoid</span></span><br><span class="line"><span class="comment"># a bug with saving embeddings to your TensorBoard directory</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import tensorflow as tf</span></span><br><span class="line"><span class="comment"># import tensorboard as tb</span></span><br><span class="line"><span class="comment"># tf.io.gfile = tb.compat.tensorflow_stub.io.gfile</span></span><br></pre></td></tr></table></figure><h2 id="Showing-Images-in-TensorBoard"><a href="#Showing-Images-in-TensorBoard" class="headerlink" title="Showing Images in TensorBoard"></a>Showing Images in TensorBoard</h2><p>首先，我们将数据集中的示例图像添加到 TensorBoard：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gather datasets and prepare them for consumption</span></span><br><span class="line">transform = transforms.Compose(</span><br><span class="line">    [transforms.ToTensor(),</span><br><span class="line">    transforms.Normalize((<span class="number">0.5</span>,), (<span class="number">0.5</span>,))])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Store separate training and validations splits in ./data</span></span><br><span class="line">training_set = torchvision.datasets.FashionMNIST(<span class="string">&#x27;./data&#x27;</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    transform=transform)</span><br><span class="line">validation_set = torchvision.datasets.FashionMNIST(<span class="string">&#x27;./data&#x27;</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    transform=transform)</span><br><span class="line"></span><br><span class="line">training_loader = torch.utils.data.DataLoader(training_set,</span><br><span class="line">                                              batch_size=<span class="number">4</span>,</span><br><span class="line">                                              shuffle=<span class="literal">True</span>,</span><br><span class="line">                                              num_workers=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">validation_loader = torch.utils.data.DataLoader(validation_set,</span><br><span class="line">                                                batch_size=<span class="number">4</span>,</span><br><span class="line">                                                shuffle=<span class="literal">False</span>,</span><br><span class="line">                                                num_workers=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Class labels</span></span><br><span class="line">classes = (<span class="string">&#x27;T-shirt/top&#x27;</span>, <span class="string">&#x27;Trouser&#x27;</span>, <span class="string">&#x27;Pullover&#x27;</span>, <span class="string">&#x27;Dress&#x27;</span>, <span class="string">&#x27;Coat&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sandal&#x27;</span>, <span class="string">&#x27;Shirt&#x27;</span>, <span class="string">&#x27;Sneaker&#x27;</span>, <span class="string">&#x27;Bag&#x27;</span>, <span class="string">&#x27;Ankle Boot&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Helper function for inline image display</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">matplotlib_imshow</span>(<span class="params">img, one_channel=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="keyword">if</span> one_channel:</span><br><span class="line">        img = img.mean(dim=<span class="number">0</span>)</span><br><span class="line">    img = img / <span class="number">2</span> + <span class="number">0.5</span>     <span class="comment"># unnormalize</span></span><br><span class="line">    npimg = img.numpy()</span><br><span class="line">    <span class="keyword">if</span> one_channel:</span><br><span class="line">        plt.imshow(npimg, cmap=<span class="string">&quot;Greys&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        plt.imshow(np.transpose(npimg, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extract a batch of 4 images</span></span><br><span class="line">dataiter = <span class="built_in">iter</span>(training_loader)</span><br><span class="line">images, labels = <span class="built_in">next</span>(dataiter)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a grid from the images and show them</span></span><br><span class="line">img_grid = torchvision.utils.make_grid(images)</span><br><span class="line">matplotlib_imshow(img_grid, one_channel=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to ./data/FashionMNIST/raw/train-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/26421880 [00:00&lt;?, ?it/s]</span><br><span class="line">  0%|          | 65536/26421880 [00:00&lt;01:12, 364190.06it/s]</span><br><span class="line">  1%|          | 229376/26421880 [00:00&lt;00:38, 681499.72it/s]</span><br><span class="line">  2%|2         | 655360/26421880 [00:00&lt;00:14, 1797638.14it/s]</span><br><span class="line">  7%|6         | 1769472/26421880 [00:00&lt;00:06, 3863535.64it/s]</span><br><span class="line"> 14%|#3        | 3670016/26421880 [00:00&lt;00:02, 7836390.00it/s]</span><br><span class="line"> 21%|##1       | 5668864/26421880 [00:00&lt;00:02, 9387876.09it/s]</span><br><span class="line"> 32%|###1      | 8454144/26421880 [00:01&lt;00:01, 13858138.54it/s]</span><br><span class="line"> 40%|###9      | 10551296/26421880 [00:01&lt;00:01, 13275947.57it/s]</span><br><span class="line"> 50%|#####     | 13303808/26421880 [00:01&lt;00:00, 16592868.65it/s]</span><br><span class="line"> 58%|#####8    | 15433728/26421880 [00:01&lt;00:00, 15098119.07it/s]</span><br><span class="line"> 69%|######8   | 18120704/26421880 [00:01&lt;00:00, 17772010.13it/s]</span><br><span class="line"> 77%|#######7  | 20381696/26421880 [00:01&lt;00:00, 16117299.56it/s]</span><br><span class="line"> 87%|########6 | 22970368/26421880 [00:01&lt;00:00, 18330844.79it/s]</span><br><span class="line"> 96%|#########5| 25362432/26421880 [00:01&lt;00:00, 16821085.78it/s]</span><br><span class="line">100%|##########| 26421880/26421880 [00:02&lt;00:00, 13143960.49it/s]</span><br><span class="line">Extracting ./data/FashionMNIST/raw/train-images-idx3-ubyte.gz to ./data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to ./data/FashionMNIST/raw/train-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/29515 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 29515/29515 [00:00&lt;00:00, 324555.51it/s]</span><br><span class="line">Extracting ./data/FashionMNIST/raw/train-labels-idx1-ubyte.gz to ./data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to ./data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/4422102 [00:00&lt;?, ?it/s]</span><br><span class="line">  1%|1         | 65536/4422102 [00:00&lt;00:12, 361458.87it/s]</span><br><span class="line">  5%|5         | 229376/4422102 [00:00&lt;00:06, 680363.18it/s]</span><br><span class="line"> 20%|##        | 884736/4422102 [00:00&lt;00:01, 2498877.41it/s]</span><br><span class="line"> 43%|####2     | 1900544/4422102 [00:00&lt;00:00, 4401526.26it/s]</span><br><span class="line"> 79%|#######9  | 3506176/4422102 [00:00&lt;00:00, 7212994.99it/s]</span><br><span class="line">100%|##########| 4422102/4422102 [00:00&lt;00:00, 6063383.04it/s]</span><br><span class="line">Extracting ./data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz to ./data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to ./data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/5148 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 5148/5148 [00:00&lt;00:00, 39187435.56it/s]</span><br><span class="line">Extracting ./data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to ./data/FashionMNIST/raw</span><br></pre></td></tr></table></figure><p>上面，我们使用 TorchVision 和 Matplotlib 创建了小批量输入数据的可视化网格。下面，我们使用 <code>SummaryWriter</code> 上的 <code>add_image()</code> 调用来记录图像以供 TensorBoard 使用，并且我们还调用 <code>flush()</code> 以确保它立即写入磁盘。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Default log_dir argument is &quot;runs&quot; - but it&#x27;s good to be specific</span></span><br><span class="line"><span class="comment"># torch.utils.tensorboard.SummaryWriter is imported above</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&#x27;runs/fashion_mnist_experiment_1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Write image data to TensorBoard log dir</span></span><br><span class="line">writer.add_image(<span class="string">&#x27;Four Fashion-MNIST Images&#x27;</span>, img_grid)</span><br><span class="line">writer.flush()</span><br><span class="line"></span><br><span class="line"><span class="comment"># To view, start TensorBoard on the command line with:</span></span><br><span class="line"><span class="comment">#   tensorboard --logdir=runs</span></span><br><span class="line"><span class="comment"># ...and open a browser tab to http://localhost:6006/</span></span><br></pre></td></tr></table></figure><p>如果您在命令行启动 TensorBoard 并在新的浏览器选项卡（通常在 localhost:6006）中打开它，您应该在 IMAGES 选项卡下看到图像网格。</p><h2 id="Graphing-Scalars-to-Visualize-Training"><a href="#Graphing-Scalars-to-Visualize-Training" class="headerlink" title="Graphing Scalars to Visualize Training"></a>Graphing Scalars to Visualize Training</h2><p>TensorBoard 对于跟踪训练进度和效果非常有用。下面，我们将运行一个训练循环，跟踪一些指标，并保存数据以供 TensorBoard 的使用。</p><p>让我们定义一个模型来对图像图块进行分类，以及用于训练的优化器和损失函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Net</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Net, self).__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, <span class="number">5</span>)</span><br><span class="line">        self.pool = nn.MaxPool2d(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">6</span>, <span class="number">16</span>, <span class="number">5</span>)</span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">16</span> * <span class="number">4</span> * <span class="number">4</span>, <span class="number">120</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">120</span>, <span class="number">84</span>)</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">84</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.pool(F.relu(self.conv1(x)))</span><br><span class="line">        x = self.pool(F.relu(self.conv2(x)))</span><br><span class="line">        x = x.view(-<span class="number">1</span>, <span class="number">16</span> * <span class="number">4</span> * <span class="number">4</span>)</span><br><span class="line">        x = F.relu(self.fc1(x))</span><br><span class="line">        x = F.relu(self.fc2(x))</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">net = Net()</span><br><span class="line">criterion = nn.CrossEntropyLoss()</span><br><span class="line">optimizer = optim.SGD(net.parameters(), lr=<span class="number">0.001</span>, momentum=<span class="number">0.9</span>)</span><br></pre></td></tr></table></figure><p>现在让我们训练一个 epoch，并评估每 1000 个批次的训练集损失与验证集损失：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(validation_loader))</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>):  <span class="comment"># loop over the dataset multiple times</span></span><br><span class="line">    running_loss = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, data <span class="keyword">in</span> <span class="built_in">enumerate</span>(training_loader, <span class="number">0</span>):</span><br><span class="line">        <span class="comment"># basic training loop</span></span><br><span class="line">        inputs, labels = data</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        outputs = net(inputs)</span><br><span class="line">        loss = criterion(outputs, labels)</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        running_loss += loss.item()</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">1000</span> == <span class="number">999</span>:    <span class="comment"># Every 1000 mini-batches...</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Batch &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(i + <span class="number">1</span>))</span><br><span class="line">            <span class="comment"># Check against the validation set</span></span><br><span class="line">            running_vloss = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># In evaluation mode some model specific operations can be omitted eg. dropout layer</span></span><br><span class="line">            net.train(<span class="literal">False</span>) <span class="comment"># Switching to evaluation mode, eg. turning off regularisation</span></span><br><span class="line">            <span class="keyword">for</span> j, vdata <span class="keyword">in</span> <span class="built_in">enumerate</span>(validation_loader, <span class="number">0</span>):</span><br><span class="line">                vinputs, vlabels = vdata</span><br><span class="line">                voutputs = net(vinputs)</span><br><span class="line">                vloss = criterion(voutputs, vlabels)</span><br><span class="line">                running_vloss += vloss.item()</span><br><span class="line">            net.train(<span class="literal">True</span>) <span class="comment"># Switching back to training mode, eg. turning on regularisation</span></span><br><span class="line"></span><br><span class="line">            avg_loss = running_loss / <span class="number">1000</span></span><br><span class="line">            avg_vloss = running_vloss / <span class="built_in">len</span>(validation_loader)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Log the running loss averaged per batch</span></span><br><span class="line">            writer.add_scalars(<span class="string">&#x27;Training vs. Validation Loss&#x27;</span>,</span><br><span class="line">                            &#123; <span class="string">&#x27;Training&#x27;</span> : avg_loss, <span class="string">&#x27;Validation&#x27;</span> : avg_vloss &#125;,</span><br><span class="line">                            epoch * <span class="built_in">len</span>(training_loader) + i)</span><br><span class="line"></span><br><span class="line">            running_loss = <span class="number">0.0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Finished Training&#x27;</span>)</span><br><span class="line"></span><br><span class="line">writer.flush()</span><br></pre></td></tr></table></figure><p>切换到打开的 TensorBoard 并查看 SCALARS 选项卡。</p><h2 id="Visualizing-Your-Model"><a href="#Visualizing-Your-Model" class="headerlink" title="Visualizing Your Model"></a>Visualizing Your Model</h2><p>TensorBoard 还可用于检查模型中的数据流。为此，请使用模型和示例输入调用 <code>add_graph()</code> 方法。当你打开时</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Again, grab a single mini-batch of images</span></span><br><span class="line">dataiter = <span class="built_in">iter</span>(training_loader)</span><br><span class="line">images, labels = <span class="built_in">next</span>(dataiter)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add_graph() will trace the sample input through your model,</span></span><br><span class="line"><span class="comment"># and render it as a graph.</span></span><br><span class="line">writer.add_graph(net, images)</span><br><span class="line">writer.flush()</span><br></pre></td></tr></table></figure><p>当您切换到 TensorBoard 时，您应该会看到一个 GRAPHS 选项卡。双击“NET”节点以查看模型中的层和数据流。</p><h2 id="Visualizing-Your-Dataset-with-Embeddings"><a href="#Visualizing-Your-Dataset-with-Embeddings" class="headerlink" title="Visualizing Your Dataset with Embeddings"></a>Visualizing Your Dataset with Embeddings</h2><p>我们使用的 28×28 图像块可以建模为 784 维向量 (28 * 28 &#x3D; 784)。将其投影到较低维的表示形式可能会很有启发。 <code>add_embedding()</code> 方法会将一组数据投影到方差最大的三个维度上，并将它们显示为交互式 3D 图表。 <code>add_embedding()</code> 方法通过投影到方差最高的三个维度来自动执行此操作。</p><p>下面，我们将采集数据样本，并生成这样的嵌入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Select a random subset of data and corresponding labels</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">select_n_random</span>(<span class="params">data, labels, n=<span class="number">100</span></span>):</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">len</span>(data) == <span class="built_in">len</span>(labels)</span><br><span class="line"></span><br><span class="line">    perm = torch.randperm(<span class="built_in">len</span>(data))</span><br><span class="line">    <span class="keyword">return</span> data[perm][:n], labels[perm][:n]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extract a random subset of data</span></span><br><span class="line">images, labels = select_n_random(training_set.data, training_set.targets)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the class labels for each image</span></span><br><span class="line">class_labels = [classes[label] <span class="keyword">for</span> label <span class="keyword">in</span> labels]</span><br><span class="line"></span><br><span class="line"><span class="comment"># log embeddings</span></span><br><span class="line">features = images.view(-<span class="number">1</span>, <span class="number">28</span> * <span class="number">28</span>)</span><br><span class="line">writer.add_embedding(features,</span><br><span class="line">                    metadata=class_labels,</span><br><span class="line">                    label_img=images.unsqueeze(<span class="number">1</span>))</span><br><span class="line">writer.flush()</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><p>现在，如果您切换到 TensorBoard 并选择“投影仪”选项卡，您应该会看到投影的 3D 表示。您可以旋转和缩放模型。在大尺度和小尺度上检查它，看看是否可以发现投影数据和标签聚类中的模式。</p><p>为了获得更好的可见性，建议：</p><ul><li>从左侧的“颜色依据”下拉列表中选择“标签”。</li><li>切换顶部的夜间模式图标，将浅色图像放置在深色背景上。</li></ul><h2 id="Other-Resources"><a href="#Other-Resources" class="headerlink" title="Other Resources"></a>Other Resources</h2><p>欲了解更多信息，请查看：</p><ul><li>torch.utils.tensorboard.SummaryWriter 上的 PyTorch 文档</li><li>PyTorch.org 教程中的 Tensorboard 教程内容</li><li>有关 TensorBoard 的更多信息，请参阅 TensorBoard 文档</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11-pytorch-building models with pytorch</title>
      <link href="/2023/11/15/11-pytorch-building-models-with-pytorch/"/>
      <url>/2023/11/15/11-pytorch-building-models-with-pytorch/</url>
      
        <content type="html"><![CDATA[<h1 id="BUILDING-MODELS-WITH-PYTORCH"><a href="#BUILDING-MODELS-WITH-PYTORCH" class="headerlink" title="BUILDING MODELS WITH PYTORCH"></a>BUILDING MODELS WITH PYTORCH</h1><h2 id="torch-nn-Module-and-torch-nn-Parameter"><a href="#torch-nn-Module-and-torch-nn-Parameter" class="headerlink" title="torch.nn.Module and torch.nn.Parameter"></a><code>torch.nn.Module</code> and <code>torch.nn.Parameter</code></h2><p>除了 <code>Parameter</code> 之外，我们在本视频中讨论的类都是 <code>torch.nn.Module</code> 的子类。这是 PyTorch 基类，旨在封装特定于 PyTorch 模型及其组件的行为。</p><p><code>torch.nn.Module</code> 的一项重要行为是注册参数。如果特定的 <code>Module</code> 子类具有学习权重，这些权重将表示为 <code>torch.nn.Parameter</code> 的实例。 <code>Parameter</code> 类是 <code>torch.Tensor</code> 的子类，具有特殊行为，当它们被指定为 <code>Module</code> 的属性时，它们将被添加到该列表中模块参数。这些参数可以通过 <code>Module</code> 类上的 <code>parameters()</code> 方法访问。</p><p>作为一个简单的例子，这是一个非常简单的模型，具有两个线性层和一个激活函数。我们将创建它的一个实例并要求它报告其参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TinyModel</span>(torch.nn.Module):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(TinyModel, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.linear1 = torch.nn.Linear(<span class="number">100</span>, <span class="number">200</span>)</span><br><span class="line">        self.activation = torch.nn.ReLU()</span><br><span class="line">        self.linear2 = torch.nn.Linear(<span class="number">200</span>, <span class="number">10</span>)</span><br><span class="line">        self.softmax = torch.nn.Softmax()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.linear1(x)</span><br><span class="line">        x = self.activation(x)</span><br><span class="line">        x = self.linear2(x)</span><br><span class="line">        x = self.softmax(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">tinymodel = TinyModel()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The model:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(tinymodel)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n\nJust one layer:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(tinymodel.linear2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n\nModel params:&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> tinymodel.parameters():</span><br><span class="line">    <span class="built_in">print</span>(param)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n\nLayer params:&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> tinymodel.linear2.parameters():</span><br><span class="line">    <span class="built_in">print</span>(param)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">The model:</span><br><span class="line">TinyModel(</span><br><span class="line">  (linear1): Linear(in_features=100, out_features=200, bias=True)</span><br><span class="line">  (activation): ReLU()</span><br><span class="line">  (linear2): Linear(in_features=200, out_features=10, bias=True)</span><br><span class="line">  (softmax): Softmax(dim=None)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Just one layer:</span><br><span class="line">Linear(in_features=200, out_features=10, bias=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Model params:</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ 0.0765,  0.0830, -0.0234,  ..., -0.0337, -0.0355, -0.0968],</span><br><span class="line">        [-0.0573,  0.0250, -0.0132,  ..., -0.0060,  0.0240,  0.0280],</span><br><span class="line">        [-0.0908, -0.0369,  0.0842,  ..., -0.0078, -0.0333, -0.0324],</span><br><span class="line">        ...,</span><br><span class="line">        [-0.0273, -0.0162, -0.0878,  ...,  0.0451,  0.0297, -0.0722],</span><br><span class="line">        [ 0.0833, -0.0874, -0.0020,  ..., -0.0215,  0.0356,  0.0405],</span><br><span class="line">        [-0.0637,  0.0190, -0.0571,  ..., -0.0874,  0.0176,  0.0712]],</span><br><span class="line">       requires_grad=True)</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([ 0.0304, -0.0758, -0.0549, -0.0893, -0.0809, -0.0804, -0.0079, -0.0413,</span><br><span class="line">        -0.0968,  0.0888,  0.0239, -0.0659, -0.0560, -0.0060,  0.0660, -0.0319,</span><br><span class="line">        -0.0370,  0.0633, -0.0143, -0.0360,  0.0670, -0.0804,  0.0265, -0.0870,</span><br><span class="line">         0.0039, -0.0174, -0.0680, -0.0531,  0.0643,  0.0794,  0.0209,  0.0419,</span><br><span class="line">         0.0562, -0.0173, -0.0055,  0.0813,  0.0613, -0.0379,  0.0228,  0.0304,</span><br><span class="line">        -0.0354,  0.0609, -0.0398,  0.0410,  0.0564, -0.0101, -0.0790, -0.0824,</span><br><span class="line">        -0.0126,  0.0557,  0.0900,  0.0597,  0.0062, -0.0108,  0.0112, -0.0358,</span><br><span class="line">        -0.0203,  0.0566, -0.0816, -0.0633, -0.0266, -0.0624, -0.0746,  0.0492,</span><br><span class="line">         0.0450,  0.0530, -0.0706,  0.0308,  0.0533,  0.0202, -0.0469, -0.0448,</span><br><span class="line">         0.0548,  0.0331,  0.0257, -0.0764, -0.0892,  0.0783,  0.0062,  0.0844,</span><br><span class="line">        -0.0959, -0.0468, -0.0926,  0.0925,  0.0147,  0.0391,  0.0765,  0.0059,</span><br><span class="line">         0.0216, -0.0724,  0.0108,  0.0701, -0.0147, -0.0693, -0.0517,  0.0029,</span><br><span class="line">         0.0661,  0.0086, -0.0574,  0.0084, -0.0324,  0.0056,  0.0626, -0.0833,</span><br><span class="line">        -0.0271, -0.0526,  0.0842, -0.0840, -0.0234, -0.0898, -0.0710, -0.0399,</span><br><span class="line">         0.0183, -0.0883, -0.0102, -0.0545,  0.0706, -0.0646, -0.0841, -0.0095,</span><br><span class="line">        -0.0823, -0.0385,  0.0327, -0.0810, -0.0404,  0.0570,  0.0740,  0.0829,</span><br><span class="line">         0.0845,  0.0817, -0.0239, -0.0444, -0.0221,  0.0216,  0.0103, -0.0631,</span><br><span class="line">         0.0831, -0.0273,  0.0756,  0.0022,  0.0407,  0.0072,  0.0374, -0.0608,</span><br><span class="line">         0.0424, -0.0585,  0.0505, -0.0455,  0.0268, -0.0950, -0.0642,  0.0843,</span><br><span class="line">         0.0760, -0.0889, -0.0617, -0.0916,  0.0102, -0.0269, -0.0011,  0.0318,</span><br><span class="line">         0.0278, -0.0160,  0.0159, -0.0817,  0.0768, -0.0876, -0.0524, -0.0332,</span><br><span class="line">        -0.0583,  0.0053,  0.0503, -0.0342, -0.0319, -0.0562,  0.0376, -0.0696,</span><br><span class="line">         0.0735,  0.0222, -0.0775, -0.0072,  0.0294,  0.0994, -0.0355, -0.0809,</span><br><span class="line">        -0.0539,  0.0245,  0.0670,  0.0032,  0.0891, -0.0694, -0.0994,  0.0126,</span><br><span class="line">         0.0629,  0.0936,  0.0058, -0.0073,  0.0498,  0.0616, -0.0912, -0.0490],</span><br><span class="line">       requires_grad=True)</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ 0.0504, -0.0203, -0.0573,  ...,  0.0253,  0.0642, -0.0088],</span><br><span class="line">        [-0.0078, -0.0608, -0.0626,  ..., -0.0350, -0.0028, -0.0634],</span><br><span class="line">        [-0.0317, -0.0202, -0.0593,  ..., -0.0280,  0.0571, -0.0114],</span><br><span class="line">        ...,</span><br><span class="line">        [ 0.0582, -0.0471, -0.0236,  ...,  0.0273,  0.0673,  0.0555],</span><br><span class="line">        [ 0.0258, -0.0706,  0.0315,  ..., -0.0663, -0.0133,  0.0078],</span><br><span class="line">        [-0.0062,  0.0544, -0.0280,  ..., -0.0303, -0.0326, -0.0462]],</span><br><span class="line">       requires_grad=True)</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([ 0.0385, -0.0116,  0.0703,  0.0407, -0.0346, -0.0178,  0.0308, -0.0502,</span><br><span class="line">         0.0616,  0.0114], requires_grad=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Layer params:</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ 0.0504, -0.0203, -0.0573,  ...,  0.0253,  0.0642, -0.0088],</span><br><span class="line">        [-0.0078, -0.0608, -0.0626,  ..., -0.0350, -0.0028, -0.0634],</span><br><span class="line">        [-0.0317, -0.0202, -0.0593,  ..., -0.0280,  0.0571, -0.0114],</span><br><span class="line">        ...,</span><br><span class="line">        [ 0.0582, -0.0471, -0.0236,  ...,  0.0273,  0.0673,  0.0555],</span><br><span class="line">        [ 0.0258, -0.0706,  0.0315,  ..., -0.0663, -0.0133,  0.0078],</span><br><span class="line">        [-0.0062,  0.0544, -0.0280,  ..., -0.0303, -0.0326, -0.0462]],</span><br><span class="line">       requires_grad=True)</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([ 0.0385, -0.0116,  0.0703,  0.0407, -0.0346, -0.0178,  0.0308, -0.0502,</span><br><span class="line">         0.0616,  0.0114], requires_grad=True)</span><br></pre></td></tr></table></figure><p>这显示了 PyTorch 模型的基本结构：有一个 <code>__init__()</code> 方法定义模型的层和其他组件，还有一个 <code>forward()</code> 方法完成计算。请注意，我们可以打印模型或其任何子模块，以了解其结构。</p><h2 id="Common-Layer-Types"><a href="#Common-Layer-Types" class="headerlink" title="Common Layer Types"></a>Common Layer Types</h2><h3 id="Linear-Layers"><a href="#Linear-Layers" class="headerlink" title="Linear Layers"></a>Linear Layers</h3><p>神经网络层最基本的类型是线性或全连接层。在该层中，每个输入都会影响该层的每个输出，其程度由该层的权重指定。如果模型有 m 个输入和 n 个输出，则权重将是 m x n 矩阵。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">lin = torch.nn.Linear(<span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">x = torch.rand(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Input:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n\nWeight and Bias parameters:&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> lin.parameters():</span><br><span class="line">    <span class="built_in">print</span>(param)</span><br><span class="line"></span><br><span class="line">y = lin(x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n\nOutput:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Input:</span><br><span class="line">tensor([[0.8790, 0.9774, 0.2547]])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Weight and Bias parameters:</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ 0.1656,  0.4969, -0.4972],</span><br><span class="line">        [-0.2035, -0.2579, -0.3780]], requires_grad=True)</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([0.3768, 0.3781], requires_grad=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line">tensor([[ 0.8814, -0.1492]], grad_fn=&lt;AddmmBackward0&gt;)</span><br></pre></td></tr></table></figure><p>如果将 <code>x</code> 与线性层的权重进行矩阵乘法，并添加偏差，您会发现得到输出向量 <code>y</code> 。</p><p>需要注意的另一个重要功能：当我们使用 <code>lin.weight</code> 检查图层的权重时，它会将自己报告为 <code>Parameter</code> （它是 <code>Tensor</code> 的子类） ，并让我们知道它正在使用 autograd 跟踪梯度。这是 <code>Parameter</code> 的默认行为，与 <code>Tensor</code> 不同。</p><p>线性层广泛应用于深度学习模型中。最常见的地方之一是在分类器模型中，该模型通常在末尾有一个或多个线性层，其中最后一层将有 n 个输出，其中 n 是分类器处理的类的数量。</p><h3 id="Convolutional-Layers"><a href="#Convolutional-Layers" class="headerlink" title="Convolutional Layers"></a>Convolutional Layers</h3><p>构建卷积层是为了处理具有<strong>高度空间相关性的数据</strong>。它们在计算机视觉中非常常用，它们检测紧密的特征分组，然后将其组合成更高级别的特征。它们也会出现在其他上下文中 - 例如，在 NLP 应用程序中，单词的直接上下文（即序列中附近的其他单词）可以影响句子的含义。</p><p>我们在之前的视频中看到了 LeNet5 中卷积层的作用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LeNet</span>(torch.nn.Module):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(LeNet, self).__init__()</span><br><span class="line">        <span class="comment"># 1 input image channel (black &amp; white), 6 output channels, 5x5 square convolution</span></span><br><span class="line">        <span class="comment"># kernel</span></span><br><span class="line">        self.conv1 = torch.nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, <span class="number">5</span>)</span><br><span class="line">        self.conv2 = torch.nn.Conv2d(<span class="number">6</span>, <span class="number">16</span>, <span class="number">3</span>)</span><br><span class="line">        <span class="comment"># an affine operation: y = Wx + b</span></span><br><span class="line">        self.fc1 = torch.nn.Linear(<span class="number">16</span> * <span class="number">6</span> * <span class="number">6</span>, <span class="number">120</span>)  <span class="comment"># 6*6 from image dimension</span></span><br><span class="line">        self.fc2 = torch.nn.Linear(<span class="number">120</span>, <span class="number">84</span>)</span><br><span class="line">        self.fc3 = torch.nn.Linear(<span class="number">84</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="comment"># Max pooling over a (2, 2) window</span></span><br><span class="line">        x = F.max_pool2d(F.relu(self.conv1(x)), (<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">        <span class="comment"># If the size is a square you can only specify a single number</span></span><br><span class="line">        x = F.max_pool2d(F.relu(self.conv2(x)), <span class="number">2</span>)</span><br><span class="line">        x = x.view(-<span class="number">1</span>, self.num_flat_features(x))</span><br><span class="line">        x = F.relu(self.fc1(x))</span><br><span class="line">        x = F.relu(self.fc2(x))</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">num_flat_features</span>(<span class="params">self, x</span>):</span><br><span class="line">        size = x.size()[<span class="number">1</span>:]  <span class="comment"># all dimensions except the batch dimension</span></span><br><span class="line">        num_features = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> size:</span><br><span class="line">            num_features *= s</span><br><span class="line">        <span class="keyword">return</span> num_features</span><br></pre></td></tr></table></figure><p>让我们分解一下该模型的卷积层中发生的情况。以 <code>conv1</code> 开头：</p><ul><li>LeNet5 旨在接收 1x32x32 黑白图像。卷积层构造函数的第一个参数是输入通道的数量。在这里，它是 1。如果我们构建这个模型来查看 3 色通道，那么它就是 3。</li><li>卷积层就像一个扫描图像的窗口，寻找它可以识别的模式。这些模式称为特征，卷积层的参数之一是我们希望它学习的特征数量。这是构造函数的第二个参数，是输出特征的数量。在这里，我们要求我们的层学习 6 个特征。</li><li>就在上面，我将卷积层比作一个窗口——但是窗口有多大呢？第三个参数是窗口或内核大小。这里，“5”意味着我们选择了 5x5 内核。 （如果您想要高度与宽度不同的内核，您可以为此参数指定一个元组 - 例如， <code>(3, 5)</code> 以获得 3x5 卷积内核。）</li></ul><p>卷积层的输出是激活图 - 输入张量中特征存在的空间表示。 <code>conv1</code> 将为我们提供 6x28x28 的输出张量； 6 是要素的数量，28 是地图的高度和宽度。 （28 是因为当在 32 像素行上扫描 5 像素窗口时，只有 28 个有效位置。）</p><p>然后，我们将卷积的输出传递给 ReLU 激活函数（稍后将详细介绍激活函数），然后传递给最大池化层。最大池化层采用激活图中彼此靠近的特征并将它们分组在一起。它通过减少张量、将输出中的每个 2x2 单元格合并为一个单元格，并为该单元格分配进入其中的 4 个单元格的最大值来实现此目的。这为我们提供了激活图的较低分辨率版本，尺寸为 6x14x14。</p><p>我们的下一个卷积层 <code>conv2</code> 需要 6 个输入通道（对应于第一层寻求的 6 个特征）、16 个输出通道和一个 3x3 内核。它输出一个 16x12x12 的激活图，再次通过最大池化层减少到 16x6x6。在将此输出传递到线性层之前，它会被重塑为 16 * 6 * 6 &#x3D; 576 元素的向量，以供下一层使用。</p><p>有用于处理 1D、2D 和 3D 张量的卷积层。卷积层构造函数还有更多可选参数，包括输入中的步幅长度（例如，仅扫描每秒或每三个位置）、填充（以便您可以扫描到输入的边缘）等等。请参阅文档以获取更多信息。</p><h3 id="Recurrent-Layers"><a href="#Recurrent-Layers" class="headerlink" title="Recurrent Layers"></a>Recurrent Layers</h3><p>循环神经网络（或 RNN）用于处理顺序数据——从科学仪器的时间序列测量到自然语言句子再到 DNA 核苷酸。 RNN 通过维护一个隐藏状态来实现这一点，该隐藏状态充当迄今为止在序列中所看到内容的一种记忆。</p><p>RNN 层或其变体 LSTM（长短期记忆）和 GRU（门控循环单元）的内部结构相当复杂，超出了本视频的范围，但我们将向您展示其中的结构使用基于 LSTM 的词性标注器（一种分类器，可以告诉你一个单词是否是名词、动词等）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LSTMTagger</span>(torch.nn.Module):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, embedding_dim, hidden_dim, vocab_size, tagset_size</span>):</span><br><span class="line">        <span class="built_in">super</span>(LSTMTagger, self).__init__()</span><br><span class="line">        self.hidden_dim = hidden_dim</span><br><span class="line"></span><br><span class="line">        self.word_embeddings = torch.nn.Embedding(vocab_size, embedding_dim)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># The LSTM takes word embeddings as inputs, and outputs hidden states</span></span><br><span class="line">        <span class="comment"># with dimensionality hidden_dim.</span></span><br><span class="line">        self.lstm = torch.nn.LSTM(embedding_dim, hidden_dim)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># The linear layer that maps from hidden state space to tag space</span></span><br><span class="line">        self.hidden2tag = torch.nn.Linear(hidden_dim, tagset_size)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, sentence</span>):</span><br><span class="line">        embeds = self.word_embeddings(sentence)</span><br><span class="line">        lstm_out, _ = self.lstm(embeds.view(<span class="built_in">len</span>(sentence), <span class="number">1</span>, -<span class="number">1</span>))</span><br><span class="line">        tag_space = self.hidden2tag(lstm_out.view(<span class="built_in">len</span>(sentence), -<span class="number">1</span>))</span><br><span class="line">        tag_scores = F.log_softmax(tag_space, dim=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> tag_scores</span><br></pre></td></tr></table></figure><p>构造函数有四个参数：</p><ul><li><code>vocab_size</code> 是输入词汇中的单词数。每个单词都是 <code>vocab_size</code> 维空间中的一个单热向量（或单位向量）。</li><li><code>tagset_size</code> 是输出集中的标签数量。</li><li><code>embedding_dim</code> 是词汇嵌入空间的大小。嵌入将词汇映射到低维空间，其中具有相似含义的单词在空间中靠近在一起。</li><li><code>hidden_dim</code> 是 LSTM 内存的大小。</li></ul><p>输入将是一个句子，其中单词表示为 one-hot 向量的索引。然后嵌入层会将它们映射到 <code>embedding_dim</code> 维空间。 LSTM 获取此嵌入序列并对其进行迭代，生成长度为 <code>hidden_dim</code> 的输出向量。最后的线性层充当分类器；将 <code>log_softmax()</code> 应用于最后一层的输出会将输出转换为给定单词映射到给定标签的归一化估计概率集。</p><p>如果您想了解该网络的实际应用，请查看 pytorch.org 上的序列模型和 LSTM 网络教程。</p><h3 id="Transformers"><a href="#Transformers" class="headerlink" title="Transformers"></a>Transformers</h3><p>Transformer 是一种多用途网络，它已经通过 BERT 等模型取代了 NLP 领域的最先进技术。对 Transformer 架构的讨论超出了本视频的范围，但 PyTorch 有一个 <code>Transformer</code> 类，允许您定义 Transformer 模型的整体参数 - 注意力头的数量、编码器和解码器的数量层、dropout 和激活函数等。（您甚至可以使用正确的参数从这个单个类构建 BERT 模型！） <code>torch.nn.Transformer</code> 类还具有用于封装各个组件的类（ <code>TransformerEncoder</code> ）和子组件（ <code>TransformerEncoderLayer</code> 、 <code>TransformerDecoderLayer</code> ）。有关详细信息，请查看变压器类的文档以及 pytorch.org 上的相关教程。</p><h3 id="Data-Manipulation-Layers"><a href="#Data-Manipulation-Layers" class="headerlink" title="Data Manipulation Layers"></a>Data Manipulation Layers</h3><p>还有其他层类型在模型中执行重要功能，但本身不参与学习过程。</p><p>最大池化（及其孪生最小池化）通过组合单元格并将输入单元格的最大值分配给输出单元格来减少张量（我们看到了这一点）。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">my_tensor = torch.rand(<span class="number">1</span>, <span class="number">6</span>, <span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(my_tensor)</span><br><span class="line"></span><br><span class="line">maxpool_layer = torch.nn.MaxPool2d(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(maxpool_layer(my_tensor))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tensor([[[0.5036, 0.6285, 0.3460, 0.7817, 0.9876, 0.0074],</span><br><span class="line">         [0.3969, 0.7950, 0.1449, 0.4110, 0.8216, 0.6235],</span><br><span class="line">         [0.2347, 0.3741, 0.4997, 0.9737, 0.1741, 0.4616],</span><br><span class="line">         [0.3962, 0.9970, 0.8778, 0.4292, 0.2772, 0.9926],</span><br><span class="line">         [0.4406, 0.3624, 0.8960, 0.6484, 0.5544, 0.9501],</span><br><span class="line">         [0.2489, 0.8971, 0.7499, 0.1803, 0.9571, 0.6733]]])</span><br><span class="line">tensor([[[0.7950, 0.9876],</span><br><span class="line">         [0.9970, 0.9926]]])</span><br></pre></td></tr></table></figure><p>如果仔细观察上面的值，您会发现 maxpooled 输出中的每个值都是 6x6 输入的每个象限的最大值。</p><p>归一化层将一层的输出重新居中并归一化，然后再将其输入到另一层。居中和缩放中间张量有许多有益的效果，例如让您使用更高的学习率而不会爆炸&#x2F;消失梯度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">my_tensor = torch.rand(<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>) * <span class="number">20</span> + <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(my_tensor)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(my_tensor.mean())</span><br><span class="line"></span><br><span class="line">norm_layer = torch.nn.BatchNorm1d(<span class="number">4</span>)</span><br><span class="line">normed_tensor = norm_layer(my_tensor)</span><br><span class="line"><span class="built_in">print</span>(normed_tensor)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(normed_tensor.mean())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">tensor([[[ <span class="number">7.7375</span>, <span class="number">23.5649</span>,  <span class="number">6.8452</span>, <span class="number">16.3517</span>],</span><br><span class="line">         [<span class="number">19.5792</span>, <span class="number">20.3254</span>,  <span class="number">6.1930</span>, <span class="number">23.7576</span>],</span><br><span class="line">         [<span class="number">23.7554</span>, <span class="number">20.8565</span>, <span class="number">18.4241</span>,  <span class="number">8.5742</span>],</span><br><span class="line">         [<span class="number">22.5100</span>, <span class="number">15.6154</span>, <span class="number">13.5698</span>, <span class="number">11.8411</span>]]])</span><br><span class="line">tensor(<span class="number">16.2188</span>)</span><br><span class="line">tensor([[[-<span class="number">0.8614</span>,  <span class="number">1.4543</span>, -<span class="number">0.9919</span>,  <span class="number">0.3990</span>],</span><br><span class="line">         [ <span class="number">0.3160</span>,  <span class="number">0.4274</span>, -<span class="number">1.6834</span>,  <span class="number">0.9400</span>],</span><br><span class="line">         [ <span class="number">1.0256</span>,  <span class="number">0.5176</span>,  <span class="number">0.0914</span>, -<span class="number">1.6346</span>],</span><br><span class="line">         [ <span class="number">1.6352</span>, -<span class="number">0.0663</span>, -<span class="number">0.5711</span>, -<span class="number">0.9978</span>]]],</span><br><span class="line">       grad_fn=&lt;NativeBatchNormBackward0&gt;)</span><br><span class="line">tensor(<span class="number">3.3528e-08</span>, grad_fn=&lt;MeanBackward0&gt;)</span><br></pre></td></tr></table></figure><p>运行上面的单元，我们向输入张量添加了一个大的缩放因子和偏移量；你应该看到输入张量的 <code>mean()</code> 位于 15 附近的某个地方。在通过归一化层运行它之后，你可以看到值更小，并且分组在零附近 - 事实上，平均值应该非常大小（&gt; 1e-8）。</p><p>这是有益的，因为许多激活函数（如下所述）的最强梯度接近 0，但有时会遭受输入梯度消失或爆炸的影响，从而使它们远离零。将数据保持在最陡梯度区域的中心往往意味着更快、更好的学习和更高的可行学习率。</p><p>Dropout 层是一种鼓励模型中稀疏表示的工具，也就是说，推动模型用更少的数据进行推理。</p><p>Dropout 层通过在训练期间随机设置部分输入张量来工作 - Dropout 层始终关闭以进行推理。这迫使模型针对这个屏蔽或缩减的数据集进行学习。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">my_tensor = torch.rand(<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">dropout = torch.nn.Dropout(p=<span class="number">0.4</span>)</span><br><span class="line"><span class="built_in">print</span>(dropout(my_tensor))</span><br><span class="line"><span class="built_in">print</span>(dropout(my_tensor))</span><br></pre></td></tr></table></figure><p>在上面，您可以看到 dropout 对样本张量的影响。您可以使用可选的 <code>p</code> 参数来设置单个权重退出的概率；如果不这样做，则默认为 0.5。</p><h3 id="Activation-Functions"><a href="#Activation-Functions" class="headerlink" title="Activation Functions"></a>Activation Functions</h3><p>激活函数使深度学习成为可能。神经网络实际上是一个具有许多参数的程序，用于模拟数学函数。如果我们所做的只是重复使用层权重的多个张量，我们只能模拟线性函数；此外，拥有许多层是没有意义的，因为整个网络将减少到单个矩阵乘法。在层之间插入非线性激活函数使得深度学习模型能够模拟任何函数，而不仅仅是线性函数。</p><p><code>torch.nn.Module</code> 具有封装所有主要激活函数的对象，包括 ReLU 及其许多变体、Tanh、Hardtanh、sigmoid 等。它还包括其他函数，例如 Softmax，它们在模型的输出阶段最有用。</p><h3 id="Loss-Functions"><a href="#Loss-Functions" class="headerlink" title="Loss Functions"></a>Loss Functions</h3><p>损失函数告诉我们模型的预测与正确答案的差距有多大。 PyTorch 包含多种损失函数，包括常见的 MSE（均方误差 &#x3D; L2 范数）、交叉熵损失和负似然损失（对分类器有用）等。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10-pytorch-the fundaments of autograd</title>
      <link href="/2023/11/14/10-pytorch-the-fundaments-of-autograd/"/>
      <url>/2023/11/14/10-pytorch-the-fundaments-of-autograd/</url>
      
        <content type="html"><![CDATA[<h1 id="THE-FUNDAMENTALS-OF-AUTOGRAD"><a href="#THE-FUNDAMENTALS-OF-AUTOGRAD" class="headerlink" title="THE FUNDAMENTALS OF AUTOGRAD"></a>THE FUNDAMENTALS OF AUTOGRAD</h1><p>PyTorch 的 Autograd 功能是 PyTorch 灵活快速地构建机器学习项目的一部分。它允许在复杂的计算中快速、轻松地计算多个偏导数（也称为梯度）。此操作是基于反向传播的神经网络学习的核心。</p><p>autograd 的强大之处在于它在运行时动态跟踪您的计算，这意味着如果您的模型有决策分支或循环，其长度直到运行时才知道，计算仍然会被正确跟踪，并且您将得到正确的结果梯度来驱动学习。再加上您的模型是用 Python 构建的，与依赖于更严格结构的模型的静态分析来计算梯度的框架相比，它提供了更大的灵活性。</p><h2 id="What-Do-We-Need-Autograd-For"><a href="#What-Do-We-Need-Autograd-For" class="headerlink" title="What Do We Need Autograd For?"></a>What Do We Need Autograd For?</h2><p>机器学习模型是一个具有输入和输出的函数。在本次讨论中，我们将输入视为一个维度向量 $$ \vec{x} $$，其中包含元素$$x_i$$。然后我们可以将模型 M 表示为输入的向量值函数：$$ \vec{y} &#x3D; \vec{M}(\vec{x}) $$。 （我们将 M 的输出值视为向量，因为一般来说，模型可能有任意数量的输出。）</p><p>由于我们主要在训练的背景下讨论 autograd，因此我们感兴趣的输出将是模型的损失。损失函数 $$  L(\vec y ) &#x3D; L( \vec M ( \vec x )) $$ 是模型输出的单值标量函数。该函数表示我们的模型的预测与特定输入的理想输出的差距有多大。注意：在此之后，我们通常会在上下文应该清晰的地方省略矢量符号 - 例如，  $$ y $$而不是$$\vec y$$ 。</p><p>在训练模型时，我们希望最小化损失。在完美模型的理想情况下，这意味着调整其学习权重 - 即函数的可调整参数 - 使得所有输入的损失为零。在现实世界中，这意味着一个不断调整学习权重的迭代过程，直到我们看到对于各种输入我们得到了可以容忍的损失。</p><p>我们如何决定轻推权重的距离和方向？我们希望最小化损失，这意味着使其相对于输入的一阶导数等于 0： $$\frac{\partial L }{\partial x} &#x3D; 0$$</p><p>但请记住，损失不是直接从输入导出的，而是模型输出的函数（直接是输入的函数）， $$\frac{∂L}{∂x} &#x3D; \frac{∂L(y))}{∂x}$$ 。根据微积分的链式法则，我们有 $$\frac{∂L(\vec y)}{∂x} &#x3D; \frac{∂L}{∂y}\frac{∂y}{∂x}&#x3D;\frac{∂L}{∂y}\frac{∂M(x)}{∂x}$$ </p><p> $$\frac{∂M(x)}{∂x}$$是事情变得复杂的地方。如果我们再次使用链式法则扩展表达式，模型输出相对于输入的偏导数将涉及模型中每个相乘的学习权重、每个激活函数以及每个其他数学变换的许多局部偏导数。每个此类偏导数的完整表达式是通过计算图的每个可能路径的局部梯度的乘积之和，该计算图以我们试图测量其梯度的变量结束。</p><p>特别是，我们对学习权重的梯度感兴趣——它们告诉我们改变每个权重的方向以使损失函数更接近于零。</p><p>由于此类局部导数（每个导数对应于模型计算图中的一条单独路径）的数量往往会随着神经网络的深度呈指数级增长，因此计算它们的复杂性也会随之增加。这就是 autograd 发挥作用的地方：它跟踪每次计算的历史记录。 PyTorch 模型中的每个计算张量都带有其输入张量和用于创建它的函数的历史记录。结合 PyTorch 函数旨在作用于张量的事实，每个函数都有一个用于计算自己的导数的内置实现，这大大加快了学习所需的局部导数的计算速度。</p><h2 id="A-Simple-Example"><a href="#A-Simple-Example" class="headerlink" title="A Simple Example"></a>A Simple Example</h2><p>这是很多理论 - 但在实践中使用 autograd 是什么样子呢？</p><p>让我们从一个简单的例子开始。首先，我们将进行一些导入以绘制结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># %matplotlib inline</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.ticker <span class="keyword">as</span> ticker</span><br><span class="line"><span class="keyword">import</span> math</span><br></pre></td></tr></table></figure><p>接下来，我们将创建一个在间隔 [0,2*PI]上充满均匀间隔值的输入张量，并指定 <code>requires_grad=True</code> 。 （与大多数创建张量的函数一样， <code>torch.linspace()</code> 接受可选的 <code>requires_grad</code> 选项。）设置此标志意味着在接下来的每次计算中，autograd将在该计算的输出张量。</p><p>接下来，我们将执行计算，并根据输入绘制其输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b = torch.sin(a)</span><br><span class="line">plt.plot(a.detach(), b.detach())</span><br></pre></td></tr></table></figure><p>让我们仔细看看张量 <code>b</code> 。当我们打印它时，我们会看到一个指示符，表明它正在跟踪其计算历史记录：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([ 0.0000e+00,  2.5882e-01,  5.0000e-01,  7.0711e-01,  8.6603e-01,</span><br><span class="line">         9.6593e-01,  1.0000e+00,  9.6593e-01,  8.6603e-01,  7.0711e-01,</span><br><span class="line">         5.0000e-01,  2.5882e-01, -8.7423e-08, -2.5882e-01, -5.0000e-01,</span><br><span class="line">        -7.0711e-01, -8.6603e-01, -9.6593e-01, -1.0000e+00, -9.6593e-01,</span><br><span class="line">        -8.6603e-01, -7.0711e-01, -5.0000e-01, -2.5882e-01,  1.7485e-07],</span><br><span class="line">       grad_fn=&lt;SinBackward0&gt;)</span><br></pre></td></tr></table></figure><p>这个 <code>grad_fn</code> 给了我们一个提示，当我们执行反向传播步骤并计算梯度时，我们需要计算所有该张量输入的 $$ sin(x)$$的导数。</p><p>让我们执行更多计算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c = <span class="number">2</span> * b</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"></span><br><span class="line">d = c + <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tensor([ 0.0000e+00,  5.1764e-01,  1.0000e+00,  1.4142e+00,  1.7321e+00,</span><br><span class="line">         1.9319e+00,  2.0000e+00,  1.9319e+00,  1.7321e+00,  1.4142e+00,</span><br><span class="line">         1.0000e+00,  5.1764e-01, -1.7485e-07, -5.1764e-01, -1.0000e+00,</span><br><span class="line">        -1.4142e+00, -1.7321e+00, -1.9319e+00, -2.0000e+00, -1.9319e+00,</span><br><span class="line">        -1.7321e+00, -1.4142e+00, -1.0000e+00, -5.1764e-01,  3.4969e-07],</span><br><span class="line">       grad_fn=&lt;MulBackward0&gt;)</span><br><span class="line">tensor([ 1.0000e+00,  1.5176e+00,  2.0000e+00,  2.4142e+00,  2.7321e+00,</span><br><span class="line">         2.9319e+00,  3.0000e+00,  2.9319e+00,  2.7321e+00,  2.4142e+00,</span><br><span class="line">         2.0000e+00,  1.5176e+00,  1.0000e+00,  4.8236e-01, -3.5763e-07,</span><br><span class="line">        -4.1421e-01, -7.3205e-01, -9.3185e-01, -1.0000e+00, -9.3185e-01,</span><br><span class="line">        -7.3205e-01, -4.1421e-01,  4.7684e-07,  4.8236e-01,  1.0000e+00],</span><br><span class="line">       grad_fn=&lt;AddBackward0&gt;)</span><br></pre></td></tr></table></figure><p>最后，让我们计算一个单元素输出。当您在不带参数的张量上调用 <code>.backward()</code> 时，它期望调用张量仅包含单个元素，就像计算损失函数时的情况一样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">out = d.<span class="built_in">sum</span>()</span><br><span class="line"><span class="built_in">print</span>(out)</span><br></pre></td></tr></table></figure><p>tensor(25., grad_fn&#x3D;<SumBackward0>)</p><p>使用张量存储的每个 <code>grad_fn</code> 都允许您使用其 <code>next_functions</code> 属性将计算一直返回到其输入。我们可以在下面看到，在 <code>d</code> 上深入研究这个属性向我们展示了所有先前张量的梯度函数。请注意， <code>a.grad_fn</code> 报告为 <code>None</code> ，表明这是函数的输入，没有自己的历史记录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;d:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(d.grad_fn)</span><br><span class="line"><span class="built_in">print</span>(d.grad_fn.next_functions)</span><br><span class="line"><span class="built_in">print</span>(d.grad_fn.next_functions[<span class="number">0</span>][<span class="number">0</span>].next_functions)</span><br><span class="line"><span class="built_in">print</span>(d.grad_fn.next_functions[<span class="number">0</span>][<span class="number">0</span>].next_functions[<span class="number">0</span>][<span class="number">0</span>].next_functions)</span><br><span class="line"><span class="built_in">print</span>(d.grad_fn.next_functions[<span class="number">0</span>][<span class="number">0</span>].next_functions[<span class="number">0</span>][<span class="number">0</span>].next_functions[<span class="number">0</span>][<span class="number">0</span>].next_functions)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nc:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(c.grad_fn)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nb:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b.grad_fn)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\na:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a.grad_fn)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">d:</span><br><span class="line">&lt;AddBackward0 object at 0x7f334cdf7190&gt;</span><br><span class="line">((&lt;MulBackward0 object at 0x7f334cdf5b40&gt;, 0), (None, 0))</span><br><span class="line">((&lt;SinBackward0 object at 0x7f334cdf5b40&gt;, 0), (None, 0))</span><br><span class="line">((&lt;AccumulateGrad object at 0x7f334cdf7190&gt;, 0),)</span><br><span class="line">()</span><br><span class="line"></span><br><span class="line">c:</span><br><span class="line">&lt;MulBackward0 object at 0x7f334cdf5b40&gt;</span><br><span class="line"></span><br><span class="line">b:</span><br><span class="line">&lt;SinBackward0 object at 0x7f334cdf5b40&gt;</span><br><span class="line"></span><br><span class="line">a:</span><br><span class="line">None</span><br></pre></td></tr></table></figure><p>有了所有这些机制，我们如何推出衍生品呢？您在输出上调用 <code>backward()</code> 方法，并检查输入的 <code>grad</code> 属性以检查渐变：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">out.backward()</span><br><span class="line"><span class="built_in">print</span>(a.grad)</span><br><span class="line">plt.plot(a.detach(), a.grad.detach())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tensor([ <span class="number">2.0000e+00</span>,  <span class="number">1.9319e+00</span>,  <span class="number">1.7321e+00</span>,  <span class="number">1.4142e+00</span>,  <span class="number">1.0000e+00</span>,</span><br><span class="line">         <span class="number">5.1764e-01</span>, -<span class="number">8.7423e-08</span>, -<span class="number">5.1764e-01</span>, -<span class="number">1.0000e+00</span>, -<span class="number">1.4142e+00</span>,</span><br><span class="line">        -<span class="number">1.7321e+00</span>, -<span class="number">1.9319e+00</span>, -<span class="number">2.0000e+00</span>, -<span class="number">1.9319e+00</span>, -<span class="number">1.7321e+00</span>,</span><br><span class="line">        -<span class="number">1.4142e+00</span>, -<span class="number">1.0000e+00</span>, -<span class="number">5.1764e-01</span>,  <span class="number">2.3850e-08</span>,  <span class="number">5.1764e-01</span>,</span><br><span class="line">         <span class="number">1.0000e+00</span>,  <span class="number">1.4142e+00</span>,  <span class="number">1.7321e+00</span>,  <span class="number">1.9319e+00</span>,  <span class="number">2.0000e+00</span>])</span><br><span class="line"></span><br><span class="line">[&lt;matplotlib.lines.Line2D <span class="built_in">object</span> at <span class="number">0x7f334cdd0460</span>&gt;]</span><br></pre></td></tr></table></figure><p>回想一下我们达到这里所采取的计算步骤：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = torch.linspace(<span class="number">0.</span>, <span class="number">2.</span> * math.pi, steps=<span class="number">25</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">b = torch.sin(a)</span><br><span class="line">c = <span class="number">2</span> * b</span><br><span class="line">d = c + <span class="number">1</span></span><br><span class="line">out = d.<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><p>添加一个常数，就像我们计算 <code>d</code> 一样，不会改变导数。剩下 $$c&#x3D;2<em>b&#x3D;2</em>sin(a)$$，它的导数应该是 $$2*cos(a)$$ 。看看上面的图表，这就是我们所看到的。</p><p>请注意，只有计算的叶节点才会计算其梯度。例如，如果您尝试 <code>print(c.grad)</code> 您会得到 <code>None</code> 。在这个简单的示例中，只有输入是叶节点，因此只有它计算了梯度。</p><h2 id="Autograd-in-Training"><a href="#Autograd-in-Training" class="headerlink" title="Autograd in Training"></a>Autograd in Training</h2><p>我们已经简要了解了 autograd 的工作原理，但是当它用于其预期目的时，它会是什么样子呢？让我们定义一个小模型并检查它在单个训练批次后如何变化。首先，定义一些常量、我们的模型以及输入和输出的一些替代：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">BATCH_SIZE = <span class="number">16</span></span><br><span class="line">DIM_IN = <span class="number">1000</span></span><br><span class="line">HIDDEN_SIZE = <span class="number">100</span></span><br><span class="line">DIM_OUT = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TinyModel</span>(torch.nn.Module):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(TinyModel, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.layer1 = torch.nn.Linear(<span class="number">1000</span>, <span class="number">100</span>)</span><br><span class="line">        self.relu = torch.nn.ReLU()</span><br><span class="line">        self.layer2 = torch.nn.Linear(<span class="number">100</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.layer1(x)</span><br><span class="line">        x = self.relu(x)</span><br><span class="line">        x = self.layer2(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">some_input = torch.randn(BATCH_SIZE, DIM_IN, requires_grad=<span class="literal">False</span>)</span><br><span class="line">ideal_output = torch.randn(BATCH_SIZE, DIM_OUT, requires_grad=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">model = TinyModel()</span><br></pre></td></tr></table></figure><p>您可能会注意到的一件事是，我们从未为模型的层指定 <code>requires_grad=True</code> 。在 <code>torch.nn.Module</code> 的子类中，假设我们想要跟踪层权重的梯度以进行学习。</p><p>如果我们查看模型的各层，我们可以检查权重的值，并验证尚未计算任何梯度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(model.layer2.weight[<span class="number">0</span>][<span class="number">0</span>:<span class="number">10</span>]) <span class="comment"># just a small slice</span></span><br><span class="line"><span class="built_in">print</span>(model.layer2.weight.grad)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tensor([ 0.0920,  0.0916,  0.0121,  0.0083, -0.0055,  0.0367,  0.0221, -0.0276,</span><br><span class="line">        -0.0086,  0.0157], grad_fn=&lt;SliceBackward0&gt;)</span><br><span class="line">None</span><br></pre></td></tr></table></figure><p>让我们看看当我们运行一批训练时，情况会发生什么变化。对于损失函数，我们将仅使用 <code>prediction</code> 和 <code>ideal_output</code> 之间的欧几里德距离的平方，并且我们将使用基本的随机梯度下降优化器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">optimizer = torch.optim.SGD(model.parameters(), lr=<span class="number">0.001</span>)</span><br><span class="line"></span><br><span class="line">prediction = model(some_input)</span><br><span class="line"></span><br><span class="line">loss = (ideal_output - prediction).<span class="built_in">pow</span>(<span class="number">2</span>).<span class="built_in">sum</span>()</span><br><span class="line"><span class="built_in">print</span>(loss)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensor(211.2634, grad_fn=&lt;SumBackward0&gt;)</span><br></pre></td></tr></table></figure><p>现在，让我们调用 <code>loss.backward()</code> 看看会发生什么：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">loss.backward()</span><br><span class="line"><span class="built_in">print</span>(model.layer2.weight[<span class="number">0</span>][<span class="number">0</span>:<span class="number">10</span>])</span><br><span class="line"><span class="built_in">print</span>(model.layer2.weight.grad[<span class="number">0</span>][<span class="number">0</span>:<span class="number">10</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor([ 0.0920,  0.0916,  0.0121,  0.0083, -0.0055,  0.0367,  0.0221, -0.0276,</span><br><span class="line">        -0.0086,  0.0157], grad_fn=&lt;SliceBackward0&gt;)</span><br><span class="line">tensor([12.8997,  2.9572,  2.3021,  1.8887,  5.0710,  7.3192,  3.5169,  2.4319,</span><br><span class="line">         0.1732, -5.3835])</span><br></pre></td></tr></table></figure><p>我们可以看到每个学习权重的梯度都已计算出来，但权重保持不变，因为我们还没有运行优化器。优化器负责根据计算的梯度更新模型权重。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">optimizer.step()</span><br><span class="line"><span class="built_in">print</span>(model.layer2.weight[<span class="number">0</span>][<span class="number">0</span>:<span class="number">10</span>])</span><br><span class="line"><span class="built_in">print</span>(model.layer2.weight.grad[<span class="number">0</span>][<span class="number">0</span>:<span class="number">10</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor([ 0.0791,  0.0886,  0.0098,  0.0064, -0.0106,  0.0293,  0.0186, -0.0300,</span><br><span class="line">        -0.0088,  0.0211], grad_fn=&lt;SliceBackward0&gt;)</span><br><span class="line">tensor([12.8997,  2.9572,  2.3021,  1.8887,  5.0710,  7.3192,  3.5169,  2.4319,</span><br><span class="line">         0.1732, -5.3835])</span><br></pre></td></tr></table></figure><p>您应该看到 <code>layer2</code> 的权重已更改。</p><p>该过程中一件重要的事情是：调用 <code>optimizer.step()</code> 后，您需要调用 <code>optimizer.zero_grad()</code> ，否则每次运行 <code>loss.backward()</code> 时，学习权重的梯度都会积累：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(model.layer2.weight.grad[<span class="number">0</span>][<span class="number">0</span>:<span class="number">10</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">5</span>):</span><br><span class="line">    prediction = model(some_input)</span><br><span class="line">    loss = (ideal_output - prediction).<span class="built_in">pow</span>(<span class="number">2</span>).<span class="built_in">sum</span>()</span><br><span class="line">    loss.backward()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(model.layer2.weight.grad[<span class="number">0</span>][<span class="number">0</span>:<span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">optimizer.zero_grad(set_to_none=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(model.layer2.weight.grad[<span class="number">0</span>][<span class="number">0</span>:<span class="number">10</span>])</span><br></pre></td></tr></table></figure><p>运行上面的单元格后，您应该看到多次运行 <code>loss.backward()</code> 后，大多数梯度的幅度都会大得多。在运行下一个训练批次之前未能将梯度归零将导致梯度以这种方式爆炸，从而导致不正确且不可预测的学习结果。</p><h2 id="Turning-Autograd-Off-and-On"><a href="#Turning-Autograd-Off-and-On" class="headerlink" title="Turning Autograd Off and On"></a>Turning Autograd Off and On</h2><p>在某些情况下，您需要对是否启用自动分级进行细粒度控制。根据具体情况，有多种方法可以做到这一点。</p><p>最简单的方法是直接更改张量上的 <code>requires_grad</code> 标志：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = torch.ones(<span class="number">2</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">b1 = <span class="number">2</span> * a</span><br><span class="line"><span class="built_in">print</span>(b1)</span><br><span class="line"></span><br><span class="line">a.requires_grad = <span class="literal">False</span></span><br><span class="line">b2 = <span class="number">2</span> * a</span><br><span class="line"><span class="built_in">print</span>(b2)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([[1., 1., 1.],</span><br><span class="line">        [1., 1., 1.]], requires_grad=True)</span><br><span class="line">tensor([[2., 2., 2.],</span><br><span class="line">        [2., 2., 2.]], grad_fn=&lt;MulBackward0&gt;)</span><br><span class="line">tensor([[2., 2., 2.],</span><br><span class="line">        [2., 2., 2.]])</span><br></pre></td></tr></table></figure><p>在上面的单元格中，我们看到 <code>b1</code> 有一个 <code>grad_fn</code> （即跟踪的计算历史），这正是我们所期望的，因为它是从张量 <code>a</code> ，已打开 autograd。当我们使用 <code>a.requires_grad = False</code> 显式关闭 autograd 时，将不再跟踪计算历史记录，正如我们在计算 <code>b2</code> 时看到的那样。</p><p>如果您只需要暂时关闭 autograd，更好的方法是使用 <code>torch.no_grad()</code> ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = torch.ones(<span class="number">2</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>) * <span class="number">2</span></span><br><span class="line">b = torch.ones(<span class="number">2</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>) * <span class="number">3</span></span><br><span class="line"></span><br><span class="line">c1 = a + b</span><br><span class="line"><span class="built_in">print</span>(c1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    c2 = a + b</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(c2)</span><br><span class="line"></span><br><span class="line">c3 = a * b</span><br><span class="line"><span class="built_in">print</span>(c3)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([[5., 5., 5.],</span><br><span class="line">        [5., 5., 5.]], grad_fn=&lt;AddBackward0&gt;)</span><br><span class="line">tensor([[5., 5., 5.],</span><br><span class="line">        [5., 5., 5.]])</span><br><span class="line">tensor([[6., 6., 6.],</span><br><span class="line">        [6., 6., 6.]], grad_fn=&lt;MulBackward0&gt;)</span><br></pre></td></tr></table></figure><p><code>torch.no_grad()</code> 也可以用作函数或方法装饰器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_tensors1</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line"><span class="meta">@torch.no_grad()</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_tensors2</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = torch.ones(<span class="number">2</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>) * <span class="number">2</span></span><br><span class="line">b = torch.ones(<span class="number">2</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>) * <span class="number">3</span></span><br><span class="line"></span><br><span class="line">c1 = add_tensors1(a, b)</span><br><span class="line"><span class="built_in">print</span>(c1)</span><br><span class="line"></span><br><span class="line">c2 = add_tensors2(a, b)</span><br><span class="line"><span class="built_in">print</span>(c2)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor([[5., 5., 5.],</span><br><span class="line">        [5., 5., 5.]], grad_fn=&lt;AddBackward0&gt;)</span><br><span class="line">tensor([[5., 5., 5.],</span><br><span class="line">        [5., 5., 5.]])</span><br></pre></td></tr></table></figure><p>有一个相应的上下文管理器 <code>torch.enable_grad()</code> ，用于在尚未打开 autograd 时打开它。它也可以用作装饰器。</p><p>最后，您可能有一个需要梯度跟踪的张量，但您想要一个不需要梯度跟踪的副本。为此，我们有 <code>Tensor</code> 对象的 <code>detach()</code> 方法 - 它创建与计算历史分离的张量的副本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = torch.rand(<span class="number">5</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">y = x.detach()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tensor([0.0670, 0.3890, 0.7264, 0.3559, 0.6584], requires_grad=True)</span><br><span class="line">tensor([0.0670, 0.3890, 0.7264, 0.3559, 0.6584])</span><br></pre></td></tr></table></figure><p>当我们想要绘制一些张量的图表时，我们就这样做了。这是因为 <code>matplotlib</code> 期望 NumPy 数组作为输入，并且对于 require_grad&#x3D;True 的张量，不会启用从 PyTorch 张量到 NumPy 数组的隐式转换。制作一份独立的副本可以让我们继续前进。</p><h3 id="Autograd-and-In-place-Operations"><a href="#Autograd-and-In-place-Operations" class="headerlink" title="Autograd and In-place Operations"></a>Autograd and In-place Operations</h3><p>到目前为止，在本笔记本的每个示例中，我们都使用变量来捕获计算的中间值。 Autograd 需要这些中间值来执行梯度计算。因此，在使用 autograd 时必须小心使用就地操作。这样做可能会破坏在 <code>backward()</code> 调用中计算导数所需的信息。如果您尝试对需要自动分级的叶变量进行就地操作，PyTorch 甚至会阻止您，如下所示。</p><blockquote><p>以下代码单元引发运行时错误。这是预料之中的。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = torch.linspace(<span class="number">0.</span>, <span class="number">2.</span> * math.pi, steps=<span class="number">25</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">torch.sin_(a)</span><br></pre></td></tr></table></figure><h2 id="Autograd-Profiler"><a href="#Autograd-Profiler" class="headerlink" title="Autograd Profiler"></a>Autograd Profiler</h2><p>Autograd 详细跟踪计算的每一步。这样的计算历史记录与计时信息相结合，将成为一个方便的分析器 - 并且 autograd 具有该功能。下面是一个快速示例用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">device = torch.device(<span class="string">&#x27;cpu&#x27;</span>)</span><br><span class="line">run_on_gpu = <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    device = torch.device(<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line">    run_on_gpu = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">x = torch.randn(<span class="number">2</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">y = torch.rand(<span class="number">2</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">z = torch.ones(<span class="number">2</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.autograd.profiler.profile(use_cuda=run_on_gpu) <span class="keyword">as</span> prf:</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">        z = (z / x) * y</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(prf.key_averages().table(sort_by=<span class="string">&#x27;self_cpu_time_total&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------</span><br><span class="line">                     Name    Self CPU %      Self CPU   CPU total %     CPU total  CPU time avg     Self CUDA   Self CUDA %    CUDA total  CUDA time avg    # of Calls</span><br><span class="line">-------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------</span><br><span class="line">                aten::div        50.96%       5.808ms        50.96%       5.808ms       5.808us      16.107ms        50.44%      16.107ms      16.107us          1000</span><br><span class="line">                aten::mul        48.96%       5.581ms        48.96%       5.581ms       5.581us      15.827ms        49.56%      15.827ms      15.827us          1000</span><br><span class="line">    cudaDeviceSynchronize         0.08%       9.000us         0.08%       9.000us       9.000us       0.000us         0.00%       0.000us       0.000us             1</span><br><span class="line">-------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------</span><br><span class="line">Self CPU time total: 11.398ms</span><br><span class="line">Self CUDA time total: 31.934ms</span><br></pre></td></tr></table></figure><p>分析器还可以标记各个代码子块，按输入张量形状分解数据，并将数据导出为 Chrome 跟踪工具文件。有关 API 的完整详细信息，请参阅文档。</p><h2 id="Advanced-Topic-More-Autograd-Detail-and-the-High-Level-API"><a href="#Advanced-Topic-More-Autograd-Detail-and-the-High-Level-API" class="headerlink" title="Advanced Topic: More Autograd Detail and the High-Level API"></a>Advanced Topic: More Autograd Detail and the High-Level API</h2><p>如果您有一个具有 n 维输入和 m 维输出的函数 $$\vec{y}&#x3D;f(\vec{x})$$，则完整梯度是每个输出相对于每个输入的导数的矩阵，称为雅可比行列式：<br>$$<br>J &#x3D; \begin{pmatrix}<br> \frac{∂y1}{∂x_1} &amp; … &amp; \frac{∂y_1}{∂x_n} \<br> … &amp; … &amp; …\<br> \frac{∂y_m}{∂x_n} &amp; …  &amp; \frac{∂y_m}{∂x_n}<br>\end{pmatrix}<br>$$</p><p>如果您有第二个函数$$l&#x3D;g(\vec{y})$$ ，它接受 m 维输入（即与上面的输出相同的维度），并返回标量输出，您可以表达其相对于 $$\vec{y}$$作为列向量， $$v&#x3D;(\frac{∂l}{∂y1} …  \frac{∂l}{∂y_m})$$ - 这实际上只是一个单列雅可比行列式。</p><p>更具体地说，将第一个函数想象为 PyTorch 模型（可能有多个输入和多个输出），第二个函数作为损失函数（模型的输出作为输入，损失值作为标量输出）。</p><p>如果我们将第一个函数的雅可比行列式乘以第二个函数的梯度，并应用链式法则，我们得到：</p><p>注意：您还可以使用等效操作 $$v^T * J$$，并返回行向量。</p><p>得到的列向量是第二个函数相对于第一个函数的输入的梯度，或者在我们的模型和损失函数的情况下，是损失相对于模型输入的梯度。</p><p>“torch.autograd”是计算这些产品的引擎。这就是我们在向后传递过程中累积学习权重梯度的方式。</p><p>因此， <code>backward()</code> 调用还可以采用可选的向量输入。该向量表示张量上的一组梯度，将其乘以其之前的自动梯度追踪张量的雅可比行列式。让我们尝试一个带有小向量的具体示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = torch.randn(<span class="number">3</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">y = x * <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> y.data.norm() &lt; <span class="number">1000</span>:</span><br><span class="line">    y = y * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensor([  299.4868,   425.4009, -1082.9885], grad_fn=&lt;MulBackward0&gt;)</span><br></pre></td></tr></table></figure><p>如果我们现在尝试调用 <code>y.backward()</code> ，我们会收到运行时错误和一条消息，<strong>表明只能为标量输出隐式计算梯度</strong>。对于多维输出，autograd 希望我们为这三个输出提供梯度，并将其乘以雅可比行列式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v = torch.tensor([<span class="number">0.1</span>, <span class="number">1.0</span>, <span class="number">0.0001</span>], dtype=torch.<span class="built_in">float</span>) <span class="comment"># stand-in for gradients</span></span><br><span class="line">y.backward(v)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x.grad)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensor([1.0240e+02, 1.0240e+03, 1.0240e-01])</span><br></pre></td></tr></table></figure><p>（请注意，输出梯度都与 2 的幂相关 - 这是我们从重复的倍增操作中所期望的。）</p><h3 id="The-High-Level-API"><a href="#The-High-Level-API" class="headerlink" title="The High-Level API"></a>The High-Level API</h3><p>autograd 上有一个 API，可让您直接访问重要的微分矩阵和向量运算。特别是，它允许您计算特定输入的特定函数的雅可比矩阵和海塞矩阵。 （Hessian 矩阵类似于雅可比矩阵，但表示所有偏二阶导数。）它还提供了使用这些矩阵求向量积的方法。</p><p>让我们采用一个简单函数的雅可比行列式，针对 2 个单元素输入进行计算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">exp_adder</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * x.exp() + <span class="number">3</span> * y</span><br><span class="line"></span><br><span class="line">inputs = (torch.rand(<span class="number">1</span>), torch.rand(<span class="number">1</span>)) <span class="comment"># arguments for the function</span></span><br><span class="line"><span class="built_in">print</span>(inputs)</span><br><span class="line">torch.autograd.functional.jacobian(exp_adder, inputs)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(tensor([0.7212]), tensor([0.2079]))</span><br><span class="line"></span><br><span class="line">(tensor([[4.1137]]), tensor([[3.]]))</span><br></pre></td></tr></table></figure><p>如果仔细观察，第一个输出应等于 $$2e^x$$ （因为 $$e^x$$的导数是 $$e^x$$ ），第二个值应为 3。</p><p>当然，您可以使用高阶张量来做到这一点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inputs = (torch.rand(<span class="number">3</span>), torch.rand(<span class="number">3</span>)) <span class="comment"># arguments for the function</span></span><br><span class="line"><span class="built_in">print</span>(inputs)</span><br><span class="line">torch.autograd.functional.jacobian(exp_adder, inputs)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(tensor([0.2080, 0.2604, 0.4415]), tensor([0.5220, 0.9867, 0.4288]))</span><br><span class="line"></span><br><span class="line">(tensor([[2.4623, 0.0000, 0.0000],</span><br><span class="line">        [0.0000, 2.5950, 0.0000],</span><br><span class="line">        [0.0000, 0.0000, 3.1102]]), tensor([[3., 0., 0.],</span><br><span class="line">        [0., 3., 0.],</span><br><span class="line">        [0., 0., 3.]]))</span><br></pre></td></tr></table></figure><p><code>torch.autograd.functional.hessian()</code> 方法的工作原理相同（假设您的函数是两次可微的），但返回所有二阶导数的矩阵。</p><p>如果您提供向量，还有一个函数可以直接计算向量雅可比积：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">do_some_doubling</span>(<span class="params">x</span>):</span><br><span class="line">    y = x * <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> y.data.norm() &lt; <span class="number">1000</span>:</span><br><span class="line">        y = y * <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> y</span><br><span class="line"></span><br><span class="line">inputs = torch.randn(<span class="number">3</span>)</span><br><span class="line">my_gradients = torch.tensor([<span class="number">0.1</span>, <span class="number">1.0</span>, <span class="number">0.0001</span>])</span><br><span class="line">torch.autograd.functional.vjp(do_some_doubling, inputs, v=my_gradients)</span><br></pre></td></tr></table></figure><p><code>torch.autograd.functional.jvp()</code> 方法执行与 <code>vjp()</code> 相同的矩阵乘法，但操作数相反。 <code>vhp()</code> 和 <code>hvp()</code> 方法对向量 Hessian 乘积执行相同的操作。</p><p>有关更多信息，包括函数式 API 文档中的性能说明</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>09-pytorch-introduction to pytorch tensors</title>
      <link href="/2023/11/13/09-pytorch-introduction-to-pytorch-tensors/"/>
      <url>/2023/11/13/09-pytorch-introduction-to-pytorch-tensors/</url>
      
        <content type="html"><![CDATA[<h1 id="INTRODUCTION-TO-PYTORCH-TENSORS"><a href="#INTRODUCTION-TO-PYTORCH-TENSORS" class="headerlink" title="INTRODUCTION TO PYTORCH TENSORS"></a>INTRODUCTION TO PYTORCH TENSORS</h1><p>张量是 PyTorch 中的核心数据抽象。此交互式笔记本深入介绍了 <code>torch.Tensor</code> 类。</p><p>首先，让我们导入 PyTorch 模块。我们还将添加 Python 的数学模块来简化一些示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> math</span><br></pre></td></tr></table></figure><h2 id="Creating-Tensors"><a href="#Creating-Tensors" class="headerlink" title="Creating Tensors"></a>Creating Tensors</h2><p>创建张量的最简单方法是使用 <code>torch.empty()</code> 调用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = torch.empty(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(x))</span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#x27;torch.Tensor&#x27;&gt;</span><br><span class="line">tensor([[7.4055e-29, 0.0000e+00, 7.4101e-04, 0.0000e+00],</span><br><span class="line">        [2.8026e-45, 0.0000e+00, 0.0000e+00, 0.0000e+00],</span><br><span class="line">        [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]])</span><br></pre></td></tr></table></figure><p>让我们解释我们刚刚所做的事情：</p><ul><li><p>我们使用 <code>torch</code> 模块附带的众多工厂方法之一创建了一个张量。</p></li><li><p>张量本身是二维的，有 3 行和 4 列。</p></li><li><p>返回对象的类型是 <code>torch.Tensor</code> ，它是 <code>torch.FloatTensor</code> 的别名；默认情况下，PyTorch 张量由 32 位浮点数填充。 （下面详细介绍数据类型。）</p></li><li><p>打印张量时，您可能会看到一些看起来随机的值。 <code>torch.empty()</code> 调用为张量分配内存，但不使用任何值对其进行初始化 - 因此您看到的是分配时内存中的内容。</p></li></ul><p>关于张量及其维数和术语的简要说明：</p><ul><li>有时您会看到称为向量的一维张量。</li><li>同样，二维张量通常称为矩阵。</li><li>任何超过二维的东西通常都被称为张量。</li></ul><p>通常，您需要使用某个值来初始化张量。常见情况是全零、全一或随机值， <code>torch</code> 模块为所有这些提供工厂方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">zeros = torch.zeros(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(zeros)</span><br><span class="line"></span><br><span class="line">ones = torch.ones(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(ones)</span><br><span class="line"></span><br><span class="line">torch.manual_seed(<span class="number">1729</span>)</span><br><span class="line">random = torch.rand(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(random)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([[0., 0., 0.],</span><br><span class="line">        [0., 0., 0.]])</span><br><span class="line">tensor([[1., 1., 1.],</span><br><span class="line">        [1., 1., 1.]])</span><br><span class="line">tensor([[0.3126, 0.3791, 0.3087],</span><br><span class="line">        [0.0736, 0.4216, 0.0691]])</span><br></pre></td></tr></table></figure><p>工厂方法都按照您的预期执行操作 - 我们有一个充满 0 的张量，另一个充满 1 的张量，另一个充满 0 到 1 之间的随机值的张量。</p><h3 id="Random-Tensors-and-Seeding"><a href="#Random-Tensors-and-Seeding" class="headerlink" title="Random Tensors and Seeding"></a>Random Tensors and Seeding</h3><p>说到随机张量，您是否注意到紧随其前面的 <code>torch.manual_seed()</code> 调用？使用随机值初始化张量（例如模型的学习权重）很常见，但有时（尤其是在研究环境中）您需要确保结果的可重复性。手动设置随机数生成器的种子是实现此目的的方法。让我们更仔细地看看：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">torch.manual_seed(<span class="number">1729</span>)</span><br><span class="line">random1 = torch.rand(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(random1)</span><br><span class="line"></span><br><span class="line">random2 = torch.rand(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(random2)</span><br><span class="line"></span><br><span class="line">torch.manual_seed(<span class="number">1729</span>)</span><br><span class="line">random3 = torch.rand(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(random3)</span><br><span class="line"></span><br><span class="line">random4 = torch.rand(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(random4)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tensor([[0.3126, 0.3791, 0.3087],</span><br><span class="line">        [0.0736, 0.4216, 0.0691]])</span><br><span class="line">tensor([[0.2332, 0.4047, 0.2162],</span><br><span class="line">        [0.9927, 0.4128, 0.5938]])</span><br><span class="line">tensor([[0.3126, 0.3791, 0.3087],</span><br><span class="line">        [0.0736, 0.4216, 0.0691]])</span><br><span class="line">tensor([[0.2332, 0.4047, 0.2162],</span><br><span class="line">        [0.9927, 0.4128, 0.5938]])</span><br></pre></td></tr></table></figure><p>您应该在上面看到的是 <code>random1</code> 和 <code>random3</code> 具有相同的值， <code>random2</code> 和 <code>random4</code> 也是如此。手动设置 RNG 的种子会重置它，因此在大多数设置中，取决于随机数的相同计算应该提供相同的结果。</p><p>有关更多信息，请参阅有关重现性的 PyTorch 文档。 <a href="https://pytorch.org/docs/stable/notes/randomness.html">PyTorch documentation on reproducibility</a>.</p><h3 id="Tensor-Shapes"><a href="#Tensor-Shapes" class="headerlink" title="Tensor Shapes"></a>Tensor Shapes</h3><p>通常，当您对两个或多个张量执行操作时，它们需要具有相同的形状 - 即具有相同的维度数以及每个维度中相同的单元数。为此，我们有 <code>torch.*_like()</code> 方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">x = torch.empty(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(x.shape)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">empty_like_x = torch.empty_like(x)</span><br><span class="line"><span class="built_in">print</span>(empty_like_x.shape)</span><br><span class="line"><span class="built_in">print</span>(empty_like_x)</span><br><span class="line"></span><br><span class="line">zeros_like_x = torch.zeros_like(x)</span><br><span class="line"><span class="built_in">print</span>(zeros_like_x.shape)</span><br><span class="line"><span class="built_in">print</span>(zeros_like_x)</span><br><span class="line"></span><br><span class="line">ones_like_x = torch.ones_like(x)</span><br><span class="line"><span class="built_in">print</span>(ones_like_x.shape)</span><br><span class="line"><span class="built_in">print</span>(ones_like_x)</span><br><span class="line"></span><br><span class="line">rand_like_x = torch.rand_like(x)</span><br><span class="line"><span class="built_in">print</span>(rand_like_x.shape)</span><br><span class="line"><span class="built_in">print</span>(rand_like_x)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">torch.Size([<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">tensor([[[<span class="number">9.4454e-02</span>, <span class="number">0.0000e+00</span>, <span class="number">1.4013e-45</span>],</span><br><span class="line">         [<span class="number">1.4013e-45</span>, <span class="number">2.8026e-45</span>, <span class="number">4.5902e-41</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.0000e+00</span>, <span class="number">0.0000e+00</span>, <span class="number">0.0000e+00</span>],</span><br><span class="line">         [<span class="number">0.0000e+00</span>, <span class="number">0.0000e+00</span>, <span class="number">4.5901e-41</span>]]])</span><br><span class="line">torch.Size([<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">tensor([[[ <span class="number">2.7817e+07</span>,  <span class="number">0.0000e+00</span>,  <span class="number">1.9560e-03</span>],</span><br><span class="line">         [ <span class="number">0.0000e+00</span>,  <span class="number">1.8199e-37</span>,  <span class="number">0.0000e+00</span>]],</span><br><span class="line"></span><br><span class="line">        [[ <span class="number">0.0000e+00</span>,  <span class="number">0.0000e+00</span>,  <span class="number">4.7316e-03</span>],</span><br><span class="line">         [ <span class="number">0.0000e+00</span>, -<span class="number">8.1359e-04</span>,  <span class="number">4.5901e-41</span>]]])</span><br><span class="line">torch.Size([<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">tensor([[[<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">         [<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">         [<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>]]])</span><br><span class="line">torch.Size([<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">tensor([[[<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>],</span><br><span class="line">         [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>],</span><br><span class="line">         [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>]]])</span><br><span class="line">torch.Size([<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">tensor([[[<span class="number">0.6128</span>, <span class="number">0.1519</span>, <span class="number">0.0453</span>],</span><br><span class="line">         [<span class="number">0.5035</span>, <span class="number">0.9978</span>, <span class="number">0.3884</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.6929</span>, <span class="number">0.1703</span>, <span class="number">0.1384</span>],</span><br><span class="line">         [<span class="number">0.4759</span>, <span class="number">0.7481</span>, <span class="number">0.0361</span>]]])</span><br></pre></td></tr></table></figure><p>上面代码单元中的第一个新内容是在张量上使用 <code>.shape</code> 属性。此属性包含张量每个维度的范围的列表 - 在我们的示例中， <code>x</code> 是形状为 2 x 2 x 3 的三维张量。</p><p>下面，我们调用 <code>.empty_like()</code> 、 <code>.zeros_like()</code> 、 <code>.ones_like()</code> 和 <code>.rand_like()</code> 方法。使用 <code>.shape</code> 属性，我们可以验证这些方法中的每一个都返回具有相同维度和范围的张量。</p><p>创建将覆盖的张量的最后一种方法是直接从 PyTorch 集合指定其数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">some_constants = torch.tensor([[<span class="number">3.1415926</span>, <span class="number">2.71828</span>], [<span class="number">1.61803</span>, <span class="number">0.0072897</span>]])</span><br><span class="line"><span class="built_in">print</span>(some_constants)</span><br><span class="line"></span><br><span class="line">some_integers = torch.tensor((<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>))</span><br><span class="line"><span class="built_in">print</span>(some_integers)</span><br><span class="line"></span><br><span class="line">more_integers = torch.tensor(((<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>), [<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>]))</span><br><span class="line"><span class="built_in">print</span>(more_integers)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tensor([[3.1416, 2.7183],</span><br><span class="line">        [1.6180, 0.0073]])</span><br><span class="line">tensor([ 2,  3,  5,  7, 11, 13, 17, 19])</span><br><span class="line">tensor([[2, 4, 6],</span><br><span class="line">        [3, 6, 9]])</span><br></pre></td></tr></table></figure><p>如果 Python 元组或列表中已有数据，则使用 <code>torch.tensor()</code> 是创建张量的最直接方法。如上所示，嵌套集合将产生多维张量。</p><blockquote><p><code>torch.tensor()</code> 创建数据的副本。</p></blockquote><h3 id="Tensor-Data-Types"><a href="#Tensor-Data-Types" class="headerlink" title="Tensor Data Types"></a>Tensor Data Types</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = torch.ones((<span class="number">2</span>, <span class="number">3</span>), dtype=torch.int16)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">b = torch.rand((<span class="number">2</span>, <span class="number">3</span>), dtype=torch.float64) * <span class="number">20.</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">c = b.to(torch.int32)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([[1, 1, 1],</span><br><span class="line">        [1, 1, 1]], dtype=torch.int16)</span><br><span class="line">tensor([[ 0.9956,  1.4148,  5.8364],</span><br><span class="line">        [11.2406, 11.2083, 11.6692]], dtype=torch.float64)</span><br><span class="line">tensor([[ 0,  1,  5],</span><br><span class="line">        [11, 11, 11]], dtype=torch.int32)</span><br></pre></td></tr></table></figure><p>设置张量基础数据类型的最简单方法是在创建时使用可选参数。在上面单元格的第一行中，我们为张量 <code>a</code> 设置 <code>dtype=torch.int16</code> 。当我们打印 <code>a</code> 时，我们可以看到它充满了 <code>1</code> 而不是 <code>1.</code> - Python 的微妙提示是这是一个整数类型而不是浮点数。</p><p>关于打印 <code>a</code> 需要注意的另一件事是，与我们将 <code>dtype</code> 保留为默认值（32 位浮点）不同，打印张量还指定其 <code>dtype</code> .</p><p>您可能还发现，我们从将张量的形状指定为一系列整数参数，到将这些参数分组到一个元组中。这并不是绝对必要的 - PyTorch 会将一系列初始的、未标记的整数参数作为张量形状 - 但在添加可选参数时，它可以使您的意图更具可读性。</p><p>设置数据类型的另一种方法是使用 <code>.to()</code> 方法。在上面的单元格中，我们以通常的方式创建一个随机浮点张量 <code>b</code> 。接下来，我们通过使用 <code>.to()</code> 方法将 <code>b</code> 转换为 32 位整数来创建 <code>c</code> 。请注意， <code>c</code> 包含与 <code>b</code> 相同的所有值，但被截断为整数。</p><p>可用的数据类型包括：</p><ul><li><code>torch.bool</code></li><li><code>torch.int8</code></li><li><code>torch.uint8</code></li><li><code>torch.int16</code></li><li><code>torch.int32</code></li><li><code>torch.int64</code></li><li><code>torch.half</code></li><li><code>torch.float</code></li><li><code>torch.double</code></li><li><code>torch.bfloat</code></li></ul><h2 id="Math-Logic-with-PyTorch-Tensors"><a href="#Math-Logic-with-PyTorch-Tensors" class="headerlink" title="Math &amp; Logic with PyTorch Tensors"></a>Math &amp; Logic with PyTorch Tensors</h2><p>现在您已经了解了创建张量的一些方法……您可以用它们做什么？</p><p>让我们首先看看基本算术，以及张量如何与简单标量交互：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ones = torch.zeros(<span class="number">2</span>, <span class="number">2</span>) + <span class="number">1</span></span><br><span class="line">twos = torch.ones(<span class="number">2</span>, <span class="number">2</span>) * <span class="number">2</span></span><br><span class="line">threes = (torch.ones(<span class="number">2</span>, <span class="number">2</span>) * <span class="number">7</span> - <span class="number">1</span>) / <span class="number">2</span></span><br><span class="line">fours = twos ** <span class="number">2</span></span><br><span class="line">sqrt2s = twos ** <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(ones)</span><br><span class="line"><span class="built_in">print</span>(twos)</span><br><span class="line"><span class="built_in">print</span>(threes)</span><br><span class="line"><span class="built_in">print</span>(fours)</span><br><span class="line"><span class="built_in">print</span>(sqrt2s)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tensor([[1., 1.],</span><br><span class="line">        [1., 1.]])</span><br><span class="line">tensor([[2., 2.],</span><br><span class="line">        [2., 2.]])</span><br><span class="line">tensor([[3., 3.],</span><br><span class="line">        [3., 3.]])</span><br><span class="line">tensor([[4., 4.],</span><br><span class="line">        [4., 4.]])</span><br><span class="line">tensor([[1.4142, 1.4142],</span><br><span class="line">        [1.4142, 1.4142]])</span><br></pre></td></tr></table></figure><p>如上所示，张量和标量之间的算术运算（例如加法、减法、乘法、除法和求幂）分布在张量的每个元素上。由于此类操作的输出将是一个张量，因此您可以使用通常的运算符优先级规则将它们链接在一起，如我们创建 <code>threes</code> 的行中所示。</p><p>两个张量之间的类似操作也像您直观地期望的那样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">powers2 = twos ** torch.tensor([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"><span class="built_in">print</span>(powers2)</span><br><span class="line"></span><br><span class="line">fives = ones + fours</span><br><span class="line"><span class="built_in">print</span>(fives)</span><br><span class="line"></span><br><span class="line">dozens = threes * fours</span><br><span class="line"><span class="built_in">print</span>(dozens)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([[ 2.,  4.],</span><br><span class="line">        [ 8., 16.]])</span><br><span class="line">tensor([[5., 5.],</span><br><span class="line">        [5., 5.]])</span><br><span class="line">tensor([[12., 12.],</span><br><span class="line">        [12., 12.]])</span><br></pre></td></tr></table></figure><p>这里需要注意的是，前面的代码单元中的所有张量都具有相同的形状。当我们尝试对形状不同的张量执行二元运算时会发生什么？</p><blockquote><p>以下单元格抛出运行时错误。这是故意的。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = torch.rand(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">b = torch.rand(<span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a * b)</span><br></pre></td></tr></table></figure><p>在一般情况下，您不能以这种方式对不同形状的张量进行操作，即使在像上面的单元格这样的情况下，其中张量具有相同数量的元素。</p><h3 id="In-Brief-Tensor-Broadcasting"><a href="#In-Brief-Tensor-Broadcasting" class="headerlink" title="In Brief: Tensor Broadcasting"></a>In Brief: Tensor Broadcasting</h3><blockquote><p>如果您熟悉 NumPy ndarray 中的广播语义，您会发现此处适用相同的规则。</p></blockquote><p>相同形状规则的例外是张量广播。这是一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rand = torch.rand(<span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line">doubled = rand * (torch.ones(<span class="number">1</span>, <span class="number">4</span>) * <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rand)</span><br><span class="line"><span class="built_in">print</span>(doubled)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor([[0.6146, 0.5999, 0.5013, 0.9397],</span><br><span class="line">        [0.8656, 0.5207, 0.6865, 0.3614]])</span><br><span class="line">tensor([[1.2291, 1.1998, 1.0026, 1.8793],</span><br><span class="line">        [1.7312, 1.0413, 1.3730, 0.7228]])</span><br></pre></td></tr></table></figure><p>这里有什么技巧呢？我们如何将 2x4 张量乘以 1x4 张量？</p><p>广播是一种在形状相似的张量之间执行操作的方法。在上面的示例中，一行四列张量乘以两行四列张量的两行。</p><p>这是深度学习中的一个重要操作。常见的示例是将学习权重张量乘以一批输入张量，分别将运算应用于批次中的每个实例，并返回相同形状的张量 - 就像我们的 (2, 4) * (1, 4)上面的示例返回形状为 (2, 4) 的张量。</p><p>广播规则如下：</p><ul><li>每个张量必须至少有一个维度 - 没有空张量。</li><li>比较两个张量的维度的大小，从最后到第一<ul><li>每个维度必须相等，或者</li><li>其中一个维度必须为 1，或者</li><li>该维度在张量之一中不存在</li></ul></li></ul><p>当然，正如您之前所见，形状相同的张量通常是“可广播的”。</p><p>以下是遵守上述规则并允许广播的一些情况示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a =     torch.ones(<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">b = a * torch.rand(   <span class="number">3</span>, <span class="number">2</span>) <span class="comment"># 3rd &amp; 2nd dims identical to a, dim 1 absent</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">c = a * torch.rand(   <span class="number">3</span>, <span class="number">1</span>) <span class="comment"># 3rd dim = 1, 2nd dim identical to a</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"></span><br><span class="line">d = a * torch.rand(   <span class="number">1</span>, <span class="number">2</span>) <span class="comment"># 3rd dim identical to a, 2nd dim = 1</span></span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">tensor([[[<span class="number">0.6493</span>, <span class="number">0.2633</span>],</span><br><span class="line">         [<span class="number">0.4762</span>, <span class="number">0.0548</span>],</span><br><span class="line">         [<span class="number">0.2024</span>, <span class="number">0.5731</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.6493</span>, <span class="number">0.2633</span>],</span><br><span class="line">         [<span class="number">0.4762</span>, <span class="number">0.0548</span>],</span><br><span class="line">         [<span class="number">0.2024</span>, <span class="number">0.5731</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.6493</span>, <span class="number">0.2633</span>],</span><br><span class="line">         [<span class="number">0.4762</span>, <span class="number">0.0548</span>],</span><br><span class="line">         [<span class="number">0.2024</span>, <span class="number">0.5731</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.6493</span>, <span class="number">0.2633</span>],</span><br><span class="line">         [<span class="number">0.4762</span>, <span class="number">0.0548</span>],</span><br><span class="line">         [<span class="number">0.2024</span>, <span class="number">0.5731</span>]]])</span><br><span class="line">tensor([[[<span class="number">0.7191</span>, <span class="number">0.7191</span>],</span><br><span class="line">         [<span class="number">0.4067</span>, <span class="number">0.4067</span>],</span><br><span class="line">         [<span class="number">0.7301</span>, <span class="number">0.7301</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.7191</span>, <span class="number">0.7191</span>],</span><br><span class="line">         [<span class="number">0.4067</span>, <span class="number">0.4067</span>],</span><br><span class="line">         [<span class="number">0.7301</span>, <span class="number">0.7301</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.7191</span>, <span class="number">0.7191</span>],</span><br><span class="line">         [<span class="number">0.4067</span>, <span class="number">0.4067</span>],</span><br><span class="line">         [<span class="number">0.7301</span>, <span class="number">0.7301</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.7191</span>, <span class="number">0.7191</span>],</span><br><span class="line">         [<span class="number">0.4067</span>, <span class="number">0.4067</span>],</span><br><span class="line">         [<span class="number">0.7301</span>, <span class="number">0.7301</span>]]])</span><br><span class="line">tensor([[[<span class="number">0.6276</span>, <span class="number">0.7357</span>],</span><br><span class="line">         [<span class="number">0.6276</span>, <span class="number">0.7357</span>],</span><br><span class="line">         [<span class="number">0.6276</span>, <span class="number">0.7357</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.6276</span>, <span class="number">0.7357</span>],</span><br><span class="line">         [<span class="number">0.6276</span>, <span class="number">0.7357</span>],</span><br><span class="line">         [<span class="number">0.6276</span>, <span class="number">0.7357</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.6276</span>, <span class="number">0.7357</span>],</span><br><span class="line">         [<span class="number">0.6276</span>, <span class="number">0.7357</span>],</span><br><span class="line">         [<span class="number">0.6276</span>, <span class="number">0.7357</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.6276</span>, <span class="number">0.7357</span>],</span><br><span class="line">         [<span class="number">0.6276</span>, <span class="number">0.7357</span>],</span><br><span class="line">         [<span class="number">0.6276</span>, <span class="number">0.7357</span>]]])</span><br></pre></td></tr></table></figure><p>仔细观察上面每个张量的值：</p><ul><li>创建 <code>b</code> 的乘法运算在 <code>a</code> 的每个“层”上广播。</li><li>对于 <code>c</code> ，该操作在 <code>a</code> 的每一层和每一行上广播 - 每个 3 元素列都是相同的。</li><li>对于 <code>d</code> ，我们将其切换 - 现在跨层和列的每一行都是相同的。</li></ul><p>有关广播的更多信息，请参阅有关该主题的 PyTorch 文档。</p><p>以下是一些尝试广播失败的示例：</p><blockquote><p>以下单元格抛出运行时错误。这是故意的。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a =     torch.ones(<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">b = a * torch.rand(<span class="number">4</span>, <span class="number">3</span>)    <span class="comment"># dimensions must match last-to-first</span></span><br><span class="line"></span><br><span class="line">c = a * torch.rand(   <span class="number">2</span>, <span class="number">3</span>) <span class="comment"># both 3rd &amp; 2nd dims different</span></span><br><span class="line"></span><br><span class="line">d = a * torch.rand((<span class="number">0</span>, ))   <span class="comment"># can&#x27;t broadcast with an empty tensor</span></span><br></pre></td></tr></table></figure><h3 id="More-Math-with-Tensors"><a href="#More-Math-with-Tensors" class="headerlink" title="More Math with Tensors"></a>More Math with Tensors</h3><p>PyTorch 张量有超过三百种可以对其执行的操作。</p><p>以下是一些主要操作类别的一个小样本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># common functions</span></span><br><span class="line">a = torch.rand(<span class="number">2</span>, <span class="number">4</span>) * <span class="number">2</span> - <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Common functions:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(torch.<span class="built_in">abs</span>(a))</span><br><span class="line"><span class="built_in">print</span>(torch.ceil(a))</span><br><span class="line"><span class="built_in">print</span>(torch.floor(a))</span><br><span class="line"><span class="built_in">print</span>(torch.clamp(a, -<span class="number">0.5</span>, <span class="number">0.5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># trigonometric functions and their inverses</span></span><br><span class="line">angles = torch.tensor([<span class="number">0</span>, math.pi / <span class="number">4</span>, math.pi / <span class="number">2</span>, <span class="number">3</span> * math.pi / <span class="number">4</span>])</span><br><span class="line">sines = torch.sin(angles)</span><br><span class="line">inverses = torch.asin(sines)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nSine and arcsine:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(angles)</span><br><span class="line"><span class="built_in">print</span>(sines)</span><br><span class="line"><span class="built_in">print</span>(inverses)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bitwise operations</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nBitwise XOR:&#x27;</span>)</span><br><span class="line">b = torch.tensor([<span class="number">1</span>, <span class="number">5</span>, <span class="number">11</span>])</span><br><span class="line">c = torch.tensor([<span class="number">2</span>, <span class="number">7</span>, <span class="number">10</span>])</span><br><span class="line"><span class="built_in">print</span>(torch.bitwise_xor(b, c))</span><br><span class="line"></span><br><span class="line"><span class="comment"># comparisons:</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nBroadcasted, element-wise equality comparison:&#x27;</span>)</span><br><span class="line">d = torch.tensor([[<span class="number">1.</span>, <span class="number">2.</span>], [<span class="number">3.</span>, <span class="number">4.</span>]])</span><br><span class="line">e = torch.ones(<span class="number">1</span>, <span class="number">2</span>)  <span class="comment"># many comparison ops support broadcasting!</span></span><br><span class="line"><span class="built_in">print</span>(torch.eq(d, e)) <span class="comment"># returns a tensor of type bool</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reductions:</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nReduction ops:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(torch.<span class="built_in">max</span>(d))        <span class="comment"># returns a single-element tensor</span></span><br><span class="line"><span class="built_in">print</span>(torch.<span class="built_in">max</span>(d).item()) <span class="comment"># extracts the value from the returned tensor</span></span><br><span class="line"><span class="built_in">print</span>(torch.mean(d))       <span class="comment"># average</span></span><br><span class="line"><span class="built_in">print</span>(torch.std(d))        <span class="comment"># standard deviation</span></span><br><span class="line"><span class="built_in">print</span>(torch.prod(d))       <span class="comment"># product of all numbers</span></span><br><span class="line"><span class="built_in">print</span>(torch.unique(torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>]))) <span class="comment"># filter unique elements</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vector and linear algebra operations</span></span><br><span class="line">v1 = torch.tensor([<span class="number">1.</span>, <span class="number">0.</span>, <span class="number">0.</span>])         <span class="comment"># x unit vector</span></span><br><span class="line">v2 = torch.tensor([<span class="number">0.</span>, <span class="number">1.</span>, <span class="number">0.</span>])         <span class="comment"># y unit vector</span></span><br><span class="line">m1 = torch.rand(<span class="number">2</span>, <span class="number">2</span>)                   <span class="comment"># random matrix</span></span><br><span class="line">m2 = torch.tensor([[<span class="number">3.</span>, <span class="number">0.</span>], [<span class="number">0.</span>, <span class="number">3.</span>]]) <span class="comment"># three times identity matrix</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nVectors &amp; Matrices:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(torch.cross(v2, v1)) <span class="comment"># negative of z unit vector (v1 x v2 == -v2 x v1)</span></span><br><span class="line"><span class="built_in">print</span>(m1)</span><br><span class="line">m3 = torch.matmul(m1, m2)</span><br><span class="line"><span class="built_in">print</span>(m3)                  <span class="comment"># 3 times m1</span></span><br><span class="line"><span class="built_in">print</span>(torch.svd(m3))       <span class="comment"># singular value decomposition</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Common functions:</span><br><span class="line">tensor([[0.9238, 0.5724, 0.0791, 0.2629],</span><br><span class="line">        [0.1986, 0.4439, 0.6434, 0.4776]])</span><br><span class="line">tensor([[-0., -0., 1., -0.],</span><br><span class="line">        [-0., 1., 1., -0.]])</span><br><span class="line">tensor([[-1., -1.,  0., -1.],</span><br><span class="line">        [-1.,  0.,  0., -1.]])</span><br><span class="line">tensor([[-0.5000, -0.5000,  0.0791, -0.2629],</span><br><span class="line">        [-0.1986,  0.4439,  0.5000, -0.4776]])</span><br><span class="line"></span><br><span class="line">Sine and arcsine:</span><br><span class="line">tensor([0.0000, 0.7854, 1.5708, 2.3562])</span><br><span class="line">tensor([0.0000, 0.7071, 1.0000, 0.7071])</span><br><span class="line">tensor([0.0000, 0.7854, 1.5708, 0.7854])</span><br><span class="line"></span><br><span class="line">Bitwise XOR:</span><br><span class="line">tensor([3, 2, 1])</span><br><span class="line"></span><br><span class="line">Broadcasted, element-wise equality comparison:</span><br><span class="line">tensor([[ True, False],</span><br><span class="line">        [False, False]])</span><br><span class="line"></span><br><span class="line">Reduction ops:</span><br><span class="line">tensor(4.)</span><br><span class="line">4.0</span><br><span class="line">tensor(2.5000)</span><br><span class="line">tensor(1.2910)</span><br><span class="line">tensor(24.)</span><br><span class="line">tensor([1, 2])</span><br><span class="line"></span><br><span class="line">Vectors &amp; Matrices:</span><br><span class="line">tensor([ 0.,  0., -1.])</span><br><span class="line">tensor([[0.7375, 0.8328],</span><br><span class="line">        [0.8444, 0.2941]])</span><br><span class="line">tensor([[2.2125, 2.4985],</span><br><span class="line">        [2.5332, 0.8822]])</span><br><span class="line">torch.return_types.svd(</span><br><span class="line">U=tensor([[-0.7889, -0.6145],</span><br><span class="line">        [-0.6145,  0.7889]]),</span><br><span class="line">S=tensor([4.1498, 1.0548]),</span><br><span class="line">V=tensor([[-0.7957,  0.6056],</span><br><span class="line">        [-0.6056, -0.7957]]))</span><br></pre></td></tr></table></figure><p>这是操作的一个小样本。有关更多详细信息和数学函数的完整清单，请查看文档。</p><h3 id="Altering-Tensors-in-Place"><a href="#Altering-Tensors-in-Place" class="headerlink" title="Altering Tensors in Place"></a>Altering Tensors in Place</h3><p>大多数张量上的二元运算都会返回第三个新张量。当我们说 <code>c = a * b</code> （其中 <code>a</code> 和 <code>b</code> 是张量）时，新张量 <code>c</code> 将占据与之前的张量不同的内存区域。其他张量。</p><p>不过，有时您可能希望就地更改张量 - 例如，如果您正在进行逐元素计算，您可以丢弃中间值。为此，大多数数学函数都有一个带有附加下划线（ <code>_</code> ）的版本，它将改变张量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = torch.tensor([<span class="number">0</span>, math.pi / <span class="number">4</span>, math.pi / <span class="number">2</span>, <span class="number">3</span> * math.pi / <span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(torch.sin(a))   <span class="comment"># this operation creates a new tensor in memory</span></span><br><span class="line"><span class="built_in">print</span>(a)              <span class="comment"># a has not changed</span></span><br><span class="line"></span><br><span class="line">b = torch.tensor([<span class="number">0</span>, math.pi / <span class="number">4</span>, math.pi / <span class="number">2</span>, <span class="number">3</span> * math.pi / <span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nb:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(torch.sin_(b))  <span class="comment"># note the underscore</span></span><br><span class="line"><span class="built_in">print</span>(b)              <span class="comment"># b has changed</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a:</span><br><span class="line">tensor([0.0000, 0.7854, 1.5708, 2.3562])</span><br><span class="line">tensor([0.0000, 0.7071, 1.0000, 0.7071])</span><br><span class="line">tensor([0.0000, 0.7854, 1.5708, 2.3562])</span><br><span class="line"></span><br><span class="line">b:</span><br><span class="line">tensor([0.0000, 0.7854, 1.5708, 2.3562])</span><br><span class="line">tensor([0.0000, 0.7071, 1.0000, 0.7071])</span><br><span class="line">tensor([0.0000, 0.7071, 1.0000, 0.7071])</span><br></pre></td></tr></table></figure><p>对于算术运算，有一些行为类似的函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = torch.ones(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">b = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Before:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nAfter adding:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a.add_(b))</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nAfter multiplying&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b.mul_(b))</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><p>请注意，这些就地算术函数是 <code>torch.Tensor</code> 对象上的方法，而不是像许多其他函数（例如 <code>torch.sin()</code> ）一样附加到 <code>torch</code> 模块。正如您从 <code>a.add_(b)</code> 中看到的，调用张量是就地更改的张量。</p><p>还有另一种选择可以将计算结果放入现有的分配张量中。到目前为止我们已经看到的许多方法和函数 - 包括创建方法！ - 有一个 <code>out</code> 参数，可让您指定一个张量来接收输出。如果 <code>out</code> 张量的形状正确且 <code>dtype</code> ，则无需新的内存分配即可发生这种情况：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">b = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">c = torch.zeros(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">old_id = <span class="built_in">id</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line">d = torch.matmul(a, b, out=c)</span><br><span class="line"><span class="built_in">print</span>(c)                <span class="comment"># contents of c have changed</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> c <span class="keyword">is</span> d           <span class="comment"># test c &amp; d are same object, not just containing equal values</span></span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">id</span>(c) == old_id  <span class="comment"># make sure that our new c is the same object as the old one</span></span><br><span class="line"></span><br><span class="line">torch.rand(<span class="number">2</span>, <span class="number">2</span>, out=c) <span class="comment"># works for creation too!</span></span><br><span class="line"><span class="built_in">print</span>(c)                <span class="comment"># c has changed again</span></span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">id</span>(c) == old_id  <span class="comment"># still the same object!</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([[0., 0.],</span><br><span class="line">        [0., 0.]])</span><br><span class="line">tensor([[0.3653, 0.8699],</span><br><span class="line">        [0.2364, 0.3604]])</span><br><span class="line">tensor([[0.0776, 0.4004],</span><br><span class="line">        [0.9877, 0.0352]])</span><br></pre></td></tr></table></figure><h2 id="Copying-Tensors"><a href="#Copying-Tensors" class="headerlink" title="Copying Tensors"></a>Copying Tensors</h2><p>与 Python 中的任何对象一样，将张量分配给变量会使该变量成为张量的标签，并且不会复制它。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = torch.ones(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">b = a</span><br><span class="line"></span><br><span class="line">a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">561</span>  <span class="comment"># we change a...</span></span><br><span class="line"><span class="built_in">print</span>(b)       <span class="comment"># ...and b is also altered</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tensor([[  1., 561.],</span><br><span class="line">        [  1.,   1.]])</span><br></pre></td></tr></table></figure><p>但是，如果您想要处理数据的单独副本怎么办？ <code>clone()</code> 方法适合您：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = torch.ones(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">b = a.clone()</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> b <span class="keyword">is</span> <span class="keyword">not</span> a      <span class="comment"># different objects in memory...</span></span><br><span class="line"><span class="built_in">print</span>(torch.eq(a, b))  <span class="comment"># ...but still with the same contents!</span></span><br><span class="line"></span><br><span class="line">a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">561</span>          <span class="comment"># a changes...</span></span><br><span class="line"><span class="built_in">print</span>(b)               <span class="comment"># ...but b is still all ones</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor([[True, True],</span><br><span class="line">        [True, True]])</span><br><span class="line">tensor([[1., 1.],</span><br><span class="line">        [1., 1.]])</span><br></pre></td></tr></table></figure><p>使用“clone()”时需要注意一件重要的事情。如果您的源张量启用了 autograd，那么克隆张量也将启用。这将在 autograd 的视频中更深入地介绍，但如果您想要详细信息的简单版本，请继续。</p><p>在许多情况下，这就是您想要的。例如，如果您的模型在其 <code>forward()</code> 方法中具有多个计算路径，并且原始张量及其克隆都对模型的输出有贡献，那么为了启用模型学习，您需要为两个张量打开 autograd。如果您的源张量启用了自动梯度（如果它是一组学习权重或从涉及权重的计算中派生的，通常会启用自动梯度），那么您将得到您想要的结果。</p><p>另一方面，如果您正在进行计算，其中原始张量及其克隆都不需要跟踪梯度，那么只要源张量关闭了 autograd，您就可以开始了。</p><p>不过，还有第三种情况：假设您正在模型的 <code>forward()</code> 函数中执行计算，其中默认情况下为所有内容打开渐变，但您想在中途提取一些值来生成一些指标。在这种情况下，您不希望源张量的克隆副本跟踪梯度 - 通过关闭 autograd 的历史记录跟踪可以提高性能。为此，您可以在源张量上使用 <code>.detach()</code> 方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = torch.rand(<span class="number">2</span>, <span class="number">2</span>, requires_grad=<span class="literal">True</span>) <span class="comment"># turn on autograd</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">b = a.clone()</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">c = a.detach().clone()</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tensor([[0.0905, 0.4485],</span><br><span class="line">        [0.8740, 0.2526]], requires_grad=True)</span><br><span class="line">tensor([[0.0905, 0.4485],</span><br><span class="line">        [0.8740, 0.2526]], grad_fn=&lt;CloneBackward0&gt;)</span><br><span class="line">tensor([[0.0905, 0.4485],</span><br><span class="line">        [0.8740, 0.2526]])</span><br><span class="line">tensor([[0.0905, 0.4485],</span><br><span class="line">        [0.8740, 0.2526]], requires_grad=True)</span><br></pre></td></tr></table></figure><ul><li>我们创建 <code>a</code> 并打开 <code>requires_grad=True</code> 。我们还没有讨论这个可选参数，但会在 autograd 单元中讨论。</li><li>当我们打印 <code>a</code> 时，它通知我们属性 <code>requires_grad=True</code> - 这意味着自动分级和计算历史跟踪已打开。</li><li>我们克隆 <code>a</code> 并将其标记为 <code>b</code> 。当我们打印 <code>b</code> 时，我们可以看到它正在跟踪其计算历史记录 - 它继承了 <code>a</code> 的 autograd 设置，并添加到计算历史记录中。</li><li>我们克隆了a到c，但是我们调用了a的detach方法后才调用clone</li><li>打印 <code>c</code> ，我们没有看到计算历史，也没有 <code>requires_grad=True</code> 。</li></ul><p><code>detach()</code> 方法将张量从其计算历史中分离出来。它说，“做接下来的任何事情，就好像自动分级已关闭一样。”它在不更改 <code>a</code> 的情况下执行此操作 - 您可以看到，当我们在末尾再次打印 <code>a</code> 时，它保留了其 <code>requires_grad=True</code> 属性。</p><h2 id="Moving-to-GPU"><a href="#Moving-to-GPU" class="headerlink" title="Moving to GPU"></a>Moving to GPU</h2><p>PyTorch的主要优势之一是它在兼容CUDA的Nvidia GPU上具有强大的加速能力。（“CUDA”代表计算统一设备架构，这是英伟达的并行计算平台。）到目前为止，我们所做的一切都在CPU上。我们如何转向更快的硬件？</p><p>首先，我们应该使用 <code>is_available()</code> 方法检查 GPU 是否可用。</p><blockquote><p>如果您没有安装 CUDA 兼容的 GPU 和 CUDA 驱动程序，本节中的可执行单元将不会执行任何与 GPU 相关的代码。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;We have a GPU!&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Sorry, CPU only.&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">We have a GPU!</span><br></pre></td></tr></table></figure><p>一旦我们确定一个或多个 GPU 可用，我们就需要将数据放在 GPU 可以看到的地方。您的 CPU 对计算机 RAM 中的数据进行计算。您的 GPU 附有专用内存。每当您想要在设备上执行计算时，您必须将该计算所需的所有数据移动到该设备可访问的内存中。 （通俗地说，“将数据移至 GPU 可访问的内存”缩写为“将数据移至 GPU”。）</p><p>有多种方法可以将数据传输到目标设备上。您可以在创建时执行此操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    gpu_rand = torch.rand(<span class="number">2</span>, <span class="number">2</span>, device=<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(gpu_rand)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Sorry, CPU only.&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tensor([[<span class="number">0.3344</span>, <span class="number">0.2640</span>],</span><br><span class="line">        [<span class="number">0.2119</span>, <span class="number">0.0582</span>]], device=<span class="string">&#x27;cuda:0&#x27;</span>)</span><br></pre></td></tr></table></figure><p>默认情况下，新的张量是在CPU上创建的，因此我们必须使用可选的设备参数指定何时在GPU上创建张量。你可以看到，当我们打印新的张量时，PyTorch会通知我们它在哪个设备上（如果它不在CPU上）。</p><p>您可以通过 <code>torch.cuda.device_count()</code> 查询 GPU 数量。如果您有多个 GPU，您可以通过索引指定它们： <code>device=&#39;cuda:0&#39;</code> 、 <code>device=&#39;cuda:1&#39;</code> 等。</p><p>作为一种编码实践，用字符串常量指定我们的设备是非常脆弱的。在理想的情况下，无论您是在 CPU 还是 GPU 硬件上，您的代码都会稳定地执行。您可以通过创建一个可以传递给张量而不是字符串的设备句柄来做到这一点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    my_device = torch.device(<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    my_device = torch.device(<span class="string">&#x27;cpu&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Device: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(my_device))</span><br><span class="line"></span><br><span class="line">x = torch.rand(<span class="number">2</span>, <span class="number">2</span>, device=my_device)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Device: cuda</span><br><span class="line">tensor([[<span class="number">0.0024</span>, <span class="number">0.6778</span>],</span><br><span class="line">        [<span class="number">0.2441</span>, <span class="number">0.6812</span>]], device=<span class="string">&#x27;cuda:0&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果一台设备上有一个现有张量，则可以使用 <code>to()</code> 方法将其移动到另一台设备。以下代码行在 CPU 上创建一个张量，并将其移动到您在上一个单元中获取的设备句柄。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">y = y.to(my_device)</span><br></pre></td></tr></table></figure><p>重要的是要知道，为了进行涉及两个或多个张量的计算，所有张量必须位于同一设备上。无论您是否有可用的 GPU 设备，以下代码都会引发运行时错误：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">y = torch.rand(<span class="number">2</span>, <span class="number">2</span>, device=<span class="string">&#x27;gpu&#x27;</span>)</span><br><span class="line">z = x + y  <span class="comment"># exception will be thrown</span></span><br></pre></td></tr></table></figure><h2 id="Manipulating-Tensor-Shapes"><a href="#Manipulating-Tensor-Shapes" class="headerlink" title="Manipulating Tensor Shapes"></a>Manipulating Tensor Shapes</h2><p>有时，您需要更改张量的形状。下面，我们将讨论一些常见情况以及如何处理它们。</p><h3 id="Changing-the-Number-of-Dimensions"><a href="#Changing-the-Number-of-Dimensions" class="headerlink" title="Changing the Number of Dimensions"></a>Changing the Number of Dimensions</h3><p>您可能需要更改维度数的一种情况是将单个输入实例传递给模型。 PyTorch 模型通常需要批量输入。</p><p>例如，假设有一个模型适用于 3 x 226 x 226 图像 - 具有 3 个颜色通道的 226 像素正方形。当您加载并转换它时，您将获得形状 <code>(3, 226, 226)</code> 的张量。不过，您的模型需要输入形状 <code>(N, 3, 226, 226)</code> ，其中 <code>N</code> 是批次中的图像数量。那么如何制作一批呢？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = torch.rand(<span class="number">3</span>, <span class="number">226</span>, <span class="number">226</span>)</span><br><span class="line">b = a.unsqueeze(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a.shape)</span><br><span class="line"><span class="built_in">print</span>(b.shape)</span><br></pre></td></tr></table></figure><p><code>unsqueeze()</code> 方法添加范围为 1 的维度。 <code>unsqueeze(0)</code> 将其添加为新的第 0 维 - 现在您拥有一批 1 维！</p><p>那么如果这不挤压呢？我们所说的挤压是什么意思？我们利用了这样一个事实：范围为 1 的任何维度都不会改变张量中的元素数量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c = torch.rand(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensor([[[[[0.2347]]]]])</span><br></pre></td></tr></table></figure><p>继续上面的示例，假设模型的输出是每个输入的 20 元素向量。然后，您会期望输出具有形状 <code>(N, 20)</code> ，其中 <code>N</code> 是输入批次中的实例数。这意味着对于我们的单输入批次，我们将获得形状 <code>(1, 20)</code> 的输出。</p><p>如果您想使用该输出进行一些非批量计算（只需要 20 个元素向量）怎么办？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = torch.rand(<span class="number">1</span>, <span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(a.shape)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">b = a.squeeze(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(b.shape)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">c = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(c.shape)</span><br><span class="line"></span><br><span class="line">d = c.squeeze(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(d.shape)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">torch.Size([1, 20])</span><br><span class="line">tensor([[0.1899, 0.4067, 0.1519, 0.1506, 0.9585, 0.7756, 0.8973, 0.4929, 0.2367,</span><br><span class="line">         0.8194, 0.4509, 0.2690, 0.8381, 0.8207, 0.6818, 0.5057, 0.9335, 0.9769,</span><br><span class="line">         0.2792, 0.3277]])</span><br><span class="line">torch.Size([20])</span><br><span class="line">tensor([0.1899, 0.4067, 0.1519, 0.1506, 0.9585, 0.7756, 0.8973, 0.4929, 0.2367,</span><br><span class="line">        0.8194, 0.4509, 0.2690, 0.8381, 0.8207, 0.6818, 0.5057, 0.9335, 0.9769,</span><br><span class="line">        0.2792, 0.3277])</span><br><span class="line">torch.Size([2, 2])</span><br><span class="line">torch.Size([2, 2])</span><br></pre></td></tr></table></figure><p>您可以从形状中看到我们的二维张量现在是一维的，如果您仔细观察上面单元格的输出，您会发现打印 <code>a</code> 显示了一组“额外”的方括号 <code>[]</code> 由于有额外的维度。</p><p>您只能 <code>squeeze()</code> 范围为 1 的维度。请参阅上面我们尝试在 <code>c</code> 中压缩大小为 2 的维度，并返回与我们开始时相同的形状。对 <code>squeeze()</code> 和 <code>unsqueeze()</code> 的调用只能作用于范围 1 的维度，因为否则会改变张量中的元素数量。</p><p>您可能使用 <code>unsqueeze()</code> 的另一个地方是简化广播。回想一下上面的例子，我们有以下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a =     torch.ones(<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">c = a * torch.rand(   <span class="number">3</span>, <span class="number">1</span>) <span class="comment"># 3rd dim = 1, 2nd dim identical to a</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure><p>其最终效果是在维度 0 和 2 上广播操作，导致随机 3 x 1 张量按元素乘以 <code>a</code> 中的每个 3 元素列。</p><p>如果随机向量只是三元素向量怎么办？我们将失去进行广播的能力，因为最终尺寸将不符合广播规则。 <code>unsqueeze()</code> 来救援：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = torch.ones(<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">b = torch.rand(   <span class="number">3</span>)     <span class="comment"># trying to multiply a * b will give a runtime error</span></span><br><span class="line">c = b.unsqueeze(<span class="number">1</span>)       <span class="comment"># change to a 2-dimensional tensor, adding new dim at the end</span></span><br><span class="line"><span class="built_in">print</span>(c.shape)</span><br><span class="line"><span class="built_in">print</span>(a * c)             <span class="comment"># broadcasting works again!</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">torch.Size([<span class="number">3</span>, <span class="number">1</span>])</span><br><span class="line">tensor([[[<span class="number">0.1891</span>, <span class="number">0.1891</span>],</span><br><span class="line">         [<span class="number">0.3952</span>, <span class="number">0.3952</span>],</span><br><span class="line">         [<span class="number">0.9176</span>, <span class="number">0.9176</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.1891</span>, <span class="number">0.1891</span>],</span><br><span class="line">         [<span class="number">0.3952</span>, <span class="number">0.3952</span>],</span><br><span class="line">         [<span class="number">0.9176</span>, <span class="number">0.9176</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.1891</span>, <span class="number">0.1891</span>],</span><br><span class="line">         [<span class="number">0.3952</span>, <span class="number">0.3952</span>],</span><br><span class="line">         [<span class="number">0.9176</span>, <span class="number">0.9176</span>]],</span><br><span class="line"></span><br><span class="line">        [[<span class="number">0.1891</span>, <span class="number">0.1891</span>],</span><br><span class="line">         [<span class="number">0.3952</span>, <span class="number">0.3952</span>],</span><br><span class="line">         [<span class="number">0.9176</span>, <span class="number">0.9176</span>]]])</span><br></pre></td></tr></table></figure><p><code>squeeze()</code> 和 <code>unsqueeze()</code> 方法也有就地版本 <code>squeeze_()</code> 和 <code>unsqueeze_()</code> ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">batch_me = torch.rand(<span class="number">3</span>, <span class="number">226</span>, <span class="number">226</span>)</span><br><span class="line"><span class="built_in">print</span>(batch_me.shape)</span><br><span class="line">batch_me.unsqueeze_(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(batch_me.shape)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">torch.Size([3, 226, 226])</span><br><span class="line">torch.Size([1, 3, 226, 226])</span><br></pre></td></tr></table></figure><p>有时您会想要更彻底地改变张量的形状，同时仍然保留元素的数量及其内容。发生这种情况的一种情况是在模型的卷积层和模型的线性层之间的接口处 - 这在图像分类模型中很常见。卷积核将产生形状特征 x 宽度 x 高度的输出张量，但下面的线性层需要一维输入。 <code>reshape()</code> 将为您执行此操作，前提是您请求的维度产生与输入张量相同数量的元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">output3d = torch.rand(<span class="number">6</span>, <span class="number">20</span>, <span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(output3d.shape)</span><br><span class="line"></span><br><span class="line">input1d = output3d.reshape(<span class="number">6</span> * <span class="number">20</span> * <span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(input1d.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># can also call it as a method on the torch module:</span></span><br><span class="line"><span class="built_in">print</span>(torch.reshape(output3d, (<span class="number">6</span> * <span class="number">20</span> * <span class="number">20</span>,)).shape)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">torch.Size([6, 20, 20])</span><br><span class="line">torch.Size([2400])</span><br><span class="line">torch.Size([2400])</span><br></pre></td></tr></table></figure><blockquote><p>上面单元格最后一行中的 <code>(6 * 20 * 20,)</code> 参数是因为 PyTorch 在指定张量形状时需要一个元组 - 但是当形状是方法的第一个参数时，它让我们作弊并只使用一个系列整数。在这里，我们必须添加括号和逗号来让方法相信这确实是一个单元素元组。</p></blockquote><p>如果可以， <code>reshape()</code> 将返回要更改的张量的视图 - 即查看同一底层内存区域的单独张量对象。这很重要：这意味着对源张量所做的任何更改都将反映在该张量的视图中，除非您 <code>clone()</code> 它。</p><p>在某些情况下， <code>reshape()</code> 必须返回携带数据副本的张量，这超出了本介绍的范围。有关更多信息，请参阅文档。</p><h2 id="NumPy-Bridge"><a href="#NumPy-Bridge" class="headerlink" title="NumPy Bridge"></a>NumPy Bridge</h2><p>在上面关于广播的部分中，提到 PyTorch 的广播语义与 NumPy 兼容 - 但 PyTorch 和 NumPy 之间的亲缘关系比这更深。</p><p>如果您现有的 ML 或科学代码的数据存储在 NumPy ndarray 中，您可能希望将相同的数据表示为 PyTorch 张量，无论是利用 PyTorch 的 GPU 加速还是利用其构建 ML 模型的高效抽象。在 ndarrays 和 PyTorch 张量之间切换很容易：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">numpy_array = np.ones((<span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(numpy_array)</span><br><span class="line"></span><br><span class="line">pytorch_tensor = torch.from_numpy(numpy_array)</span><br><span class="line"><span class="built_in">print</span>(pytorch_tensor)</span><br></pre></td></tr></table></figure><p>PyTorch 创建一个与 NumPy 数组形状相同并包含相同数据的张量，甚至保留 NumPy 的默认 64 位浮点数据类型。</p><p>转换也可以很容易地以另一种方式进行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pytorch_rand = torch.rand(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(pytorch_rand)</span><br><span class="line"></span><br><span class="line">numpy_rand = pytorch_rand.numpy()</span><br><span class="line"><span class="built_in">print</span>(numpy_rand)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor([[0.8716, 0.2459, 0.3499],</span><br><span class="line">        [0.2853, 0.9091, 0.5695]])</span><br><span class="line">[[0.87163675 0.2458961  0.34993553]</span><br><span class="line"> [0.2853077  0.90905803 0.5695162 ]]</span><br></pre></td></tr></table></figure><p>重要的是要知道这些转换后的对象使用与其源对象相同的底层内存，这意味着对一个对象的更改会反映在另一个对象中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">numpy_array[1, 1] = 23</span><br><span class="line">print(pytorch_tensor)</span><br><span class="line"></span><br><span class="line">pytorch_rand[1, 1] = 17</span><br><span class="line">print(numpy_rand)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>如何创建张量，随机数种子，张量的类型</li><li>张量的计算，张量计算的限制<ul><li>张量的广播算法，为什么需要，限制条件是什么</li></ul></li><li>张量的原地运算符</li><li>如何复制张量，张量的引用和复制，张量复制的自动求导问题。</li><li>如何使用GPU加速，优雅健壮的GPU代码书写方式，多GPU如何使用，不同GPU之间张量不可运算。</li><li>如何拓展张量维度，如何减小张量维度，限制是什么？如何通过改变张量让张量传播算法合法。</li><li>reshape作用和使用场景</li><li>pytorch和numpy之间的关系，cpu上数据共通？如何互相转化。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>08-pytorch-introduction to pytorch</title>
      <link href="/2023/11/13/08-pytorch-introduction-to-pytorch/"/>
      <url>/2023/11/13/08-pytorch-introduction-to-pytorch/</url>
      
        <content type="html"><![CDATA[<h2 id="PyTorch-Tensors"><a href="#PyTorch-Tensors" class="headerlink" title="PyTorch Tensors"></a>PyTorch Tensors</h2><p>首先，我们将导入 pytorch。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br></pre></td></tr></table></figure><p>让我们看看一些基本的张量操作。首先，介绍几种创建张量的方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">z = torch.zeros(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(z)</span><br><span class="line"><span class="built_in">print</span>(z.dtype)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([[0., 0., 0.],</span><br><span class="line">        [0., 0., 0.],</span><br><span class="line">        [0., 0., 0.],</span><br><span class="line">        [0., 0., 0.],</span><br><span class="line">        [0., 0., 0.]])</span><br><span class="line">torch.float32</span><br></pre></td></tr></table></figure><p>上面，我们创建了一个用零填充的 5x3 矩阵，并查询其数据类型，发现零是 32 位浮点数，这是默认的。</p><p>如果您想要整数怎么办？您始终可以覆盖默认值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i = torch.ones((<span class="number">5</span>, <span class="number">3</span>), dtype=torch.int16)</span><br><span class="line"><span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>您可以看到，当我们更改默认值时，张量会在打印时有用地报告这一点。</p><p>随机初始化学习权重是很常见的，通常使用 PRNG 的特定种子来实现结果的可重复性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">torch.manual_seed(<span class="number">1729</span>)</span><br><span class="line">r1 = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A random tensor:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r1)</span><br><span class="line"></span><br><span class="line">r2 = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nA different random tensor:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r2) <span class="comment"># new values</span></span><br><span class="line"></span><br><span class="line">torch.manual_seed(<span class="number">1729</span>)</span><br><span class="line">r3 = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nShould match r1:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r3) <span class="comment"># repeats values of r1 because of re-seed</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A random tensor:</span><br><span class="line">tensor([[<span class="number">0.3126</span>, <span class="number">0.3791</span>],</span><br><span class="line">        [<span class="number">0.3087</span>, <span class="number">0.0736</span>]])</span><br><span class="line"></span><br><span class="line">A different random tensor:</span><br><span class="line">tensor([[<span class="number">0.4216</span>, <span class="number">0.0691</span>],</span><br><span class="line">        [<span class="number">0.2332</span>, <span class="number">0.4047</span>]])</span><br><span class="line"></span><br><span class="line">Should <span class="keyword">match</span> r1:</span><br><span class="line">tensor([[<span class="number">0.3126</span>, <span class="number">0.3791</span>],</span><br><span class="line">        [<span class="number">0.3087</span>, <span class="number">0.0736</span>]])</span><br></pre></td></tr></table></figure><p>PyTorch 张量直观地执行算术运算。相似形状的张量可以相加、相乘等。标量的运算分布在张量上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ones = torch.ones(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(ones)</span><br><span class="line"></span><br><span class="line">twos = torch.ones(<span class="number">2</span>, <span class="number">3</span>) * <span class="number">2</span> <span class="comment"># every element is multiplied by 2</span></span><br><span class="line"><span class="built_in">print</span>(twos)</span><br><span class="line"></span><br><span class="line">threes = ones + twos       <span class="comment"># addition allowed because shapes are similar</span></span><br><span class="line"><span class="built_in">print</span>(threes)              <span class="comment"># tensors are added element-wise</span></span><br><span class="line"><span class="built_in">print</span>(threes.shape)        <span class="comment"># this has the same dimensions as input tensors</span></span><br><span class="line"></span><br><span class="line">r1 = torch.rand(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">r2 = torch.rand(<span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># uncomment this line to get a runtime error</span></span><br><span class="line"><span class="comment"># r3 = r1 + r2</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tensor([[1., 1., 1.],</span><br><span class="line">        [1., 1., 1.]])</span><br><span class="line">tensor([[2., 2., 2.],</span><br><span class="line">        [2., 2., 2.]])</span><br><span class="line">tensor([[3., 3., 3.],</span><br><span class="line">        [3., 3., 3.]])</span><br><span class="line">torch.Size([2, 3])</span><br></pre></td></tr></table></figure><p>以下是可用数学运算的一小部分示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">r = (torch.rand(<span class="number">2</span>, <span class="number">2</span>) - <span class="number">0.5</span>) * <span class="number">2</span> <span class="comment"># values between -1 and 1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A random matrix, r:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Common mathematical operations are supported:</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nAbsolute value of r:&#x27;</span>)<span class="comment"># 绝对值</span></span><br><span class="line"><span class="built_in">print</span>(torch.<span class="built_in">abs</span>(r))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ...as are trigonometric functions:</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nInverse sine of r:&#x27;</span>)<span class="comment"># sin计算</span></span><br><span class="line"><span class="built_in">print</span>(torch.asin(r))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ...and linear algebra operations like determinant and singular value decomposition</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nDeterminant of r:&#x27;</span>)<span class="comment"># 行列式</span></span><br><span class="line"><span class="built_in">print</span>(torch.det(r))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nSingular value decomposition of r:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(torch.svd(r)) <span class="comment"># 矩阵的奇异值分解</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ...and statistical and aggregate operations:</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nAverage and standard deviation of r:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(torch.std_mean(r)) <span class="comment"># 平均值和标准差</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nMaximum value of r:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(torch.<span class="built_in">max</span>(r)) <span class="comment"># 最大值</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">A random matrix, r:</span><br><span class="line">tensor([[ 0.9956, -0.2232],</span><br><span class="line">        [ 0.3858, -0.6593]])</span><br><span class="line"></span><br><span class="line">Absolute value of r:</span><br><span class="line">tensor([[0.9956, 0.2232],</span><br><span class="line">        [0.3858, 0.6593]])</span><br><span class="line"></span><br><span class="line">Inverse sine of r:</span><br><span class="line">tensor([[ 1.4775, -0.2251],</span><br><span class="line">        [ 0.3961, -0.7199]])</span><br><span class="line"></span><br><span class="line">Determinant of r:</span><br><span class="line">tensor(-0.5703)</span><br><span class="line"></span><br><span class="line">Singular value decomposition of r:</span><br><span class="line">torch.return_types.svd(</span><br><span class="line">U=tensor([[-0.8353, -0.5497],</span><br><span class="line">        [-0.5497,  0.8353]]),</span><br><span class="line">S=tensor([1.1793, 0.4836]),</span><br><span class="line">V=tensor([[-0.8851, -0.4654],</span><br><span class="line">        [ 0.4654, -0.8851]]))</span><br><span class="line"></span><br><span class="line">Average and standard deviation of r:</span><br><span class="line">(tensor(0.7217), tensor(0.1247))</span><br><span class="line"></span><br><span class="line">Maximum value of r:</span><br><span class="line">tensor(0.9956)</span><br></pre></td></tr></table></figure><h2 id="PyTorch-Models"><a href="#PyTorch-Models" class="headerlink" title="PyTorch Models"></a>PyTorch Models</h2><p>我们来谈谈如何在 PyTorch 中表达模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch                     <span class="comment"># for all things PyTorch</span></span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn            <span class="comment"># for torch.nn.Module, the parent object for PyTorch models</span></span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F  <span class="comment"># for the activation function</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/11/13/yZ8xSDdnarG9upw.png" alt="image-20231113104802766"></p><p>上图是 LeNet-5 的图，它是最早的卷积神经网络之一，也是深度学习爆炸式增长的驱动因素之一。它旨在读取手写数字的小图像（MNIST 数据集），并正确分类图像中表示的数字。</p><p>以下是其工作原理的精简版：</p><ul><li>C1 层是一个卷积层，这意味着它会扫描输入图像以查找在训练期<strong>间学到的特征。</strong>它输出一张地图，显示它在图像中看到的每个学习特征的位置。该“激活图”在 S2 层中进行下采样。</li><li>C3 层是另一个卷积层，这次扫描 C1 的激活图<strong>以查找特征组合</strong>。它还提供了一个描述这些特征组合的空间位置的激活图，该激活图在 S4 层中进行下采样。</li><li>最后，最后的全连接层 F5、F6 和 OUTPUT 是一个分类器，它采用最终的激活图，并将其分类为代表 10 个数字的 10 个容器之一。</li></ul><p>我们如何用代码表达这个简单的神经网络？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LeNet</span>(nn.Module):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(LeNet, self).__init__()</span><br><span class="line">        <span class="comment"># 1 input image channel (black &amp; white), 6 output channels, 5x5 square convolution</span></span><br><span class="line">        <span class="comment"># kernel</span></span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, <span class="number">5</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">6</span>, <span class="number">16</span>, <span class="number">5</span>)</span><br><span class="line">        <span class="comment"># an affine operation: y = Wx + b</span></span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">16</span> * <span class="number">5</span> * <span class="number">5</span>, <span class="number">120</span>)  <span class="comment"># 5*5 from image dimension</span></span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">120</span>, <span class="number">84</span>)</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">84</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="comment"># Max pooling over a (2, 2) window</span></span><br><span class="line">        x = F.max_pool2d(F.relu(self.conv1(x)), (<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">        <span class="comment"># If the size is a square you can only specify a single number</span></span><br><span class="line">        x = F.max_pool2d(F.relu(self.conv2(x)), <span class="number">2</span>)</span><br><span class="line">        x = x.view(-<span class="number">1</span>, self.num_flat_features(x))</span><br><span class="line">        x = F.relu(self.fc1(x))</span><br><span class="line">        x = F.relu(self.fc2(x))</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">num_flat_features</span>(<span class="params">self, x</span>):</span><br><span class="line">        size = x.size()[<span class="number">1</span>:]  <span class="comment"># all dimensions except the batch dimension</span></span><br><span class="line">        num_features = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> size:</span><br><span class="line">            num_features *= s</span><br><span class="line">        <span class="keyword">return</span> num_features</span><br></pre></td></tr></table></figure><p>这演示了典型 PyTorch 模型的结构：</p><ul><li>它继承自 <code>torch.nn.Module</code> - 模块可以嵌套 - 事实上，甚至 <code>Conv2d</code> 和 <code>Linear</code> 层类也继承自 <code>torch.nn.Module</code> 。</li><li>模型将具有 <code>__init__()</code> 函数，在其中实例化其层，并加载它可能需要的任何数据工件（例如，NLP 模型可能加载词汇表）。</li><li>模型将具有 <code>forward()</code> 函数。这是实际计算发生的地方：输入通过网络层和各种函数传递以生成输出。</li><li>除此之外，您可以像任何其他 Python 类一样构建模型类，添加支持模型计算所需的任何属性和方法。</li></ul><p>让我们实例化该对象并通过它运行示例输入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">net = LeNet()</span><br><span class="line"><span class="built_in">print</span>(net)                         <span class="comment"># what does the object tell us about itself?</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.rand(<span class="number">1</span>, <span class="number">1</span>, <span class="number">32</span>, <span class="number">32</span>)   <span class="comment"># stand-in for a 32x32 black &amp; white image</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nImage batch shape:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.shape)</span><br><span class="line"></span><br><span class="line">output = net(<span class="built_in">input</span>)                <span class="comment"># we don&#x27;t call forward() directly</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nRaw output:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br><span class="line"><span class="built_in">print</span>(output.shape)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">LeNet(</span><br><span class="line">  (conv1): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))</span><br><span class="line">  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))</span><br><span class="line">  (fc1): Linear(in_features=400, out_features=120, bias=True)</span><br><span class="line">  (fc2): Linear(in_features=120, out_features=84, bias=True)</span><br><span class="line">  (fc3): Linear(in_features=84, out_features=10, bias=True)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">Image batch shape:</span><br><span class="line">torch.Size([1, 1, 32, 32])</span><br><span class="line"></span><br><span class="line">Raw output:</span><br><span class="line">tensor([[ 0.0898,  0.0318,  0.1485,  0.0301, -0.0085, -0.1135, -0.0296,  0.0164,</span><br><span class="line">          0.0039,  0.0616]], grad_fn=&lt;AddmmBackward0&gt;)</span><br><span class="line">torch.Size([1, 10])</span><br></pre></td></tr></table></figure><p>上面发生了一些重要的事情：</p><p>首先，我们实例化 <code>LeNet</code> 类，然后打印 <code>net</code> 对象。 <code>torch.nn.Module</code> 的子类将报告它创建的图层及其形状和参数。如果您想了解模型处理的要点，这可以提供模型的便捷概述。</p><p>下面，我们创建一个虚拟输入，表示具有 1 个颜色通道的 32x32 图像。通常，您会加载图像图块并将其转换为这种形状的张量。</p><p>您可能已经注意到我们的张量有一个额外的维度 - 批量维度。 PyTorch 模型假设它们正在处理批量数据 - 例如，一批 16 个图像图块的形状为 <code>(16, 1, 32, 32)</code> 。由于我们只使用一张图像，因此我们创建了一批形状为 <code>(1, 1, 32, 32)</code> 的 1 图像。</p><p>我们通过像函数一样调用模型来请求模型进行推理： <code>net(input)</code> 。此调用的输出代表模型对输入代表特定数字的置信度。 （由于模型的这个实例还没有学到任何东西，所以我们不应该期望在输出中看到任何信号。）查看 <code>output</code> 的形状，我们可以看到它还有一个批次维度，其大小应始终与输入批次维度匹配。如果我们传入 16 个实例的输入批次， <code>output</code> 将具有 <code>(16, 10)</code> 的形状。</p><h2 id="Datasets-and-Dataloaders"><a href="#Datasets-and-Dataloaders" class="headerlink" title="Datasets and Dataloaders"></a>Datasets and Dataloaders</h2><p>下面，我们将演示如何使用 TorchVision 中可供下载的开放访问数据集之一、如何转换图像以供模型使用，以及如何使用 DataLoader 将批量数据提供给模型。</p><p>我们需要做的第一件事是将传入的图像转换为 PyTorch 张量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#%matplotlib inline</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"></span><br><span class="line">transform = transforms.Compose(</span><br><span class="line">    [transforms.ToTensor(),</span><br><span class="line">     transforms.Normalize((<span class="number">0.4914</span>, <span class="number">0.4822</span>, <span class="number">0.4465</span>), (<span class="number">0.2470</span>, <span class="number">0.2435</span>, <span class="number">0.2616</span>))])</span><br></pre></td></tr></table></figure><p>在这里，我们为输入指定两种转换：</p><ul><li><code>transforms.ToTensor()</code> 将 Pillow 加载的图像转换为 PyTorch 张量。</li><li><code>transforms.Normalize()</code> 调整张量的值，使其平均值为零，标准差为 1.0。大多数激活函数在 x &#x3D; 0 附近有最强的梯度，因此将数据集中在那里可以加快学习速度。传递给变换的值是数据集中图像的 rgb 值的平均值（第一个元组）和标准差（第二个元组）。您可以通过运行以下几行代码自行计算这些值：</li></ul><p>还有更多可用的变换，包括裁剪、居中、旋转和反射。</p><p>接下来，我们将创建 CIFAR10 数据集的实例。这是一组 32x32 彩色图像图块，代表 10 类物体：6 种动物（鸟、猫、鹿、狗、青蛙、马）和 4 种车辆（飞机、汽车、轮船、卡车）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">trainset = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./data&#x27;</span>, train=<span class="literal">True</span>,</span><br><span class="line">                                        download=<span class="literal">True</span>, transform=transform)</span><br></pre></td></tr></table></figure><blockquote><p>When you run the cell above, it may take a little time for the dataset to download.</p></blockquote><p>这是在 PyTorch 中创建数据集对象的示例。可下载的数据集（如上面的 CIFAR-10）是 <code>torch.utils.data.Dataset</code> 的子类。 PyTorch 中的 <code>Dataset</code> 类包括 TorchVision、Torchtext 和 TorchAudio 中的可下载数据集，以及实用数据集类，例如 <code>torchvision.datasets.ImageFolder</code> ，它将读取标记图像的文件夹。您还可以创建自己的 <code>Dataset</code> 子类。</p><p>当我们实例化数据集时，我们需要告诉它一些事情：</p><ul><li>我们想要数据存放的文件系统路径。</li><li>我们是否使用这套数据集进行训练；大多数数据集将分为训练和测试子集。</li><li>如果我们还没有下载数据集，我们是否愿意下载。</li><li>我们想要应用于数据的转换。</li></ul><p>数据集准备好后，您可以将其提供给 <code>DataLoader</code> ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">trainloader = torch.utils.data.DataLoader(trainset, batch_size=<span class="number">4</span>,</span><br><span class="line">                                          shuffle=<span class="literal">True</span>, num_workers=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><code>Dataset</code> 子类包装对数据的访问，并专门针对其所服务的数据类型。 <code>DataLoader</code> 对数据一无所知，但会使用您指定的参数将 <code>Dataset</code> 提供的输入张量组织成批次。</p><p>在上面的示例中，我们要求 <code>DataLoader</code> 为我们提供来自 <code>trainset</code> 的 4 个图像批次，随机化它们的顺序 ( <code>shuffle=True</code> )，然后我们告诉它启动两个工作进程以从磁盘加载数据。</p><p>最好的做法是可视化 <code>DataLoader</code> 服务的批次：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">classes = (<span class="string">&#x27;plane&#x27;</span>, <span class="string">&#x27;car&#x27;</span>, <span class="string">&#x27;bird&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;deer&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;frog&#x27;</span>, <span class="string">&#x27;horse&#x27;</span>, <span class="string">&#x27;ship&#x27;</span>, <span class="string">&#x27;truck&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">imshow</span>(<span class="params">img</span>):</span><br><span class="line">    img = img / <span class="number">2</span> + <span class="number">0.5</span>     <span class="comment"># unnormalize</span></span><br><span class="line">    npimg = img.numpy()</span><br><span class="line">    plt.imshow(np.transpose(npimg, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># get some random training images</span></span><br><span class="line">dataiter = <span class="built_in">iter</span>(trainloader)</span><br><span class="line">images, labels = <span class="built_in">next</span>(dataiter)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show images</span></span><br><span class="line">imshow(torchvision.utils.make_grid(images))</span><br><span class="line"><span class="comment"># print labels</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27; &#x27;</span>.join(<span class="string">&#x27;%5s&#x27;</span> % classes[labels[j]] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ship   car horse  ship</span><br></pre></td></tr></table></figure><p>运行上面的单元格应该会向您显示一条由四个图像组成的条带，以及每个图像的正确标签。</p><h2 id="Training-Your-PyTorch-Model"><a href="#Training-Your-PyTorch-Model" class="headerlink" title="Training Your PyTorch Model"></a>Training Your PyTorch Model</h2><p>让我们将所有部分放在一起，并训练一个模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#%matplotlib inline</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><p>首先，我们需要训练和测试数据集。如果尚未下载，请运行下面的单元格以确保数据集已下载。 （可能需要一分钟。）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">transform = transforms.Compose(</span><br><span class="line">    [transforms.ToTensor(),</span><br><span class="line">     transforms.Normalize((<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), (<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>))])</span><br><span class="line"></span><br><span class="line">trainset = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./data&#x27;</span>, train=<span class="literal">True</span>,</span><br><span class="line">                                        download=<span class="literal">True</span>, transform=transform)</span><br><span class="line">trainloader = torch.utils.data.DataLoader(trainset, batch_size=<span class="number">4</span>,</span><br><span class="line">                                          shuffle=<span class="literal">True</span>, num_workers=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">testset = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./data&#x27;</span>, train=<span class="literal">False</span>,</span><br><span class="line">                                       download=<span class="literal">True</span>, transform=transform)</span><br><span class="line">testloader = torch.utils.data.DataLoader(testset, batch_size=<span class="number">4</span>,</span><br><span class="line">                                         shuffle=<span class="literal">False</span>, num_workers=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">classes = (<span class="string">&#x27;plane&#x27;</span>, <span class="string">&#x27;car&#x27;</span>, <span class="string">&#x27;bird&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;deer&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;frog&#x27;</span>, <span class="string">&#x27;horse&#x27;</span>, <span class="string">&#x27;ship&#x27;</span>, <span class="string">&#x27;truck&#x27;</span>)</span><br></pre></td></tr></table></figure><p>我们将对 <code>DataLoader</code> 的输出进行检查：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># functions to show an image</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">imshow</span>(<span class="params">img</span>):</span><br><span class="line">    img = img / <span class="number">2</span> + <span class="number">0.5</span>     <span class="comment"># unnormalize</span></span><br><span class="line">    npimg = img.numpy()</span><br><span class="line">    plt.imshow(np.transpose(npimg, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># get some random training images</span></span><br><span class="line">dataiter = <span class="built_in">iter</span>(trainloader)</span><br><span class="line">images, labels = <span class="built_in">next</span>(dataiter)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show images</span></span><br><span class="line">imshow(torchvision.utils.make_grid(images))</span><br><span class="line"><span class="comment"># print labels</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27; &#x27;</span>.join(<span class="string">&#x27;%5s&#x27;</span> % classes[labels[j]] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)))</span><br></pre></td></tr></table></figure><p>这是我们要训练的模型。如果它看起来很熟悉，那是因为它是 LeNet 的一个变体（在本视频前面讨论过），适用于 3 色图像。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Net</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Net, self).__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">3</span>, <span class="number">6</span>, <span class="number">5</span>)</span><br><span class="line">        self.pool = nn.MaxPool2d(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">6</span>, <span class="number">16</span>, <span class="number">5</span>)</span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">16</span> * <span class="number">5</span> * <span class="number">5</span>, <span class="number">120</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">120</span>, <span class="number">84</span>)</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">84</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.pool(F.relu(self.conv1(x)))</span><br><span class="line">        x = self.pool(F.relu(self.conv2(x)))</span><br><span class="line">        x = x.view(-<span class="number">1</span>, <span class="number">16</span> * <span class="number">5</span> * <span class="number">5</span>)</span><br><span class="line">        x = F.relu(self.fc1(x))</span><br><span class="line">        x = F.relu(self.fc2(x))</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">net = Net()</span><br></pre></td></tr></table></figure><p>我们需要的最后一个成分是损失函数和优化器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">criterion = nn.CrossEntropyLoss()</span><br><span class="line">optimizer = optim.SGD(net.parameters(), lr=<span class="number">0.001</span>, momentum=<span class="number">0.9</span>)</span><br></pre></td></tr></table></figure><p>正如本视频前面所讨论的，损失函数是衡量模型预测与理想输出的距离的指标。交叉熵损失是像我们这样的分类模型的典型损失函数。</p><p>优化器是驱动学习的动力。在这里，我们创建了一个实现随机梯度下降的优化器，这是更简单的优化算法之一。除了算法的参数，如学习率 ( <code>lr</code> ) 和动量，我们还传入 <code>net.parameters()</code> ，它是模型中所有学习权重的集合 - 这就是优化器进行调整。</p><p>最后，所有这些都被组装到训练循环中。继续运行此单元，因为执行可能需要几分钟：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):  <span class="comment"># loop over the dataset multiple times</span></span><br><span class="line"></span><br><span class="line">    running_loss = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i, data <span class="keyword">in</span> <span class="built_in">enumerate</span>(trainloader, <span class="number">0</span>):</span><br><span class="line">        <span class="comment"># get the inputs</span></span><br><span class="line">        inputs, labels = data</span><br><span class="line"></span><br><span class="line">        <span class="comment"># zero the parameter gradients</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># forward + backward + optimize</span></span><br><span class="line">        outputs = net(inputs)</span><br><span class="line">        loss = criterion(outputs, labels)</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print statistics</span></span><br><span class="line">        running_loss += loss.item()</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2000</span> == <span class="number">1999</span>:    <span class="comment"># print every 2000 mini-batches</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[%d, %5d] loss: %.3f&#x27;</span> %</span><br><span class="line">                  (epoch + <span class="number">1</span>, i + <span class="number">1</span>, running_loss / <span class="number">2000</span>))</span><br><span class="line">            running_loss = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Finished Training&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在这里，我们只进行 2 个训练周期（第 1 行）——即对训练数据集进行两次遍历。每个通道都有一个内部循环，用于迭代训练数据（第 4 行），提供批量转换后的输入图像及其正确标签。</p><p>将梯度归零（第 9 行）是重要的一步。梯度在一批中累积；如果我们不为每个批次重置它们，它们将不断累积，这将提供不正确的梯度值，使学习变得不可能。</p><p>在第 12 行中，我们询问模型对此批次的预测。在下面的第 (13) 行中，我们计算损失 - <code>outputs</code> （模型预测）和 <code>labels</code> （正确输出）之间的差异。</p><p>在第 14 行中，我们执行 <code>backward()</code> 遍，并计算指导学习的梯度。</p><p>在第 15 行中，优化器执行一个学习步骤 - 它使用 <code>backward()</code> 调用中的梯度将学习权重推向它认为会减少损失的方向。</p><p>循环的其余部分对纪元数、已完成的训练实例数以及训练循环中收集的损失进行一些简单的报告。</p><p>当您运行上面的单元格时，您应该看到如下内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,  <span class="number">2000</span>] loss: <span class="number">2.235</span></span><br><span class="line">[<span class="number">1</span>,  <span class="number">4000</span>] loss: <span class="number">1.940</span></span><br><span class="line">[<span class="number">1</span>,  <span class="number">6000</span>] loss: <span class="number">1.713</span></span><br><span class="line">[<span class="number">1</span>,  <span class="number">8000</span>] loss: <span class="number">1.573</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">10000</span>] loss: <span class="number">1.507</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">12000</span>] loss: <span class="number">1.442</span></span><br><span class="line">[<span class="number">2</span>,  <span class="number">2000</span>] loss: <span class="number">1.378</span></span><br><span class="line">[<span class="number">2</span>,  <span class="number">4000</span>] loss: <span class="number">1.364</span></span><br><span class="line">[<span class="number">2</span>,  <span class="number">6000</span>] loss: <span class="number">1.349</span></span><br><span class="line">[<span class="number">2</span>,  <span class="number">8000</span>] loss: <span class="number">1.319</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">10000</span>] loss: <span class="number">1.284</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">12000</span>] loss: <span class="number">1.267</span></span><br><span class="line">Finished Training</span><br></pre></td></tr></table></figure><p>请注意，损失是单调下降的，表明我们的模型正在继续提高其在训练数据集上的性能。</p><p>作为最后一步，我们应该检查模型是否确实在进行一般学习，而不是简单地“记住”数据集。这称为过度拟合，通常表明数据集太小（没有足够的示例用于一般学习），或者模型的学习参数多于正确建模数据集所需的参数。</p><p>这就是数据集被分为训练和测试子集的原因 - 为了测试模型的通用性，我们要求它对尚未训练的数据进行预测：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">correct = <span class="number">0</span></span><br><span class="line">total = <span class="number">0</span></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> testloader:</span><br><span class="line">        images, labels = data</span><br><span class="line">        outputs = net(images)</span><br><span class="line">        _, predicted = torch.<span class="built_in">max</span>(outputs.data, <span class="number">1</span>)</span><br><span class="line">        total += labels.size(<span class="number">0</span>)</span><br><span class="line">        correct += (predicted == labels).<span class="built_in">sum</span>().item()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Accuracy of the network on the 10000 test images: %d %%&#x27;</span> % (</span><br><span class="line">    <span class="number">100</span> * correct / total))</span><br></pre></td></tr></table></figure><p>如果您继续跟进，您应该会发现该模型此时的准确率大约为 50%。这并不完全是最先进的，但它比我们期望的随机输出 10% 的准确度要好得多。这表明模型中确实发生了一些一般性学习。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>tensor的创建，类型的修改，通过随机数种子固定初始随机数，tensor计算</li><li>LeNet-5的图卷积层1，卷积层3的作用？如何搭建这个网络？<ul><li>C1 层是一个卷积层，显示它在图像中看到的<strong>每个学习特征的位置</strong></li><li>C3 层是另一个卷积层，个描述这些<strong>特征组合</strong>的空间位置的激活图</li></ul></li><li>如何输入网络，如何获得网络输出。什么叫做推力。</li><li>如何加载模型，如何转化数据类型，使其可以供网络使用。</li><li>如何变化图像</li><li>如何可视化显示数据集，dataset，dataloader的配置和使用</li><li>如何训练网络，损失函数和优化器的作用，如何判断训练效果，如何判断是否是一般学习（区别过拟合情况）</li><li>过拟合可能出现的情况是？<ul><li>这称为过度拟合，通常表明数据集太小（没有足够的示例用于一般学习），或者模型的学习参数多于正确建模数据集所需的参数。</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LootParams相关解析</title>
      <link href="/2023/11/12/Minecraft%E6%BA%90%E7%A0%81-03-LootParams%E7%9B%B8%E5%85%B3%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/11/12/Minecraft%E6%BA%90%E7%A0%81-03-LootParams%E7%9B%B8%E5%85%B3%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="LootParams类"><a href="#LootParams类" class="headerlink" title="LootParams类"></a>LootParams类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LootParams</span> &#123;</span><br><span class="line">  ServerLevel ; <span class="comment">// 服务器世界对象</span></span><br><span class="line">     Map&lt;LootContextParam&lt;?&gt;, Object&gt; ; <span class="comment">// ,固定参数map</span></span><br><span class="line">     Map&lt;ResourceLocation, LootParams.DynamicDrop&gt; dynamicDrops; <span class="comment">//动态掉落map</span></span><br><span class="line">      luck; <span class="comment">//,幸运值</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//从固定参数map获取指定参数,如果不存在抛出异常</span></span><br><span class="line">getParameter(LootContextParam&lt;T&gt; ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//,从固定参数map获取指定参数,如果不存在返回null</span></span><br><span class="line">getOptionalParameter(LootContextParam&lt;T&gt; ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//从固定参数map获取指定参数,如果不存在返回null</span></span><br><span class="line">getParamOrNull( ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//addDynamicDrops方法,向dynamicDrops动态掉落map中添加指定资源位置的动态掉落</span></span><br><span class="line">    addDynamicDrops() &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//返回luck幸运值属性</span></span><br><span class="line">   <span class="type">float</span> <span class="title function_">getLuck</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//内部静态类Builder</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Builder</span> &#123;</span><br><span class="line">       ServerLevel level;<span class="comment">//服务器世界对象</span></span><br><span class="line">      Map&lt;LootContextParam&lt;?&gt;, Object&gt; params <span class="comment">//固定参数map,初始化为空map</span></span><br><span class="line">      Map&lt;ResourceLocation, LootParams.DynamicDrop&gt; dynamicDrops <span class="comment">//动态掉落map,初始化为空map</span></span><br><span class="line">      <span class="keyword">private</span> <span class="type">float</span> luck;<span class="comment">//幸运值</span></span><br><span class="line"><span class="comment">//类构造函数,参数为服务器世界对象,初始化level属性</span></span><br><span class="line">      <span class="keyword">public</span> <span class="title function_">Builder</span><span class="params">(ServerLevel )</span> &#123;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//方法,返回level属性</span></span><br><span class="line">      <span class="keyword">public</span> ServerLevel <span class="title function_">getLevel</span><span class="params">()</span> &#123;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//withParameter方法,向固定参数map中put指定参数</span></span><br><span class="line">       &lt;T&gt; LootParams.Builder <span class="title function_">withParameter</span><span class="params">(LootContextParam&lt;T&gt; ,)</span> &#123;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//可选地向固定参数map中put指定参数,如果值为空则remove</span></span><br><span class="line">       &lt;T&gt; LootParams.Builder <span class="title function_">withOptionalParameter</span><span class="params">(LootContextParam&lt;T&gt;, <span class="meta">@Nullable</span> T )</span> &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//getParameter方法,从固定参数map获取指定参数,如果不存在抛出异常</span></span><br><span class="line">       &lt;T&gt; T <span class="title function_">getParameter</span><span class="params">(LootContextParam&lt;T&gt; )</span> &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//getOptionalParameter方法,从固定参数map获取指定参数,如果不存在返回null</span></span><br><span class="line"></span><br><span class="line">      <span class="meta">@Nullable</span></span><br><span class="line">       &lt;T&gt; T <span class="title function_">getOptionalParameter</span><span class="params">(LootContextParam&lt;T&gt; )</span> &#123;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//withDynamicDrop方法,向dynamicDrops动态掉落map中put指定资源位置的动态掉落,不允许重复</span></span><br><span class="line">       LootParams.Builder <span class="title function_">withDynamicDrop</span><span class="params">(ResourceLocation , LootParams.DynamicDrop )</span> &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//设置luck幸运值属性</span></span><br><span class="line">      <span class="keyword">public</span> LootParams.Builder <span class="title function_">withLuck</span><span class="params">(<span class="type">float</span> )</span> &#123;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">// create方法,通过LootContextParamSet验证参数,然后构造LootParams返回</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">//create方法接受一个LootContextParamSet类型的参数，首先计算出params映射中的键与p_287701_的getAllowed方法返回的集合的差集，如果这个差集不为空，则抛出IllegalArgumentException异常，然后计算出p_287701_的getRequired方法返回的集合与params映射中的键的差集，如果这个差集不为空，则抛出IllegalArgumentException异常，否则返回一个新的LootParams对象</span></span><br><span class="line">      <span class="keyword">public</span> LootParams <span class="title function_">create</span><span class="params">(LootContextParamSet )</span> &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法接受一个Consumer&lt;ItemStack&gt;类型的参数。</span></span><br><span class="line">   <span class="meta">@FunctionalInterface</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DynamicDrop</span> &#123;</span><br><span class="line">      <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(Consumer&lt;ItemStack&gt;)</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="LootContextParam-类"><a href="#LootContextParam-类" class="headerlink" title="LootContextParam 类"></a>LootContextParam 类</h1><p>主要目的是定义一个可以存储资源位置的参数类，这个类可以被用于表示游戏中的各种上下文参数，例如掉落物的位置，玩家的位置等等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//主要目的是定义一个可以存储资源位置的参数类，这个类可以被用于表示游戏中的各种上下文参数，例如掉落物的位置，玩家的位置等等</span></span><br><span class="line">  LootContextParam&lt;T&gt; &#123;</span><br><span class="line">    <span class="comment">// 定义了一个私有的、不可变的ResourceLocation类型的成员变量name。这个变量在这个类的构造函数中被初始化，并且在类的其他方法中可以被访问。</span></span><br><span class="line">      name;</span><br><span class="line"><span class="comment">//LootContextParam类的构造函数，它接受一个ResourceLocation类型的参数p_81283_，并将其赋值给成员变量name。</span></span><br><span class="line">    LootContextParam( ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//返回值为ResourceLocation类型。这个方法返回成员变量name的值。</span></span><br><span class="line">    ResourceLocation <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//这个方法的目的是提供一个表示这个对象的字符串，当我们试图将这个对象转换为字符串时，就会调用这个方法。</span></span><br><span class="line">    String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="LootContextParams类"><a href="#LootContextParams类" class="headerlink" title="LootContextParams类"></a>LootContextParams类</h1><p>定义了一个名为<code>LootContextParams</code>的类，这个类用于创建各种类型的掉落物上下文参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LootContextParams</span> &#123;</span><br><span class="line"><span class="string">&quot;last_damage_player&quot;</span></span><br><span class="line"><span class="string">&quot;damage_source&quot;</span></span><br><span class="line"><span class="string">&quot;killer_entity&quot;</span></span><br><span class="line"><span class="string">&quot;direct_killer_entity&quot;</span></span><br><span class="line"><span class="string">&quot;origin&quot;</span></span><br><span class="line"><span class="string">&quot;block_state&quot;</span></span><br><span class="line"><span class="string">&quot;block_entity&quot;</span></span><br><span class="line"><span class="string">&quot;tool&quot;</span></span><br><span class="line"><span class="string">&quot;explosion_radius&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="block类部分代码"><a href="#block类部分代码" class="headerlink" title="block类部分代码"></a>block类部分代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">      dropResources() &#123;</span><br><span class="line">       <span class="comment">//是否是ServerLevel类的实例</span></span><br><span class="line">          <span class="comment">//先调用getDrops方法并，然后对返回的列表进行遍历，popResource方法的目的是在世界中掉落一个物品。</span></span><br><span class="line">          <span class="comment">//用了pspawnAfterBreak方法。这个方法的目的是在方块被挖掘后生成一些实体，例如掉落的物品或者生成的实体。</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">void</span> <span class="title function_">dropResources</span><span class="params">()</span> &#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">void</span> <span class="title function_">dropResources</span><span class="params">(</span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line">       <span class="comment">// 掉落经验</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个方法是在玩家挖掘方块时被调用的</span></span><br><span class="line">     playerDestroy() &#123;</span><br><span class="line">       <span class="comment">//调用了Player的causeFoodExhaustion方法，并将0.005F作为参数传入。这个方法的目的是使玩家因为挖掘方块而感到饥饿，0.005F是饥饿的程度。</span></span><br><span class="line">      <span class="comment">//Forge: Don&#x27;t drop xp as part of the resources as it is handled by the patches in ServerPlayerGameMode#destroyBlock</span></span><br><span class="line">       <span class="comment">//这个方法的目的是在玩家挖掘方块时掉落资源，false表示不掉落经验值。注释中提到的Forge是一个用于修改和扩展Minecraft的模组，它在ServerPlayerGameMode#destroyBlock方法中处理了经验值的掉落。</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义了一个公共的、静态的方法getDrops，它接受四个参数：一个BlockState类型的参数，一个ServerLevel类型的参数，一个BlockPos类型的参数，以及一个可以为null的BlockEntity类型的参数。这个方法返回一个ItemStack类型的列表。</span></span><br><span class="line"><span class="comment">// 返回对应的方块的掉落物List</span></span><br><span class="line">     List&lt;ItemStack&gt; <span class="title function_">getDrops</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">//调用了blockstate的getDrops方法，并将lootparams$builder作为参数传入，然后返回这个方法的结果。</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的、静态的方法getDrops，这个方法返回一个ItemStack类型的列表。</span></span><br><span class="line"><span class="comment">// 返回对应的方块的掉落物List 这几个都是重载方法</span></span><br><span class="line">     List&lt;ItemStack&gt; getDrops</span><br><span class="line">      BlockState , ServerLevel , BlockPos ,  BlockEntity , Entity , ItemStack</span><br><span class="line">   ) &#123;</span><br><span class="line">       <span class="comment">//调用了blockstate的getDrops方法，并将lootparams$builder作为参数传入，然后返回这个方法的结果。</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="blockstate部分代码"><a href="#blockstate部分代码" class="headerlink" title="blockstate部分代码"></a>blockstate部分代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">        getDrops() &#123;</span><br><span class="line">          <span class="comment">//调用了this.getBlock()的getDrops方法，并将this.asState()和p_287688_作为参数传入，然后返回这个方法的结果。这个方法的目的是获取方块的掉落物</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义了一个公共的、已被弃用的方法getDrops，它接受两个参数：一个BlockState类型的和一个LootParams.Builder类型的，并返回一个ItemStack类型的列表</span></span><br><span class="line">     getDrops(  ) &#123;</span><br><span class="line">       <span class="comment">//调用了this的getLootTable方法，并将返回的结果赋值给ResourceLocation类型的变量resourcelocation。这个方法的目的是获取方块的掉落物表。</span></span><br><span class="line">       <span class="comment">//检查resourcelocation是否等于BuiltInLootTables.EMPTY。如果等于，则返回一个空的列表</span></span><br><span class="line">      <span class="keyword">if</span> () &#123;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//这个方法的目的是创建一个新的LootParams对象，并设置其参数。</span></span><br><span class="line">          <span class="comment">//这个方法的目的是获取LootParams对象的世界。</span></span><br><span class="line">          <span class="comment">//最后将返回的结果赋值给LootTable类型的变量</span></span><br><span class="line">          <span class="comment">//码调用了loottable的getRandomItems方法，并将lootparams作为参数传入，然后返回这个方法的结果。这个方法的目的是获取随机的掉落物。</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="ServerPlayerGameMode类部分代码"><a href="#ServerPlayerGameMode类部分代码" class="headerlink" title="ServerPlayerGameMode类部分代码"></a>ServerPlayerGameMode类部分代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个方法是在玩家挖掘方块时被调用的</span></span><br><span class="line">     destroyBlock(BlockPos) &#123;</span><br><span class="line">       <span class="comment">//调用了this.level的getBlockState方法，然后将返回的结果赋值给BlockState类型的变量。这个方法的目的是获取指定位置的方块状态。</span></span><br><span class="line">       <span class="comment">//调用了net.neoforged.neoforge.common.CommonHooks.onBlockBreakEvent方法，并将level，gameModeForPlayer，player作为参数传入，然后将返回的结果赋值给整型变量exp。这个方法的目的是处理玩家挖掘方块时的事件。</span></span><br><span class="line">       <span class="comment">//检查exp是否等于-1。如果等于，则返回false。</span></span><br><span class="line">      <span class="keyword">if</span> () &#123;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//获取指定位置的方块实体。</span></span><br><span class="line">          <span class="comment">//获取方块状态对应的方块。</span></span><br><span class="line">          <span class="comment">//检查block是否是GameMasterBlock类的实例，以及this.player是否可以使用GameMasterBlock。如果block是GameMasterBlock类的实例，但this.player不能使用GameMasterBlock，则调用this.level的sendBlockUpdated方法，并返回false。</span></span><br><span class="line">         <span class="keyword">if</span> () &#123;</span><br><span class="line">             <span class="comment">//查看是否能破坏方块产生掉落，不能情况下直接返回</span></span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> () &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">             </span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> () &#123;</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="comment">//查this是否是创造模式。如果是，则调用removeBlock方法并将p_9281_和false作为参数传入，然后返回true。</span></span><br><span class="line">            <span class="keyword">if</span> () &#123;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//这个方法的目的是获取玩家主手中的物品。</span></span><br><span class="line">                <span class="comment">//这个方法的目的是检查玩家是否可以采集这个方块。</span></span><br><span class="line">                <span class="comment">//这个方法的目的是在挖掘方块时使用物品。</span></span><br><span class="line">               <span class="keyword">if</span> ()</span><br><span class="line">                   <span class="comment">//这个方法的目的是在玩家销毁物品时触发事件。</span></span><br><span class="line">                <span class="comment">//这个方法的目的是移除一个方块。</span></span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> ()) &#123;</span><br><span class="line">               &#125;</span><br><span class="line"><span class="comment">//检查flag和flag1是否都为true。如果是，则调用block的playerDestroy方法，并将this.level，this.player，p_9281_，blockstate，blockentity，和itemstack1作为参数传入。这个方法的目的是处理玩家挖掘方块时的行为。 </span></span><br><span class="line">                <span class="comment">// true就获得掉落物表并掉落</span></span><br><span class="line">               <span class="keyword">if</span> ()</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pickaxe代码简介</title>
      <link href="/2023/11/12/Minecraft%E6%BA%90%E7%A0%81-02-pickaxeitem,drigoutitem,item%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81%E7%AE%80%E4%BB%8B/"/>
      <url>/2023/11/12/Minecraft%E6%BA%90%E7%A0%81-02-pickaxeitem,drigoutitem,item%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="PickaxeItem类"><a href="#PickaxeItem类" class="headerlink" title="PickaxeItem类"></a>PickaxeItem类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义了一个名为PickaxeItem的类，这个类继承自DiggerItem。</span></span><br><span class="line"> PickaxeItem 继承 DiggerItem </span><br><span class="line">    <span class="comment">//它接受四个参数：一个Tier对象，一个整数，一个浮点数和一个Item.Properties对象。这个构造函数用于初始化PickaxeItem对象。</span></span><br><span class="line">PickaxeItem()</span><br><span class="line"><span class="comment">//义了一个名为canPerformAction的公共方法，它接受两个参数：一个ItemStack对象和一个net.neoforged.neoforge.common.ToolAction对象。这个方法用于检查这个工具是否可以执行给定的动作。</span></span><br><span class="line">canPerformAction()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="DiggerItem类"><a href="#DiggerItem类" class="headerlink" title="DiggerItem类"></a>DiggerItem类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 类继承自TieredItem</span></span><br><span class="line"><span class="comment">// 实现了Vanishable接口</span></span><br><span class="line"> DiggerItem  继承 TieredItem 实现 Vanishable &#123;</span><br><span class="line"><span class="comment">// 存储与此工具相关的方块类型</span></span><br><span class="line">blocks;</span><br><span class="line"><span class="comment">// 存储此工具的速度</span></span><br><span class="line">speed;</span><br><span class="line"><span class="comment">//存储此工具的基础攻击伤害</span></span><br><span class="line">attackDamageBaseline;</span><br><span class="line"><span class="comment">//存储此工具的默认属性修改器</span></span><br><span class="line">defaultModifiers;</span><br><span class="line">     </span><br><span class="line"><span class="comment">// 两个浮点数，一个Tier对象，一个TagKey&lt;Block&gt;对象和一个Item.Properties对象。这个构造函数用于初始化DiggerItem对象。</span></span><br><span class="line">DiggerItem() &#123;</span><br><span class="line">       <span class="comment">// 用了父类TieredItem的构造函数，传入了Tier对象和Item.Properties对象。</span></span><br><span class="line">       <span class="comment">// 将传入的TagKey&lt;Block&gt;对象赋值给blocks字段。</span></span><br><span class="line">       <span class="comment">// 行代码调用Tier对象的getSpeed方法，并将返回的结果赋值给speed字段。</span></span><br><span class="line">       <span class="comment">// 传入的浮点数与Tier对象的getAttackDamageBonus方法返回的结果相加，并将结果赋值给attackDamageBaseline字段。</span></span><br><span class="line">       <span class="comment">// Multimap.Builder对象，这是一个用于构建Multimap的建造者对象。Multimap`是一种特殊的映射，它允许每个键映射到多个值</span></span><br><span class="line">       <span class="comment">//它被用来存储属性修改器。</span></span><br><span class="line">          <span class="comment">//行代码向Multimap中添加属性修改器。修改攻击速度和攻击伤害方式是加法</span></span><br><span class="line">       <span class="comment">//码调用builder.build()方法来构建Multimap，并将结果赋值给defaultModifiers字段。</span></span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//它接受两个参数：一个ItemStack对象和一个BlockState对象。这个方法用于获取破坏速度。</span></span><br><span class="line"> getDestroySpeed() &#123;</span><br><span class="line">       <span class="comment">//检查BlockState对象是否与blocks字段相匹配。如果匹配，则返回speed字段的值；否则，返回1.0F。</span></span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//它接受三个参数：一个ItemStack对象，两个LivingEntity对象。这个方法用于攻击敌人。</span></span><br><span class="line">hurtEnemy() &#123;</span><br><span class="line">       <span class="comment">//行代码调用ItemStack对象的hurtAndBreak方法来损坏物品。如果物品被损坏，它会广播一个破坏事件。</span></span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//它接受五个参数：一个ItemStack对象，一个Level对象，一个BlockState对象，一个BlockPos对象和一个LivingEntity对象。这个方法用于破坏方块。</span></span><br><span class="line">mineBlock() &#123;</span><br><span class="line">       <span class="comment">//检查Level对象是否为客户端，以及BlockState对象的破坏速度是否不为0.0F</span></span><br><span class="line"> <span class="comment">//如果物品被损坏，它会广播一个破坏事件。</span></span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//这行代码定义了一个名为getDefaultAttributeModifiers的公共方法，它接受一个EquipmentSlot对象作为参数。这个方法用于获取默认属性修改器。</span></span><br><span class="line">getDefaultAttributeModifiers() &#123;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//为getAttackDamage的公共方法，这个方法用于获取攻击伤害</span></span><br><span class="line">     getAttackDamage() </span><br><span class="line">         </span><br><span class="line"><span class="comment">//代码定义了一个名为isCorrectToolForDrops的公共方法，它接受一个BlockState对象作为参数。这个方法用于检查这个工具是否适合破坏给定的方块。</span></span><br><span class="line"><span class="comment">// FORGE: Use stack sensitive variant below</span></span><br><span class="line">isCorrectToolForDrops() &#123;</span><br><span class="line">       <span class="comment">//行代码检查工具的等级是否已经排序。</span></span><br><span class="line">          <span class="comment">//代码检查工具的等级是否适合破坏给定的方块</span></span><br><span class="line"><span class="comment">// 检查工具挖掘等级和方块是否匹配</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// FORGE START</span></span><br><span class="line">    <span class="comment">//这行代码定义了一个名为isCorrectToolForDrops的公共方法，它接受两个参数：一个ItemStack对象和一个BlockState对象。这个方法用于检查这个工具是否适合破坏给定的方块。</span></span><br><span class="line">isCorrectToolForDrops()</span><br></pre></td></tr></table></figure><h1 id="TieredItem类"><a href="#TieredItem类" class="headerlink" title="TieredItem类"></a>TieredItem类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码定义了一个名为TieredItem的公共类，这个类继承自Item类。</span></span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">TieredItem</span> <span class="keyword">extends</span> <span class="title class_">Item</span> &#123;</span><br><span class="line">    <span class="comment">//行代码定义了一个名为tier的私有常量字段，它的类型是Tier。这个字段可能用于存储此物品的挖掘等级。</span></span><br><span class="line">  tier;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//这行代码定义了一个名为TieredItem的公共构造函数，它接受两个参数：一个Tier对象和一个Item.Properties对象。这个构造函数用于初始化TieredItem对象。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">TieredItem</span><span class="params">( , )</span> &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个名为getTier的公共方法，这个方法用于获取物品的等级。</span></span><br><span class="line">   <span class="keyword">public</span>  <span class="title function_">getTier</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//这个方法用于获取物品的附魔值。</span></span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span>  <span class="title function_">getEnchantmentValue</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//并将返回的结果作为附魔值返回。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//这个方法用于检查一个物品是否可以修复另一个物品。</span></span><br><span class="line">   </span><br><span class="line">     isValidRepairItem( ,  ) &#123;</span><br><span class="line">       <span class="comment">//这行代码检查Tier对象的修复材料是否与传入的ItemStack对象匹配</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Item-类"><a href="#Item-类" class="headerlink" title="Item 类"></a>Item 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义了一个名为Item的类，这个类实现了FeatureElement，ItemLike和IItemExtension接口</span></span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">Item</span> <span class="keyword">implements</span> <span class="title class_">FeatureElement</span>, ItemLike, net.neoforged.neoforge.common.extensions.IItemExtension &#123;</span><br><span class="line">    <span class="comment">//行代码定义了一个名为LOGGER的私有静态最终字段，它的类型是Logger。这个字段用于记录日志。</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">LOGGER</span> <span class="operator">=</span> LogUtils.getLogger();</span><br><span class="line">    <span class="comment">//这个字段用于将方块映射到对应的物品。</span></span><br><span class="line"> BY_BLOCK </span><br><span class="line">    <span class="comment">//这个字段用于存储物品的最大堆叠大小。</span></span><br><span class="line"> MAX_STACK_SIZE</span><br><span class="line">    <span class="comment">//这个字段用于存储吃东西的持续时间</span></span><br><span class="line">EAT_DURATION </span><br><span class="line">    <span class="comment">//这个字段用于存储物品耐久条的最大宽度。</span></span><br><span class="line"> MAX_BAR_WIDTH</span><br><span class="line">    <span class="comment">//这个方法返回一个Holder.Reference&lt;Item&gt;对象，这个对象包含了当前的Item对象</span></span><br><span class="line">builtInRegistryHolder </span><br><span class="line">    <span class="comment">//这个对象代表了物品的稀有度。</span></span><br><span class="line"> rarity;</span><br><span class="line">    <span class="comment">//这个整数代表了物品的最大堆叠数量。</span></span><br><span class="line">maxStackSize;</span><br><span class="line">    <span class="comment">//这个整数代表了物品的最大耐久度。</span></span><br><span class="line"> maxDamage;</span><br><span class="line">    <span class="comment">//这个布尔值表示了物品是否对火有抵抗力。</span></span><br><span class="line"> isFireResistant;</span><br><span class="line">    <span class="comment">//这个对象代表了在制作过程中保留的物品。这个对象可能为null。</span></span><br><span class="line">craftingRemainingItem;</span><br><span class="line">    <span class="comment">// 这个字符串代表了物品的描述ID。这个对象可能为null。</span></span><br><span class="line">descriptionId;</span><br><span class="line">    <span class="comment">// 这个对象代表了物品的食物属性。这个对象可能为null。</span></span><br><span class="line"> foodProperties;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">      getId( ) &#123;</span><br><span class="line">       <span class="comment">//返回在ITEM注册表中的ID。</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//它接受一个整数作为参数。这个方法返回一个Item对象。</span></span><br><span class="line">    byId(<span class="type">int</span> p_41446_) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//它接受一个Block对象作为参数，返回一个Item对象。这个方法被@Deprecated注解标记，表示这个方法已经被弃用，不建议再使用。</span></span><br><span class="line">   <span class="meta">@Deprecated</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> Item <span class="title function_">byBlock</span><span class="params">(Block p_41440_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//它接受一个Item.Properties对象作为参数，参数的名字是p_41383_。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">Item</span><span class="params">( )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//返回对应的注册表。已弃用</span></span><br><span class="line">   <span class="meta">@Deprecated</span></span><br><span class="line">    builtInRegistryHolder() &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 物品使用时候tick回调</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUseTick</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//检查一个物品是否可以攻击一个方块。</span></span><br><span class="line">     canAttackBlock() &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//返回对应的item</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> Item <span class="title function_">asItem</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     useOn( ) &#123;</span><br><span class="line">       <span class="comment">//行代码返回InteractionResult.PASS，表示物品使用操作被跳过。</span></span><br><span class="line">       <span class="comment">//一些物品可能会被使用在方块上（例如放置物品），而其他物品可能不会。但在这个例子中，由于方法直接返回了InteractionResult.PASS，所以我们可以说这个物品不能被使用在任何方块上。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">   <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getDestroySpeed</span><span class="params">(ItemStack p_41425_, BlockState p_41426_)</span> &#123;</span><br><span class="line">       <span class="comment">//行代码返回1.0F，表示物品的销毁速度是1.0。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">   <span class="keyword">public</span> InteractionResultHolder&lt;ItemStack&gt; <span class="title function_">use</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//代码检查itemstack是否是可食用的。</span></span><br><span class="line">          <span class="comment">//码检查玩家是否可以吃itemstack。</span></span><br><span class="line">             <span class="comment">//玩家开始使用物品，并返回一个表示物品被消耗的InteractionResultHolder对象。</span></span><br><span class="line">          <span class="comment">// 表示如果itemstack不是可食用的，那么返回一个表示操作被跳过的InteractionResultHolder对象，这个对象包含了玩家手中的物品。</span></span><br><span class="line">      </span><br><span class="line">       </span><br><span class="line"><span class="comment">//这个方法的名字是finishUsingItem，接受三个参数：一个ItemStack对象，一个Level对象和一个LivingEntity对象。</span></span><br><span class="line">   <span class="keyword">public</span> ItemStack <span class="title function_">finishUsingItem</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//如果物品是可食用的，那么这个方法会让生物吃这个物品；如果物品不是可食用的，那么这个方法会直接返回这个物品。</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">   <span class="meta">@Deprecated</span> <span class="comment">// Use ItemStack sensitive version.</span></span><br><span class="line">      getMaxStackSize() &#123;</span><br><span class="line">       <span class="comment">//这行代码返回this.maxStackSize，表示物品的最大堆叠数量。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// Use ItemStack sensitive version.</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">getMaxDamage</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//表示物品的最大耐久度。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canBeDepleted</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="comment">//表示物品是否可以耗尽。如果物品的最大耐久度大于0，那么这个物品就可以耗尽；否则，这个物品就不能耗尽</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">     isBarVisible(ItemStack ) &#123;</span><br><span class="line">       <span class="comment">//表示物品的耐久条是否可见。如果物品已经损坏，那么这个物品的耐久条就会显示出来；否则，这个物品的耐久条就不会显示出来。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">     getBarWidth(ItemStack ) &#123;</span><br><span class="line">       <span class="comment">//这行代码计算并返回物品的耐久条的宽度。这个宽度是通过物品的损坏值和最大耐久度计算得出的。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     getBarColor( ) &#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//这个方法的作用是获取物品的耐久条的颜色。例如，一些物品的耐久条颜色会随着物品的损坏程度变化而变化，而其他物品的耐久条颜色可能是固定的。</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//方法的作用是覆盖物品在其他物品上的堆叠行为</span></span><br><span class="line">   <span class="keyword">public</span>  <span class="title function_">overrideStackedOnOther</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这行代码返回false，表示默认情况下，这个物品不会覆盖其他物品堆叠在自己上的行为。</span></span><br><span class="line">   <span class="keyword">public</span>  <span class="title function_">overrideOtherStackedOnMe</span><span class="params">(</span></span><br><span class="line"><span class="params">   )</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//行代码返回false，表示默认情况下，这个物品不会对敌人造成伤害。</span></span><br><span class="line">   <span class="keyword">public</span>  <span class="title function_">hurtEnemy</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 这个方法的名字是mineBlock</span></span><br><span class="line">    <span class="comment">//行代码返回false，表示默认情况下，这个物品不能破坏方块。</span></span><br><span class="line">     mineBlock() &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//代码定义了一个公共的方法，这个方法的名字是isCorrectToolForDrops，接受一个BlockState对象作为参数。这个方法返回一个布尔值。</span></span><br><span class="line">     isCorrectToolForDrops( ) &#123;</span><br><span class="line">       <span class="comment">//返回false，表示默认情况下，这个物品不是破坏方块后获得掉落物的正确工具。</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    interactLivingEntity() &#123;</span><br><span class="line">       <span class="comment">//代码返回InteractionResult.PASS，表示物品与生物的交互操作被跳过。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//返回一个getDescriptionId的Component对象。</span></span><br><span class="line">     getDescription() &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//这段代码定义了一个toString方法，这个方法返回物品的注册表键的字符串表示。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//定义了一个getOrCreateDescriptionId方法，</span></span><br><span class="line">   <span class="keyword">protected</span> String <span class="title function_">getOrCreateDescriptionId</span><span class="params">()</span> &#123;</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//定义了一个getDescriptionId方法，</span></span><br><span class="line">     getDescriptionId() &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//段代码定义了一个getDescriptionId方法</span></span><br><span class="line">     getDescriptionId(ItemStack ) &#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//表示在多人游戏中，这个物品应该覆盖NBT（Named Binary Tag）数据。</span></span><br><span class="line">     shouldOverrideMultiplayerNbt() &#123;</span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Use ItemStack sensitive version.</span></span><br><span class="line">      getCraftingRemainingItem() &#123;</span><br><span class="line">       <span class="comment">// 获得合成后保留物品</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// Use ItemStack sensitive version.</span></span><br><span class="line">     hasCraftingRemainingItem() &#123;</span><br><span class="line">       <span class="comment">// 是否具有合成保留物品</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     inventoryTick &#123;</span><br><span class="line">       <span class="comment">// 背包中每tick回调</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     onCraftedBy() &#123;</span><br><span class="line">       <span class="comment">//方法的作用是处理物品被玩家制作后的行为</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//判断物品是否复杂</span></span><br><span class="line">    isComplex() &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    getUseAnimation(ItemStack ) &#123;</span><br><span class="line">       <span class="comment">//表示物品使用的动画。如果物品是可食用的，那么这个物品的使用动画是UseAnim.EAT；否则，这个物品的使用动画是UseAnim.NONE。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//返回使用的持续时间</span></span><br><span class="line">     getUseDuration(ItemStack ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法的作用是处理物品停止使用后的行为。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">releaseUsing</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这个方法的作用是添加物品的悬停文本</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">appendHoverText</span><span class="params">(ItemStack p_41421_, <span class="meta">@Nullable</span> Level p_41422_, List&lt;Component&gt; p_41423_, TooltipFlag p_41424_)</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//返回该物品的getDescriptionId的Component对象。</span></span><br><span class="line">     getName(ItemStack ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">     isFoil(ItemStack ) &#123;</span><br><span class="line">       <span class="comment">//表示物品是否有附魔效果。如果物品有附魔效果，那么这个物品就是镀金的；否则，这个物品就不是镀金的</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">     getRarity( ) &#123;</span><br><span class="line">       <span class="comment">//首先检查物品是否有附魔效果。如果物品没有附魔效果，那么这个方法返回物品的稀有度；如果物品有附魔效果，那么这个方法根据物品的稀有度返回新的稀有度。</span></span><br><span class="line"></span><br><span class="line">     isEnchantable(ItemStack ) &#123;</span><br><span class="line">       <span class="comment">//表示物品是否可以附魔。如果物品的最大堆叠数是1且物品是可损坏的，那么这个物品就可以附魔；否则，这个物品就不可以附魔</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//个方法的作用是获取玩家的视角点击结果。</span></span><br><span class="line">      getPlayerPOVHitResult( ) &#123;</span><br><span class="line">       <span class="comment">//这个方法返回了玩家的视角点击结果。这个结果可以用于判断玩家的视角点击到的方块和位置，以及玩家是否点击到了方块。</span></span><br><span class="line">       <span class="comment">//这个结果是一个BlockHitResult对象，表示玩家的视角点击到的方块和位置。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">/** Forge: Use ItemStack sensitive version. */</span></span><br><span class="line">   <span class="meta">@Deprecated</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getEnchantmentValue</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//这个方法的作用是获取这个物品的附魔值</span></span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是isValidRepairItem，接受两个ItemStack对象作为参数，返回一个布尔值</span></span><br><span class="line">    <span class="comment">//这个物品不是有效的修理物品。</span></span><br><span class="line">     isValidRepairItem(  ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Use ItemStack sensitive version.使用ItemStack版本</span></span><br><span class="line">getDefaultAttributeModifiers( ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//是否可以修理</span></span><br><span class="line">canRepair;</span><br><span class="line"></span><br><span class="line">isRepairable( ) &#123;</span><br><span class="line">       <span class="comment">//果这个物品可以修理且是可损坏的，那么这个物品就可以修理；否则，这个物品就不可以修理。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"> useOnRelease() &#123;</span><br><span class="line">       <span class="comment">//表示这个物品是否在释放时使用。如果这个物品是一个十字弓，那么这个物品就在释放时使用；否则，这个物品就不在释放时使用。</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是getDefaultInstance，没有参数，返回一个ItemStack对象。</span></span><br><span class="line">    getDefaultInstance() &#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    isEdible() &#123;</span><br><span class="line">       <span class="comment">//表示这个物品是否可以食用。如果这个物品有食物属性，那么这个物品就可以食用；否则，这个物品就不可以食用。</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Use IForgeItem#getFoodProperties(ItemStack, LivingEntity) in favour of this.</span></span><br><span class="line">getFoodProperties() &#123;</span><br><span class="line">       <span class="comment">//行代码返回this.foodProperties，表示这个物品的食物属性。</span></span><br><span class="line">   &#125;</span><br><span class="line">getDrinkingSound() &#123;</span><br><span class="line">       <span class="comment">//返回SoundEvents.GENERIC_DRINK，表示这个物品的饮用声音。</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义了一个公共的方法，这个方法的名字是isFireResistant，没有参数，返回一个布尔值。</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFireResistant</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 该物品是否可以被对应的伤害原伤害</span></span><br><span class="line"> canBeHurtBy( ) &#123;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//表示这个物品可以放入容器中。</span></span><br><span class="line">canFitInsideContainerItems()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">// FORGE START</span></span><br><span class="line">    <span class="comment">//代码定义了一个私有的对象变量，这个变量的名字是renderProperties。</span></span><br><span class="line">     renderProperties;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">      DO NOT CALL, IT WILL DISAPPEAR IN THE FUTURE</span></span><br><span class="line"><span class="comment">      Call RenderProperties.get instead</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//这行代码定义了一个公共的方法，这个方法的名字是getRenderPropertiesInternal，没有参数，返回一个Object对象。</span></span><br><span class="line">getRenderPropertiesInternal() </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Item 属性配置类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Properties</span> &#123;</span><br><span class="line">maxStackSize; <span class="comment">//物品的最大堆叠数量</span></span><br><span class="line">    </span><br><span class="line">maxDamage; <span class="comment">// 最大耐久度</span></span><br><span class="line">    </span><br><span class="line"> craftingRemainingItem; <span class="comment">// 制作时是否保留物品</span></span><br><span class="line">    </span><br><span class="line">rarity ; <span class="comment">//物品的稀有度</span></span><br><span class="line">    </span><br><span class="line">foodProperties; <span class="comment">//物品的食物属性</span></span><br><span class="line">    </span><br><span class="line"> isFireResistant; <span class="comment">//物品是否对火有抵抗力</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">//物品需要的特性标志集    </span></span><br><span class="line">requiredFeatures </span><br><span class="line">    </span><br><span class="line"> canRepair;<span class="comment">//是否可以修理。</span></span><br><span class="line"></span><br><span class="line">food(FoodProperties ) &#123;</span><br><span class="line">          <span class="comment">//这个方法的作用是设置物品的食物属性。</span></span><br><span class="line">      &#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//这两行代码检查了物品的最大耐久度是否大于0，如果是，那么抛出一个异常；否则，设置物品的最大堆叠数量，并返回Item.Properties对象。</span></span><br><span class="line">stacksTo(<span class="type">int</span> ) </span><br><span class="line">    </span><br><span class="line"><span class="comment">//行代码返回this.maxDamage == 0 ? this.durability(p_41500_) : this，表示如果物品的最大耐久度为0，那么设置物品的耐久度，并返回Item.Properties对象；否则，直接返回Item.Properties对象。</span></span><br><span class="line">defaultDurability( )</span><br><span class="line">    </span><br><span class="line"><span class="comment">//两行代码设置了物品的最大耐久度和最大堆叠数量，并返回了Item.Properties对象。</span></span><br><span class="line">durability( ) </span><br><span class="line">    </span><br><span class="line"><span class="comment">//这两行代码设置了物品在制作时剩余的物品，并返回了Item.Properties对象。</span></span><br><span class="line">      craftRemainder( ) </span><br><span class="line">    </span><br><span class="line"><span class="comment">//设置稀有度</span></span><br><span class="line"> rarity( ) &#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 设置扛火</span></span><br><span class="line">fireResistant() </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 设置不可修复</span></span><br><span class="line"> setNoRepair() </span><br><span class="line">    </span><br><span class="line"><span class="comment">//这个方法的名字是requiredFeatures，接受一个FeatureFlag数组作为参数，返回Item.Properties对象。</span></span><br><span class="line">requiredFeatures()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07-pytorch-save and load model</title>
      <link href="/2023/11/12/07-pytorch-save-and-load-model/"/>
      <url>/2023/11/12/07-pytorch-save-and-load-model/</url>
      
        <content type="html"><![CDATA[<h1 id="SAVE-AND-LOAD-THE-MODEL"><a href="#SAVE-AND-LOAD-THE-MODEL" class="headerlink" title="SAVE AND LOAD THE MODEL"></a>SAVE AND LOAD THE MODEL</h1><p>在本节中，我们将了解如何通过保存、加载和运行模型预测来持久保存模型状态。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision.models <span class="keyword">as</span> models</span><br></pre></td></tr></table></figure><h2 id="Saving-and-Loading-Model-Weights"><a href="#Saving-and-Loading-Model-Weights" class="headerlink" title="Saving and Loading Model Weights"></a>Saving and Loading Model Weights</h2><p>PyTorch 模型将学习到的参数存储在内部状态字典中，称为 <code>state_dict</code> 。这些可以通过 <code>torch.save</code> 方法保存：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = models.vgg16(weights=<span class="string">&#x27;IMAGENET1K_V1&#x27;</span>)</span><br><span class="line">torch.save(model.state_dict(), <span class="string">&#x27;model_weights.pth&#x27;</span>)</span><br></pre></td></tr></table></figure><p>要加载模型权重，您需要先创建同一模型的实例，然后使用 <code>load_state_dict()</code> 方法加载参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model = models.vgg16() <span class="comment"># we do not specify ``weights``, i.e. create untrained model</span></span><br><span class="line">model.load_state_dict(torch.load(<span class="string">&#x27;model_weights.pth&#x27;</span>))</span><br><span class="line">model.<span class="built_in">eval</span>()</span><br></pre></td></tr></table></figure><blockquote><p>请务必在推理之前调用 <code>model.eval()</code> 方法，将 dropout 和批量归一化层设置为评估模式。如果不这样做将会产生不一致的推理结果。</p></blockquote><h2 id="Saving-and-Loading-Models-with-Shapes"><a href="#Saving-and-Loading-Models-with-Shapes" class="headerlink" title="Saving and Loading Models with Shapes"></a>Saving and Loading Models with Shapes</h2><p>加载模型权重时，我们需要首先实例化模型类，因为该类定义了网络的结构。我们可能希望将此类的结构与模型一起保存，在这种情况下，我们可以将 <code>model</code> （而不是 <code>model.state_dict()</code> ）传递给保存函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.save(model, <span class="string">&#x27;model.pth&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后我们可以像这样加载模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = torch.load(<span class="string">&#x27;model.pth&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>此方法在序列化模型时使用 Python pickle 模块，因此它依赖于加载模型时可用的实际类定义。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> save load model </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06-pytorch-optimizing model parameters</title>
      <link href="/2023/11/10/06-pytorch-optimizing-model-parameters/"/>
      <url>/2023/11/10/06-pytorch-optimizing-model-parameters/</url>
      
        <content type="html"><![CDATA[<h1 id="OPTIMIZING-MODEL-PARAMETERS"><a href="#OPTIMIZING-MODEL-PARAMETERS" class="headerlink" title="OPTIMIZING MODEL PARAMETERS"></a>OPTIMIZING MODEL PARAMETERS</h1><p>现在我们有了模型和数据，是时候通过优化数据上的参数来训练、验证和测试我们的模型了。训练模型是一个迭代过程；在每次迭代中，模型都会对输出进行猜测，计算其猜测的误差（损失），收集误差相对于其参数的导数（如我们在上一节中看到的），并使用梯度下降优化这些参数。有关此过程的更详细演练，请观看 3Blue1Brown 的有关反向传播的<br><a href="https://www.youtube.com/watch?v=tIeHLnjs5U8">视频</a></p><h2 id="Prerequisite-Code"><a href="#Prerequisite-Code" class="headerlink" title="Prerequisite Code"></a>Prerequisite Code</h2><p>我们加载前面有关数据集和数据加载器以及构建模型部分的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> torchvision.transforms <span class="keyword">import</span> ToTensor</span><br><span class="line"></span><br><span class="line">training_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">train_dataloader = DataLoader(training_data, batch_size=<span class="number">64</span>)</span><br><span class="line">test_dataloader = DataLoader(test_data, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NeuralNetwork</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.flatten = nn.Flatten()</span><br><span class="line">        self.linear_relu_stack = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">28</span>*<span class="number">28</span>, <span class="number">512</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">512</span>, <span class="number">512</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">512</span>, <span class="number">10</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.flatten(x)</span><br><span class="line">        logits = self.linear_relu_stack(x)</span><br><span class="line">        <span class="keyword">return</span> logits</span><br><span class="line"></span><br><span class="line">model = NeuralNetwork()</span><br></pre></td></tr></table></figure><h2 id="Hyperparameters"><a href="#Hyperparameters" class="headerlink" title="Hyperparameters"></a>Hyperparameters</h2><p>超参数是可调整的参数，可让您控制模型优化过程。不同的超参数值会影响模型训练和收敛速度（阅读有关超参数调整的更多信息）</p><p>我们定义以下训练超参数：</p><ul><li>Number of Epochs - 迭代数据集的次数</li><li>Batch Size - 参数更新之前通过网络传播的数据样本数量</li><li>学习率 - 每个批次&#x2F;时期更新模型参数的量。较小的值会导致学习速度较慢，而较大的值可能会导致训练期间出现不可预测的行为。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">learning_rate = <span class="number">1e-3</span></span><br><span class="line">batch_size = <span class="number">64</span></span><br><span class="line">epochs = <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="Optimization-Loop"><a href="#Optimization-Loop" class="headerlink" title="Optimization Loop"></a>Optimization Loop</h2><p>一旦我们设置了超参数，我们就可以使用优化循环来训练和优化我们的模型。优化循环的每次迭代称为一个时期epoch。</p><p>每个时期epoch由两个主要部分组成：</p><ul><li>The Train Loop:迭代训练数据集并尝试收敛到最佳参数。</li><li>The Validation&#x2F;Test Loop:迭代测试数据集以检查模型性能是否有所改善。</li></ul><p>让我们简单熟悉一下训练循环中使用的一些概念。向前跳转查看优化循环的完整实现。</p><h3 id="Loss-Function"><a href="#Loss-Function" class="headerlink" title="Loss Function"></a>Loss Function</h3><p>当提供一些训练数据时，我们未经训练的网络可能不会给出正确的答案。损失函数衡量的是得到的结果与目标值的不相似程度，它是我们在训练时想要最小化的损失函数。为了计算损失，我们使用给定数据样本的输入进行预测，并将其与真实数据标签值进行比较。</p><p>常见的损失函数包括用于回归任务的 nn.MSELoss（均方误差）和用于分类的 nn.NLLLoss（负对数似然）。 nn.CrossEntropyLoss 结合了 <code>nn.LogSoftmax</code> 和 <code>nn.NLLLoss</code> 。</p><p>我们将模型的输出 logits 传递给 <code>nn.CrossEntropyLoss</code> ，这将标准化 logits 并计算预测误差。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Initialize the loss function</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br></pre></td></tr></table></figure><h3 id="Optimizer"><a href="#Optimizer" class="headerlink" title="Optimizer"></a>Optimizer</h3><p>优化是调整模型参数以减少每个训练步骤中模型误差的过程。优化算法定义了如何执行此过程（在本例中我们使用随机梯度下降）。所有优化逻辑都封装在 <code>optimizer</code> 对象中。这里，我们使用SGD优化器；此外，PyTorch 中还有许多不同的优化器，例如 ADAM 和 RMSProp，它们可以更好地处理不同类型的模型和数据。</p><p>我们通过注册需要训练的模型参数并传入学习率超参数来初始化优化器。</p><p>在训练循环中，优化分三个步骤进行：</p><ul><li>调用 <code>optimizer.zero_grad()</code> 重置模型参数的梯度。默认情况下渐变相加；为了防止重复计算，我们在每次迭代时明确地将它们归零。</li><li>通过调用 <code>loss.backward()</code> 反向传播预测损失。 PyTorch 存储损失的梯度。每个参数。</li><li>一旦我们有了梯度，我们就调用 optimizer.step() 通过向后传递中收集的梯度来调整参数。</li></ul><h2 id="Full-Implementation"><a href="#Full-Implementation" class="headerlink" title="Full Implementation"></a>Full Implementation</h2><p>我们定义了循环优化代码的 <code>train_loop</code> 和根据测试数据评估模型性能的 <code>test_loop</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">train_loop</span>(<span class="params">dataloader, model, loss_fn, optimizer</span>):</span><br><span class="line">    size = <span class="built_in">len</span>(dataloader.dataset)</span><br><span class="line">    <span class="comment"># Set the model to training mode - important for batch normalization and dropout layers</span></span><br><span class="line">    <span class="comment"># Unnecessary in this situation but added for best practices</span></span><br><span class="line">    model.train()</span><br><span class="line">    <span class="keyword">for</span> batch, (X, y) <span class="keyword">in</span> <span class="built_in">enumerate</span>(dataloader):</span><br><span class="line">        <span class="comment"># Compute prediction and loss</span></span><br><span class="line">        pred = model(X)</span><br><span class="line">        loss = loss_fn(pred, y)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Backpropagation</span></span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> batch % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">            loss, current = loss.item(), (batch + <span class="number">1</span>) * <span class="built_in">len</span>(X)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;loss: <span class="subst">&#123;loss:&gt;7f&#125;</span>  [<span class="subst">&#123;current:&gt;5d&#125;</span>/<span class="subst">&#123;size:&gt;5d&#125;</span>]&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_loop</span>(<span class="params">dataloader, model, loss_fn</span>):</span><br><span class="line">    <span class="comment"># Set the model to evaluation mode - important for batch normalization and dropout layers</span></span><br><span class="line">    <span class="comment"># Unnecessary in this situation but added for best practices</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    size = <span class="built_in">len</span>(dataloader.dataset)</span><br><span class="line">    num_batches = <span class="built_in">len</span>(dataloader)</span><br><span class="line">    test_loss, correct = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Evaluating the model with torch.no_grad() ensures that no gradients are computed during test mode</span></span><br><span class="line">    <span class="comment"># also serves to reduce unnecessary gradient computations and memory usage for tensors with requires_grad=True</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> X, y <span class="keyword">in</span> dataloader:</span><br><span class="line">            pred = model(X)</span><br><span class="line">            test_loss += loss_fn(pred, y).item()</span><br><span class="line">            correct += (pred.argmax(<span class="number">1</span>) == y).<span class="built_in">type</span>(torch.<span class="built_in">float</span>).<span class="built_in">sum</span>().item()</span><br><span class="line"></span><br><span class="line">    test_loss /= num_batches</span><br><span class="line">    correct /= size</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Test Error: \n Accuracy: <span class="subst">&#123;(<span class="number">100</span>*correct):&gt;<span class="number">0.1</span>f&#125;</span>%, Avg loss: <span class="subst">&#123;test_loss:&gt;8f&#125;</span> \n&quot;</span>)</span><br></pre></td></tr></table></figure><p>我们初始化损失函数和优化器，并将其传递给 <code>train_loop</code> 和 <code>test_loop</code> 。您可以随意增加纪元数来跟踪模型性能的改进。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br><span class="line">optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)</span><br><span class="line"></span><br><span class="line">epochs = <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Epoch <span class="subst">&#123;t+<span class="number">1</span>&#125;</span>\n-------------------------------&quot;</span>)</span><br><span class="line">    train_loop(train_dataloader, model, loss_fn, optimizer)</span><br><span class="line">    test_loop(test_dataloader, model, loss_fn)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Done!&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> optimizing model parameters </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05_pytorch_AUTOMATIC_DIFFERENTIATION</title>
      <link href="/2023/11/10/05-pytorch-AUTOMATIC-DIFFERENTIATION/"/>
      <url>/2023/11/10/05-pytorch-AUTOMATIC-DIFFERENTIATION/</url>
      
        <content type="html"><![CDATA[<h1 id="AUTOMATIC-DIFFERENTIATION-WITH-TORCH-AUTOGRAD"><a href="#AUTOMATIC-DIFFERENTIATION-WITH-TORCH-AUTOGRAD" class="headerlink" title="AUTOMATIC DIFFERENTIATION WITH TORCH.AUTOGRAD"></a>AUTOMATIC DIFFERENTIATION WITH <code>TORCH.AUTOGRAD</code></h1><p>在训练神经网络时，最常用的算法是反向传播。在该算法中，根据损失函数相对于给定参数的梯度来调整参数（模型权重）。</p><p>为了计算这些梯度，PyTorch 有一个名为 <code>torch.autograd</code> 的内置微分引擎。它支持任何计算图的梯度自动计算。</p><p>考虑最简单的单层神经网络，具有输入 <code>x</code> 、参数 <code>w</code> 和 <code>b</code> 以及一些损失函数。它可以通过以下方式在 PyTorch 中定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x = torch.ones(<span class="number">5</span>)  <span class="comment"># input tensor</span></span><br><span class="line">y = torch.zeros(<span class="number">3</span>)  <span class="comment"># expected output</span></span><br><span class="line">w = torch.randn(<span class="number">5</span>, <span class="number">3</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">b = torch.randn(<span class="number">3</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">z = torch.matmul(x, w)+b</span><br><span class="line">loss = torch.nn.functional.binary_cross_entropy_with_logits(z, y)</span><br></pre></td></tr></table></figure><h2 id="Tensors-Functions-and-Computational-graph"><a href="#Tensors-Functions-and-Computational-graph" class="headerlink" title="Tensors, Functions and Computational graph"></a>Tensors, Functions and Computational graph</h2><p>该代码定义了以下计算图：</p><p><img src="https://s2.loli.net/2023/11/10/sPfwv1i3QHr7kte.png" alt="img"></p><p>在这个网络中， <code>w</code> 和 <code>b</code> 是我们需要优化的参数。因此，我们需要能够计算损失函数相对于这些变量的梯度。为此，我们设置这些张量的 <code>requires_grad</code> 属性。</p><blockquote><p>您可以在创建张量时设置 <code>requires_grad</code> 的值，或者稍后使用 <code>x.requires_grad_(True)</code> 方法设置。</p></blockquote><p>我们应用于张量来构造计算图的函数实际上是类 <code>Function</code> 的对象。该对象知道如何向前计算函数，以及如何在向后传播步骤中计算其导数。对反向传播函数的引用存储在张量的 <code>grad_fn</code> 属性中。您可以在<a href="https://pytorch.org/docs/stable/autograd.html#function">文档</a>中找到 <code>Function</code> 的更多信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Gradient function for z = <span class="subst">&#123;z.grad_fn&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Gradient function for loss = <span class="subst">&#123;loss.grad_fn&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Computing-Gradients"><a href="#Computing-Gradients" class="headerlink" title="Computing Gradients"></a>Computing Gradients</h2><p>为了优化神经网络中参数的权重，我们需要计算损失函数相对于参数的导数，即，我们需要在&lt;的一些固定值下的 $$ \frac{loss}{w} 和 \frac{loss}{b} $$  b2&gt; 和 <code>y</code> 。为了计算这些导数，我们调用 <code>loss.backward()</code> ，然后从 <code>w.grad</code> 和 <code>b.grad</code> 检索值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">loss.backward()</span><br><span class="line"><span class="built_in">print</span>(w.grad)</span><br><span class="line"><span class="built_in">print</span>(b.grad)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor([[<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>],</span><br><span class="line">        [<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>],</span><br><span class="line">        [<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>],</span><br><span class="line">        [<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>],</span><br><span class="line">        [<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>]])</span><br><span class="line">tensor([<span class="number">0.3313</span>, <span class="number">0.0626</span>, <span class="number">0.2530</span>])</span><br></pre></td></tr></table></figure><blockquote><ul><li>我们只能获取计算图的叶节点的 <code>grad</code> 属性，其中 <code>requires_grad</code> 属性设置为 <code>True</code> 。对于我们图中的所有其他节点，梯度将不可用。</li><li>出于性能原因，我们只能在给定图上使用 <code>backward</code> 执行一次梯度计算。如果我们需要在同一个图表上执行多个 <code>backward</code> 调用，则需要将 <code>retain_graph=True</code> 传递给 <code>backward</code> 调用。</li></ul></blockquote><h2 id="Disabling-Gradient-Tracking"><a href="#Disabling-Gradient-Tracking" class="headerlink" title="Disabling Gradient Tracking"></a>Disabling Gradient Tracking</h2><p>默认情况下，所有具有 <code>requires_grad=True</code> 的张量都会跟踪其计算历史并支持梯度计算。然而，在某些情况下，我们不需要这样做，例如，当我们训练了模型并且只想将其应用于某些输入数据时，即我们只想通过网络进行前向计算。我们可以通过用 <code>torch.no_grad()</code> 块包围我们的计算代码来停止跟踪计算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">z = torch.matmul(x, w)+b</span><br><span class="line"><span class="built_in">print</span>(z.requires_grad)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    z = torch.matmul(x, w)+b</span><br><span class="line"><span class="built_in">print</span>(z.requires_grad)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>获得相同结果的另一种方法是在张量上使用 <code>detach()</code> 方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">z = torch.matmul(x, w)+b</span><br><span class="line">z_det = z.detach()</span><br><span class="line"><span class="built_in">print</span>(z_det.requires_grad)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False</span><br></pre></td></tr></table></figure><p>您可能想要禁用梯度跟踪的原因有：</p><ul><li>将神经网络中的某些参数标记为冻结参数。</li><li>当您仅进行前向传递时加快计算速度，因为对不跟踪梯度的张量进行计算会更有效。</li></ul><h2 id="More-on-Computational-Graphs"><a href="#More-on-Computational-Graphs" class="headerlink" title="More on Computational Graphs"></a>More on Computational Graphs</h2><p>从概念上讲，autograd 在由 Function 对象组成的有向无环图 (DAG) 中保存数据（张量）和所有执行的操作（以及生成的新张量）的记录。在这个 DAG 中，叶子是输入张量，根是输出张量。通过从根到叶追踪该图，您可以使用链式法则自动计算梯度。</p><p>在前向传递中，autograd 同时执行两件事：</p><ul><li>运行请求的操作来计算结果张量</li><li>在 DAG 中维护操作的梯度函数.</li></ul><p>当在 DAG 根上调用 <code>.backward()</code> 时，向后传递开始。 <code>autograd</code> 然后：</p><ul><li>计算每个 <code>.grad_fn</code> 的梯度，</li><li>将它们累积到相应张量的 <code>.grad</code> 属性中</li><li>使用链式法则，一直传播到叶张量。</li></ul><p>DAG 在 PyTorch 中是动态的需要注意的重要一点是图是从头开始重新创建的；每次 <code>.backward()</code> 调用后，autograd 开始填充新图表。这正是允许您在模型中使用控制流语句的原因；如果需要，您可以在每次迭代时更改形状、大小和操作。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 自动求导 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04_pytorch_build_the_neural_network</title>
      <link href="/2023/11/10/04-pytorch-build-the-neural-network/"/>
      <url>/2023/11/10/04-pytorch-build-the-neural-network/</url>
      
        <content type="html"><![CDATA[<h1 id="BUILD-THE-NEURAL-NETWORK"><a href="#BUILD-THE-NEURAL-NETWORK" class="headerlink" title="BUILD THE NEURAL NETWORK"></a>BUILD THE NEURAL NETWORK</h1><p><strong>神经网络的构成是什么？</strong></p><p>神经网络由对数据执行操作的层&#x2F;模块组成。 </p><p><strong>层和模块在哪里？</strong></p><p>torch.nn 命名空间提供了构建您自己的神经网络所需的所有构建块。</p><p> PyTorch 中的每个模块都是 nn.Module 的子类。</p><p><strong>神经网络的的嵌套构成</strong></p><p>神经网络本身就是一个模块，由其他模块（层）组成。</p><p><strong>嵌套结构的好处</strong></p><p>这种嵌套结构允许轻松构建和管理复杂的架构。</p><p>在以下部分中，我们将构建一个神经网络来对 FashionMNIST 数据集中的图像进行分类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets, transforms</span><br></pre></td></tr></table></figure><h2 id="Get-Device-for-Training"><a href="#Get-Device-for-Training" class="headerlink" title="Get Device for Training"></a>Get Device for Training</h2><p>如果我们在具有GPU的设备上，可以使用GPU加速。</p><p><strong>如何使用GPU？</strong></p><p>我们希望能够在 GPU 或 MPS 等硬件加速器（如果可用）上训练我们的模型。让我们检查一下  <a href="https://pytorch.org/docs/stable/notes/cuda.html">torch.cuda</a> 或者 <a href="https://pytorch.org/docs/stable/notes/mps.html">torch.backends.mps</a>是否可用，否则我们使用 CPU。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">device = (</span><br><span class="line">    <span class="string">&quot;cuda&quot;</span></span><br><span class="line">    <span class="keyword">if</span> torch.cuda.is_available()</span><br><span class="line">    <span class="keyword">else</span> <span class="string">&quot;mps&quot;</span></span><br><span class="line">    <span class="keyword">if</span> torch.backends.mps.is_available()</span><br><span class="line">    <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Using <span class="subst">&#123;device&#125;</span> device&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Define-the-Class"><a href="#Define-the-Class" class="headerlink" title="Define the Class"></a>Define the Class</h2><p>依照我们之前的说法，神经网络本身就是一个module，所以我们需要继承nn.Module。</p><p>我们通过子类化 <code>nn.Module</code> 来定义神经网络，并初始化 <code>__init__</code> 中的神经网络层。每个 <code>nn.Module</code> 子类都实现 <code>forward</code> 方法中对输入数据的操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NeuralNetwork</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.flatten = nn.Flatten()</span><br><span class="line">        self.linear_relu_stack = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">28</span>*<span class="number">28</span>, <span class="number">512</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">512</span>, <span class="number">512</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">512</span>, <span class="number">10</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.flatten(x)</span><br><span class="line">        logits = self.linear_relu_stack(x)</span><br><span class="line">        <span class="keyword">return</span> logits</span><br></pre></td></tr></table></figure><p>我们创建 <code>NeuralNetwork</code> 的实例，并将其移动到 <code>device</code> ，并打印其结构。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = NeuralNetwork().to(device)</span><br><span class="line"><span class="built_in">print</span>(model)</span><br></pre></td></tr></table></figure><p>为了使用该模型，我们将输入数据传递给它。这将执行模型的 <code>forward</code> 以及一些<a href="https://github.com/pytorch/pytorch/blob/270111b7b611d174967ed204776985cefca9c144/torch/nn/modules/module.py#L866">background operations</a>。不要直接调用 <code>model.forward()</code> ！</p><p>在输入上调用模型会返回一个二维张量，其中 dim&#x3D;0 对应于每个类的 10 个原始预测值的每个输出，dim&#x3D;1 对应于每个输出的各个值。我们通过将预测概率传递给 <code>nn.Softmax</code> 模块的实例来获取预测概率。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X = torch.rand(<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, device=device)</span><br><span class="line">logits = model(X)</span><br><span class="line">pred_probab = nn.Softmax(dim=<span class="number">1</span>)(logits)</span><br><span class="line">y_pred = pred_probab.argmax(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Predicted class: <span class="subst">&#123;y_pred&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Model-Layers"><a href="#Model-Layers" class="headerlink" title="Model Layers"></a>Model Layers</h2><p>让我们分解 FashionMNIST 模型中的各个层。为了说明这一点，我们将采用 3 张大小为 28x28 的图像的小批量样本，看看当我们将其传递到网络时会发生什么。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input_image = torch.rand(<span class="number">3</span>,<span class="number">28</span>,<span class="number">28</span>)</span><br><span class="line"><span class="built_in">print</span>(input_image.size())</span><br></pre></td></tr></table></figure><h3 id="nn-Flatten"><a href="#nn-Flatten" class="headerlink" title="nn.Flatten"></a>nn.Flatten</h3><p>我们初始化 <a href="https://pytorch.org/docs/stable/generated/torch.nn.Flatten.html">nn.Flatten</a>  层，将每个 2D 28x28 图像转换为 784 个像素值的连续数组（维持小批量维度（在 dim&#x3D;0 时））。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flatten = nn.Flatten()</span><br><span class="line">flat_image = flatten(input_image)</span><br><span class="line"><span class="built_in">print</span>(flat_image.size())</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.Size([3, 784])</span><br></pre></td></tr></table></figure><h3 id="nn-Linear"><a href="#nn-Linear" class="headerlink" title="nn.Linear"></a>nn.Linear</h3><p> <a href="https://pytorch.org/docs/stable/generated/torch.nn.Linear.html">linear layer</a>是一个使用其存储的权重和偏差对输入变量线性变换的模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layer1 = nn.Linear(in_features=<span class="number">28</span>*<span class="number">28</span>, out_features=<span class="number">20</span>)</span><br><span class="line">hidden1 = layer1(flat_image)</span><br><span class="line"><span class="built_in">print</span>(hidden1.size())</span><br></pre></td></tr></table></figure><h3 id="nn-ReLU"><a href="#nn-ReLU" class="headerlink" title="nn.ReLU"></a>nn.ReLU</h3><p>非线性激活在模型的输入和输出之间创建复杂的映射。它们在线性变换后应用以引入非线性，帮助神经网络学习各种现象。</p><p>在此模型中，我们在线性层之间使用 nn.ReLU，但还有其他激活可以在模型中引入非线性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Before ReLU: <span class="subst">&#123;hidden1&#125;</span>\n\n&quot;</span>)</span><br><span class="line">hidden1 = nn.ReLU()(hidden1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;After ReLU: <span class="subst">&#123;hidden1&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Before ReLU: tensor([[ 0.4158, -0.0130, -0.1144,  0.3960,  0.1476, -0.0690, -0.0269,  0.2690,</span><br><span class="line">          0.1353,  0.1975,  0.4484,  0.0753,  0.4455,  0.5321, -0.1692,  0.4504,</span><br><span class="line">          0.2476, -0.1787, -0.2754,  0.2462],</span><br><span class="line">        [ 0.2326,  0.0623, -0.2984,  0.2878,  0.2767, -0.5434, -0.5051,  0.4339,</span><br><span class="line">          0.0302,  0.1634,  0.5649, -0.0055,  0.2025,  0.4473, -0.2333,  0.6611,</span><br><span class="line">          0.1883, -0.1250,  0.0820,  0.2778],</span><br><span class="line">        [ 0.3325,  0.2654,  0.1091,  0.0651,  0.3425, -0.3880, -0.0152,  0.2298,</span><br><span class="line">          0.3872,  0.0342,  0.8503,  0.0937,  0.1796,  0.5007, -0.1897,  0.4030,</span><br><span class="line">          0.1189, -0.3237,  0.2048,  0.4343]], grad_fn=&lt;AddmmBackward0&gt;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">After ReLU: tensor([[0.4158, 0.0000, 0.0000, 0.3960, 0.1476, 0.0000, 0.0000, 0.2690, 0.1353,</span><br><span class="line">         0.1975, 0.4484, 0.0753, 0.4455, 0.5321, 0.0000, 0.4504, 0.2476, 0.0000,</span><br><span class="line">         0.0000, 0.2462],</span><br><span class="line">        [0.2326, 0.0623, 0.0000, 0.2878, 0.2767, 0.0000, 0.0000, 0.4339, 0.0302,</span><br><span class="line">         0.1634, 0.5649, 0.0000, 0.2025, 0.4473, 0.0000, 0.6611, 0.1883, 0.0000,</span><br><span class="line">         0.0820, 0.2778],</span><br><span class="line">        [0.3325, 0.2654, 0.1091, 0.0651, 0.3425, 0.0000, 0.0000, 0.2298, 0.3872,</span><br><span class="line">         0.0342, 0.8503, 0.0937, 0.1796, 0.5007, 0.0000, 0.4030, 0.1189, 0.0000,</span><br><span class="line">         0.2048, 0.4343]], grad_fn=&lt;ReluBackward0&gt;)</span><br></pre></td></tr></table></figure><h3 id="nn-Sequential"><a href="#nn-Sequential" class="headerlink" title="nn.Sequential"></a>nn.Sequential</h3><p><a href="https://pytorch.org/docs/stable/generated/torch.nn.Sequential.html">nn.Sequential</a>  是模块的有序容器。数据按照定义的相同顺序传递通过所有模块。您可以使用顺序容器来组合一个快速网络，例如 <code>seq_modules</code> .</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">seq_modules = nn.Sequential(</span><br><span class="line">    flatten,</span><br><span class="line">    layer1,</span><br><span class="line">    nn.ReLU(),</span><br><span class="line">    nn.Linear(<span class="number">20</span>, <span class="number">10</span>)</span><br><span class="line">)</span><br><span class="line">input_image = torch.rand(<span class="number">3</span>,<span class="number">28</span>,<span class="number">28</span>)</span><br><span class="line">logits = seq_modules(input_image)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="nn-Softmax"><a href="#nn-Softmax" class="headerlink" title="nn.Softmax"></a>nn.Softmax</h3><p>神经网络的最后一个线性层返回 logits - [-infty, infty] 中的原始值 - 被传递到 nn.Softmax 模块。 Logits 缩放为值 [0, 1]，表示模型对每个类别的预测概率。 <code>dim</code> 参数指示维度，沿该维度值的总和必须为 1。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">softmax = nn.Softmax(dim=<span class="number">1</span>)</span><br><span class="line">pred_probab = softmax(logits)</span><br></pre></td></tr></table></figure><h2 id="Model-Parameters"><a href="#Model-Parameters" class="headerlink" title="Model Parameters"></a>Model Parameters</h2><p>神经网络内的许多层都是参数化的，即具有在训练期间优化的相关权重和偏差。子类化 <code>nn.Module</code> 自动跟踪模型对象内定义的所有字段，并使所有参数可使用模型的 <code>parameters()</code> 或 <code>named_parameters()</code> 方法访问。</p><p>在此示例中，我们迭代每个参数，并打印其大小及其值的预览。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Model structure: <span class="subst">&#123;model&#125;</span>\n\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, param <span class="keyword">in</span> model.named_parameters():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Layer: <span class="subst">&#123;name&#125;</span> | Size: <span class="subst">&#123;param.size()&#125;</span> | Values : <span class="subst">&#123;param[:<span class="number">2</span>]&#125;</span> \n&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> neural network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03_pytorch_Transforms</title>
      <link href="/2023/11/10/03-pytorch-Transforms/"/>
      <url>/2023/11/10/03-pytorch-Transforms/</url>
      
        <content type="html"><![CDATA[<h1 id="TRANSFORMS"><a href="#TRANSFORMS" class="headerlink" title="TRANSFORMS"></a>TRANSFORMS</h1><p><strong>Transforms是什么？</strong></p><p>数据并不总是以训练机器学习算法所需的最终处理形式出现。我们使用转换来对数据执行一些操作并使其适合训练。</p><p><strong>应该如何转化？</strong></p><p>所有 TorchVision 数据集都有两个参数 - 用于修改功能的 <code>transform</code> 和用于修改标签的 <code>target_transform</code> - 接受包含转换逻辑的可调用对象。 <a href="https://pytorch.org/vision/stable/transforms.html">torchvision.transforms</a>  模块提供了几种开箱即用的常用转换。</p><p>例如:</p><p>FashionMNIST特征采用PIL图像格式，标签为整数。对于训练，我们需要将特征作为归一化张量，将标签作为单热编码张量。为了进行这些转换，我们使用 <code>ToTensor</code> 和 <code>Lambda</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> torchvision.transforms <span class="keyword">import</span> ToTensor, Lambda</span><br><span class="line"></span><br><span class="line">ds = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor(),</span><br><span class="line">    target_transform=Lambda(<span class="keyword">lambda</span> y: torch.zeros(<span class="number">10</span>, dtype=torch.<span class="built_in">float</span>).scatter_(<span class="number">0</span>, torch.tensor(y), value=<span class="number">1</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to data/FashionMNIST/raw/train-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/26421880 [00:00&lt;?, ?it/s]</span><br><span class="line">  0%|          | 65536/26421880 [00:00&lt;01:12, 361134.05it/s]</span><br><span class="line">  1%|          | 229376/26421880 [00:00&lt;00:38, 678664.07it/s]</span><br><span class="line">  3%|2         | 753664/26421880 [00:00&lt;00:12, 2053982.29it/s]</span><br><span class="line">  5%|5         | 1409024/26421880 [00:00&lt;00:08, 2875069.78it/s]</span><br><span class="line"> 12%|#2        | 3244032/26421880 [00:00&lt;00:03, 6812170.26it/s]</span><br><span class="line"> 21%|##1       | 5570560/26421880 [00:00&lt;00:02, 9643810.01it/s]</span><br><span class="line"> 30%|##9       | 7897088/26421880 [00:01&lt;00:01, 12668660.86it/s]</span><br><span class="line"> 39%|###9      | 10354688/26421880 [00:01&lt;00:01, 13567884.70it/s]</span><br><span class="line"> 47%|####7     | 12517376/26421880 [00:01&lt;00:00, 15107192.72it/s]</span><br><span class="line"> 57%|#####7    | 15138816/26421880 [00:01&lt;00:00, 15464642.87it/s]</span><br><span class="line"> 65%|######4   | 17170432/26421880 [00:01&lt;00:00, 16205991.36it/s]</span><br><span class="line"> 75%|#######5  | 19922944/26421880 [00:01&lt;00:00, 16485428.61it/s]</span><br><span class="line"> 83%|########2 | 21823488/26421880 [00:01&lt;00:00, 16620077.17it/s]</span><br><span class="line"> 94%|#########3| 24739840/26421880 [00:02&lt;00:00, 17125086.87it/s]</span><br><span class="line">100%|##########| 26421880/26421880 [00:02&lt;00:00, 12608239.78it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/train-images-idx3-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw/train-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/29515 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 29515/29515 [00:00&lt;00:00, 327666.12it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/4422102 [00:00&lt;?, ?it/s]</span><br><span class="line">  1%|1         | 65536/4422102 [00:00&lt;00:12, 360810.29it/s]</span><br><span class="line">  5%|5         | 229376/4422102 [00:00&lt;00:06, 676632.69it/s]</span><br><span class="line"> 19%|#8        | 819200/4422102 [00:00&lt;00:01, 2275103.44it/s]</span><br><span class="line"> 33%|###2      | 1441792/4422102 [00:00&lt;00:01, 2899610.49it/s]</span><br><span class="line"> 74%|#######4  | 3276800/4422102 [00:00&lt;00:00, 6877973.06it/s]</span><br><span class="line">100%|##########| 4422102/4422102 [00:00&lt;00:00, 5392190.04it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/5148 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 5148/5148 [00:00&lt;00:00, 36597079.65it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw</span><br></pre></td></tr></table></figure><h2 id="ToTensor"><a href="#ToTensor" class="headerlink" title="ToTensor()"></a>ToTensor()</h2><p>ToTensor 将 PIL 图像或 NumPy <code>ndarray</code> 转换为 <code>FloatTensor</code> 。并在 [0., 1.] 范围内缩放图像的像素强度值</p><h2 id="Lambda-Transforms"><a href="#Lambda-Transforms" class="headerlink" title="Lambda Transforms"></a>Lambda Transforms</h2><p>Lambda 转换应用任何用户定义的 lambda 函数。在这里，我们定义一个函数将整数转换为 one-hot 编码张量。它首先创建一个大小为 10 的零张量（数据集中的标签数量）并调用 scatter_ ，它在标签 <code>y</code> 给出的索引上分配 <code>value=1</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">target_transform = Lambda(<span class="keyword">lambda</span> y: torch.zeros(</span><br><span class="line">    <span class="number">10</span>, dtype=torch.<span class="built_in">float</span>).scatter_(dim=<span class="number">0</span>, index=torch.tensor(y), value=<span class="number">1</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> transforms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02_pytorch_datasets_DataLoaders</title>
      <link href="/2023/11/10/02-pytorch-datasets-DataLoaders/"/>
      <url>/2023/11/10/02-pytorch-datasets-DataLoaders/</url>
      
        <content type="html"><![CDATA[<h1 id="DATASETS-DATALOADERS"><a href="#DATASETS-DATALOADERS" class="headerlink" title="DATASETS &amp; DATALOADERS"></a>DATASETS &amp; DATALOADERS</h1><p><strong>DATASETS是什么？</strong></p><p>torch.utils.data.Dataset，</p><p><code>Dataset</code>允许您使用预加载的数据集以及您自己的数据</p><p><code>Dataset</code> 存储样本及其相应的标签</p><p><strong>DATALOADERS是什么？</strong></p><p>torch.utils.data.DataLoader</p><p><code>DataLoader</code> 在 <code>Dataset</code> 周围包装一个迭代，以便轻松访问样本。</p><p><strong>解决什么问题？</strong></p><p>用于处理数据样本的代码可能会变得混乱且难以维护</p><p>理想情况下，我们希望数据集代码与模型训练代码分离，以获得更好的可读性和模块化性</p><p><strong>PyTorch 提供了什么数据集，有什么用</strong></p><p>提供了许多预加载的数据集（例如 FashionMNIST）。</p><p>它们对 <code>torch.utils.data.Dataset</code> 进行子类化并实现特定于特定数据的函数</p><blockquote><p>给我们提示，如果要构建自己的数据集同样应该继承Dataset</p></blockquote><p>可以做什么：对您的模型进行原型设计和基准测试。</p><p>在哪里找到：<a href="https://pytorch.org/vision/stable/datasets.html">Image Datasets</a>, <a href="https://pytorch.org/text/stable/datasets.html">Text Datasets</a>, and <a href="https://pytorch.org/audio/stable/datasets.html">Audio Datasets</a></p><h2 id="Loading-a-Dataset-加载数据集"><a href="#Loading-a-Dataset-加载数据集" class="headerlink" title="Loading a Dataset 加载数据集"></a>Loading a Dataset 加载数据集</h2><p><strong>Fashion-MNIST是什么数据集？</strong></p><p> <a href="https://research.zalando.com/project/fashion_mnist/fashion_mnist/">Fashion-MNIST</a> 是 Zalando 文章图像的数据集，由 60,000 个训练示例和 10,000 个测试示例组成。每个示例包含一个 28×28 灰度图像和来自 10 个类别之一的关联标签。</p><p> <strong>如何加载<a href="https://pytorch.org/vision/stable/datasets.html#fashion-mnist">FashionMNIST Dataset</a> 数据集？</strong></p><ul><li><code>root</code> 是存储训练&#x2F;测试数据的路径，</li><li><code>train</code> 指定训练或测试数据集，</li><li>如果 <code>root</code> 上没有数据，则 <code>download=True</code> 会从 Internet 下载数据。</li><li>transform 和 target_transform 指定特征和标签转换</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> torchvision.transforms <span class="keyword">import</span> ToTensor</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">training_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to data/FashionMNIST/raw/train-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/26421880 [00:00&lt;?, ?it/s]</span><br><span class="line">  0%|          | 65536/26421880 [00:00&lt;01:12, 365336.26it/s]</span><br><span class="line">  1%|          | 229376/26421880 [00:00&lt;00:38, 685596.52it/s]</span><br><span class="line">  3%|3         | 851968/26421880 [00:00&lt;00:10, 2415122.44it/s]</span><br><span class="line">  7%|7         | 1900544/26421880 [00:00&lt;00:06, 4075765.30it/s]</span><br><span class="line"> 18%|#8        | 4882432/26421880 [00:00&lt;00:01, 10855436.54it/s]</span><br><span class="line"> 25%|##4       | 6586368/26421880 [00:00&lt;00:01, 11527877.37it/s]</span><br><span class="line"> 31%|###1      | 8257536/26421880 [00:00&lt;00:01, 12111293.67it/s]</span><br><span class="line"> 43%|####2     | 11337728/26421880 [00:01&lt;00:00, 16825176.39it/s]</span><br><span class="line"> 50%|####9     | 13205504/26421880 [00:01&lt;00:00, 14645303.60it/s]</span><br><span class="line"> 62%|######1   | 16252928/26421880 [00:01&lt;00:00, 18391128.94it/s]</span><br><span class="line"> 69%|######9   | 18284544/26421880 [00:01&lt;00:00, 16056294.06it/s]</span><br><span class="line"> 80%|########  | 21266432/26421880 [00:01&lt;00:00, 19223679.44it/s]</span><br><span class="line"> 89%|########8 | 23396352/26421880 [00:01&lt;00:00, 16815978.59it/s]</span><br><span class="line"> 99%|#########9| 26279936/26421880 [00:01&lt;00:00, 19554902.51it/s]</span><br><span class="line">100%|##########| 26421880/26421880 [00:01&lt;00:00, 13595820.68it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/train-images-idx3-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw/train-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/29515 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 29515/29515 [00:00&lt;00:00, 325785.44it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/4422102 [00:00&lt;?, ?it/s]</span><br><span class="line">  1%|1         | 65536/4422102 [00:00&lt;00:12, 362766.41it/s]</span><br><span class="line">  5%|5         | 229376/4422102 [00:00&lt;00:06, 682006.25it/s]</span><br><span class="line"> 20%|##        | 884736/4422102 [00:00&lt;00:01, 2511806.30it/s]</span><br><span class="line"> 44%|####3     | 1933312/4422102 [00:00&lt;00:00, 4114396.78it/s]</span><br><span class="line">100%|##########| 4422102/4422102 [00:00&lt;00:00, 6090778.97it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw</span><br><span class="line"></span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz</span><br><span class="line">Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">  0%|          | 0/5148 [00:00&lt;?, ?it/s]</span><br><span class="line">100%|##########| 5148/5148 [00:00&lt;00:00, 65830112.78it/s]</span><br><span class="line">Extracting data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw</span><br></pre></td></tr></table></figure><h2 id="Iterating-and-Visualizing-the-Dataset"><a href="#Iterating-and-Visualizing-the-Dataset" class="headerlink" title="Iterating and Visualizing the Dataset"></a>Iterating and Visualizing the Dataset</h2><p>如何可视化查看数据集？</p><p>虽然我们可以切片的方式查看数据集，但是这样有些麻烦和不直观。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">training_data[index]</span><br></pre></td></tr></table></figure><p>我们使用 <code>matplotlib</code> 来可视化训练数据中的一些样本。</p><blockquote><p>给我们的一种可视化的方式</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">labels_map = &#123;</span><br><span class="line">    <span class="number">0</span>: <span class="string">&quot;T-Shirt&quot;</span>,</span><br><span class="line">    <span class="number">1</span>: <span class="string">&quot;Trouser&quot;</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">&quot;Pullover&quot;</span>,</span><br><span class="line">    <span class="number">3</span>: <span class="string">&quot;Dress&quot;</span>,</span><br><span class="line">    <span class="number">4</span>: <span class="string">&quot;Coat&quot;</span>,</span><br><span class="line">    <span class="number">5</span>: <span class="string">&quot;Sandal&quot;</span>,</span><br><span class="line">    <span class="number">6</span>: <span class="string">&quot;Shirt&quot;</span>,</span><br><span class="line">    <span class="number">7</span>: <span class="string">&quot;Sneaker&quot;</span>,</span><br><span class="line">    <span class="number">8</span>: <span class="string">&quot;Bag&quot;</span>,</span><br><span class="line">    <span class="number">9</span>: <span class="string">&quot;Ankle Boot&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">figure = plt.figure(figsize=(<span class="number">8</span>, <span class="number">8</span>))</span><br><span class="line">cols, rows = <span class="number">3</span>, <span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, cols * rows + <span class="number">1</span>):</span><br><span class="line">    sample_idx = torch.randint(<span class="built_in">len</span>(training_data), size=(<span class="number">1</span>,)).item()</span><br><span class="line">    img, label = training_data[sample_idx]</span><br><span class="line">    figure.add_subplot(rows, cols, i)</span><br><span class="line">    plt.title(labels_map[label])</span><br><span class="line">    plt.axis(<span class="string">&quot;off&quot;</span>)</span><br><span class="line">    plt.imshow(img.squeeze(), cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/11/10/4yYK3lGWcBizCPD.png" alt="Ankle Boot, Shirt, Bag, Ankle Boot, Trouser, Sandal, Coat, Sandal, Pullover"></p><h2 id="Creating-a-Custom-Dataset-for-your-files"><a href="#Creating-a-Custom-Dataset-for-your-files" class="headerlink" title="Creating a Custom Dataset for your files"></a>Creating a Custom Dataset for your files</h2><p><strong>怎么自定义自己的数据集?</strong></p><p>自定义 Dataset 类必须实现三个函数,__init__、__len__ 和__getitem__.</p><p>可以参考FashionMNIST的实现，下面是例子：</p><p>图像存储在目录 <code>img_dir</code> 中，它们的标签单独存储在 CSV 文件 <code>annotations_file</code> 中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> torchvision.io <span class="keyword">import</span> read_image</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomImageDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, annotations_file, img_dir, transform=<span class="literal">None</span>, target_transform=<span class="literal">None</span></span>):</span><br><span class="line">        self.img_labels = pd.read_csv(annotations_file)</span><br><span class="line">        self.img_dir = img_dir</span><br><span class="line">        self.transform = transform</span><br><span class="line">        self.target_transform = target_transform</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.img_labels)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, idx</span>):</span><br><span class="line">        img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, <span class="number">0</span>])</span><br><span class="line">        image = read_image(img_path)</span><br><span class="line">        label = self.img_labels.iloc[idx, <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> self.transform:</span><br><span class="line">            image = self.transform(image)</span><br><span class="line">        <span class="keyword">if</span> self.target_transform:</span><br><span class="line">            label = self.target_transform(label)</span><br><span class="line">        <span class="keyword">return</span> image, label</span><br></pre></td></tr></table></figure><h3 id="init"><a href="#init" class="headerlink" title="__init__"></a>__init__</h3><p><strong>在__init__方法中我需要做什么？</strong></p><p><strong>init</strong> 函数在实例化 Dataset 对象时运行一次。我们初始化包含图像、注释文件和两种转换的目录（下一节将更详细地介绍）。</p><p>labels.csv 文件如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tshirt1.jpg, 0</span><br><span class="line">tshirt2.jpg, 0</span><br><span class="line">......</span><br><span class="line">ankleboot999.jpg, 9</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, annotations_file, img_dir, transform=<span class="literal">None</span>, target_transform=<span class="literal">None</span></span>):</span><br><span class="line">    self.img_labels = pd.read_csv(annotations_file)</span><br><span class="line">    self.img_dir = img_dir</span><br><span class="line">    self.transform = transform</span><br><span class="line">    self.target_transform = target_transform</span><br></pre></td></tr></table></figure><h3 id="len"><a href="#len" class="headerlink" title="_len_"></a>_<em>len</em>_</h3><p><strong>__len__方法中我需要完成什么工作?</strong></p><p>_<em>len</em>_ 函数返回数据集中的样本数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def __len__(self):</span><br><span class="line">    return len(self.img_labels)</span><br></pre></td></tr></table></figure><h3 id="getitem"><a href="#getitem" class="headerlink" title="_getitem_"></a>_<em>getitem</em>_</h3><p>_<em>getitem</em>_ 函数加载并返回给定索引 <code>idx</code> 处的数据集的样本。</p><ol><li>基于索引，它识别图像在磁盘上的位置，</li><li>使用 <code>read_image</code> 将其转换为张量，</li><li>从 <code>self.img_labels</code> 中的 csv 数据中检索相应的标签，</li><li>对其调用转换函数（如果适用），</li><li>并返回元组中的张量图像和相应的标签。</li></ol><h2 id="Preparing-your-data-for-training-with-DataLoaders"><a href="#Preparing-your-data-for-training-with-DataLoaders" class="headerlink" title="Preparing your data for training with DataLoaders"></a>Preparing your data for training with DataLoaders</h2><p><strong>为什么使用DataLoaders ？DataSet不够用吗？</strong></p><p><code>Dataset</code> 检索数据集的特征并一次标记一个样本。在训练模型时，我们通常希望以“小批量”的方式传递样本，在每个时期重新整理数据以减少模型过度拟合，并使用 Python 的 <code>multiprocessing</code> 来加速数据检索。</p><p><strong>基于上述我们的需求，希望有一种可以通用的API帮我我们获得数据。</strong></p><p><code>DataLoader</code> 是一个可迭代对象，它通过一个简单的 API 为我们抽象了这种复杂性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line">train_dataloader = DataLoader(training_data, batch_size=<span class="number">64</span>, shuffle=<span class="literal">True</span>)</span><br><span class="line">test_dataloader = DataLoader(test_data, batch_size=<span class="number">64</span>, shuffle=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="Iterate-through-the-DataLoader"><a href="#Iterate-through-the-DataLoader" class="headerlink" title="Iterate through the DataLoader"></a>Iterate through the DataLoader</h2><p><strong>我们应该如何通过DataLoader获得数据和标签？</strong></p><p>我们已将该数据集加载到 <code>DataLoader</code> 中，并且可以根据需要迭代数据集。下面的每次迭代都会返回一批 <code>train_features</code> 和 <code>train_labels</code> （分别包含 <code>batch_size=64</code> 特征和标签）。因为我们指定了 <code>shuffle=True</code> ，所以在迭代所有批次后，数据会被打乱（为了更细粒度地控制数据加载顺序，请查看 Samplers）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Display image and label.</span></span><br><span class="line">train_features, train_labels = <span class="built_in">next</span>(<span class="built_in">iter</span>(train_dataloader))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Feature batch shape: <span class="subst">&#123;train_features.size()&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Labels batch shape: <span class="subst">&#123;train_labels.size()&#125;</span>&quot;</span>)</span><br><span class="line">img = train_features[<span class="number">0</span>].squeeze()</span><br><span class="line">label = train_labels[<span class="number">0</span>]Feature batch shape: torch.Size([<span class="number">64</span>, <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>])</span><br><span class="line">Labels batch shape: torch.Size([<span class="number">64</span>])</span><br><span class="line">Label: <span class="number">5</span></span><br><span class="line">plt.imshow(img, cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Label: <span class="subst">&#123;label&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Feature batch shape: torch.Size([64, 1, 28, 28])</span><br><span class="line">Labels batch shape: torch.Size([64])</span><br><span class="line">Label: 5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01_pytorch_tensors</title>
      <link href="/2023/11/10/01_pytorch_tensors/"/>
      <url>/2023/11/10/01_pytorch_tensors/</url>
      
        <content type="html"><![CDATA[<h1 id="Tensors"><a href="#Tensors" class="headerlink" title="Tensors"></a>Tensors</h1><h2 id="Tensors是什么"><a href="#Tensors是什么" class="headerlink" title="Tensors是什么"></a>Tensors是什么</h2><p>张量是一种特殊的数据结构，与数组和矩阵非常相似。</p><h2 id="Tensors什么作用"><a href="#Tensors什么作用" class="headerlink" title="Tensors什么作用"></a>Tensors什么作用</h2><p>张量对模型的输入和输出以及模型的参数进行编码</p><h2 id="Tensors-和-NumPy的ndarrays对比"><a href="#Tensors-和-NumPy的ndarrays对比" class="headerlink" title="Tensors 和 NumPy的ndarrays对比"></a>Tensors 和 <a href="https://numpy.org/">NumPy</a>的ndarrays对比</h2><p>不同：</p><ol><li>张量可以在 GPU 或其他硬件加速器上运行</li><li>张量还针对自动微分进行了优化</li></ol><h2 id="Tensors-和Numpy的ndarrays联系"><a href="#Tensors-和Numpy的ndarrays联系" class="headerlink" title="Tensors 和Numpy的ndarrays联系"></a>Tensors 和Numpy的ndarrays联系</h2><p>张量和 NumPy 数组通常可以共享相同的底层内存，从而无需复制数据。</p><h2 id="Initializing-a-Tensor"><a href="#Initializing-a-Tensor" class="headerlink" title="Initializing a Tensor"></a>Initializing a Tensor</h2><p>1.通过数据创建，类型可以自动推导</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="number">1</span>, <span class="number">2</span>],[<span class="number">3</span>, <span class="number">4</span>]]</span><br><span class="line">x_data = torch.tensor(data)</span><br></pre></td></tr></table></figure><p>2.通过numpy创建</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np_array = np.array(data)</span><br><span class="line">x_np = torch.from_numpy(np_array)</span><br></pre></td></tr></table></figure><p>3.从另一个Tensor创建,新Tensor保留参数Tensor的属性（<strong>形状、数据类型</strong>），除非显式覆盖。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x_ones = torch.ones_like(x_data) <span class="comment"># retains the properties of x_data</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Ones Tensor: \n <span class="subst">&#123;x_ones&#125;</span> \n&quot;</span>)</span><br><span class="line"><span class="comment"># 显示覆盖类型</span></span><br><span class="line">x_rand = torch.rand_like(x_data, dtype=torch.<span class="built_in">float</span>) <span class="comment"># overrides the datatype of x_data</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Random Tensor: \n <span class="subst">&#123;x_rand&#125;</span> \n&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Ones Tensor:</span><br><span class="line"> tensor([[1, 1],</span><br><span class="line">        [1, 1]])</span><br><span class="line"></span><br><span class="line">Random Tensor:</span><br><span class="line"> tensor([[0.8823, 0.9150],</span><br><span class="line">        [0.3829, 0.9593]])</span><br></pre></td></tr></table></figure><h2 id="With-random-or-constant-values"><a href="#With-random-or-constant-values" class="headerlink" title="With random or constant values:"></a><strong>With random or constant values:</strong></h2><p><code>shape</code> 是张量维度的元组。在下面的函数中，它确定输出张量的维数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">shape = (<span class="number">2</span>,<span class="number">3</span>,)</span><br><span class="line">rand_tensor = torch.rand(shape)</span><br><span class="line">ones_tensor = torch.ones(shape)</span><br><span class="line">zeros_tensor = torch.zeros(shape)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Random Tensor: \n <span class="subst">&#123;rand_tensor&#125;</span> \n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Ones Tensor: \n <span class="subst">&#123;ones_tensor&#125;</span> \n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Zeros Tensor: \n <span class="subst">&#123;zeros_tensor&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Random Tensor:</span><br><span class="line"> tensor([[0.3904, 0.6009, 0.2566],</span><br><span class="line">        [0.7936, 0.9408, 0.1332]])</span><br><span class="line"></span><br><span class="line">Ones Tensor:</span><br><span class="line"> tensor([[1., 1., 1.],</span><br><span class="line">        [1., 1., 1.]])</span><br><span class="line"></span><br><span class="line">Zeros Tensor:</span><br><span class="line"> tensor([[0., 0., 0.],</span><br><span class="line">        [0., 0., 0.]])</span><br></pre></td></tr></table></figure><h2 id="Attributes-of-a-Tensor"><a href="#Attributes-of-a-Tensor" class="headerlink" title="Attributes of a Tensor"></a>Attributes of a Tensor</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tensor = torch.rand(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Shape of tensor: <span class="subst">&#123;tensor.shape&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Datatype of tensor: <span class="subst">&#123;tensor.dtype&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Device tensor is stored on: <span class="subst">&#123;tensor.device&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Shape of tensor: torch.Size([3, 4])</span><br><span class="line">Datatype of tensor: torch.float32</span><br><span class="line">Device tensor is stored on: cpu</span><br></pre></td></tr></table></figure><h2 id="Operations-on-Tensors"><a href="#Operations-on-Tensors" class="headerlink" title="Operations on Tensors"></a>Operations on Tensors</h2><h3 id="有哪些运算"><a href="#有哪些运算" class="headerlink" title="有哪些运算"></a>有哪些运算</h3><p> 100 多种<a href="https://pytorch.org/docs/stable/torch.html">张量运算</a>，包括算术、线性代数、矩阵操作（转置、索引、切片）、采样等。</p><h3 id="和一般的计算库相比有哪些优点"><a href="#和一般的计算库相比有哪些优点" class="headerlink" title="和一般的计算库相比有哪些优点"></a>和一般的计算库相比有哪些优点</h3><p>这些操作中的每一个都可以在 GPU 上运行</p><blockquote><p>如果使用Colab如何使用GPU：</p><p>请通过转至运行时 &gt; 更改运行时类型 &gt; GPU 来分配 GPU</p></blockquote><h3 id="为什么我创建后在cpu上？"><a href="#为什么我创建后在cpu上？" class="headerlink" title="为什么我创建后在cpu上？"></a>为什么我创建后在cpu上？</h3><p>默认情况下，张量是在 CPU 上创建的。我们需要使用 <code>.to</code> 方法显式地将张量移动到 GPU</p><blockquote><p>请记住，跨设备复制大张量在时间和内存方面可能会很昂贵！</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># We move our tensor to the GPU if available</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    tensor = tensor.to(<span class="string">&quot;cuda&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="对tensor的切片索引修改"><a href="#对tensor的切片索引修改" class="headerlink" title="对tensor的切片索引修改"></a>对tensor的切片索引修改</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tensor = torch.ones(<span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;First row: <span class="subst">&#123;tensor[<span class="number">0</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;First column: <span class="subst">&#123;tensor[:, <span class="number">0</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Last column: <span class="subst">&#123;tensor[..., -<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">tensor[:,<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(tensor)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">First row: tensor([1., 1., 1., 1.])</span><br><span class="line">First column: tensor([1., 1., 1., 1.])</span><br><span class="line">Last column: tensor([1., 1., 1., 1.])</span><br><span class="line">tensor([[1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.]])</span><br></pre></td></tr></table></figure><h3 id="tensor的拼接，维度扩大"><a href="#tensor的拼接，维度扩大" class="headerlink" title="tensor的拼接，维度扩大"></a>tensor的拼接，维度扩大</h3><p>连接张量 您可以使用 <code>torch.cat</code> 沿给定维度连接一系列张量。</p><p>另请参见 torch.stack，这是另一个与 <code>torch.cat</code> 略有不同的张量连接运算符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t1 = torch.cat([tensor, tensor, tensor], dim=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(t1)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor([[1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.]])</span><br></pre></td></tr></table></figure><h3 id="Arithmetic-operations"><a href="#Arithmetic-operations" class="headerlink" title="Arithmetic operations"></a><strong>Arithmetic operations</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This computes the matrix multiplication between two tensors. y1, y2, y3 will have the same value</span></span><br><span class="line"><span class="comment"># ``tensor.T`` returns the transpose of a tensor</span></span><br><span class="line">y1 = tensor @ tensor.T <span class="comment"># tensor 矩阵乘 tesnor的转置</span></span><br><span class="line">y2 = tensor.matmul(tensor.T) <span class="comment"># 同上</span></span><br><span class="line"></span><br><span class="line">y3 = torch.rand_like(y1)</span><br><span class="line">torch.matmul(tensor, tensor.T, out=y3) <span class="comment"># 矩阵乘，结果输出给y3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># This computes the element-wise product. z1, z2, z3 will have the same value</span></span><br><span class="line">z1 = tensor * tensor <span class="comment"># 计算元素的乘积，下同</span></span><br><span class="line">z2 = tensor.mul(tensor)</span><br><span class="line"></span><br><span class="line">z3 = torch.rand_like(tensor)</span><br><span class="line">torch.mul(tensor, tensor, out=z3)</span><br></pre></td></tr></table></figure><h3 id="如何将单一数值的tensor和python的数值类型进行转化"><a href="#如何将单一数值的tensor和python的数值类型进行转化" class="headerlink" title="如何将单一数值的tensor和python的数值类型进行转化"></a>如何将单一数值的tensor和python的数值类型进行转化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">agg = tensor.<span class="built_in">sum</span>()</span><br><span class="line">agg_item = agg.item()</span><br><span class="line"><span class="built_in">print</span>(agg_item, <span class="built_in">type</span>(agg_item))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12.0 &lt;class &#x27;float&#x27;&gt;</span><br></pre></td></tr></table></figure><h3 id="tensors的In-place-operations"><a href="#tensors的In-place-operations" class="headerlink" title="tensors的In-place operations"></a>tensors的<strong>In-place operations</strong></h3><p>就地运算 将结果存储到操作数中的操作称为就地运算。它们由 <code>_</code> 后缀表示。例如： <code>x.copy_(y)</code> 、 <code>x.t_()</code> 会更改 <code>x</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;tensor&#125;</span> \n&quot;</span>)</span><br><span class="line">tensor.add_(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(tensor)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tensor([[1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.],</span><br><span class="line">        [1., 0., 1., 1.]])</span><br><span class="line"></span><br><span class="line">tensor([[6., 5., 6., 6.],</span><br><span class="line">        [6., 5., 6., 6.],</span><br><span class="line">        [6., 5., 6., 6.],</span><br><span class="line">        [6., 5., 6., 6.]])</span><br></pre></td></tr></table></figure><blockquote><p>确保你的数据没用了，再采取就地运算(In-place operations)</p></blockquote><h2 id="和numpy的联系"><a href="#和numpy的联系" class="headerlink" title="和numpy的联系"></a>和numpy的联系</h2><ol><li>CPU上时，NumPy 数组上的张量可以共享其底层内存位置。</li></ol><h3 id="Tensor-to-NumPy-array"><a href="#Tensor-to-NumPy-array" class="headerlink" title="Tensor to NumPy array"></a>Tensor to NumPy array</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t = torch.ones(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;t: <span class="subst">&#123;t&#125;</span>&quot;</span>)</span><br><span class="line">n = t.numpy()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;n: <span class="subst">&#123;n&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t: tensor([1., 1., 1., 1., 1.])</span><br><span class="line">n: [1. 1. 1. 1. 1.]</span><br></pre></td></tr></table></figure><p>当t数据变化时候，对应的n也发生变化，简单理解就是n是对t的引用（指针）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t.add_(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;t: <span class="subst">&#123;t&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;n: <span class="subst">&#123;n&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t: tensor([2., 2., 2., 2., 2.])</span><br><span class="line">n: [2. 2. 2. 2. 2.]</span><br></pre></td></tr></table></figure><h3 id="NumPy-array-to-Tensor"><a href="#NumPy-array-to-Tensor" class="headerlink" title="NumPy array to Tensor"></a>NumPy array to Tensor</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n = np.ones(5)</span><br><span class="line">t = torch.from_numpy(n)</span><br></pre></td></tr></table></figure><p>NumPy 数组中的变化反映在张量中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.add(n, 1, out=n)</span><br><span class="line">print(f&quot;t: &#123;t&#125;&quot;)</span><br><span class="line">print(f&quot;n: &#123;n&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t: tensor([2., 2., 2., 2., 2.], dtype=torch.float64)</span><br><span class="line">n: [2. 2. 2. 2. 2.]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SDCDNet:一种用于遥感图像的超弱标签半对偶变化检测网络框架</title>
      <link href="/2023/11/09/%E8%AE%BA%E6%96%87-01-SDCDNet-%E4%B8%80%E7%A7%8D%E7%94%A8%E4%BA%8E%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E7%9A%84%E8%B6%85%E5%BC%B1%E6%A0%87%E7%AD%BE%E5%8D%8A%E5%AF%B9%E5%81%B6%E5%8F%98%E5%8C%96%E6%A3%80%E6%B5%8B%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/"/>
      <url>/2023/11/09/%E8%AE%BA%E6%96%87-01-SDCDNet-%E4%B8%80%E7%A7%8D%E7%94%A8%E4%BA%8E%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E7%9A%84%E8%B6%85%E5%BC%B1%E6%A0%87%E7%AD%BE%E5%8D%8A%E5%AF%B9%E5%81%B6%E5%8F%98%E5%8C%96%E6%A3%80%E6%B5%8B%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="SDCDNet是指什么"><a href="#SDCDNet是指什么" class="headerlink" title="SDCDNet是指什么"></a>SDCDNet是指什么</h1><p>SDCDNet 全称 Semi-Dual Change Detection Network 。其中Semi-Dual是半对偶， Change Detection是变化检测，Network是神经网络模型。</p><h2 id="变化检测-Change-Detection"><a href="#变化检测-Change-Detection" class="headerlink" title="变化检测 Change Detection"></a>变化检测 Change Detection</h2><p>变化检测是从不同时期的遥感数据中定量分析和确定地表变化的特征与过程；</p><p>遥感变化检测是一个确定和评价各种地表现象随时间发生变化的过程；</p><p>遥感变化检测是遥感瞬时视场中地表特征随时间发生的变化引起两个时期影像像元光谱响应的变化；</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>更新地理数据的关键技术</li><li>评估灾害、预测灾害发展趋势的关键技术</li><li>土地覆盖&#x2F;利用监测的关键技术</li><li>新一代智能型对地观测卫星的关键技术</li></ul><h3 id="传统经典方法"><a href="#传统经典方法" class="headerlink" title="传统经典方法"></a>传统经典方法</h3><p>先获得两幅同一地点不同时间图像的差异图像，再对差异图像进行处理，将像素点分成变化和无变化两类。</p><p>差异图的获得有很多方法：</p><ul><li>直接相减法</li><li>log法</li><li><a href="https://baike.baidu.com/item/%E5%8F%98%E5%8C%96%E5%90%91%E9%87%8F%E5%88%86%E6%9E%90%E6%B3%95/8636415?fromModule=lemma_inlink">变化向量分析法</a>（CVA）</li></ul><p>差异图的处理方法：</p><ul><li>贝叶斯理论的无监督法（像素之间独立）</li><li>马尔科夫随机场理论的无监督法（像素之间独立）</li><li>自动获取阈值的方法（考虑像素之间的上下文信息）</li></ul><h1 id="一般的变化检测的问题"><a href="#一般的变化检测的问题" class="headerlink" title="一般的变化检测的问题"></a>一般的变化检测的问题</h1><p>大多数的变化检测方法需要大量的标记数据来训练参数。</p><h1 id="本文要解决的问题"><a href="#本文要解决的问题" class="headerlink" title="本文要解决的问题"></a>本文要解决的问题</h1><p>打破这变化检测方法需要大量的标记数据这一限制。</p><p>本文提出了一种用了遥感变化检测的新型半监督学习semi-supervised learning(SSL).称之为半对偶变化检测网络（SDCDNet）。</p><h1 id="SDCDNet网络的大概模型是什么样子"><a href="#SDCDNet网络的大概模型是什么样子" class="headerlink" title="SDCDNet网络的大概模型是什么样子"></a>SDCDNet网络的大概模型是什么样子</h1><p>SDCDNet网络由双共享网络和双分支网络组成，来自基本模型DSIFN 。此外，自适应模块(AWM)增强了弱分支的特征。掩模约束模块（MCM）增加网络提取前景特征的能力。</p><h2 id="双共享网路的作用"><a href="#双共享网路的作用" class="headerlink" title="双共享网路的作用"></a>双共享网路的作用</h2><p>双共享网络旨在发挥数据的潜力</p><h2 id="双分支网络的作用"><a href="#双分支网络的作用" class="headerlink" title="双分支网络的作用"></a>双分支网络的作用</h2><p>区分标记数据的种类并消除不同类型数据之间的干扰。</p><h2 id="AWM作用和MCM作用"><a href="#AWM作用和MCM作用" class="headerlink" title="AWM作用和MCM作用"></a>AWM作用和MCM作用</h2><p>增强了弱分支的特征</p><p>增加网络提取前景特征的能力</p><h2 id="如何解决标签这个复杂问题"><a href="#如何解决标签这个复杂问题" class="headerlink" title="如何解决标签这个复杂问题"></a>如何解决标签这个复杂问题</h2><p>提出了一种基于补丁（patch-based）的弱标签构建方法来构建超弱（super method）标签。</p><h1 id="效果怎么样"><a href="#效果怎么样" class="headerlink" title="效果怎么样"></a>效果怎么样</h1><p>实验表明，所提出的 SDCDNet 在两个遥感图像变化检测数据集上取得了优异的结果。</p><h1 id="测试用的数据集"><a href="#测试用的数据集" class="headerlink" title="测试用的数据集"></a>测试用的数据集</h1><p>遥感图像变化检测数据集，下文由详细介绍</p><h1 id="本文的特征词是"><a href="#本文的特征词是" class="headerlink" title="本文的特征词是"></a>本文的特征词是</h1><ul><li>变化检测（Change detection）</li><li>双分支网络（dual branch network）</li><li>遥感图像（remote sensing image）</li><li>半监督学习（semi-supervised learning (SSL))</li></ul><h1 id="变化检测"><a href="#变化检测" class="headerlink" title="变化检测"></a>变化检测</h1><p>遥感领域的一个重要研究方向</p><h2 id="变化检测应用"><a href="#变化检测应用" class="headerlink" title="变化检测应用"></a>变化检测应用</h2><ul><li>建筑损坏检测</li><li>环境监测</li><li>灾害监测</li><li>城市变化等</li><li>土地覆盖监测</li></ul><h2 id="遥感图形容易获得的原因"><a href="#遥感图形容易获得的原因" class="headerlink" title="遥感图形容易获得的原因"></a>遥感图形容易获得的原因</h2><p>遥感观测技术的进步</p><p>不同平台提供的遥感数据</p><h2 id="变化检测的任务"><a href="#变化检测的任务" class="headerlink" title="变化检测的任务"></a>变化检测的任务</h2><p>分析多时间图像</p><p>为每个像素分配一个二进制标签，标签“0”表示该像素对应的表面在语义上没有变化，标签“1”表示该像素对应的表面在T0和T1之间语义上发生了变化</p><h2 id="超高分辨率（VHR）图像的变化检测的困难点"><a href="#超高分辨率（VHR）图像的变化检测的困难点" class="headerlink" title="超高分辨率（VHR）图像的变化检测的困难点"></a>超高分辨率（VHR）图像的变化检测的困难点</h2><p>季节性变化</p><p>成像条件</p><h1 id="多时相VHR遥感图像变化检测技术分类"><a href="#多时相VHR遥感图像变化检测技术分类" class="headerlink" title="多时相VHR遥感图像变化检测技术分类"></a>多时相VHR遥感图像变化检测技术分类</h1><ul><li>传统方法</li><li>深度学习的方法</li></ul><h2 id="传统方法"><a href="#传统方法" class="headerlink" title="传统方法"></a>传统方法</h2><p>图像代数和变化</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>实际应用中相对有限，容易受到传感器本身、大气和季节变化以及太阳高度的影响。导致降低变化检测的性能</li><li>依赖于手工设计的特征描述符，描述复杂和高级语义变化信息的能力有限，导致在杂乱覆盖地面具有较差的表现</li></ol><h2 id="深度学习技术"><a href="#深度学习技术" class="headerlink" title="深度学习技术"></a>深度学习技术</h2><h3 id="深度学习的特点"><a href="#深度学习的特点" class="headerlink" title="深度学习的特点"></a>深度学习的特点</h3><p>强大的数据模式建模能力</p><h3 id="深度学习能做到什么"><a href="#深度学习能做到什么" class="headerlink" title="深度学习能做到什么"></a>深度学习能做到什么</h3><p>输入图像对之间抽象、复杂、非线性的特征表示，并实现较高的变化检测性能。</p><h3 id="深度学习可以分为"><a href="#深度学习可以分为" class="headerlink" title="深度学习可以分为"></a>深度学习可以分为</h3><p>可以细分为监督方法、半监督方法和无监督方法</p><h3 id="目前深度学习在变化检测上的状况"><a href="#目前深度学习在变化检测上的状况" class="headerlink" title="目前深度学习在变化检测上的状况"></a>目前深度学习在变化检测上的状况</h3><p>现有的深度学习网络模型通常具有更多的参数，<strong>变化检测方法的有效</strong>性在很大程度上取决于<strong>标记训练数据的质量和数量</strong>，特别是对于<strong>完全监督</strong>的方法。当我们没有<strong>大量的训练数据时，变化检测模型的检测能力会大大降低</strong></p><h3 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h3><p>遥感图像的准确注释是一项非常昂贵的任务</p><h4 id="原因是："><a href="#原因是：" class="headerlink" title="原因是："></a>原因是：</h4><ul><li>标注需要具有一定专业知识的专家</li><li>不易注释的部分可能会产生额外成本</li></ul><h4 id="导致结果："><a href="#导致结果：" class="headerlink" title="导致结果："></a>导致结果：</h4><ul><li>大量精细标记的数据是不可持续的</li></ul><h4 id="在研究上的结果："><a href="#在研究上的结果：" class="headerlink" title="在研究上的结果："></a>在研究上的结果：</h4><p>许多学者将研究重点放在如何利用少量标注进行学习的问题上</p><p>例如：</p><ul><li><p>半监督学习（SSL）</p></li><li><p>弱监督学习</p></li><li><p>自监督学习</p></li><li><p>无监督学习等</p></li></ul><h1 id="半监督学习SSL"><a href="#半监督学习SSL" class="headerlink" title="半监督学习SSL"></a>半监督学习SSL</h1><p> SSL是一种结合了监督学习和无监督学习优点的学习方法</p><h2 id="SSL是怎么做的"><a href="#SSL是怎么做的" class="headerlink" title="SSL是怎么做的"></a>SSL是怎么做的</h2><p>用大量的无标签数据和尽可能少的标签数据</p><h2 id="到达了什么效果"><a href="#到达了什么效果" class="headerlink" title="到达了什么效果"></a>到达了什么效果</h2><p>不低于完全监督方法的效果</p><h1 id="目前有没有统一的框架"><a href="#目前有没有统一的框架" class="headerlink" title="目前有没有统一的框架"></a>目前有没有统一的框架</h1><p>目前还没有统一的框架将完全监督方法扩展到半监督数据条件，</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>由于其复杂性，实施此类方法可能具有挑战性</p><h1 id="本文是如何解决缺乏大量高精度标注问题的"><a href="#本文是如何解决缺乏大量高精度标注问题的" class="headerlink" title="本文是如何解决缺乏大量高精度标注问题的"></a>本文是如何解决缺乏大量高精度标注问题的</h1><p>设计了带有自适应加权模块（AWM）和掩模约束模块（MCM）的半监督双变化检测网络（SDCDNet）框架</p><h2 id="在数据集达到的效果"><a href="#在数据集达到的效果" class="headerlink" title="在数据集达到的效果"></a>在数据集达到的效果</h2><p>训练中使用非常有限的像素级标记数据（pixel-level labeled data）和大量的补丁级标记数据（patch-level labeled data ）</p><h2 id="AWM模块作用"><a href="#AWM模块作用" class="headerlink" title="AWM模块作用"></a>AWM模块作用</h2><p>自适应地对特征提取网络的不同语义级别的特征进行加权</p><h2 id="MCM模块作用"><a href="#MCM模块作用" class="headerlink" title="MCM模块作用"></a>MCM模块作用</h2><p>MCM约束输入的弱分支的特征从而更加关注变化区域</p><h2 id="结果上达到的效果"><a href="#结果上达到的效果" class="headerlink" title="结果上达到的效果"></a>结果上达到的效果</h2><p>该框架可以通过较少的精细注释实现更高精度的变化检测，并且所提出的两个模块可以有效地将网络的注意力引导到有用的变化信息，并且<em>消融实验（？）</em>在第四节中描述。</p><h1 id="本文的贡献"><a href="#本文的贡献" class="headerlink" title="本文的贡献"></a>本文的贡献</h1><ol><li>为变化检测提出了一种新颖的 SSL 框架，完美地适应了大多数完全监督的方法，在正常标记数据非常有限的情况下获得了与完全监督的方法相似的分数</li><li>提出了一种与补丁相结合的超弱标签构建方法，其大小可以自行调整，并将超弱标签与正常标签一起输入到所提出的半监督网络中进行训练</li><li>为框架的弱标记分支获得更好的前景特征，提出了AWM和MCM来提取对变化检测任务更有用的特征</li></ol><h1 id="全监督和半监督方法在变化检测领域的应用"><a href="#全监督和半监督方法在变化检测领域的应用" class="headerlink" title="全监督和半监督方法在变化检测领域的应用"></a>全监督和半监督方法在变化检测领域的应用</h1><h2 id="完全监督方法"><a href="#完全监督方法" class="headerlink" title="完全监督方法"></a>完全监督方法</h2><p>方法：一些方法使用完全卷积网络（FCN）从双时态输入生成高分辨率变化图。</p><p>用于：遥感图像理解</p><p>变种1：一部分方法将两个图像连接起来并将其输入变化检测网络，称为早期融合</p><p>变种2：使用两分支网络来提取深层特征，然后融合并生成变化图</p><h3 id="基于U-Net框架进行变化检测的FC-Siam-Diff方法"><a href="#基于U-Net框架进行变化检测的FC-Siam-Diff方法" class="headerlink" title="基于U-Net框架进行变化检测的FC-Siam-Diff方法"></a>基于U-Net框架进行变化检测的FC-Siam-Diff方法</h3><p>首先将图像对输入到siamese网络中，并利用从UNet中提取的多级特征的特征差异来生成最终的变化的地图，实现遥感影像对的变化检测。</p><h3 id="其他的论文提出的方法"><a href="#其他的论文提出的方法" class="headerlink" title="其他的论文提出的方法"></a>其他的论文提出的方法</h3><p>在[^43],提出了时空注意力神经网络来实现变化检测，时空注意力机制计算不同时间和空间的两个像素之间的注意力以生成更具区分性的特征</p><p>在[44]，使用差异增强密集注意力网络来整合低层和高层特征</p><p>在[45]，多任务学习方法来训练变化检测网络，以解决检测结果区域不完整或区域边界不规则的问题。所提出 dual-task constrained deep siamese convolutional network (DTCDSCN) 包含一个检测网络和两个语义分割网络。</p><p>在[46]，提出了具有密集连接 和通道注意的siamese 网络 用于变化检测。</p><p>在[47]，提出了遥感图像变化检测的深度监督双分支图像融合FCN。该方法提取双时态图像深层特征，并利用深度监督差分识别网络指导训练。</p><p>在 [48]，提出将孪生架构与循环神经网络（RNN）相结合，以实现多源数据的更高性能。为了获得更具判别性的特征表示。</p><p>在[49]，提出了具有双重注意机制的连体FCN</p><p>在[50]，为了提供更多有用的信息，提出了一种分层动态融合策略。</p><p>在[51]，利用自注意机制对双时态时空中任意两个像素之间的语义关系进行建模</p><p>在[52]，提出了基于Transformers的变化检测方法，该方法使用卷积神经网络（CNN）提取深层特征并将其输入双时图像转换器（BIT）。作者实现了 BIT 来学习和关联高级语义概念的全局信息，从而增强原始的双时态特征。然后生成双时态特征图减法的元素绝对值。最后，利用基于卷积的预测头来预测变化图。</p><p>[^43]: H. Chen and Z. Shi, “A spatial-temporal attention-based method and a new dataset for remote sensing image change detection,” Remote Sens. vol. 12, no. 10, p. 1662, May 2023</p><h2 id="半监督方法"><a href="#半监督方法" class="headerlink" title="半监督方法"></a>半监督方法</h2><h3 id="一些半监督方法是基于-GAN-的。"><a href="#一些半监督方法是基于-GAN-的。" class="headerlink" title="一些半监督方法是基于 GAN 的。"></a>一些半监督方法是基于 GAN 的。</h3><p>在[53]，提出了一种基于FCN和GAN的半监督变化检测网络。作者使用带有attention的UNet++作为GAN的生成器，并使用两个判别器分别奖励输出特征分布一致性和抑制未标记数据变化图中的不确定性区域。通过不断地从标记和未标记数据中学习，生成器可以生成预期的变化图。</p><p>在[54]中，提出了一种半监督语义分割网络。它由分割器和鉴别器组成，分割器和鉴别器以对抗方式进行训练，并提出自训练损失和特征匹配损失。特征匹配损失稳定了低数据训练，自训练损失平衡了分割器和鉴别器。</p><p>文献[55]提出了一种自监督条件生成对抗网络（GAN），利用生成器和判别器的相互监督信息进行训练，并利用GAN中的判别器实现双时相遥感图像的变化检测作为训练完成后变化检测的分类器。 </p><p>[56]提出了一个端到端的变化检测框架，其中包含三个基本模块：分段器、鉴别器和生成器。通过将其中的两个或两个与不同的优化策略相结合，可以在不同的监督条件下实现变化检测任务。</p><h3 id="非GAN半监督"><a href="#非GAN半监督" class="headerlink" title="非GAN半监督"></a>非GAN半监督</h3><p>由于GAN的训练难度和稳定性，基于非GAN或更稳定的半监督方法仍然是学者们的研究热点。</p><p>在[25]中，使用图卷积网络（GCN）来实现半监督变化检测。</p><p>在[57]中提出了一种用于变化检测的半监督方法。它包含两个阶段：完全监督训练和无监督训练。完全监督训练阶段是正常的图像分割训练过程。在无监督训练阶段，输入图像对没有地面真实变化掩模。然后首先对深度特征差异图应用随机扰动。因此限制输出变化图在不同扰动下保持一致。</p><p> [58] 使用 GCN 在带有少量注释数据的半监督框架中学习判别特征。</p><p>在[39]中，提出了一种标签细化方法，从低分辨率数据标签生成高分辨率变化图。</p><p> [59]在低标签数据情况下训练具有图注意力的双分支嵌套UNet，然后通过约束扭曲图像的检测结果和未标签数据的伪标签的一致性来重新训练网络。</p><p>在[60]中，双任务网络集成了城市建筑分割和变化检测，然后实现了半监督变化检测。</p><h1 id="标注存在的问题"><a href="#标注存在的问题" class="headerlink" title="标注存在的问题"></a>标注存在的问题</h1><p>由于遥感图像的复杂性，遥感图像的标注通常需要专业知识，这导致完全监督方法所需的像素级标注数据的获取非常昂贵。</p><h1 id="其他非完全监督取得的效果"><a href="#其他非完全监督取得的效果" class="headerlink" title="其他非完全监督取得的效果"></a>其他非完全监督取得的效果</h1><p>相比之下，许多非完全监督的变化检测方法仅需要一部分像素级标记数据进行训练。他们在变化检测任务中取得了类似的结果。</p><h1 id="其他的非完全监督存在的问题"><a href="#其他的非完全监督存在的问题" class="headerlink" title="其他的非完全监督存在的问题"></a>其他的非完全监督存在的问题</h1><p>现有的半监督变化检测方法通常无法充分利用所有数据的潜力[61]、[62]，导致当像素级标记数据的比例较低时变化检测往往不令人满意。</p><h1 id="现研究存在的问题"><a href="#现研究存在的问题" class="headerlink" title="现研究存在的问题"></a>现研究存在的问题</h1><p>1）全监督方法的像素级标记监督信息不容易获得。</p><p>2）现有半监督方法的框架普遍复杂，缺乏简单有效的策略。</p><p>3）监督信息挖掘不够深入，珍贵的精细标注数据中的信息没有得到很好的利用。</p><h1 id="本文如何解决这些问题"><a href="#本文如何解决这些问题" class="headerlink" title="本文如何解决这些问题"></a>本文如何解决这些问题</h1><p>该框架使用原始的完全监督方法，将像素级和补丁级注释结合起来，用于变化检测任务。通过战略性地利用监督信息，我们在训练过程中逐步增强标记数据和未标记数据之间变化特征分布的一致性，从而使网络能够学习用于变化检测的关键特征，并使用最小像素级标记数据实现高性能</p><h1 id="第三部分的结构"><a href="#第三部分的结构" class="headerlink" title="第三部分的结构"></a>第三部分的结构</h1><p>我们在第 III-A 节中介绍了我们提出的框架的一般结构，该框架利用带有像素级标签的强标记训练数据和基于补丁注释的弱标记训练数据。</p><p>我们还在第 III-B 节中描述了超弱标签的构造。</p><p>为了改善弱分支的前景特征，我们提出了 AWM 和 MCM 技术，分别在第 III-C 和 III-D 节中进行了解释。</p><p>在第III-E节中，我们介绍了该框架中使用的损失函数，</p><p>在第III-F节中，我们详细介绍了训练过程。</p><h1 id="为什么具有适用性"><a href="#为什么具有适用性" class="headerlink" title="为什么具有适用性"></a>为什么具有适用性</h1><p>1.可以简单地向原始完全添加弱分支来扩展以合并额外的弱标记训练数据的弱监督网络，不需要改变任何的结构。从而可以轻松的将半监督变化检测框架与大多数现有的编码器-解码器[63]范例集成，以实现完全监督的变化检测。</p><h1 id="模型图像"><a href="#模型图像" class="headerlink" title="模型图像"></a>模型图像</h1><p><img src="https://s2.loli.net/2023/11/09/o5vrDBUWfAjMi7J.png" alt="image-20231109163730326"></p><h1 id="模型总体结构"><a href="#模型总体结构" class="headerlink" title="模型总体结构"></a>模型总体结构</h1><h2 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h2><p>它包含五个部分：训练数据的构造、双权值共享的特征提取模块、AWM、MCM和双分支模块。</p><h2 id="A部分框架的一般结构"><a href="#A部分框架的一般结构" class="headerlink" title="A部分框架的一般结构"></a>A部分框架的一般结构</h2><p>首先，像素级强标记图像<br>$$<br>x^n<br>$$<br>和弱标记图像<br>$$<br>x^w<br>$$<br>同时发送到权重共享主干网络生成特征C，进一步将C分割为<br>$$<br>C^n<br>$$<br>和<br>$$<br>C^w<br>$$<br>。主干网络主要由全监督变化检测模型确定，例如，DSIFN[47]中的主干网络是VGG16[64]，SNUNet[46]中的主干网络是UNet++[65]的编码器等。</p><p>对于Normal Head，<br>$$<br>C^n<br>$$<br>直接输送。对于Weak Head，由于对应的弱标注缺少很多细节信息，使用AWM对特征<br>$$<br>C^w<br>$$<br>的一致性约束进行加权，在不确定性较低的区域进行更强的多尺度一致性约束，然后使用MCM使Weak Head获得更好的前景特征，从而将生成的<br>$$<br>f_x<br>$$<br>输入到Weak Head。最后，Normal Head和Weak Head生成最终的预测结果<br>$$<br>\hat{y}^n 和 \hat{y}^w<br>$$</p><p>$$<br>然后分别用像素级标注y^n和弱标注y^w计算损失L_{D_{n}}和L_{D_{w}}。<br>$$</p><p>$$<br>L_{D_{n}}+L_{D_{w}}用于反向传播训练。<br>$$</p><p>在Weak Head中，首先使用AWM自适应地提取多尺度特征。然后，为了减少信息损失并避免训练步骤中的梯度消失问题[66]，受ResNet [61]中残差连接的启发，我们在模块中添加了恒等分支。</p><p> MCM被插入到分支中以增加网络提取前景特征的能力。</p><p>最后，批量归一化[67]和丢失[68]分别用于提高网络的收敛速度和泛化能力。</p><p>如图1所示，假设<br>$$<br>F_{in}&#x3D;[F_1,F_2,…  , F_c] ∈ R^{C<em>H</em>W}<br>$$<br>其中C表示特征图中的通道数，H和W分别表示高度和宽度，<br>$$<br>F’<br>$$<br>和<br>$$<br>F_{out}<br>$$<br>可以通过以下等式获得：<br>$$<br>F’ &#x3D; AWM(F_{in}) + MCM(AWM(F_{in}))<br>$$</p><p>$$<br>F_{out} &#x3D; Conv(D(B(Conv(F’))))<br>$$</p><p>其中 D 是 dropout [68]，B 是批量归一化 [67]。</p><h2 id="B部分超弱标签的构造"><a href="#B部分超弱标签的构造" class="headerlink" title="B部分超弱标签的构造"></a>B部分超弱标签的构造</h2><p>了基于补丁的超弱标签生成方法SWL，不再局限于标记群体。</p><p><img src="https://s2.loli.net/2023/11/09/YWjvl9u3znAH4Xa.png" alt="image-20231109172900271"></p><p>首先，我们按预定义的补丁大小对输入标签进行分块。其次，对于第 k 个 patch<br>$$<br>p^k<br>$$<br>大小为 psize × psize，最终生成的弱 patch 标签定义如下：<br>$$<br>p_{weak}^{k}&#x3D;1-I(\sum_{i&#x3D;1}^{psize}\sum_{j&#x3D;1}^{psize}p_{ij}^{k}&#x3D;0)<br>$$<br>其中 I(·) 是指示函数，如果·为真，则值为 1，否则为 0。表示第 k 个补丁中第 (i, j) 个像素的值。直观上，当一个 patch 包含有变化的像素标签时，整个 patch 的值为 1；当整个patch不包含变化时，该patch中的每个像素都取值为0。在图2中，左上角的patch没有变化的像素，因此其对应的弱标签将被赋予0。相反，其余三个补丁包含变化信息，因此它们相关的弱标签将被赋值为1。最后，经过弱标签构建过程，我们得到了不精确标记的弱标签。</p><h2 id="C部分AWM"><a href="#C部分AWM" class="headerlink" title="C部分AWM"></a>C部分AWM</h2><p><img src="https://s2.loli.net/2023/11/10/M6c3hSRxyempslB.png" alt="image-20231109173154696"></p><p>如图3所示，通过特征提取获得的每个阶段的特征被输入到该模块中。首先，对于每个stage的特征，将剩余stage的特征进行卷积采样，使其大小与该stage的特征相同，并与之拼接，从而可以从每个stage中提取不同尺度的特征信息。然后不同时间序列中同一阶段的特征通过自适应空间特征融合（ASFF）模块[69]以获得每个最终阶段的附加增强特征。为一个骨干网络有n个阶段，每个阶段的具体增强特征计算表示如下：<br>$$<br>weight_1 &#x3D; CS(Concat(F_1,DS(F_2),DS(F_3),DS(F_4)))<br>$$</p><p>$$<br>weight_2 &#x3D; CS(Concat(US(F_1),F_2,DS(F_3),DS(F_4)))<br>$$</p><p>$$<br>weight_3 &#x3D; CS(Concat(US(F_1),US(F_2),F_3,DS(F_4)))<br>$$</p><p>$$<br>weight_4 &#x3D; CS(Concat(US(F_1),US(F_2),US(F_3),F_4))<br>$$</p><p>$$<br>ASFF_i &#x3D; weight_i * F_i, i &#x3D; 1,2,3,4<br>$$</p><p>其中DS和US代表下采样和上采样操作，CS表示先进行Conv，然后进行SoftMax。详细信息可以参见[69]。利用变化检测中的特征差异或特征拼接来完成后续处理。</p><h2 id="D部分MCM"><a href="#D部分MCM" class="headerlink" title="D部分MCM"></a>D部分MCM</h2><p><img src="https://s2.loli.net/2023/11/10/LXU7A5Nf84TuSd3.png" alt="image-20231110091842349"></p><p>在该模块中，</p><p>方法：将提取的变化特征与弱标签提供的变化前景掩模图相乘，使未变化区域的特征失效。</p><p>目的：使网络更关注变换区域前景的特征提取。</p><p>过程表示：<br>$$<br>ｆ＊ｐ＝ｆ＇<br>$$<br>其中f和f‘分别表示特征图和强化特征图。 P代表弱标签，白色部分为变化区域，用1表示，黑色部分用0表示。</p><h2 id="E-部分损失函数"><a href="#E-部分损失函数" class="headerlink" title="E 部分损失函数"></a>E 部分损失函数</h2><p>为了训练这个框架，我们主要使用二元交叉熵（BCE）损失[70]。<br>$$<br>L_{D_{n}}<br>$$<br>用于表示监督损失，<br>$$<br>L_{D_{w}}<br>$$<br>用d于表示弱监督损失，具体针对数据集k中的样本:<br>$$<br>L_{D_{n}} &#x3D; -\frac{1}{N^k}\sum_{m&#x3D;1}^{N^k}\sum_{i,j}(y_{i,j}^{n^{(m)}}\log_{}{\hat{y}<em>{i,j}^{n^{(m)}}}) + (1-y^{n^{m}}</em>{i,j})\log_{}{(1-\hat{y}_{i,j}^{n^{(m)}})}<br>$$</p><p>$$<br>L_{D_{w}} &#x3D; -\frac{1}{N^k}\sum_{m&#x3D;1}^{N^k}\sum_{i,j}(y_{i,j}^{w^{(m)}}\log_{}{\hat{y}<em>{i,j}^{w^{(m)}}}) + (1-y^{w^{m}}</em>{i,j})\log_{}{(1-\hat{y}<em>{i,j}^{w^{(m)}})}<br>$$<br>其中<br>$$<br>\hat{y}</em>{i,j}^{n^{(m)}}<br>$$<br>和<br>$$<br>\hat{y}_{i,j}^{w^{(m)}}<br>$$<br> 表示 SDCDNet 对样本 m 获得的在位置 (i, j) 处预测的置信度图</p><p>数据集k，<br>$$<br>y_{i,j}^{n^{(m)}}<br>$$</p><p>和<br>$$<br>y_{i,j}^{w^{(m)}}<br>$$<br>表示输入图像每个像素的标签。总损耗<br>$$<br>L_{total}<br>$$<br>可表示为<br>$$<br>L_{total} &#x3D; L_{D_w} + L_{D_n}<br>$$</p><h2 id="F-部分训练和推理细节"><a href="#F-部分训练和推理细节" class="headerlink" title="F 部分训练和推理细节"></a>F 部分训练和推理细节</h2><p><img src="https://s2.loli.net/2023/11/10/SvfVReMoFrGThg4.png" alt="image-20231110093733367"></p><p>在本节中，我们提供训练细节和拟议框架的推理细节。</p><p><strong>数据集怎么构造：</strong></p><p>在训练之前，对强标记的像素级样本进行重新采样，以平衡数据集中强标记和弱标记样本的数量。例如，如果强标记样本代表数据集的 1&#x2F;128，弱标记样本代表数据集的 127&#x2F;128，则强标记样本重复 127 次以达到平衡。</p><p><strong>训练过程</strong></p><p>如图5所示，在训练过程中，强标记数据（T1_normal 和T2_normal）和弱标记数据（T1_weak和T2_weak）同时输入到特征提取网络中，以简化训练过程。提取的特征被输入到正常分支和弱分支中以产生单独的网络输出（S_normal 和 S_weak），并且通过计算强标签和弱标签的单独损失函数来更新网络。在推理过程中，优化后的特征提取网络仅使用普通分支。</p><h1 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h1><p><strong>本节内容：</strong></p><p>在本节中，我们介绍了用于评估所提出的变化检测算法的实验设置。</p><p><strong>评价使用的数据集：</strong></p><p>我们首先描述用于评估的两个数据集，<strong>即 WHU [71] 和 SYSU-CD [72]，</strong></p><h2 id="数据集介绍"><a href="#数据集介绍" class="headerlink" title="数据集介绍"></a>数据集介绍</h2><p>1）WHU[71]：该数据集由2012年4月拍摄的航拍图像组成，覆盖面积20.5平方公里，包含12 796座建筑物（2016年版本为16 077座建筑物）。一些示例图像如图 1 所示。 6(a)。子数据集是通过手动选择 30 个地面控制点对原始数据集进行地理校正而创建的，精度为 1.6 像素。子数据集和相应的图像以及建筑矢量和栅格地图现已公开。高分辨率航空图像的尺寸为32 507 × 15 354。[71]中没有提供具体的数据分解方案但我们使用滑动窗口将图像划分为不重叠的 512 × 512 像素块，并将它们分为训练集、验证集和测试集，其中分别包含 1189、319 和 319 个图像块对。</p><p>2）SYSU-CD[72]：该数据集包含20000对2007年至2014年在香港拍摄的0.5米分辨率航空图像。样本图像如图6（b）所示。在[72]中，800个大小为1024×1024的原始图像对按照6:2:2的比例分为训练集、验证集和测试集。然后，从每个图像对中随机选择25个大小为256×256的图像子集对，并通过随机翻转和旋转进行增强，以获得总共20000对航空图像块。该数据集包括各种类型的重大变化，例如新城市建设、郊区扩张、预建地基、植被变化、道路拓宽和海洋建设。</p><h2 id="比较方法介绍"><a href="#比较方法介绍" class="headerlink" title="比较方法介绍"></a>比较方法介绍</h2><p>1）FC-Siam-Diff [42]：一种特征融合方法，使用孪生全CNN提取多级特征，并利用特征差异来融合双时态信息。</p><p>2）DTDSCN[45]：一种多尺度特征融合方法，结合了FCN中的通道注意机制和空间注意机制，以获得更具判别性的特征。</p><p>3）SNUNet [46]：用于变化检测的密集连接暹罗NestedUnet。它通过从编码器到解码器的紧凑信息传输来减轻神经网络深层的局部信息丢失。</p><p>4）DSIFN[47]：一种深度监督的图像融合网络，首先使用两分支FCN进行特征提取，然后使用深度监督的差分判别网络（DNN）进行变化检测。为了增强变化图边界和内部密度的完整性，通过注意力机制将多级语义特征与图像差分图特征混合。</p><p>5）BIT_CD[52]：一种基于Transformers的变化检测方法。它使用 CNN 提取深层特征并将其输入两个分支变压器。然后增强原始双时特征，并生成两个分支特征图之间差异的像素绝对值。最后，利用几个卷积来获得变化图。</p><p>6）s4GAN [54]：一种对抗性半监督语义分割方法。它由分割器和鉴别器组成，分割器和鉴别器以对抗方式进行训练。提出的两个损失可以稳定低数据训练并平衡分割器和鉴别器。</p><p>7）SemiCD [57]：一种用于变化检测的半监督方法。它包含完全监督的训练阶段和无监督的训练阶段。在正常的完全监督训练阶段之后，在无监督阶段，网络约束输出变化图在不同扰动下保持一致。</p><h2 id="评估指标介绍"><a href="#评估指标介绍" class="headerlink" title="评估指标介绍"></a>评估指标介绍</h2><p><strong>使用什么指标作为评价标准</strong></p><p>F1是精度和召回率的加权调和平均值，它同时考虑精度和召回率，平衡冲突，更能体现模型的变化检测能力。所以我们使用变化的平均F1分数</p><p><strong>计算方法</strong></p><p>以类别和背景为主要评价指标，公开计算如下：<br>$$<br>F1&#x3D;\frac{2<em>precision</em>recall}{precision+recall}<br>$$<br>此外，我们还使用 Precision、Recall 和 Intersection over Union（IoU）作为辅助评估指标，计算公式如下：<br>$$<br>Precision&#x3D;\frac{TP}{TP+FP}<br>$$</p><p>$$<br>Recall&#x3D;\frac{TP}{TP+FN}<br>$$</p><p>$$<br>IoU&#x3D;\frac{TP}{TP+FN+FP}<br>$$</p><p>其中，TP、FP、TN、FN分别为真阳性、假阳性、真阴性、假阴性的数量。</p><h2 id="实验设置介绍"><a href="#实验设置介绍" class="headerlink" title="实验设置介绍"></a>实验设置介绍</h2><p><strong>训练参数设置</strong>：</p><p>为了训练本文提出的 SDCDNet，我们利用了 BCE 损失函数 [70] 和随机梯度下降 (SGD) 优化器 [73]，动量设置为 0.9。我们将学习率初始化为 0.01，并采用预热策略 [61] 在前 5 个时期内逐渐将其增加到预设值。随后，我们应用余弦退火来衰减学习率并将权重衰减设置为 0.0005。这些模型使用 PyTorch [74] 深度学习框架在四个 Nvidia 2080Ti GPU 上进行了 100 个周期的训练，小批量大小为 8。</p><h2 id="消融研究"><a href="#消融研究" class="headerlink" title="消融研究"></a>消融研究</h2><p><strong>探究AWM和MCM对模型的影响：</strong></p><p>为了利用我们提出的 SDCDNet 研究 AWM 和 MCM 对遥感图像变化检测的影响，我们使用 DSIFN 作为基础模型，在 SYSU-CD 数据集上创建消融实验的基线 [72]。我们使用 128 像素的块大小和 1&#x2F;8 比例的像素级强注释。本节介绍我们的消融实验的结果，这些结果使用五个综合指标进行定量评估：精度、召回率、F1 分数、并集平均交集 (MIoU) 和参数。</p><p><strong>使用那些指标判断AWM和MCM的作用：</strong></p><p>我们的实验证实了 AWM 和 MCM 的实用性。如表一所示，AWM 的添加改善了所有四个评估指标，表明各级特征的自适应融合增强了对小变化区域的关注。另一方面，优先考虑前景信息的 MCM 相比 AWM 提高了 Precision、F1 分数和 MIoU，同时由于样本太少对变更建筑物的负面影响而略微降低了 Recall。当两个模块添加在一起时，模型的学习能力得到加强，与基线相比，Precision 提高了 1.51%，Recall 提高了 1.55%，F1 分数提高了 1.18%，MIoU 提高了 1.78%。与基线相比，AWM 和 MCM 所需的额外参数分别为 3.5M 和 2.8M。这些消融实验证明了所提出的 AWM 和 MCM 的有效性，并且计算成本的增加是可以接受的。这些模块增强了网络提取前景信息特征并进行多尺度融合的能力，从而更完整地检测变化边界并整体改善网络的缺点。</p><p><img src="https://s2.loli.net/2023/11/10/KmSqOAXsaTNG6rl.png" alt="image-20231110102402710"></p><h2 id="实验比较分析"><a href="#实验比较分析" class="headerlink" title="实验比较分析"></a>实验比较分析</h2><p><strong>使用数据集</strong>： WHU [71] 和 SYSU-CD [72] </p><p><strong>比较方法</strong>：</p><p>完全监督：</p><p> FC-Siam-Diff [42]、DTDSCN [45]、SNUNet [46]、BIT_CD [52] 和 DSIFN [47]，</p><p>半监督：</p><p>SemiCD [57] 和 s4GAN [54]（s4GAN 是在变化检测）。</p><h2 id="定性比较"><a href="#定性比较" class="headerlink" title="定性比较"></a>定性比较</h2><p>1）定性比较：</p><p>图7，表示了结果</p><p><img src="C:\Users\flan\AppData\Roaming\Typora\typora-user-images\image-20231110103959059.png" alt="image-20231110103959059"></p><p>结果：半监督 SDCDNet 框架在视觉效果方面超越了基本模型方法。</p><p>小目标：小目标检测的细节处理方面优于基本模型，显着减少了漏检和错误检测。</p><p>大目标：对于大目标，与基本模型相比，我们的方法显示出更好的检测连续性。</p><p>2）定量比较：</p><p><strong>条件</strong>：不同的SSL设置</p><p><strong>结论</strong>：</p><p>在强标记数据仅为1&#x2F;8的情况下，与基本模型相比，所提出的框架在所有SSL设置中实现了本文的最佳准确率。如表II和表III所示，当贴片尺寸变小时，改进尤其显着。</p><p>例如，在 WHU 建筑数据集上，当块大小为 128 像素时，我们提出的框架在精度、召回率、F1 和 MIoU 方面分别优于基本模型 DSIFN 9.64%、7.45%、7.44% 和 11.29%。同样，在 SYSU-CD 数据集上，与基本模型 DSIFN 相比，我们的框架在精度、召回率、F1 和 MIoU 方面分别显示出 4.3%、4.86%、6.12% 和 8.85% 的改进。当 Patch Size 减小到 16 像素时，性能进一步提高。在 WHU 建筑数据集中，我们提出框架在精度、召回率、F1 和 MIoU 方面分别实现了 11.94%、9.62%、9.59% 和 15.11% 的改进。在 SYSU-CD 数据集中，我们的方法在精度、召回率、F1 和 MIoU 方面分别显示出 5.14%、5.75%、6.85% 和 9.69% 的改进。</p><p><strong>减小块像素大小时候为什么提高准确度</strong></p><p>这是因为减少补丁大小会导致更准确的弱标签，从而帮助模型获得更好的准确性。此外。</p><p>即使仅使用 1&#x2F;4 的精细标记样本，我们的方法使用所有数据实现了不低于甚至高于基础模型的精度。</p><p><strong>和半监督SemiSANet 的比较</strong></p><p>SemiSANet 是一种简单而有效的半监督变化检测方法，采用一致性正则化和强增强 [59]。在本文的实验部分，发现在 WHU Building 数据集上，SemiSANet 取得的 F1 分数分别为 0.7808、0.7944、0.8353 和 0.8786，标记比例为 1&#x2F;40、1&#x2F;20、1&#x2F;10 和1&#x2F;5。</p><p>我们提出了一种名为 SDCDNet 的新方法，它建立在 DSIFN 的基础上。在我们的实验中，当标记比例分为 1&#x2F;64、1&#x2F;32、1&#x2F;16 和 1&#x2F;8 时，SDCDNet 在 F1 分数方面优于 SemiSANet。</p><p><strong>像素补丁大小在128像素时候</strong></p><p>为了证明我们提出的框架的优越性，我们使用 128 像素的补丁大小，将其与两个数据集（WHU 建筑数据集和 SYSU-CD 数据集）上的基本模型进行了比较。结果如表 IV 和 V 所示表明我们提出的方法在所有标记比率上都优于基本模型。此外，当标记率较低时，我们提出的框架相对于基本模型的改进更为显着，如图 8和9所示。具体来说，在 WHU 建筑数据集上，当强标记数据减少到 1&#x2F;4 时，我们的方法比基本模型 DSIFN 实现了 F1 指标上提高 4.26% 和 MIoU 指标提高 6.25%。在 SYSU-CD 数据集上，我们的方法使 F1 分数提高了 3.68%，MIoU 提高了 4.64%。值得注意的是，当仅使用 1&#x2F;128 进行强标记数据进行训练时候，我们的方法在两个数据集上的 F1 分数和 MIoU 均取得了显着改进，在 WHU 建筑数据集上分别提高了 34.28% 和 40.42%，在 SYSU-CD 数据集上分别提高了 17.91% 和 23.48%。我们的方法在两个数据集上也优于其他半监督模型 s4GAN 和 SemiCD，特别是当像素级标记样本的比例较低时。</p><p><strong>表6证明了模型和同其他模型相比下的有效性</strong></p><p>表六比较了相同条件下每个模型的参数数量和计算量。与大多数基础模型上的半监督方法相比，我们提出的方法取得了优越的性能，证明了其有效性。</p><p><strong>有效性原因分析：</strong></p><p>我们将这一显着改善归因于两个主要原因。首先，随着强标签数据量的减少，基础模型的特征分布与真实分布会有较大的误差。我们提出的框架对少量强标记数据进行重新采样，以使得正常分支获得特征分布信息，而弱分支中使用的 MCM 使模型能够从弱标记数据中提取引人注目的判别特征。其次，在训练过程中不断提高Normal和Weak分支之间特征分布的一致性，从而在极少的强标记数据和大量弱标记数据的情况下实现高精度。</p><p><strong>在其他数据集上（Google数据集）的有效性</strong></p><p>3）Google数据集中的定量分析：为了进一步验证了所提出方法在不同的数据集中的性能，我们用三种具有代表性的方法在谷歌数据集上测试，其中改变的对象在大小和形状上有所不同。如表七所示，我们提出的方法在不同的半监督设置下比其他半监督方法表现出显着的优势，证明了其高效性。</p><p><strong>当前方法的局限部分</strong></p><p>4）讨论与分析：我们提出的半监督变化检测方法可以有效地检测有限标记的变化。然而，我们的工作有两个主要限制。</p><ol><li>首先，我们的方法在很大程度上取决于所使用的完全监督的变化检测方法的性能，这可能会影响变化检测结果的质量。</li><li>其次，如第 III-F 节所述，当标记比率较低时，必须重复采样强标记样本的数量以匹配弱标记样本的数量进行对齐，这会增加训练时间并且根据不同的强标签的比例对结果产生不同的影响。</li></ol><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>标记遥感数据非常昂贵，并且在实际应用中获取这些标签既具有挑战性又乏味。为了解决这些问题，我们并没有专注于构建一个新的、特定的半监督变化检测网络模型。相反，我们提出了一种基于 SSL 的新的、通用的、方便的变更检测框架。</p><ol><li>该框架只需要少量的强标记数据和大量的弱标记数据即可实现高精度的变化检测，当训练集中强标记数据的比例较小。</li><li>如果使用现有的全监督变化检测模型作为基础模型，该框架可以在不改变基础模型结构的情况下，通过向基础模型添加Weak分支来快速实现半监督变化检测训练。</li><li>实验结果证明了所提出框架的有效性，在相同的实验数据和条件下，与现有的完全监督变化检测模型相比，观察到性能显着提高。</li></ol><p>在未来的研究中，我们将探索该框架在特征提取能力更强的基础模型上的应用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 遥感 </tag>
            
            <tag> SDCDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地狱门代码详解</title>
      <link href="/2023/11/07/Minecraft%E6%BA%90%E7%A0%81-01-%E5%9C%B0%E7%8B%B1%E9%97%A8%E4%BB%A3%E7%A0%81%E8%AF%A6%E8%A7%A3/"/>
      <url>/2023/11/07/Minecraft%E6%BA%90%E7%A0%81-01-%E5%9C%B0%E7%8B%B1%E9%97%A8%E4%BB%A3%E7%A0%81%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>通过火焰方块的放置判断当前的位置是否可以生成地狱门传送方块，其中判断是否满足生成的条件使用的PortalShape类。若可以生成EventHooks的onTrySpawnPortal方法。其中EventHooks的onTrySpawnPortal方法调用了PortalSpawnEvent事件。之后得到的结果为true的情况下。通过PortalShape类的createPortalBlocks方法创建方块。</p><h1 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h1><p>地狱门就是一个多方块结构，通过这个实现我们可以设计其他的多方块结构。</p><h1 id="PortalShape类"><a href="#PortalShape类" class="headerlink" title="PortalShape类"></a>PortalShape类</h1><p>用于处理和检测游戏中的传送门</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">PortalShape类 <span class="comment">// 处理游戏中的传送门的形状</span></span><br><span class="line">MIN_WIDTH <span class="comment">// 最小宽度</span></span><br><span class="line">MAX_WIDTH  <span class="comment">// 最大宽度</span></span><br><span class="line">MIN_HEIGHT <span class="comment">// 最小高度</span></span><br><span class="line">MAX_HEIGHT <span class="comment">// 最大高度</span></span><br><span class="line">IBlockStateExtension::isPortalFrame; <span class="comment">// 传送门框架判断函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于给定位置和方向上寻找符合条件的传送门形状</span></span><br><span class="line">findEmptyPortalShape()</span><br><span class="line"><span class="comment">// 在给定的环境中寻找一个符合条件的传送门的形状</span></span><br><span class="line"><span class="comment">// 创建一个传送门形状，调用谓词进行过滤。根据条件返回对应的Optional包装的PortalShape对象</span></span><br><span class="line">findPortalShap()</span><br><span class="line"><span class="comment">// 初始化一个新的传送门的形状实例</span></span><br><span class="line">PortalShape()  </span><br><span class="line"><span class="comment">// 计算传送门底部左边的位置</span></span><br><span class="line">calculateBottomLeft(BlockPos)</span><br><span class="line"><span class="comment">// 计算宽度</span></span><br><span class="line">calculateWidth() </span><br><span class="line"><span class="comment">// 计算传送门到边缘的位置</span></span><br><span class="line">getDistanceUntilEdgeAboveFrame()</span><br><span class="line"><span class="comment">// 计算高度</span></span><br><span class="line">calculateHeight() </span><br><span class="line"><span class="comment">// 计算传送门顶部的位置</span></span><br><span class="line">getDistanceUntilTop() </span><br><span class="line"><span class="comment">// 判断一个位置是否是空的</span></span><br><span class="line">isEmpty()</span><br><span class="line"><span class="comment">// 判断传送门是否是合法的</span></span><br><span class="line">isValid()</span><br><span class="line"><span class="comment">// 创建传送门方块（紫色那个）</span></span><br><span class="line">createPortalBlocks() </span><br><span class="line"><span class="comment">// 传送门是否完整</span></span><br><span class="line">isComplete()</span><br><span class="line"><span class="comment">// 获得相对位置</span></span><br><span class="line">getRelativePosition()</span><br><span class="line"><span class="comment">// 创建传送门信息</span></span><br><span class="line">PortalInfo <span class="title function_">createPortalInfo</span><span class="params">()</span></span><br><span class="line"><span class="comment">// 用于找到碰撞免疫的位置</span></span><br><span class="line">findCollisionFreePosition()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="BaseFrieBlock类"><a href="#BaseFrieBlock类" class="headerlink" title="BaseFrieBlock类"></a>BaseFrieBlock类</h1><p>&#x2F;&#x2F; 火焰类型方块的基类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> BaseFireBlock<span class="comment">// 火焰类型方块的基类</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据放置的位置和level决定状态</span></span><br><span class="line">getStateForPlacement</span><br><span class="line"><span class="comment">// 根据getter和blockpos决定火焰方块的状态</span></span><br><span class="line">getState() </span><br><span class="line"><span class="comment">// 返回火焰方块的形状，用于碰撞检测</span></span><br><span class="line">getShape() </span><br><span class="line"><span class="comment">// 每个tick会调用的方法，处理火焰动画的效果，例如播放火焰的环境音效，添加火焰的粒子效果</span></span><br><span class="line">animateTick() </span><br><span class="line"><span class="comment">// 抽象方法，用于判断方块是否可以燃烧</span></span><br><span class="line">canBurn();</span><br><span class="line"><span class="comment">// 处理实体进入火焰的状况，例如添加火焰伤害和燃烧效果</span></span><br><span class="line">entityInside()</span><br><span class="line"><span class="comment">// 处理方块被放置的情况，例如在特定的维度中，如果方块上方有足够的空间，就会尝试创建一个传送门</span></span><br><span class="line">    onPlace()</span><br><span class="line"><span class="comment">// 判断当前维度世界是否可以创建传送门</span></span><br><span class="line">inPortalDimension()</span><br><span class="line"><span class="comment">// 处理方块被破坏时候的粒子效果</span></span><br><span class="line">spawnDestroyParticles()</span><br><span class="line"><span class="comment">// 处理玩家破坏方块时候的情况</span></span><br><span class="line">playerWillDestroy()</span><br><span class="line"><span class="comment">//它用于判断方块是否可以被放置在给定的位置。</span></span><br><span class="line"> canBePlacedAt()</span><br><span class="line"><span class="comment">// 静态方法，用于判断给定的位置是否可以创建传送门</span></span><br><span class="line">isPortal()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自然辩证法习题</title>
      <link href="/2023/11/06/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95%E9%A2%98/"/>
      <url>/2023/11/06/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h1><p>简答题四选三</p><p>论述题 2个</p><h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><h2 id="机械唯物主义自然观，缺陷，什么是机械唯物主义自然观"><a href="#机械唯物主义自然观，缺陷，什么是机械唯物主义自然观" class="headerlink" title="机械唯物主义自然观，缺陷，什么是机械唯物主义自然观"></a>机械唯物主义自然观，缺陷，什么是机械唯物主义自然观</h2><p>机械唯物主义自然观是什么：机械唯物主义自然观是16-18世纪的自然科学家和哲学家们根据牛顿经典力学等自然成果，概况和总结自然界及其与人类的关系形成的机械唯物主义和形而上学的自然观。</p><p>与马克思自然观的关系是：重要的思想渊源</p><p>机械唯物主义自然观的观点：</p><ul><li>自然界由物质构成，物质由不可再分的微粒构成。</li><li>自然界具有绝对不变性，自然物和时间，空间都是不变的。</li><li>自然界的物质运动是受外力的作用，遵循因果规律的机械运动，宇宙的过程可以用简单的数学方程式表示。</li><li>自然界受到上帝的“目的性”支配。</li><li>以形而上学的思维方式认识自然界，即它先把整体分割为若干孤立的部分要素进行研究，再把这些部分合为一体；他是与辩证法相对的，是用孤立，静止的观点观察世界的思维方式；这种思维方式在研究方法方面超过古希腊，但是在自然观方面却低于过古希腊。</li><li>人和自然界都是机器，并且是分立的。</li></ul><p>机械唯物主义自然观的额缺陷：</p><p>主要体现：以机械决定论的观点认识自然界的存在及其规律，并以形而上学方法开展具体研究；以因果决定论的观点推测自然界的未来发展。</p><ul><li>以机械决定论认识自然界。（1）它把自然界和人都看作机器，并把人排斥与自然界之外，割裂其固有联系。（2）它以机械运动穷尽物质的所有运动，抹杀物质运动形式及其性质的多样性。（3）它用量的差异说明一切质的差异，用物质的量规定其质，忽视了质和量的辩证关系。</li><li>以因果决定论看待自然界。它主张自然界的存在和发展都在遵循因果规律，提倡“关于自然界的安排的合目的性的思想”。其结果，“还是没有摆脱神学自然观的束缚”。</li><li>以孤立和静止的方法研究自然界。它主张“在绝对不相容的对立中思维”，“企图用一种模式来改造整个世界”，虽然“在个别问题上胜过朴素唯物主义，但对世界的联系和发展的理解却低于朴素唯物主义”。</li></ul><h2 id="默顿科学，四条规范，科学的四条规范"><a href="#默顿科学，四条规范，科学的四条规范" class="headerlink" title="默顿科学，四条规范，科学的四条规范"></a>默顿科学，四条规范，科学的四条规范</h2><p>提出者：默顿在《论科学与民主》中提出</p><p>时间：1942年</p><p>作用：系统阐述科学活动的规范结构（科学共同体的内部行为规范）</p><p>目的：凸显科学独有的文化和精神气质。</p><p>内容：普遍主义，公有性，无私利性，有组织的怀疑主义。</p><ul><li>普遍主义规范强调学科内容和科学评价标准的客观性，普遍性</li><li>公有主义规范强调科学知识的公有性，强调科学知识是人类共同的财富。</li><li>无私利性规范要求科学家不应以科学活动谋取私利。</li><li>有条理的怀疑精神强调科学永恒的批判精神。</li><li>独创性规范要求科学家只有发现了前人未发现的东西，做出了前人未曾做出的成果，其工作才会被认为对科学的发展具有实质性的意义。</li></ul><h2 id="怎么理解科学始于问题"><a href="#怎么理解科学始于问题" class="headerlink" title="怎么理解科学始于问题"></a>怎么理解科学始于问题</h2><p>做科学研究，首先要从问题出发。抓住了问题就抓住了具体与关键。习近平特别强调问题意识与问题导向，他指出：“理论创新只能从问题开始。”习近平在《关于&lt;中共中央关于全面深化改革若干重大问题的决定&gt;的说明》中所明确提出的“要有强烈的问题意识，以重大问题为导向”的思想也适用于科学研究。以问题为导向，是科学研究的重要方法，也是辩证思维首先需要考虑的基本点。</p><p>科学研究从问题出发，是以科学技术哲学中长期坚持的基本方法，现在需要注意将问题意识与把握机遇相结合。科学研究从问题出发，也需要抓住机会。有了问题意识，才能抓住研究问题的机遇。</p><h2 id="怎么理解数学方法与科学实验方法"><a href="#怎么理解数学方法与科学实验方法" class="headerlink" title="怎么理解数学方法与科学实验方法"></a>怎么理解数学方法与科学实验方法</h2><p>数学方法是一种关注事物的形式和抽象结构的思维和科学方法，它抽象地表达事物的空间关系和数量关系。</p><p>数学方法和数学思维，是一种把不确定性尽量转为确定性的方法，是追求精准思维的具体方法。</p><p>精准思维不仅追求一种数学化的精确性，而且是一种兼具理论和务实的思维方法，它强调具体和准确，要求研究精准，分析精准。</p><p>系统思维是把事物视为系统来处理的思维方法。系统思维是一种整体性和关联性很强的思维方法。</p><p>数学方法注重抽象，模式化，是我们可以把自然研究对象高度抽象，转化为人工模型，抽象其中的因果关系的基本方法。数学方法包括多种形式，如数学方程方法，数学建模方法，数学统计方法，数学实验方法。</p><ul><li>数学方程方法：事物的关键关系抽象出来，建立某种关于事物的数学模型。</li><li>数学建模方法：科学家考察和介入自然事物的中介和桥梁。反映事物内在属性的抽象关系</li><li>数学统计方法：对事物总体数量，类型及其关系的认识方法。是在统计资料的基础上研究，整理和分析统计资料的方法。对认识事物总体状况，分布状态及其相互关系有重要意义。</li><li>数学实验方法：计算机技术和数学结合起来，在计算机上以数学方法设计实现理想实验。有助于更加精确和在整体上认识事物内部要素和事物之间的理想关系。是一种理想化的数学实践。</li></ul><h1 id="论述题"><a href="#论述题" class="headerlink" title="论述题"></a>论述题</h1><h2 id="习近平的科技创新观"><a href="#习近平的科技创新观" class="headerlink" title="习近平的科技创新观"></a>习近平的科技创新观</h2><p>（1）加快建设创新型国家，建设设计科技强国。</p><p>（2）创新是引领发展的第一动力</p><p>（3）实施创新驱动发展战略，推进以科技创新为核心的全面创新。</p><p>（4）走中国特色自主创新道路。</p><p>（5）坚持融入全国科技创新网络，深度参与全球科技治理</p><p>（6）加快科技体制改革步伐</p><p>（7）加强科技文化建设，发展创新文化。</p><h2 id="怎么理解现代化，谈谈对中国式现代化的理解"><a href="#怎么理解现代化，谈谈对中国式现代化的理解" class="headerlink" title="怎么理解现代化，谈谈对中国式现代化的理解"></a>怎么理解现代化，谈谈对中国式现代化的理解</h2><p>现代化是指发展中的社会为了获得发达的工业社会所具有的一些特点，而经历的文化与社会变迁的全球性过程。</p><p>一般来说现代化包含</p><ul><li>学术知识上的科学化</li><li>法律政治上的民主化</li><li>经济上额标准工业化</li><li>思想作品多元自由化</li><li>生活文化领域的个人化</li><li>宗教色彩褪去的世俗化</li></ul><p>中国式现代化是指中国共产党领导的社会主义现代化。既有各国现代化的共同特征，又有基于自己国情的中国特色。</p><p>中国式现代化的特色：</p><ul><li>人口规模最大的现代化</li><li>全体人民共同富裕的现代化</li><li>物质文明和精神文明相协调的现代化</li><li>人与自然和谐共生的现代化</li><li>和平发展道路的现代化</li></ul><p>中国式现代化的本质要求是：</p><ul><li>坚持中国共产党领导</li><li>坚持中国特色社会主义</li><li>实现高质量发展</li><li>发展全过程人民民主</li><li>丰富人民精神世界</li><li>实现全体人民共同富裕</li><li>促进人与自然和谐共生</li><li>构建人类命运共同体</li><li>创造人类文明新形态</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 自然辩证法概论 </tag>
            
            <tag> 习题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建该blog的你可能需要的相关资料</title>
      <link href="/2023/11/05/%E6%90%AD%E5%BB%BA%E8%AF%A5blog%E7%9A%84%E4%BD%A0%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E7%9A%84%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/"/>
      <url>/2023/11/05/%E6%90%AD%E5%BB%BA%E8%AF%A5blog%E7%9A%84%E4%BD%A0%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E7%9A%84%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>这里罗列下搭建本blog时候用到了那些文档方便想要自己的搭建一个的去用。</p><h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><p>hexo博客的搭建教程，其中第三步域名绑定可选做。</p><p><a href="https://zhuanlan.zhihu.com/p/137476045">Hexo搭建个人博客-并部署到Github上托管(Windows) - 知乎 (zhihu.com)</a></p><h2 id="主题使用"><a href="#主题使用" class="headerlink" title="主题使用"></a>主题使用</h2><p>这里简单介绍了怎么配置使用主题，并给出了一部分主题的配置，详细的主题配置还是推荐看作者给的内容。</p><p><a href="https://www.cnblogs.com/ncphoton/p/16950595.html">Hexo-Butterfly主题配置 - NcPhoton - 博客园 (cnblogs.com)</a></p><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>这里是作者官网给出的配置文档，写的比较详细，也导致你需要的和不需要的很多，需要耐心阅读找到你需要的。</p><p>其中不仅仅是一，还请翻阅其他的篇幅。</p><p><a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安裝文檔(一) 快速開始 | Butterfly</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于自己写一个简单模组的想法</title>
      <link href="/2023/10/31/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E6%A8%A1%E7%BB%84%E7%9A%84%E6%83%B3%E6%B3%95/"/>
      <url>/2023/10/31/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E6%A8%A1%E7%BB%84%E7%9A%84%E6%83%B3%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h1><p>做一个能够直接破坏矿物的爆炸的物品，类似于匠魂2的EPLE物品，可以直接用来挖矿，并再这个基础上做一些拓展</p><h1 id="灵感"><a href="#灵感" class="headerlink" title="灵感"></a>灵感</h1><p>来自匠魂的[EFLN - <a href="https://www.mcmod.cn/item/157578.html">TiC2]匠魂2 (Tinkers’ Construct 2) - MC百科|最大的Minecraft中文MOD百科 (mcmod.cn)</a>。</p><h1 id="实现的内容"><a href="#实现的内容" class="headerlink" title="实现的内容"></a>实现的内容</h1><ol><li>实现匠魂物品的基础功能。</li><li>实现不同的范爆炸范围，通过木头，石头，铁，钻石，下届合金（之后也可以加入金和铜不过目前没想到什么特性）合成具有不同的爆炸范围。</li><li>加入一种圆石进行的合成，可以爆炸后仅保留矿物。</li><li>加入一种末影珍珠合成的物品，可以爆炸后将所有物品传到玩家背包中，而不是掉落在地上。</li><li>添加一套新的火药的获的途径</li></ol><h1 id="目前想法开发过程"><a href="#目前想法开发过程" class="headerlink" title="目前想法开发过程"></a>目前想法开发过程</h1><ol><li>实现匠魂代码的运行，保证和原物品一样的功能</li><li>在此基础上添加具有不同范围的“物品”。 <a href="%E8%BF%99%E9%87%8C%E7%9A%84%E7%89%A9%E5%93%81%E6%8C%87%E7%9A%84%E6%98%AF%E6%9C%AC%E6%A8%A1%E7%BB%84%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9A%84%E7%89%A9%E5%93%81%E4%B8%8B%E5%90%8C">^1</a></li><li>在此基础上添加受到时运效果影响的“物品”</li><li>在此基础上添加能够传送掉落物品的“物品”</li></ol><h1 id="关于该模组命名"><a href="#关于该模组命名" class="headerlink" title="关于该模组命名"></a>关于该模组命名</h1><p>暂定Mine helper吧。挖矿小助手。欢迎各位想想啥中二名字。</p><p>也欢迎给该模组提供能，我会选择考虑是否加入。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>没啥结论。之后在更新。</p><h1 id="目前存在进度和存在问题"><a href="#目前存在进度和存在问题" class="headerlink" title="目前存在进度和存在问题"></a>目前存在进度和存在问题</h1><h2 id="进度"><a href="#进度" class="headerlink" title="进度"></a>进度</h2><p>开发了一个物品wooditem和一个实体woodentity，添加了爆炸和爆炸帮助类。</p><h2 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h2><ul><li>没有系统设计每个物品的名称</li><li>需要对系统的架构进行设计对代码进行设计</li><li>没有美术</li><li>整个内容写的比较随意，还是测试代码阶段。</li></ul><h2 id="考虑"><a href="#考虑" class="headerlink" title="考虑"></a>考虑</h2><ol><li>作为正式开发的前置研究。完成基本功能后考虑进行详细的设计在进行开发。</li><li>目前需要进行对结构的设计了。</li><li>还有部分的代码不明白具体什么意思之后再说。</li></ol><h1 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h1><ul><li>11.3</li></ul><p>爆炸不会破坏方块不知道什么鬼bug，完全复制的匠魂的代码。明天看看怎么回事</p><ul><li>11.5</li></ul><p>修复了为什么爆炸不会破坏方块，对代码进行了注解。以下贴出来</p><p>exploer类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.examplemod.entity.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.particles.ParticleTypes;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.server.level.ServerLevel;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.server.level.ServerPlayer;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundEvents;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.Entity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.EntitySelector;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.entity.BlockEntity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.material.FluidState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.LootParams;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.parameters.LootContextParams;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.AABB;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.Vec3;</span><br><span class="line"><span class="keyword">import</span> net.neoforged.bus.api.SubscribeEvent;</span><br><span class="line"><span class="keyword">import</span> net.neoforged.neoforge.common.NeoForge;</span><br><span class="line"><span class="keyword">import</span> net.neoforged.neoforge.event.EventHooks;</span><br><span class="line"><span class="keyword">import</span> net.neoforged.neoforge.event.TickEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Predicate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exploder</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">double</span> r;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> rr;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> dist;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> explosionStrength;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> blocksPerIteration;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> x, y, z;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> Level world;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Entity exploder;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> WoodBallExplosion explosion;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> currentRadius;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> curX, curY, curZ;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> List&lt;ItemStack&gt; droppedItems; <span class="comment">// map containing all items dropped by the explosion and their amounts</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 构造方法</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> world 爆炸的level</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> explosion 爆炸对象的引用</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> exploder 触发爆炸的实体</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> location 爆炸的中心位置</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> r  爆炸半径</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> explosionStrength 爆炸的破坏力</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> blocksPerIteration 每次迭代处理的方块次数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">Exploder</span><span class="params">(Level world, WoodBallExplosion explosion, Entity exploder, BlockPos location, <span class="type">double</span> r, <span class="type">double</span> explosionStrength, <span class="type">int</span> blocksPerIteration)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.r = r;</span><br><span class="line">    <span class="built_in">this</span>.world = world;</span><br><span class="line">    <span class="built_in">this</span>.explosion = explosion;</span><br><span class="line">    <span class="built_in">this</span>.exploder = exploder;</span><br><span class="line">    <span class="built_in">this</span>.rr = r * r;</span><br><span class="line">    <span class="built_in">this</span>.dist = (<span class="type">int</span>) r + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">this</span>.explosionStrength = explosionStrength;</span><br><span class="line">    <span class="built_in">this</span>.blocksPerIteration = blocksPerIteration;</span><br><span class="line">    <span class="built_in">this</span>.currentRadius = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.x = location.getX();</span><br><span class="line">    <span class="built_in">this</span>.y = location.getY();</span><br><span class="line">    <span class="built_in">this</span>.z = location.getZ();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.curX = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.curY = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.curZ = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.droppedItems = Lists.newArrayList();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 启动爆炸 静态方法</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> world 爆炸的level</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> explosion 爆炸的引用</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> entity 爆炸的实体</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> location 爆炸的位置</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> r  爆炸的半径</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> explosionStrength 爆炸的强度</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">startExplosion</span><span class="params">(Level world, WoodBallExplosion explosion, Entity entity, BlockPos location, <span class="type">double</span> r, <span class="type">double</span> explosionStrength)</span> &#123;</span><br><span class="line">    <span class="comment">// 创建类</span></span><br><span class="line">    <span class="type">Exploder</span> <span class="variable">exploder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Exploder</span>(world, explosion, entity, location, r, explosionStrength, Math.max(<span class="number">50</span>, (<span class="type">int</span>) (r * r * r / <span class="number">10d</span>)));</span><br><span class="line">    <span class="comment">// 提前处理爆炸范围内的实体</span></span><br><span class="line">    exploder.handleEntities();</span><br><span class="line">    <span class="comment">// 播放爆炸的声音</span></span><br><span class="line">    world.playSound(<span class="literal">null</span>, location, SoundEvents.GENERIC_EXPLODE, SoundSource.BLOCKS, <span class="number">4.0F</span>, (<span class="number">1.0F</span> + (world.random.nextFloat() - world.random.nextFloat()) * <span class="number">0.2F</span>) * <span class="number">0.7F</span>);</span><br><span class="line">    <span class="comment">// 在事件总线上注册exploer，用于在tick时迭代处理</span></span><br><span class="line">    NeoForge.EVENT_BUS.register(exploder);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理爆炸涉及到的实体</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">handleEntities</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 定义了一个Predicate判断条件，用于过滤实体</span></span><br><span class="line">    <span class="keyword">final</span> Predicate&lt;Entity&gt; predicate = entity -&gt; entity != <span class="literal">null</span></span><br><span class="line">      &amp;&amp; !entity.ignoreExplosion()</span><br><span class="line">      &amp;&amp; EntitySelector.NO_SPECTATORS.test(entity)</span><br><span class="line">      &amp;&amp; EntitySelector.ENTITY_STILL_ALIVE.test(entity)</span><br><span class="line">      &amp;&amp; entity.position().distanceToSqr(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.z) &lt;= <span class="built_in">this</span>.r * <span class="built_in">this</span>.r;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用Predicate获得爆炸范围内的实体</span></span><br><span class="line">    <span class="comment">// damage and blast back entities</span></span><br><span class="line">    List&lt;Entity&gt; list = <span class="built_in">this</span>.world.getEntities(<span class="built_in">this</span>.exploder,</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">AABB</span>(<span class="built_in">this</span>.x - <span class="built_in">this</span>.r - <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.y - <span class="built_in">this</span>.r - <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.z - <span class="built_in">this</span>.r - <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.x + <span class="built_in">this</span>.r + <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.y + <span class="built_in">this</span>.r + <span class="number">1</span>,</span><br><span class="line">        <span class="built_in">this</span>.z + <span class="built_in">this</span>.r + <span class="number">1</span>),</span><br><span class="line">      predicate</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 触发爆炸开始事件</span></span><br><span class="line">    EventHooks.onExplosionDetonate(<span class="built_in">this</span>.world, <span class="built_in">this</span>.explosion, list, <span class="built_in">this</span>.r * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Entity entity : list) &#123;</span><br><span class="line">      <span class="comment">// move it away from the center depending on distance and explosion strength</span></span><br><span class="line">      <span class="comment">// 计算爆炸中心到实体方向的向量dir</span></span><br><span class="line">      <span class="type">Vec3</span> <span class="variable">dir</span> <span class="operator">=</span> entity.position().subtract(<span class="built_in">this</span>.exploder.position().add(<span class="number">0</span>, -<span class="built_in">this</span>.r / <span class="number">2</span>, <span class="number">0</span>));</span><br><span class="line">      <span class="comment">// 计算实体距离爆炸中心的距离占爆炸半径的比例，作为震动系数str</span></span><br><span class="line">      <span class="type">double</span> <span class="variable">str</span> <span class="operator">=</span> (<span class="built_in">this</span>.r - dir.length()) / <span class="built_in">this</span>.r;</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      str = Math.max(<span class="number">0.3</span>, str);</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      dir = dir.normalize();</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      dir = dir.scale(<span class="built_in">this</span>.explosionStrength * str * <span class="number">0.3</span>);</span><br><span class="line">      <span class="comment">// 给实体添加一个dir的力</span></span><br><span class="line">      entity.push(dir.x, dir.y + <span class="number">0.5</span>, dir.z);</span><br><span class="line">      <span class="comment">// 实体受伤</span></span><br><span class="line">      entity.hurt(entity.damageSources().explosion(<span class="built_in">this</span>.explosion), (<span class="type">float</span>) (str * <span class="built_in">this</span>.explosionStrength));</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (entity <span class="keyword">instanceof</span> ServerPlayer) &#123;</span><br><span class="line"><span class="comment">//        TinkerNetwork.getInstance().sendTo(new EntityMovementChangePacket(entity), (ServerPlayer) entity);</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * tick执行</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> event 世界Tick回调事件</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@SubscribeEvent</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTick</span><span class="params">(TickEvent.LevelTickEvent event)</span> &#123;</span><br><span class="line">    <span class="comment">// 给定世界Tick结束时候回调</span></span><br><span class="line">      <span class="keyword">if</span>(event.level == <span class="built_in">this</span>.world &amp;&amp; event.phase == TickEvent.Phase.END)&#123;</span><br><span class="line">        <span class="comment">// 调用iteration进行一次爆炸迭代，返回false表示爆炸结束，放置范围过大，导致一次破坏方块过多卡死</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">this</span>.iteration())&#123;</span><br><span class="line">          <span class="comment">// 爆炸结束，调用finish</span></span><br><span class="line">          <span class="built_in">this</span>.finish();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 爆炸结束下执行</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">finish</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 爆炸半径的一半</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> (<span class="type">int</span>) <span class="built_in">this</span>.r / <span class="number">2</span>;</span><br><span class="line">    <span class="comment">// 根据爆炸中心和爆炸半径计算掉落的中心位置</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlockPos</span>(<span class="built_in">this</span>.x - d, <span class="built_in">this</span>.y - d, <span class="built_in">this</span>.z - d);</span><br><span class="line">    <span class="comment">// 创建随机数生成器</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="comment">// 创建列表存储掉落的物品</span></span><br><span class="line">    List&lt;ItemStack&gt; aggregatedDrops = Lists.newArrayList();</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">for</span> (ItemStack drop : <span class="built_in">this</span>.droppedItems) &#123;</span><br><span class="line">      <span class="type">boolean</span> <span class="variable">notInList</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// check if it&#x27;s already in our list</span></span><br><span class="line">      <span class="comment">// 检查是否在列表中，如果在则合并数量</span></span><br><span class="line">      <span class="keyword">for</span> (ItemStack stack : aggregatedDrops) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ItemStack.isSameItem(drop, stack) &amp;&amp; ItemStack.isSameItemSameTags(drop, stack)) &#123;</span><br><span class="line">          stack.grow(drop.getCount());</span><br><span class="line">          notInList = <span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (notInList) &#123;</span><br><span class="line">        aggregatedDrops.add(drop);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// actually drop the aggregated items</span></span><br><span class="line">    <span class="comment">// 遍历合在一起的物品，分批掉落</span></span><br><span class="line">    <span class="keyword">for</span> (ItemStack drop : aggregatedDrops) &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">stacksize</span> <span class="operator">=</span> drop.getCount();</span><br><span class="line">      <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">spawnPos</span> <span class="operator">=</span> pos.offset(random.nextInt((<span class="type">int</span>) <span class="built_in">this</span>.r), random.nextInt((<span class="type">int</span>) <span class="built_in">this</span>.r), random.nextInt((<span class="type">int</span>) <span class="built_in">this</span>.r));</span><br><span class="line">        <span class="type">ItemStack</span> <span class="variable">dropItemstack</span> <span class="operator">=</span> drop.copy();</span><br><span class="line">        dropItemstack.setCount(Math.min(stacksize, <span class="number">64</span>));</span><br><span class="line">        Block.popResource(<span class="built_in">this</span>.world, spawnPos, dropItemstack);</span><br><span class="line">        stacksize -= dropItemstack.getCount();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> (stacksize &gt; <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 取消事件总线上的注册</span></span><br><span class="line">    NeoForge.EVENT_BUS.unregister(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Explodes away all blocks for the current iteration</span></span><br><span class="line"><span class="comment">   * 每次迭代执行</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">iteration</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 本次迭代的方块个数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 清除上次的迭代处理的方块</span></span><br><span class="line">    <span class="built_in">this</span>.explosion.clearToBlow();</span><br><span class="line">    <span class="comment">// 当处理方块小于每次迭代方块，并且当前半径小于爆炸半径r</span></span><br><span class="line">    <span class="keyword">while</span> (count &lt; <span class="built_in">this</span>.blocksPerIteration &amp;&amp; <span class="built_in">this</span>.currentRadius &lt; (<span class="type">int</span>) <span class="built_in">this</span>.r + <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="built_in">this</span>.curX * <span class="built_in">this</span>.curX + <span class="built_in">this</span>.curY * <span class="built_in">this</span>.curY + <span class="built_in">this</span>.curZ * <span class="built_in">this</span>.curZ;</span><br><span class="line">      <span class="comment">// inside the explosion?</span></span><br><span class="line">      <span class="comment">// 当前位置是否在爆炸范围内</span></span><br><span class="line">      <span class="keyword">if</span> (d &lt;= <span class="built_in">this</span>.rr) &#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">blockpos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlockPos</span>(<span class="built_in">this</span>.x + <span class="built_in">this</span>.curX, <span class="built_in">this</span>.y + <span class="built_in">this</span>.curY, <span class="built_in">this</span>.z + <span class="built_in">this</span>.curZ);</span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">blockState</span> <span class="operator">=</span> <span class="built_in">this</span>.world.getBlockState(blockpos);</span><br><span class="line">        <span class="type">FluidState</span> <span class="variable">ifluidstate</span> <span class="operator">=</span> <span class="built_in">this</span>.world.getFluidState(blockpos);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// no air blocks</span></span><br><span class="line">        <span class="comment">// 如果不是方块 或者流体不为空。</span></span><br><span class="line">        <span class="keyword">if</span> (!blockState.isAir() || !ifluidstate.isEmpty()) &#123;</span><br><span class="line">          <span class="comment">// explosion &quot;strength&quot; at the current position</span></span><br><span class="line">          <span class="comment">// 随着爆炸范围的扩展爆炸强度减小</span></span><br><span class="line">          <span class="type">double</span> <span class="variable">f</span> <span class="operator">=</span> <span class="built_in">this</span>.explosionStrength * (<span class="number">1f</span> - d / <span class="built_in">this</span>.rr);</span><br><span class="line">          <span class="comment">// 获得方块或者液体的抗爆炸强度</span></span><br><span class="line">          <span class="type">float</span> <span class="variable">f2</span> <span class="operator">=</span> Math.max(blockState.getExplosionResistance(<span class="built_in">this</span>.world, blockpos, <span class="built_in">this</span>.explosion), ifluidstate.getExplosionResistance(<span class="built_in">this</span>.world, blockpos, <span class="built_in">this</span>.explosion));</span><br><span class="line">          <span class="comment">// 如果当前产生爆炸的实体不为空</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">this</span>.exploder != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 获得当前产生爆炸实体的抗爆炸能力</span></span><br><span class="line">            f2 = <span class="built_in">this</span>.exploder.getBlockExplosionResistance(<span class="built_in">this</span>.explosion, <span class="built_in">this</span>.world, blockpos, blockState, ifluidstate, f2);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 判断是否抗爆炸</span></span><br><span class="line">          f -= (f2 + <span class="number">0.3F</span>) * <span class="number">0.3F</span>;</span><br><span class="line">          <span class="comment">// 如果该方块应该被炸坏</span></span><br><span class="line">          <span class="keyword">if</span> (f &gt; <span class="number">0.0F</span> &amp;&amp; (<span class="built_in">this</span>.exploder == <span class="literal">null</span> || <span class="built_in">this</span>.exploder.shouldBlockExplode(<span class="built_in">this</span>.explosion, <span class="built_in">this</span>.world, blockpos, blockState, (<span class="type">float</span>) f))) &#123;</span><br><span class="line">            <span class="comment">// block should be exploded</span></span><br><span class="line">            <span class="comment">// 爆炸方块++</span></span><br><span class="line">            count++;</span><br><span class="line">            <span class="comment">// 将该方块添加到列表中</span></span><br><span class="line">            <span class="built_in">this</span>.explosion.addAffectedBlock(blockpos);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// get next coordinate;</span></span><br><span class="line">      <span class="built_in">this</span>.step();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 触发爆炸事件</span></span><br><span class="line">    EventHooks.onExplosionDetonate(<span class="built_in">this</span>.world, <span class="built_in">this</span>.explosion, Collections.emptyList(), <span class="built_in">this</span>.r * <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 对每个记录的方块处理</span></span><br><span class="line">    <span class="built_in">this</span>.explosion.getToBlow().forEach(<span class="built_in">this</span>::explodeBlock);</span><br><span class="line">    <span class="comment">// 处理方块是否达到上限</span></span><br><span class="line">    <span class="keyword">return</span> count == <span class="built_in">this</span>.blocksPerIteration; <span class="comment">// can lead to 1 more call where nothing is done, but that&#x27;s ok</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// get the next coordinate</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 计算下一个block坐标</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">step</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// we go X/Z plane wise from top to bottom</span></span><br><span class="line">    <span class="keyword">if</span> (++<span class="built_in">this</span>.curX &gt; <span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">      <span class="built_in">this</span>.curX = -<span class="built_in">this</span>.currentRadius;</span><br><span class="line">      <span class="keyword">if</span> (++<span class="built_in">this</span>.curZ &gt; <span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">        <span class="built_in">this</span>.curZ = -<span class="built_in">this</span>.currentRadius;</span><br><span class="line">        <span class="keyword">if</span> (--<span class="built_in">this</span>.curY &lt; -<span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">          <span class="built_in">this</span>.currentRadius++;</span><br><span class="line">          <span class="built_in">this</span>.curX = <span class="built_in">this</span>.curZ = -<span class="built_in">this</span>.currentRadius;</span><br><span class="line">          <span class="built_in">this</span>.curY = <span class="built_in">this</span>.currentRadius;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// we skip the internals</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.curY != -<span class="built_in">this</span>.currentRadius &amp;&amp; <span class="built_in">this</span>.curY != <span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">      <span class="comment">// we&#x27;re not in the top or bottom plane</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.curZ != -<span class="built_in">this</span>.currentRadius &amp;&amp; <span class="built_in">this</span>.curZ != <span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">        <span class="comment">// we&#x27;re not in the X/Y planes of the cube, we can therefore skip the x to the end if we&#x27;re inside</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.curX &gt; -<span class="built_in">this</span>.currentRadius) &#123;</span><br><span class="line">          <span class="built_in">this</span>.curX = <span class="built_in">this</span>.currentRadius;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理单个爆炸方块</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> blockpos</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">explodeBlock</span><span class="params">(BlockPos blockpos)</span> &#123;</span><br><span class="line">    <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> <span class="built_in">this</span>.world.getBlockState(blockpos);</span><br><span class="line">    <span class="comment">// 将该方块的掉落物添加到list中</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.world.isClientSide &amp;&amp; blockstate.canDropFromExplosion(<span class="built_in">this</span>.world, blockpos, <span class="built_in">this</span>.explosion)) &#123;</span><br><span class="line">      <span class="type">BlockEntity</span> <span class="variable">tileentity</span> <span class="operator">=</span> blockstate.hasBlockEntity() ? <span class="built_in">this</span>.world.getBlockEntity(blockpos) : <span class="literal">null</span>;</span><br><span class="line">      LootParams.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">LootParams</span>.Builder((ServerLevel) <span class="built_in">this</span>.world)).withParameter(LootContextParams.ORIGIN, Vec3.atCenterOf(blockpos)).withParameter(LootContextParams.TOOL, ItemStack.EMPTY).withOptionalParameter(LootContextParams.BLOCK_ENTITY, tileentity);</span><br><span class="line"></span><br><span class="line">      <span class="built_in">this</span>.droppedItems.addAll(blockstate.getDrops(builder));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 在该方块位置生成粒子效果</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.world <span class="keyword">instanceof</span> ServerLevel) &#123;</span><br><span class="line">      <span class="keyword">for</span> (ServerPlayer serverplayerentity : ((ServerLevel) <span class="built_in">this</span>.world).players()) &#123;</span><br><span class="line">        ((ServerLevel) <span class="built_in">this</span>.world).sendParticles(serverplayerentity, ParticleTypes.POOF, <span class="literal">true</span>, blockpos.getX(), blockpos.getY(), blockpos.getZ(), <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0d</span>);</span><br><span class="line">        ((ServerLevel) <span class="built_in">this</span>.world).sendParticles(serverplayerentity, ParticleTypes.SMOKE, <span class="literal">true</span>, blockpos.getX(), blockpos.getY(), blockpos.getZ(), <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0d</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 方块爆炸</span></span><br><span class="line">    blockstate.onBlockExploded(<span class="built_in">this</span>.world, blockpos, <span class="built_in">this</span>.explosion);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该类进行了修改，添加了两个方法，修复了为什么爆炸不破坏的原因。</p><p>explosion类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.examplemod.entity.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.ImmutableSet;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> com.mojang.datafixers.util.Pair;</span><br><span class="line"><span class="keyword">import</span> it.unimi.dsi.fastutil.objects.ObjectArrayList;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.Util;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.particles.ParticleTypes;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.server.level.ServerLevel;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundEvents;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.RandomSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.damagesource.DamageSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.Entity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.item.ItemEntity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.player.Player;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.EntityBasedExplosionDamageCalculator;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Explosion;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.ExplosionDamageCalculator;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.entity.BlockEntity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.material.FluidState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.LootContext;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.LootParams;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.parameters.LootContextParamSets;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.storage.loot.parameters.LootContextParams;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.Vec3;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.core.jmx.Server;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WoodBallExplosion</span> <span class="keyword">extends</span> <span class="title class_">Explosion</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">ExplosionDamageCalculator</span> <span class="variable">EXPLOSION_DAMAGE_CALCULATOR</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExplosionDamageCalculator</span>();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_DROPS_PER_COMBINED_STACK</span> <span class="operator">=</span> <span class="number">16</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> fire;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Explosion.BlockInteraction blockInteraction;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">RandomSource</span> <span class="variable">random</span> <span class="operator">=</span> RandomSource.create();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Level level;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> x;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> y;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> z;</span><br><span class="line">  <span class="meta">@Nullable</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Entity source;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">float</span> radius;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> DamageSource damageSource;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ExplosionDamageCalculator damageCalculator;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ObjectArrayList&lt;BlockPos&gt; toBlow = <span class="keyword">new</span> <span class="title class_">ObjectArrayList</span>&lt;&gt;();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Player, Vec3&gt; hitPlayers = Maps.newHashMap();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Vec3 position;</span><br><span class="line">  <span class="keyword">protected</span> ImmutableSet&lt;BlockPos&gt; affectedBlockPositionsInternal;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">WoodBallExplosion</span><span class="params">(Level world, <span class="meta">@Nullable</span> Entity entity, <span class="meta">@Nullable</span> DamageSource damage, <span class="meta">@Nullable</span> ExplosionDamageCalculator context, <span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> z, <span class="type">float</span> size, <span class="type">boolean</span> causesFire, Explosion.BlockInteraction mode)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(world, entity, damage, context, x, y, z, size, causesFire, mode);</span><br><span class="line">    <span class="built_in">this</span>.level = world;</span><br><span class="line">    <span class="built_in">this</span>.source = entity;</span><br><span class="line">    <span class="built_in">this</span>.radius = size;</span><br><span class="line">    <span class="built_in">this</span>.x = x;</span><br><span class="line">    <span class="built_in">this</span>.y = y;</span><br><span class="line">    <span class="built_in">this</span>.z = z;</span><br><span class="line">    <span class="built_in">this</span>.fire = causesFire;</span><br><span class="line">    <span class="built_in">this</span>.blockInteraction = mode;</span><br><span class="line">    <span class="built_in">this</span>.damageSource = damage == <span class="literal">null</span> ? world.damageSources().explosion(<span class="built_in">this</span>) : damage;</span><br><span class="line">    <span class="built_in">this</span>.damageCalculator = context == <span class="literal">null</span> ? <span class="built_in">this</span>.makeDamageCalculator(entity) : context;</span><br><span class="line">    <span class="built_in">this</span>.position = <span class="keyword">new</span> <span class="title class_">Vec3</span>(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.z);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> ExplosionDamageCalculator <span class="title function_">makeDamageCalculator</span><span class="params">(<span class="meta">@Nullable</span> Entity p_46063_)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (ExplosionDamageCalculator)(p_46063_ == <span class="literal">null</span> ? EXPLOSION_DAMAGE_CALCULATOR : <span class="keyword">new</span> <span class="title class_">EntityBasedExplosionDamageCalculator</span>(p_46063_));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Does the first part of the explosion (destroy blocks)</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">explode</span><span class="params">()</span> &#123; <span class="comment">// 未执行</span></span><br><span class="line">    ImmutableSet.Builder&lt;BlockPos&gt; builder = ImmutableSet.builder();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we do a sphere of a certain radius, and check if the blockpos is inside the radius</span></span><br><span class="line">    <span class="type">float</span> <span class="variable">r</span> <span class="operator">=</span> <span class="built_in">this</span>.radius * <span class="built_in">this</span>.radius;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> (<span class="type">int</span>) r + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> -i; j &lt; i; ++j) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> -i; k &lt; i; ++k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -i; l &lt; i; ++l) &#123;</span><br><span class="line">          <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> j * j + k * k + l * l;</span><br><span class="line">          <span class="comment">// inside the sphere?</span></span><br><span class="line">          <span class="keyword">if</span> (d &lt;= r) &#123;</span><br><span class="line">            <span class="type">BlockPos</span> <span class="variable">blockpos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlockPos</span>(j, k, l).offset((<span class="type">int</span>) <span class="built_in">this</span>.x, (<span class="type">int</span>) <span class="built_in">this</span>.y, (<span class="type">int</span>) <span class="built_in">this</span>.z);</span><br><span class="line">            <span class="comment">// no air blocks</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.level.isEmptyBlock(blockpos)) &#123;</span><br><span class="line">              <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// explosion &quot;strength&quot; at the current position</span></span><br><span class="line">            <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="built_in">this</span>.radius * (<span class="number">1f</span> - d / (r));</span><br><span class="line">            <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> <span class="built_in">this</span>.level.getBlockState(blockpos);</span><br><span class="line"></span><br><span class="line">            <span class="type">FluidState</span> <span class="variable">ifluidstate</span> <span class="operator">=</span> <span class="built_in">this</span>.level.getFluidState(blockpos);</span><br><span class="line">            <span class="type">float</span> <span class="variable">f2</span> <span class="operator">=</span> Math.max(blockstate.getExplosionResistance(<span class="built_in">this</span>.level, blockpos, <span class="built_in">this</span>), ifluidstate.getExplosionResistance(<span class="built_in">this</span>.level, blockpos, <span class="built_in">this</span>));</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.source != <span class="literal">null</span>) &#123;</span><br><span class="line">              f2 = <span class="built_in">this</span>.source.getBlockExplosionResistance(<span class="built_in">this</span>, <span class="built_in">this</span>.level, blockpos, blockstate, ifluidstate, f2);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            f -= (f2 + <span class="number">0.3F</span>) * <span class="number">0.3F</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (f &gt; <span class="number">0.0F</span> &amp;&amp; (<span class="built_in">this</span>.source == <span class="literal">null</span> || <span class="built_in">this</span>.source.shouldBlockExplode(<span class="built_in">this</span>, <span class="built_in">this</span>.level, blockpos, blockstate, f))) &#123;</span><br><span class="line">              builder.add(blockpos);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.affectedBlockPositionsInternal = builder.build();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">finalizeExplosion</span><span class="params">(<span class="type">boolean</span> spawnParticles)</span> &#123;  <span class="comment">// 未执行</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.level.isClientSide) &#123;</span><br><span class="line">      <span class="built_in">this</span>.level.playLocalSound(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.z, SoundEvents.GENERIC_EXPLODE, SoundSource.BLOCKS, <span class="number">4.0F</span>, (<span class="number">1.0F</span> + (<span class="built_in">this</span>.level.random.nextFloat() - <span class="built_in">this</span>.level.random.nextFloat()) * <span class="number">0.2F</span>) * <span class="number">0.7F</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.level.addParticle(ParticleTypes.EXPLOSION, <span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.z, <span class="number">1.0D</span>, <span class="number">0.0D</span>, <span class="number">0.0D</span>);</span><br><span class="line"></span><br><span class="line">    ObjectArrayList&lt;Pair&lt;ItemStack, BlockPos&gt;&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ObjectArrayList</span>&lt;&gt;();</span><br><span class="line">    Util.shuffle(<span class="built_in">this</span>.toBlow, <span class="built_in">this</span>.level.random);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (BlockPos blockpos : <span class="built_in">this</span>.toBlow) &#123;</span><br><span class="line">      <span class="type">BlockState</span> <span class="variable">blockstate</span> <span class="operator">=</span> <span class="built_in">this</span>.level.getBlockState(blockpos);</span><br><span class="line">      <span class="type">Block</span> <span class="variable">block</span> <span class="operator">=</span> blockstate.getBlock();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!blockstate.isAir()) &#123;</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">blockpos1</span> <span class="operator">=</span> blockpos.immutable();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.level.getProfiler().push(<span class="string">&quot;explosion_blocks&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (blockstate.canDropFromExplosion(<span class="built_in">this</span>.level, blockpos, <span class="built_in">this</span>) &amp;&amp; <span class="built_in">this</span>.level <span class="keyword">instanceof</span> ServerLevel) &#123;</span><br><span class="line">          <span class="type">BlockEntity</span> <span class="variable">tileentity</span> <span class="operator">=</span> blockstate.hasBlockEntity() ? <span class="built_in">this</span>.level.getBlockEntity(blockpos) : <span class="literal">null</span>;</span><br><span class="line">          LootParams.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">LootParams</span>.Builder((ServerLevel) level)).withParameter(LootContextParams.ORIGIN, Vec3.atCenterOf(blockpos)).withParameter(LootContextParams.TOOL, ItemStack.EMPTY).withOptionalParameter(LootContextParams.BLOCK_ENTITY, tileentity).withOptionalParameter(LootContextParams.THIS_ENTITY, <span class="built_in">this</span>.source);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">this</span>.blockInteraction == Explosion.BlockInteraction.DESTROY) &#123;</span><br><span class="line">            builder.withParameter(LootContextParams.EXPLOSION_RADIUS, <span class="built_in">this</span>.radius);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          blockstate.getDrops(builder).forEach((stack) -&gt; addStack(arrayList, stack, blockpos1));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        blockstate.onBlockExploded(<span class="built_in">this</span>.level, blockpos, <span class="built_in">this</span>);</span><br><span class="line">        <span class="built_in">this</span>.level.getProfiler().pop();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAffectedBlock</span><span class="params">(BlockPos blockPos)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.toBlow.add(blockPos);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStack</span><span class="params">(ObjectArrayList&lt;Pair&lt;ItemStack, BlockPos&gt;&gt; arrayList, ItemStack merge, BlockPos blockPos)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> arrayList.size();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; ++j) &#123;</span><br><span class="line">      Pair&lt;ItemStack, BlockPos&gt; pair = arrayList.get(j);</span><br><span class="line">      <span class="type">ItemStack</span> <span class="variable">itemstack</span> <span class="operator">=</span> pair.getFirst();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ItemEntity.areMergable(itemstack, merge)) &#123;</span><br><span class="line">        <span class="type">ItemStack</span> <span class="variable">itemstack1</span> <span class="operator">=</span> ItemEntity.merge(itemstack, merge, <span class="number">16</span>);</span><br><span class="line">        arrayList.set(j, Pair.of(itemstack1, pair.getSecond()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (merge.isEmpty()) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    arrayList.add(Pair.of(merge, blockPos));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> List&lt;BlockPos&gt; <span class="title function_">getToBlow</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.toBlow;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clearToBlow</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.toBlow.clear();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>考虑到尽可能的复用代码，需要对该项目的架构进行设计。需要在考虑下。</p><ul><li>11.8</li></ul><p>基本上想到的几个物品都写出来了，不过还是没采用高代码的复用，而且还希望加如对时运和精准采集的支持，没有复用代码可能导致之后需要改动较多的重复代码。</p><p>还不知道怎么支持时运和精准采集</p><p>其次还需要画贴图和加入合成表。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-09-添加村民，添加村民交易</title>
      <link href="/2023/10/29/Architectury-09-%E6%B7%BB%E5%8A%A0%E6%9D%91%E6%B0%91%EF%BC%8C%E6%B7%BB%E5%8A%A0%E6%9D%91%E6%B0%91%E4%BA%A4%E6%98%93/"/>
      <url>/2023/10/29/Architectury-09-%E6%B7%BB%E5%8A%A0%E6%9D%91%E6%B0%91%EF%BC%8C%E6%B7%BB%E5%8A%A0%E6%9D%91%E6%B0%91%E4%BA%A4%E6%98%93/</url>
      
        <content type="html"><![CDATA[<h1 id="添加村民"><a href="#添加村民" class="headerlink" title="添加村民"></a>添加村民</h1><p><img src="https://s2.loli.net/2023/11/01/gFCvuDV3jacRL2w.png" alt="image-20231101192249502"></p><p><img src="https://s2.loli.net/2023/11/01/84FLulXN1qeEf6H.png" alt="image-20231101192306590"></p><p><img src="https://s2.loli.net/2023/11/01/5rITKJ6wH4Q7Wlo.png" alt="image-20231101192318126"></p><p><img src="https://s2.loli.net/2023/11/01/arsgJvw8TetW59S.png" alt="image-20231101192327155"></p><h1 id="添加村民职业和工作方块"><a href="#添加村民职业和工作方块" class="headerlink" title="添加村民职业和工作方块"></a>添加村民职业和工作方块</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.villager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.ImmutableSet;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.resources.ResourceKey;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.resources.ResourceLocation;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.sounds.SoundEvents;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.ai.village.poi.PoiType;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerProfession;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerType;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModVillagers</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ResourceKey&lt;PoiType&gt; JUMPY_MASTER_KEY = createKey(<span class="string">&quot;jumpy_block_poi&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;VillagerProfession&gt; VILLAGER_PROFESSIONS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.VILLAGER_PROFESSION);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;PoiType&gt; POI_TYPES = DeferredRegister.create(TutorialMod.MOD_ID, Registries.POINT_OF_INTEREST_TYPE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;PoiType&gt; JUMPY_BLOCK_POI = POI_TYPES.register(<span class="string">&quot;jumpy_block_poi&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">PoiType</span>(ImmutableSet.copyOf(ModBlock.JUMPY_BLOCK.get().getStateDefinition().getPossibleStates()),</span><br><span class="line">                    <span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;VillagerProfession&gt; JUMP_MASTER = VILLAGER_PROFESSIONS.register(<span class="string">&quot;jumpy_master&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">VillagerProfession</span>(<span class="string">&quot;jumpy_master&quot;</span>, x -&gt; x.value() == JUMPY_BLOCK_POI.get(),</span><br><span class="line">                    x -&gt; x.value() == JUMPY_BLOCK_POI.get(), ImmutableSet.of(), ImmutableSet.of(),</span><br><span class="line">                    SoundEvents.VILLAGER_WORK_ARMORER));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ResourceKey&lt;PoiType&gt; <span class="title function_">createKey</span><span class="params">(String pName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResourceKey.create(Registries.POINT_OF_INTEREST_TYPE, <span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(TutorialMod.MOD_ID,pName));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span> &#123;</span><br><span class="line">        POI_TYPES.register();</span><br><span class="line">        VILLAGER_PROFESSIONS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Suppliers;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.CreativeTabRegistry;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrarManager;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.CreativeModeTab;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.painting.ModPainting;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.villager.ModVillagers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialMod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MOD_ID</span> <span class="operator">=</span> <span class="string">&quot;tutorialmod&quot;</span>;</span><br><span class="line">    <span class="comment">// We can use this if we don&#x27;t want to use DeferredRegister</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Supplier&lt;RegistrarManager&gt; REGISTRIES = Suppliers.memoize(() -&gt; RegistrarManager.get(MOD_ID));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        ModCreativeTab.register();</span><br><span class="line">        ModBlock.register();</span><br><span class="line">        ModItem.register();</span><br><span class="line">        ModPainting.register();</span><br><span class="line">        ModVillagers.register();</span><br><span class="line"></span><br><span class="line">        System.out.println(TutorialModExpectPlatform.getConfigDirectory().toAbsolutePath().normalize().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="添加村民交易内容"><a href="#添加村民交易内容" class="headerlink" title="添加村民交易内容"></a>添加村民交易内容</h1><p>fabric</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.fabric.villager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.fabricmc.fabric.api.object.builder.v1.trade.TradeOfferHelper;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerProfession;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Items;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.trading.MerchantOffer;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.villager.ModVillagers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModFabricVillager</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">registerVillagerTrades</span><span class="params">()</span>&#123;</span><br><span class="line">        TradeOfferHelper.registerVillagerOffers(ModVillagers.JUMP_MASTER.get(),<span class="number">1</span>,</span><br><span class="line">                factories-&gt;&#123;</span><br><span class="line">                    factories.add((entity, randomSource) -&gt; <span class="keyword">new</span> <span class="title class_">MerchantOffer</span>(</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Items.EMERALD,<span class="number">3</span>),</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.EXAMPLE_ITEM.get()),</span><br><span class="line">                            <span class="number">6</span>,<span class="number">2</span>,<span class="number">0.02f</span></span><br><span class="line">                    ));</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        TradeOfferHelper.registerVillagerOffers(VillagerProfession.ARMORER,<span class="number">1</span>,</span><br><span class="line">                factories-&gt;&#123;</span><br><span class="line">                    factories.add((entity, randomSource) -&gt; <span class="keyword">new</span> <span class="title class_">MerchantOffer</span>(</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Items.EMERALD,<span class="number">3</span>),</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.BLUEBERRY.get()),</span><br><span class="line">                            <span class="number">6</span>,<span class="number">2</span>,<span class="number">0.02f</span></span><br><span class="line">                    ));</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.fabric;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.fabricmc.api.ModInitializer;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.fabric.villager.ModFabricVillager;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.villager.ModVillagers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialModFabric</span> <span class="keyword">implements</span> <span class="title class_">ModInitializer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onInitialize</span><span class="params">()</span> &#123;</span><br><span class="line">        TutorialMod.init();</span><br><span class="line">        ModFabricVillager.registerVillagerTrades();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>forge</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.forge.event;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> it.unimi.dsi.fastutil.ints.Int2ObjectMap;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerProfession;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.npc.VillagerTrades;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Items;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.trading.MerchantOffer;</span><br><span class="line"><span class="keyword">import</span> net.minecraftforge.event.village.VillagerTradesEvent;</span><br><span class="line"><span class="keyword">import</span> net.minecraftforge.eventbus.api.SubscribeEvent;</span><br><span class="line"><span class="keyword">import</span> net.minecraftforge.fml.common.Mod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.villager.ModVillagers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModEvents</span> &#123;</span><br><span class="line">    <span class="meta">@Mod</span>.EventBusSubscriber(modid = TutorialMod.MOD_ID)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ForgeEvent</span>&#123;</span><br><span class="line">        <span class="meta">@SubscribeEvent</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addCustomTrades</span><span class="params">(VillagerTradesEvent event)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(event.getType() == VillagerProfession.TOOLSMITH) &#123;</span><br><span class="line">                Int2ObjectMap&lt;List&lt;VillagerTrades.ItemListing&gt;&gt; trades = event.getTrades();</span><br><span class="line">                <span class="type">ItemStack</span> <span class="variable">stack</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.EXAMPLE_ITEM.get(), <span class="number">1</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">villagerLevel</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                trades.get(villagerLevel).add((trader, rand) -&gt; <span class="keyword">new</span> <span class="title class_">MerchantOffer</span>(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Items.EMERALD, <span class="number">2</span>),</span><br><span class="line">                        stack,<span class="number">10</span>,<span class="number">8</span>,<span class="number">0.02F</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(event.getType() == ModVillagers.JUMP_MASTER.get()) &#123;</span><br><span class="line">                Int2ObjectMap&lt;List&lt;VillagerTrades.ItemListing&gt;&gt; trades = event.getTrades();</span><br><span class="line">                <span class="type">ItemStack</span> <span class="variable">stack</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.BLUEBERRY.get(), <span class="number">15</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">villagerLevel</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                trades.get(villagerLevel).add((trader, rand) -&gt; <span class="keyword">new</span> <span class="title class_">MerchantOffer</span>(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Items.EMERALD, <span class="number">5</span>),</span><br><span class="line">                        stack,<span class="number">10</span>,<span class="number">8</span>,<span class="number">0.02F</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="添加tag"><a href="#添加tag" class="headerlink" title="添加tag"></a>添加tag</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:jumpy_block_poi&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="添加贴图"><a href="#添加贴图" class="headerlink" title="添加贴图"></a>添加贴图</h1><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-08-添加画</title>
      <link href="/2023/10/29/Architectury-08-%E6%B7%BB%E5%8A%A0%E7%94%BB/"/>
      <url>/2023/10/29/Architectury-08-%E6%B7%BB%E5%8A%A0%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="添加画"><a href="#添加画" class="headerlink" title="添加画"></a>添加画</h1><p><img src="https://s2.loli.net/2023/10/29/eLszt2JiVmAb9dR.png" alt="image-20231029172543488"></p><p><img src="https://s2.loli.net/2023/10/29/XT6xNVYCc7jUlwq.png" alt="image-20231029172640107"></p><h2 id="添加画-1"><a href="#添加画-1" class="headerlink" title="添加画"></a>添加画</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.painting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.decoration.PaintingVariant;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModPainting</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;PaintingVariant&gt; PAINTING_VARIANTS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.PAINTING_VARIANT);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;PaintingVariant&gt; PLANT = PAINTING_VARIANTS.register(<span class="string">&quot;plant&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">PaintingVariant</span>(<span class="number">16</span>, <span class="number">16</span>));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;PaintingVariant&gt; WANDERER = PAINTING_VARIANTS.register(<span class="string">&quot;wanderer&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">PaintingVariant</span>(<span class="number">16</span>, <span class="number">32</span>));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;PaintingVariant&gt; SUNSET = PAINTING_VARIANTS.register(<span class="string">&quot;sunset&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">PaintingVariant</span>(<span class="number">32</span>, <span class="number">16</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        PAINTING_VARIANTS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Suppliers;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.CreativeTabRegistry;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrarManager;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.CreativeModeTab;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.painting.ModPainting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialMod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MOD_ID</span> <span class="operator">=</span> <span class="string">&quot;tutorialmod&quot;</span>;</span><br><span class="line">    <span class="comment">// We can use this if we don&#x27;t want to use DeferredRegister</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Supplier&lt;RegistrarManager&gt; REGISTRIES = Suppliers.memoize(() -&gt; RegistrarManager.get(MOD_ID));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        ModCreativeTab.register();</span><br><span class="line">        ModBlock.register();</span><br><span class="line">        ModItem.register();</span><br><span class="line">        ModPainting.register();</span><br><span class="line"></span><br><span class="line">        System.out.println(TutorialModExpectPlatform.getConfigDirectory().toAbsolutePath().normalize().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加tags"><a href="#添加tags" class="headerlink" title="添加tags"></a>添加tags</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:wanderer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:plant&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:sunset&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加贴图"><a href="#添加贴图" class="headerlink" title="添加贴图"></a>添加贴图</h2><p><img src="https://s2.loli.net/2023/10/29/EvGjHSUJ1V2ZYrn.png" alt="image-20231029172554282"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-07-添加作物</title>
      <link href="/2023/10/29/Architectury-07-%E6%B7%BB%E5%8A%A0%E4%BD%9C%E7%89%A9/"/>
      <url>/2023/10/29/Architectury-07-%E6%B7%BB%E5%8A%A0%E4%BD%9C%E7%89%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="添加作物"><a href="#添加作物" class="headerlink" title="添加作物"></a>添加作物</h1><p><img src="https://s2.loli.net/2023/10/29/nREwbAS2OBrNJhc.png" alt="image-20231029165918514"></p><p><img src="https://s2.loli.net/2023/10/29/4lGTQFCU3JWouwI.png" alt="image-20231029165957820"></p><p><img src="https://s2.loli.net/2023/10/29/SjVHUfM84Fy9OWh.png"></p><p><img src="https://s2.loli.net/2023/10/29/NTMytBC3ulbKspw.png" alt="image-20231029170008472"></p><p><img src="https://s2.loli.net/2023/10/29/Dqp7zUBsE8rul1O.png" alt="image-20231029170019289"></p><h2 id="添加作物方块"><a href="#添加作物方块" class="headerlink" title="添加作物方块"></a>添加作物方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.ItemLike;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.CropBlock;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.StateDefinition;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.properties.IntegerProperty;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlueberryCropBlock</span> <span class="keyword">extends</span> <span class="title class_">CropBlock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">IntegerProperty</span> <span class="variable">AGE</span> <span class="operator">=</span> IntegerProperty.create(<span class="string">&quot;age&quot;</span>,<span class="number">0</span>,<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlueberryCropBlock</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> ItemLike <span class="title function_">getBaseSeedId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModItem.BLUEBERRY_SEEDS.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> IntegerProperty <span class="title function_">getAgeProperty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> AGE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMaxAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">createBlockStateDefinition</span><span class="params">(StateDefinition.Builder&lt;Block, BlockState&gt; builder)</span> &#123;</span><br><span class="line">        builder.add(AGE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加作物种子和果实"><a href="#添加作物种子和果实" class="headerlink" title="添加作物种子和果实"></a>添加作物种子和果实</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; BLUEBERRY_SEEDS = ITEMS.register(<span class="string">&quot;blueberry_seeds&quot;</span>,</span><br><span class="line">         () -&gt; <span class="keyword">new</span> <span class="title class_">ItemNameBlockItem</span>(ModBlock.BLUEBERRY_CROP.get(),</span><br><span class="line">                 <span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; BLUEBERRY = ITEMS.register(<span class="string">&quot;blueberry&quot;</span>,</span><br><span class="line">         () -&gt; <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)</span><br><span class="line">                 .food(<span class="keyword">new</span> <span class="title class_">FoodProperties</span>.Builder().nutrition(<span class="number">2</span>).saturationMod(<span class="number">2f</span>).build())));</span><br></pre></td></tr></table></figure><h2 id="注册作物方块"><a href="#注册作物方块" class="headerlink" title="注册作物方块"></a>注册作物方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; BLUEBERRY_CROP = BLOCKS.register(<span class="string">&quot;blueberry_crop&quot;</span>,</span><br><span class="line">        () -&gt; <span class="keyword">new</span> <span class="title class_">BlueberryCropBlock</span>(BlockBehaviour.Properties.copy(Blocks.WHEAT)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加blockstate"><a href="#添加blockstate" class="headerlink" title="添加blockstate"></a>添加blockstate</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;variants&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;age=0&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage0&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=1&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage1&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=2&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage2&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=3&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage3&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=4&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage4&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=5&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage5&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age=6&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage6&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加方块model"><a href="#添加方块model" class="headerlink" title="添加方块model"></a>添加方块model</h2><p>这里示例一个，其他一样只是改了序号</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block/crop&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;render_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:cutout&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;crop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/blueberry_stage0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加物品model"><a href="#添加物品model" class="headerlink" title="添加物品model"></a>添加物品model</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item/generated&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;layer0&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:item/blueberry&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item/generated&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;layer0&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:item/blueberry_seeds&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加贴图"><a href="#添加贴图" class="headerlink" title="添加贴图"></a>添加贴图</h2><p>略，可在github中下载。</p><h2 id="添加loottable掉落物品表"><a href="#添加loottable掉落物品表" class="headerlink" title="添加loottable掉落物品表"></a>添加loottable掉落物品表</h2><p>每个字段具体含义请查阅wiki，或者翻往期视频，或者使用data generater</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;functions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:explosion_decay&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:alternatives&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;block&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry_crop&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block_state_property&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry_seeds&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;block&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry_crop&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block_state_property&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;functions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:fortune&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;formula&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:binomial_with_bonus_count&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:apply_bonus&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;extra&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;probability&quot;</span><span class="punctuation">:</span> <span class="number">0.5714286</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blueberry_seeds&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;random_sequence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blocks/blueberry_crop&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="补充，fabric的渲染如何调整为cutout"><a href="#补充，fabric的渲染如何调整为cutout" class="headerlink" title="补充，fabric的渲染如何调整为cutout"></a>补充，fabric的渲染如何调整为cutout</h2><p><img src="https://s2.loli.net/2023/10/29/yfZWNVOoHzB3rcM.png" alt="image-20231029173431149"></p><p><img src="https://s2.loli.net/2023/10/29/lLi21k9zHKUgoVv.png" alt="image-20231029173439330"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;entrypoints&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;net.tutorialmod.fabric.TutorialModFabric&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;client&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;net.tutorialmod.fabric.TutorialModFabricClient&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.fabric;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.fabricmc.api.ClientModInitializer;</span><br><span class="line"><span class="keyword">import</span> net.fabricmc.fabric.api.blockrenderlayer.v1.BlockRenderLayerMap;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.client.renderer.RenderType;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialModFabricClient</span> <span class="keyword">implements</span> <span class="title class_">ClientModInitializer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onInitializeClient</span><span class="params">()</span> &#123;</span><br><span class="line">        BlockRenderLayerMap.INSTANCE.putBlock(ModBlock.BLUEBERRY_CROP.get(), RenderType.cutout());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> 教程 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-06-添加多状态方块</title>
      <link href="/2023/10/29/Architectury-06-%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%8A%B6%E6%80%81%E6%96%B9%E5%9D%97/"/>
      <url>/2023/10/29/Architectury-06-%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%8A%B6%E6%80%81%E6%96%B9%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="添加多状态的方块"><a href="#添加多状态的方块" class="headerlink" title="添加多状态的方块"></a>添加多状态的方块</h1><p><img src="https://s2.loli.net/2023/10/29/lp8zAY4c3G5fRqS.png" alt="image-20231029162325525"></p><p><img src="https://s2.loli.net/2023/10/29/MjznaZoV3GFNYQq.png" alt="image-20231029162337992"></p><h2 id="添加方块"><a href="#添加方块" class="headerlink" title="添加方块"></a>添加方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionHand;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionResult;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.player.Player;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.StateDefinition;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.properties.BooleanProperty;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.BlockHitResult;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZirconLampBlock</span> <span class="keyword">extends</span> <span class="title class_">Block</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">BooleanProperty</span> <span class="variable">LIT</span> <span class="operator">=</span> BooleanProperty.create(<span class="string">&quot;lit&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ZirconLampBlock</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> InteractionResult <span class="title function_">use</span><span class="params">(BlockState blockState, Level level, BlockPos blockPos, Player player, InteractionHand interactionHand, BlockHitResult blockHitResult)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!level.isClientSide() &amp;&amp; interactionHand == InteractionHand.MAIN_HAND) &#123;</span><br><span class="line">            level.setBlock(blockPos, blockState.cycle(LIT),<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> InteractionResult.SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">createBlockStateDefinition</span><span class="params">(StateDefinition.Builder&lt;Block, BlockState&gt; builder)</span> &#123;</span><br><span class="line">        builder.add(LIT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注册方块"><a href="#注册方块" class="headerlink" title="注册方块"></a>注册方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//lamp</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_LAMP = registerBlock(<span class="string">&quot;zircon_lamp&quot;</span>,</span><br><span class="line">        () -&gt; <span class="keyword">new</span> <span class="title class_">ZirconLampBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                .strength(<span class="number">6f</span>).requiresCorrectToolForDrops()</span><br><span class="line">                .lightLevel(state -&gt; state.getValue(ZirconLampBlock.LIT) ? <span class="number">15</span> : <span class="number">0</span>)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加blockstate"><a href="#添加blockstate" class="headerlink" title="添加blockstate"></a>添加blockstate</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;variants&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;lit=false&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_off&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lit=true&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_on&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加方块model"><a href="#添加方块model" class="headerlink" title="添加方块model"></a>添加方块model</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block/cube_all&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;all&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_off&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block/cube_all&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;all&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_on&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加物品model"><a href="#添加物品model" class="headerlink" title="添加物品model"></a>添加物品model</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/zircon_lamp_off&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加贴图"><a href="#添加贴图" class="headerlink" title="添加贴图"></a>添加贴图</h2><p>略</p><h2 id="添加语言文件"><a href="#添加语言文件" class="headerlink" title="添加语言文件"></a>添加语言文件</h2><p>略</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> 教程 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-05-添加合成表和LootTable以及方块挖掘正确工具的挖掘等级</title>
      <link href="/2023/10/29/Architectury-05-%E6%B7%BB%E5%8A%A0%E5%90%88%E6%88%90%E8%A1%A8%E5%92%8CLootTable%E4%BB%A5%E5%8F%8A%E6%96%B9%E5%9D%97%E6%8C%96%E6%8E%98%E6%AD%A3%E7%A1%AE%E5%B7%A5%E5%85%B7%E7%9A%84%E6%8C%96%E6%8E%98%E7%AD%89%E7%BA%A7/"/>
      <url>/2023/10/29/Architectury-05-%E6%B7%BB%E5%8A%A0%E5%90%88%E6%88%90%E8%A1%A8%E5%92%8CLootTable%E4%BB%A5%E5%8F%8A%E6%96%B9%E5%9D%97%E6%8C%96%E6%8E%98%E6%AD%A3%E7%A1%AE%E5%B7%A5%E5%85%B7%E7%9A%84%E6%8C%96%E6%8E%98%E7%AD%89%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="添加合成表Recipes，掉落物品表LootTable，方块挖掘等级，方块正确挖掘工具"><a href="#添加合成表Recipes，掉落物品表LootTable，方块挖掘等级，方块正确挖掘工具" class="headerlink" title="添加合成表Recipes，掉落物品表LootTable，方块挖掘等级，方块正确挖掘工具"></a>添加合成表Recipes，掉落物品表LootTable，方块挖掘等级，方块正确挖掘工具</h1><p>先添加了几个方块在ModBlock和ModItem下面</p><p><img src="https://s2.loli.net/2023/10/29/AOgi2lBfhboz3yW.png" alt="image-20231029110107898"></p><p>添加对应方块的物品和贴图</p><p><img src="https://s2.loli.net/2023/10/29/bLjucy4IoSOaFKw.png" alt="image-20231029110147533"></p><p>添加对应的方块正确挖掘工具，挖掘等级，掉落物表，合成表</p><p><img src="https://s2.loli.net/2023/10/29/ZNgmxABOy1uSola.png" alt="image-20231029110221433"></p><h2 id="添加方块"><a href="#添加方块" class="headerlink" title="添加方块"></a>添加方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.valueproviders.UniformInt;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.BlockItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Blocks;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.DropExperienceBlock;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockBehaviour;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.custom.JumpyBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModBlock</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Block&gt; BLOCKS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.BLOCK);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public static final RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = BLOCKS.register(&quot;zircon_block&quot;,()-&gt;new Block(BlockBehaviour.Properties.copy(Blocks.STONE)));</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = registerBlock(<span class="string">&quot;zircon_block&quot;</span>,()-&gt;<span class="keyword">new</span> <span class="title class_">Block</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; JUMPY_BLOCK = registerBlock(<span class="string">&quot;jumpy_block&quot;</span>,()-&gt; <span class="keyword">new</span> <span class="title class_">JumpyBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="comment">//ore</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_ORE = registerBlock(<span class="string">&quot;zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; DEEPSLATE_ZIRCON_ORE = registerBlock(<span class="string">&quot;deepslate_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ENDSTONE_ZIRCON_ORE = registerBlock(<span class="string">&quot;endstone_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; NETHERRACK_ZIRCON_ORE = registerBlock(<span class="string">&quot;netherrack_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;T&gt; <span class="title function_">registerBlock</span><span class="params">(String name, Supplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        RegistrySupplier&lt;T&gt; toReturn = BLOCKS.register(name, block);</span><br><span class="line">        registerBlockItem(name, toReturn);</span><br><span class="line">        <span class="keyword">return</span> toReturn;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;Item&gt; <span class="title function_">registerBlockItem</span><span class="params">(String name, RegistrySupplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModItem.ITEMS.register(name, () -&gt; <span class="keyword">new</span> <span class="title class_">BlockItem</span>(block.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        BLOCKS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.valueproviders.UniformInt;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.BlockItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Blocks;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.DropExperienceBlock;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockBehaviour;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.custom.JumpyBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModBlock</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Block&gt; BLOCKS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.BLOCK);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public static final RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = BLOCKS.register(&quot;zircon_block&quot;,()-&gt;new Block(BlockBehaviour.Properties.copy(Blocks.STONE)));</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = registerBlock(<span class="string">&quot;zircon_block&quot;</span>,()-&gt;<span class="keyword">new</span> <span class="title class_">Block</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; JUMPY_BLOCK = registerBlock(<span class="string">&quot;jumpy_block&quot;</span>,()-&gt; <span class="keyword">new</span> <span class="title class_">JumpyBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="comment">//ore</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_ORE = registerBlock(<span class="string">&quot;zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; DEEPSLATE_ZIRCON_ORE = registerBlock(<span class="string">&quot;deepslate_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ENDSTONE_ZIRCON_ORE = registerBlock(<span class="string">&quot;endstone_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; NETHERRACK_ZIRCON_ORE = registerBlock(<span class="string">&quot;netherrack_zircon_ore&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">DropExperienceBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)</span><br><span class="line">                    .strength(<span class="number">6f</span>).requiresCorrectToolForDrops(),</span><br><span class="line">                    UniformInt.of(<span class="number">3</span>, <span class="number">7</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;T&gt; <span class="title function_">registerBlock</span><span class="params">(String name, Supplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        RegistrySupplier&lt;T&gt; toReturn = BLOCKS.register(name, block);</span><br><span class="line">        registerBlockItem(name, toReturn);</span><br><span class="line">        <span class="keyword">return</span> toReturn;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;Item&gt; <span class="title function_">registerBlockItem</span><span class="params">(String name, RegistrySupplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModItem.ITEMS.register(name, () -&gt; <span class="keyword">new</span> <span class="title class_">BlockItem</span>(block.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        BLOCKS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加物品"><a href="#添加物品" class="headerlink" title="添加物品"></a>添加物品</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.EggItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.custom.EightBallItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModItem</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Item&gt; ITEMS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.ITEM);</span><br><span class="line">    <span class="comment">// 皓石</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EXAMPLE_ITEM = ITEMS.register(<span class="string">&quot;zircon&quot;</span>, () -&gt;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    <span class="comment">// 高级物品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EIGHT_BALL_ITEM = ITEMS.register(<span class="string">&quot;eight_ball&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">EightBallItem</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB).stacksTo(<span class="number">1</span>)));</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; RAW_ZIRCON = ITEMS.register(<span class="string">&quot;raw_zircon&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        ITEMS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加方块state和方块物品以及贴图等略过"><a href="#添加方块state和方块物品以及贴图等略过" class="headerlink" title="添加方块state和方块物品以及贴图等略过"></a>添加方块state和方块物品以及贴图等略过</h2><h2 id="添加正确的挖掘工具"><a href="#添加正确的挖掘工具" class="headerlink" title="添加正确的挖掘工具"></a>添加正确的挖掘工具</h2><p>pickaxe.json  (在mineable下面，其他的工具同理例如斧头axe.json)</p><p>相关的工具可以在我的世界包下找到，详细可以去看视频。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:zircon_block&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:zircon_ore&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tutorialmod:deepslate_zircon_ore&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="掉落物表"><a href="#掉落物表" class="headerlink" title="掉落物表"></a>掉落物表</h2><p>这里json的意思就不详细介绍了，可以去看往期视频，或者去找对应wiki有介绍</p><p>wiki搜索minecraftwiki就可以了。</p><p>deepslate_zircon_ore.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:alternatives&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:match_tool&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;predicate&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;enchantments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                      <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:silk_touch&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;levels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                          <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                        <span class="punctuation">&#125;</span></span><br><span class="line">                      <span class="punctuation">&#125;</span></span><br><span class="line">                    <span class="punctuation">]</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_ore&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;functions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;add&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:uniform&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;max&quot;</span><span class="punctuation">:</span> <span class="number">9.0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">2.0</span></span><br><span class="line">                  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:set_count&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:fortune&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;formula&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:uniform_bonus_count&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:apply_bonus&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;bonusMultiplier&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:explosion_decay&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:raw_zircon&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;random_sequence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blocks/zircon_ore&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_block.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:survives_explosion&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_block&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;random_sequence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blocks/zircon_block&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_ore.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;bonus_rolls&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;entries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:alternatives&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;conditions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:match_tool&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;predicate&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;enchantments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                      <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:silk_touch&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;levels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                          <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                        <span class="punctuation">&#125;</span></span><br><span class="line">                      <span class="punctuation">&#125;</span></span><br><span class="line">                    <span class="punctuation">]</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_ore&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:item&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;functions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;add&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:uniform&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;max&quot;</span><span class="punctuation">:</span> <span class="number">9.0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">2.0</span></span><br><span class="line">                  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:set_count&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;enchantment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:fortune&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;formula&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:uniform_bonus_count&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:apply_bonus&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;bonusMultiplier&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:explosion_decay&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:raw_zircon&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rolls&quot;</span><span class="punctuation">:</span> <span class="number">1.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;random_sequence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:blocks/zircon_ore&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加合成表"><a href="#添加合成表" class="headerlink" title="添加合成表"></a>添加合成表</h2><p>zircon.json</p><p>使用9个zircon合成一个block</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:crafting_shapeless&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;misc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ingredients&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_block&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_block.json</p><p>使用block合成9个zircon</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:crafting_shaped&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;misc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;#&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pattern&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;###&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;###&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;###&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon_block&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;show_notification&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_from_sme****.json</p><p>raw 熔炉 烧</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:smelting&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;misc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cookingtime&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;experience&quot;</span><span class="punctuation">:</span> <span class="number">0.7</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ingredient&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:raw_zircon&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>zircon_from_bl**.json</p><p>raw 高炉 烧</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:blasting&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;misc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cookingtime&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;experience&quot;</span><span class="punctuation">:</span> <span class="number">0.7</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ingredient&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:raw_zircon&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:zircon&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>具体字段含义查询wiki，不过看英语大概也能看懂把。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-04-高级方块</title>
      <link href="/2023/10/28/Architectury-04-%E9%AB%98%E7%BA%A7%E6%96%B9%E5%9D%97/"/>
      <url>/2023/10/28/Architectury-04-%E9%AB%98%E7%BA%A7%E6%96%B9%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="添加一个高级方块"><a href="#添加一个高级方块" class="headerlink" title="添加一个高级方块"></a>添加一个高级方块</h1><p><img src="https://s2.loli.net/2023/10/29/ct5BRLgM9qGo1fe.png" alt="image-20231029150618990"></p><h2 id="添加方块代码"><a href="#添加方块代码" class="headerlink" title="添加方块代码"></a>添加方块代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.block.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.BlockPos;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionHand;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionResult;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.effect.MobEffectInstance;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.effect.MobEffects;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.Entity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.LivingEntity;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.player.Player;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockState;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.phys.BlockHitResult;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JumpyBlock</span> <span class="keyword">extends</span> <span class="title class_">Block</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JumpyBlock</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> InteractionResult <span class="title function_">use</span><span class="params">(BlockState blockState, Level level, BlockPos blockPos, Player player, InteractionHand interactionHand, BlockHitResult blockHitResult)</span> &#123;</span><br><span class="line">        player.sendSystemMessage(Component.literal(<span class="string">&quot;Right Clicked this!&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> InteractionResult.SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stepOn</span><span class="params">(Level level, BlockPos blockPos, BlockState blockState, Entity entity)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(entity <span class="keyword">instanceof</span> LivingEntity entity1)&#123;</span><br><span class="line">            entity1.addEffect(<span class="keyword">new</span> <span class="title class_">MobEffectInstance</span>(<span class="keyword">new</span> <span class="title class_">MobEffectInstance</span>(MobEffects.JUMP,<span class="number">200</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">super</span>.stepOn(level, blockPos, blockState, entity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注册方块"><a href="#注册方块" class="headerlink" title="注册方块"></a>注册方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; JUMPY_BLOCK = registerBlock(<span class="string">&quot;jumpy_block&quot;</span>,()-&gt; <span class="keyword">new</span> <span class="title class_">JumpyBlock</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加blockstate"><a href="#添加blockstate" class="headerlink" title="添加blockstate"></a>添加blockstate</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;variants&quot;: &#123;</span><br><span class="line">    &quot;&quot;: &#123;</span><br><span class="line">      &quot;model&quot;: &quot;tutorialmod:block/jumpy_block&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加方块model"><a href="#添加方块model" class="headerlink" title="添加方块model"></a>添加方块model</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;minecraft:block/cube_all&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;all&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/jumpy_block&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="添加方块item"><a href="#添加方块item" class="headerlink" title="添加方块item"></a>添加方块item</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;parent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tutorialmod:block/jumpy_block&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加方块贴图"><a href="#添加方块贴图" class="headerlink" title="添加方块贴图"></a>添加方块贴图</h2><p>略</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
            <tag> Java </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-03-高级物品</title>
      <link href="/2023/10/28/Architectury-03-%E9%AB%98%E7%BA%A7%E7%89%A9%E5%93%81/"/>
      <url>/2023/10/28/Architectury-03-%E9%AB%98%E7%BA%A7%E7%89%A9%E5%93%81/</url>
      
        <content type="html"><![CDATA[<h1 id="添加高级物品"><a href="#添加高级物品" class="headerlink" title="添加高级物品"></a>添加高级物品</h1><p><img src="https://s2.loli.net/2023/10/28/R28V6rfXhaKlyGs.png" alt="image-20231028215814333"></p><h2 id="添加自定义物品"><a href="#添加自定义物品" class="headerlink" title="添加自定义物品"></a>添加自定义物品</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.item.custom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.util.RandomSource;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionHand;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionResult;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.InteractionResultHolder;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.entity.player.Player;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.Level;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EightBallItem</span> <span class="keyword">extends</span> <span class="title class_">Item</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EightBallItem</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> InteractionResultHolder&lt;ItemStack&gt; <span class="title function_">use</span><span class="params">(Level level, Player player, InteractionHand interactionHand)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!level.isClientSide() &amp;&amp; interactionHand == InteractionHand.MAIN_HAND) &#123;</span><br><span class="line">            outputRandomNumber(player);</span><br><span class="line">            player.getCooldowns().addCooldown(<span class="built_in">this</span>, <span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> InteractionResultHolder.success(<span class="keyword">new</span> <span class="title class_">ItemStack</span>(<span class="built_in">this</span>,<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">outputRandomNumber</span><span class="params">(Player player)</span> &#123;</span><br><span class="line">        player.sendSystemMessage(Component.literal(<span class="string">&quot;Your Number is &quot;</span> + getRandomNumber()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getRandomNumber</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> RandomSource.createNewThreadLocalInstance().nextInt(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.tutorialmod.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.EggItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.custom.EightBallItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModItem</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Item&gt; ITEMS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.ITEM);</span><br><span class="line">    <span class="comment">// 皓石</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EXAMPLE_ITEM = ITEMS.register(<span class="string">&quot;zircon&quot;</span>, () -&gt;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    <span class="comment">// 高级物品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EIGHT_BALL_ITEM = ITEMS.register(<span class="string">&quot;eight_ball&quot;</span>,</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">EightBallItem</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB).stacksTo(<span class="number">1</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        ITEMS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加model"><a href="#添加model" class="headerlink" title="添加model"></a>添加model</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;minecraft:item/generated&quot;</span>,</span><br><span class="line">  <span class="string">&quot;textures&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;layer0&quot;</span>: <span class="string">&quot;tutorialmod:item/eight_ball&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加-lang"><a href="#添加-lang" class="headerlink" title="添加 lang"></a>添加 lang</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">略</span><br></pre></td></tr></table></figure><h2 id="添加textures"><a href="#添加textures" class="headerlink" title="添加textures"></a>添加textures</h2><p>略</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-02-添加方块</title>
      <link href="/2023/10/28/Architectury-02-%E6%B7%BB%E5%8A%A0%E6%96%B9%E5%9D%97/"/>
      <url>/2023/10/28/Architectury-02-%E6%B7%BB%E5%8A%A0%E6%96%B9%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="添加方块"><a href="#添加方块" class="headerlink" title="添加方块"></a>添加方块</h1><p><img src="https://s2.loli.net/2023/10/28/wqLaZK1WGzPrnVF.png" alt="image-20231028212405539"></p><h2 id="添加方块-1"><a href="#添加方块-1" class="headerlink" title="添加方块"></a>添加方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.block;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.BlockItem;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Block;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.Blocks;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.level.block.state.BlockBehaviour;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModBlock</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Block&gt; BLOCKS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.BLOCK);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Block&gt; ZIRCON_BLOCK = registerBlock(<span class="string">&quot;zircon_block&quot;</span>,()-&gt;<span class="keyword">new</span> <span class="title class_">Block</span>(BlockBehaviour.Properties.copy(Blocks.STONE)));</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;T&gt; <span class="title function_">registerBlock</span><span class="params">(String name, Supplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        RegistrySupplier&lt;T&gt; toReturn = BLOCKS.register(name, block);</span><br><span class="line">        registerBlockItem(name, toReturn);</span><br><span class="line">        <span class="keyword">return</span> toReturn;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Block</span>&gt; RegistrySupplier&lt;Item&gt; <span class="title function_">registerBlockItem</span><span class="params">(String name, RegistrySupplier&lt;T&gt; block)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModItem.ITEMS.register(name, () -&gt; <span class="keyword">new</span> <span class="title class_">BlockItem</span>(block.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        BLOCKS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改TutorialMod类"><a href="#修改TutorialMod类" class="headerlink" title="修改TutorialMod类"></a>修改TutorialMod类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Suppliers;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.CreativeTabRegistry;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrarManager;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.CreativeModeTab;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.block.ModBlock;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModCreativeTab;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.item.ModItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutorialMod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MOD_ID</span> <span class="operator">=</span> <span class="string">&quot;tutorialmod&quot;</span>;</span><br><span class="line">    <span class="comment">// We can use this if we don&#x27;t want to use DeferredRegister</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Supplier&lt;RegistrarManager&gt; REGISTRIES = Suppliers.memoize(() -&gt; RegistrarManager.get(MOD_ID));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123; <span class="comment">// 这里线注册方块，在注册Item，不可以反过来</span></span><br><span class="line">        ModCreativeTab.register();</span><br><span class="line">        ModBlock.register();</span><br><span class="line">        ModItem.register();</span><br><span class="line"></span><br><span class="line">        System.out.println(TutorialModExpectPlatform.getConfigDirectory().toAbsolutePath().normalize().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加blockstate"><a href="#添加blockstate" class="headerlink" title="添加blockstate"></a>添加blockstate</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;variants&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;model&quot;</span>: <span class="string">&quot;tutorialmod:block/zircon_block&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加model"><a href="#添加model" class="headerlink" title="添加model"></a>添加model</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;minecraft:block/cube_all&quot;</span>,</span><br><span class="line">  <span class="string">&quot;textures&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;all&quot;</span>: <span class="string">&quot;tutorialmod:block/zircon_block&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加item-model"><a href="#添加item-model" class="headerlink" title="添加item model"></a>添加item model</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;tutorialmod:block/zircon_block&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加texture"><a href="#添加texture" class="headerlink" title="添加texture"></a>添加texture</h2><h2 id="添加lang"><a href="#添加lang" class="headerlink" title="添加lang"></a>添加lang</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;item.tutorialmod.zircon&quot;</span>: <span class="string">&quot;Zircon&quot;</span>,</span><br><span class="line">  <span class="string">&quot;itemGroup.tutorialmod.example_tab&quot;</span>: <span class="string">&quot;TutoriablTab&quot;</span>,</span><br><span class="line">  <span class="string">&quot;block.tutorialmod.zircon_block&quot;</span>: <span class="string">&quot;Zircon Block&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-01-添加物品</title>
      <link href="/2023/10/28/Architectury-01-%E6%B7%BB%E5%8A%A0%E7%89%A9%E5%93%81/"/>
      <url>/2023/10/28/Architectury-01-%E6%B7%BB%E5%8A%A0%E7%89%A9%E5%93%81/</url>
      
        <content type="html"><![CDATA[<h1 id="添加方块"><a href="#添加方块" class="headerlink" title="添加方块"></a>添加方块</h1><p><img src="https://s2.loli.net/2023/10/28/9Y1U3PzImcJWT8x.png" alt="image-20231028204614315"></p><h2 id="添加方块-1"><a href="#添加方块-1" class="headerlink" title="添加方块"></a>添加方块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.Item;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModItem</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;Item&gt; ITEMS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.ITEM);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;Item&gt; EXAMPLE_ITEM = ITEMS.register(<span class="string">&quot;zircon&quot;</span>, () -&gt;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="keyword">new</span> <span class="title class_">Item</span>.Properties().arch$tab(ModCreativeTab.EXAMPLE_TAB)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        ITEMS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加创造物品栏"><a href="#添加创造物品栏" class="headerlink" title="添加创造物品栏"></a>添加创造物品栏</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.tutorialmod.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.CreativeTabRegistry;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.DeferredRegister;</span><br><span class="line"><span class="keyword">import</span> dev.architectury.registry.registries.RegistrySupplier;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.core.registries.Registries;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.network.chat.Component;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.CreativeModeTab;</span><br><span class="line"><span class="keyword">import</span> net.minecraft.world.item.ItemStack;</span><br><span class="line"><span class="keyword">import</span> net.tutorialmod.TutorialMod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModCreativeTab</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DeferredRegister&lt;CreativeModeTab&gt; TABS = DeferredRegister.create(TutorialMod.MOD_ID, Registries.CREATIVE_MODE_TAB);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistrySupplier&lt;CreativeModeTab&gt; EXAMPLE_TAB = TABS.register(<span class="string">&quot;example_tab&quot;</span>, () -&gt;</span><br><span class="line">            CreativeTabRegistry.create(Component.translatable(<span class="string">&quot;itemGroup.&quot;</span> + TutorialMod.MOD_ID + <span class="string">&quot;.example_tab&quot;</span>),</span><br><span class="line">                    () -&gt; <span class="keyword">new</span> <span class="title class_">ItemStack</span>(ModItem.EXAMPLE_ITEM.get())));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span>&#123;</span><br><span class="line">        TABS.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建语言文件"><a href="#创建语言文件" class="headerlink" title="创建语言文件"></a>创建语言文件</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;item.tutorialmod.zircon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Zircon&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;itemGroup.tutorialmod.example_tab&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TutoriablTab&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="创建models-item"><a href="#创建models-item" class="headerlink" title="创建models-item"></a>创建models-item</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;minecraft:item/generated&quot;</span>,</span><br><span class="line">  <span class="string">&quot;textures&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;layer0&quot;</span>: <span class="string">&quot;tutorialmod:item/zircon&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建贴图"><a href="#创建贴图" class="headerlink" title="创建贴图"></a>创建贴图</h2><p><img src="https://s2.loli.net/2023/10/28/IH5BTa4WK9s6tCF.png" alt="image-20231028204651340"></p><h2 id="进入游戏测试"><a href="#进入游戏测试" class="headerlink" title="进入游戏测试"></a>进入游戏测试</h2><p><img src="https://s2.loli.net/2023/10/28/u1m32KvjzM9NDgb.png" alt="image-20231028204958179"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typro自动上传图片到图床</title>
      <link href="/2023/10/28/typro%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0%E5%9B%BE%E5%BA%8A/"/>
      <url>/2023/10/28/typro%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="声明本文转载自知乎，仅作留存，侵删"><a href="#声明本文转载自知乎，仅作留存，侵删" class="headerlink" title="声明本文转载自知乎，仅作留存，侵删"></a>声明本文转载自知乎，仅作留存，侵删</h1><p><a href="https://zhuanlan.zhihu.com/p/378892917">Typora 中设置PicGo 图床实现图片自动上传 - 知乎 (zhihu.com)</a></p><h1 id="关于补充内容"><a href="#关于补充内容" class="headerlink" title="关于补充内容"></a>关于补充内容</h1><p>因为smsm图床貌似ban掉了测试用的上传图片，所以会显示失败，可以自己尝试插入图片看看，是否上传成功。我这里是没有问题的。不过冒失smsm图传会有限制5gb，这个问题满了再说。</p><p>以下是报错内容,可见是被blocked了。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Error: This image has been blocked, please contact webmaster for more information.</span><br><span class="line">at Object.We [as handle] </span><br><span class="line">-------Error Stack End-------</span><br><span class="line">2023-10-28 09:45:49 [PicGo INFO] [PicGo Server] upload result</span><br><span class="line">2023-10-28 09:45:49 [PicGo WARN] [PicGo Server] upload failed, see picgo.log for more detail ↑</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="以下是原文内容"><a href="#以下是原文内容" class="headerlink" title="以下是原文内容"></a>以下是原文内容</h1><hr><p>在众多 md 编辑器中，Typora 是大家公认的体验较好的写作软件之一，它最大的特点就是：所见即所得，无须分屏预览，或者开启新页面预览。那么Typora 中能不能直接粘贴图片后，就自动上传到图床呢？下面就来介绍如何配置，以及 PicGo 的使用。实现图片的自动上传。</p><p><a href="https://link.zhihu.com/?target=http://kogoal.com/">Kogoal</a>介绍了使用 SM.MS 这一种图床，其他图床的配置可以参考PicGo。</p><h2 id="使用到的工具"><a href="#使用到的工具" class="headerlink" title="使用到的工具"></a><strong>使用到的工具</strong></h2><p><strong><code>SM.MS</code></strong>: <strong>免费</strong>图床。</p><p><strong><code>PicGo</code></strong> 开源的图片管理工具，可以自己上传图片到各种图床。</p><p><strong><code>Typora</code></strong>: 写Markdown的神器，轻便简洁的Markdown编辑器，支持<strong>即时渲染</strong>技术。</p><p>安装步骤不分先后，建议按照上面顺序安装，因为存在token或者设置需要在后续的安装中用到。</p><h2 id="1-注册SM-MS"><a href="#1-注册SM-MS" class="headerlink" title="1.注册SM.MS"></a><strong>1.注册SM.MS</strong></h2><p>SM.MS 图床用户注册，注册网站：<a href="https://link.zhihu.com/?target=https://sm.ms/">https://sm.ms/</a></p><p>免费的用户空间是5G,如果是土豪朋友可以选择premium 价格是399 USD</p><p><img src="https://pic4.zhimg.com/v2-7394dd1dd68b7eb2048eb84c6d3b4413_b.jpg"></p><p>新注册用户登录之后，点击左侧 API Token 点击 Generate Secret Token 然后复制保存，这个Secret Token 会在第二步PicGo中用到。</p><p><img src="https://pic4.zhimg.com/v2-14217baea54f13efa2e0a1ae5de6abbb_b.jpg"></p><h2 id="2、安装配置-PicGo"><a href="#2、安装配置-PicGo" class="headerlink" title="2、安装配置 PicGo"></a><strong>2、安装配置 PicGo</strong></h2><h3 id="2-1-安装PicGo"><a href="#2-1-安装PicGo" class="headerlink" title="2.1 安装PicGo"></a><strong>2.1 安装PicGo</strong></h3><p>点击此处下载PicGo <a href="https://link.zhihu.com/?target=https://github.com/Molunerfinn/PicGo/releases">应用</a></p><p><strong>Windows</strong> Windows 用户请下载最新版本的 <code>exe</code> 文件。</p><p><strong>macOS</strong> macOS 用户请下载最新版本的 <code>dmg</code> 文件。</p><p><strong>Linux</strong> Linux 用户请下载 <code>AppImage</code> 文件。</p><p>一路next后，安装完成后如下。</p><p><img src="https://pic1.zhimg.com/v2-94118be84cb59d9f2eb00311b01b16f4_b.jpg"></p><h3 id="2-2-配置PicGo"><a href="#2-2-配置PicGo" class="headerlink" title="2.2 配置PicGo"></a><strong>2.2 配置PicGo</strong></h3><h3 id="设定token值"><a href="#设定token值" class="headerlink" title="设定token值"></a><strong>设定token值</strong></h3><p>此处的Token值就是在SM.MS 上生成的Secret Token。点击确定。</p><p><img src="https://pic1.zhimg.com/v2-72836bb9ebf9cdd5f8890aec57c26bb8_b.jpg"></p><h3 id="2-3-安装插件"><a href="#2-3-安装插件" class="headerlink" title="2.3 安装插件"></a><strong>2.3 安装插件</strong></h3><p>再安装插件之前，确保你已经安装了 Node.js，因为 PicGo 是使用 npm 来安装的。地址：<a href="https://link.zhihu.com/?target=https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></p><p>到 PicGo-插件设置里面搜索一个插件：<strong>picgo-plugin-smms-user</strong>，点击安装。</p><p><img src="https://pic2.zhimg.com/v2-3495f468126a28712cfd970bb68eddd1_b.jpg"></p><h2 id="3、安装配置Typora"><a href="#3、安装配置Typora" class="headerlink" title="3、安装配置Typora"></a><strong>3、安装配置Typora</strong></h2><h3 id="3-1-下载最新版本的-Typora"><a href="#3-1-下载最新版本的-Typora" class="headerlink" title="3.1 下载最新版本的 Typora"></a><strong>3.1 下载最新版本的 Typora</strong></h3><p>下载地址：<a href="https://link.zhihu.com/?target=https://www.typora.io/">https://www.typora.io/</a></p><h3 id="3-2-设置图像上传"><a href="#3-2-设置图像上传" class="headerlink" title="3.2 设置图像上传"></a><strong>3.2 设置图像上传</strong></h3><p>根据个人喜好，我把 Typora 的语言设置为简体中文。</p><p><img src="https://pic3.zhimg.com/v2-58aa217dd6792bed040aec70739bcf2e_b.jpg"></p><p>Typora配置图床选项这里标注了三个红框：</p><ul><li>第一默认不是 上传图片 选项，下拉选择它；</li><li>第二个红框建议两个都选择，这样你写作所用到的图片无论是本地上传还是网络图片，都会直接上传到你的图床；</li><li>第三个红框是图床工具，选择刚过安装的PicGo的安装目录。</li></ul><p><img src="https://s2.loli.net/2023/10/28/tIRNkbTHCQVKJwL.jpg"></p><p>点击<strong>验证图片上传</strong>选项，会自动上传一张测试图片，如果提示成功上传图片并获得新的URL。证明上传成功。</p><p><img src="https://s2.loli.net/2023/10/28/bymavDKTY9EtlXx.jpg"></p><h2 id="Typora-中测试上传图片"><a href="#Typora-中测试上传图片" class="headerlink" title="Typora 中测试上传图片"></a><strong>Typora 中测试上传图片</strong></h2><p>在markdown文件中需要使用图片的地方，右键选择上传图片。点击后即可上传图片至图床。如果仔细看markdown的图片路径，就会发现已经从本地的路径变成了网页的路径。到这里说明我们的图床工具上传图片已经没有问题了，现在就可以在 Typora 中安心的码字了。</p><p>（本文为Typora完成）</p><p><img src="https://s2.loli.net/2023/10/28/pzrZJ8YCcdyxvbA.jpg"></p><p><em>KO Goal，Goal OK. 专注于提升工作效率。点击了解<a href="https://link.zhihu.com/?target=http://kogoal.com/">Kogoal</a>更多。</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的世界Forge ep5：添加线缆</title>
      <link href="/2023/10/27/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8Cep5%E6%B7%BB%E5%8A%A0%E7%94%B5%E7%BC%86%E6%95%99%E7%A8%8B/"/>
      <url>/2023/10/27/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8Cep5%E6%B7%BB%E5%8A%A0%E7%94%B5%E7%BC%86%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="ep5"><a href="#ep5" class="headerlink" title="ep5"></a>ep5</h1><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>本文章翻译自mcjty的教程，<a href="https://www.mcjty.eu/docs/1.20/ep5#introduction">源地址</a>,侵删</p><h2 id="link"><a href="#link" class="headerlink" title="link"></a>link</h2><ul><li><a href="https://youtu.be/WUhet8dOlAs">视频</a></li><li><a href="https://github.com/McJty/Tut4_3Power">Github地址</a></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本章是ep4的继续，在ep4中，增加了能发电的发电机和一个消耗电量的方块。如果你把他们彼此放在一起，你就可以让发电机给电池充电，然而，我们还没有办法远距离传输电量，在这节中，我们增加一种简单的电缆系统，它可以将电力从任何的发电机或者电池传输到任意需要电力的机器上。这不是一个完整的系统，这是一个简单的系统达到我们的目的。同时我们希望这个线缆是一个含水方块</p><ul><li>烘焙模型</li><li>自定义模型加载器</li><li>复杂的形状</li><li>含水方块</li></ul><h2 id="烘焙模型"><a href="#烘焙模型" class="headerlink" title="烘焙模型"></a>烘焙模型</h2><p>可以使用一个简单的json制作一个线缆系统，然而，这样会导致生成很多的json组合，同时我们希望可以模拟其他的方块，这是Json模型无法做到的，所以我们使用烘焙模型，烘焙模型是一个我们可以使用代码生成模型的系统，在这一系统，这样做会有更多的工作量，但是也更加灵活</p><h3 id="线缆"><a href="#线缆" class="headerlink" title="线缆"></a>线缆</h3><p><img src="https://picst.sunbangyan.cn/2023/10/27/805bccded2b6f545898a4a05a2b24f44.png" alt="cables-1e682971f988e084ee146460c1910911"></p><h4 id="连接类型枚举"><a href="#连接类型枚举" class="headerlink" title="连接类型枚举"></a>连接类型枚举</h4><p>这是一个枚举类，用于表示某个方向上的链接类型，有以下三种类型的数值:<code>CABLE</code>,<code>BLOCK</code>,<code>NONE</code></p><ul><li><code>CABLE</code>:表示这个方向有一个电缆</li><li><code>BLOCK</code>:表示这个方向有一个有一个方块</li><li><code>NONE</code>:表示这个方向什么也没有</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ConnectorType</span> <span class="keyword">implements</span> <span class="title class_">StringRepresentable</span> &#123;</span><br><span class="line">    NONE,</span><br><span class="line">    CABLE,</span><br><span class="line">    BLOCK;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ConnectorType[] VALUES = values();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSerializedName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name().toLowerCase();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="线缆方块"><a href="#线缆方块" class="headerlink" title="线缆方块"></a>线缆方块</h4><p>电缆也是一个方块，所以我们需要添加一个新的方块，我们叫他CableBlock，这个类中有比较多的带， 所以这里我们分为几个部分讲。</p><p>首先需要6个枚举用于指明某个方向上是由含有线缆或者方块，<code>FACEDID</code>是一个特殊的模型属性，我们使用这个属性指出我们正在模仿另一个块的面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CableBlock</span> <span class="keyword">extends</span> <span class="title class_">Block</span> <span class="keyword">implements</span> <span class="title class_">SimpleWaterloggedBlock</span>, EntityBlock &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Properties that indicate if there is the same block in a certain direction.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; NORTH = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;north&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; SOUTH = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;south&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; WEST = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;west&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; EAST = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;east&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; UP = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;up&quot;</span>, ConnectorType.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EnumProperty&lt;ConnectorType&gt; DOWN = EnumProperty.&lt;ConnectorType&gt;create(<span class="string">&quot;down&quot;</span>, ConnectorType.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ModelProperty&lt;BlockState&gt; FACADEID = <span class="keyword">new</span> <span class="title class_">ModelProperty</span>&lt;&gt;();</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>下一部分是我们方块的形状，我们希望方块的模型和我们实际的电缆模型一致，这也是为什么当特定方向上是线缆的时候具有六个形状，当特定方向是方块时候有两个形状，因为我们的getShape（）必须是高效的， 所以我们有一个ShapeCache，存储了所有可能的形状。</p><p> makeShapes（）负责创建缓存，他由构造函数调用。calculateShapeIndex（）函数根据六个方向上的连接类型计算缓存中的索引。makeShape（）是基于六个方向创建形状。combineShape（）函数将和特定的形状形成组合。如果电缆连接的是电缆我们只需要简单的显示电缆，如果连接的是块，则需要显示电缆和块连接的形状。</p><p>updateShape（）是当临近方块改变时候回调的方法，这种情况下，我们选哟重新计算形状。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> VoxelShape[] shapeCache = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_NORTH</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">.4</span>, <span class="number">0</span>, <span class="number">.6</span>, <span class="number">.6</span>, <span class="number">.4</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_SOUTH</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.6</span>, <span class="number">.6</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_WEST</span> <span class="operator">=</span> Shapes.box(<span class="number">0</span>, <span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.6</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_EAST</span> <span class="operator">=</span> Shapes.box(<span class="number">.6</span>, <span class="number">.4</span>, <span class="number">.4</span>, <span class="number">1</span>, <span class="number">.6</span>, <span class="number">.6</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_UP</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">1</span>, <span class="number">.6</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_CABLE_DOWN</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">0</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.4</span>, <span class="number">.6</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_NORTH</span> <span class="operator">=</span> Shapes.box(<span class="number">.2</span>, <span class="number">.2</span>, <span class="number">0</span>, <span class="number">.8</span>, <span class="number">.8</span>, <span class="number">.1</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_SOUTH</span> <span class="operator">=</span> Shapes.box(<span class="number">.2</span>, <span class="number">.2</span>, <span class="number">.9</span>, <span class="number">.8</span>, <span class="number">.8</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_WEST</span> <span class="operator">=</span> Shapes.box(<span class="number">0</span>, <span class="number">.2</span>, <span class="number">.2</span>, <span class="number">.1</span>, <span class="number">.8</span>, <span class="number">.8</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_EAST</span> <span class="operator">=</span> Shapes.box(<span class="number">.9</span>, <span class="number">.2</span>, <span class="number">.2</span>, <span class="number">1</span>, <span class="number">.8</span>, <span class="number">.8</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_UP</span> <span class="operator">=</span> Shapes.box(<span class="number">.2</span>, <span class="number">.9</span>, <span class="number">.2</span>, <span class="number">.8</span>, <span class="number">1</span>, <span class="number">.8</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">VoxelShape</span> <span class="variable">SHAPE_BLOCK_DOWN</span> <span class="operator">=</span> Shapes.box(<span class="number">.2</span>, <span class="number">0</span>, <span class="number">.2</span>, <span class="number">.8</span>, <span class="number">.1</span>, <span class="number">.8</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">calculateShapeIndex</span><span class="params">(ConnectorType north, ConnectorType south, ConnectorType west, ConnectorType east, ConnectorType up, ConnectorType down)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> ConnectorType.values().length;</span><br><span class="line">    <span class="keyword">return</span> ((((south.ordinal() * l + north.ordinal()) * l + west.ordinal()) * l + east.ordinal()) * l + up.ordinal()) * l + down.ordinal();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeShapes</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (shapeCache == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> ConnectorType.values().length;</span><br><span class="line">        shapeCache = <span class="keyword">new</span> <span class="title class_">VoxelShape</span>[length * length * length * length * length * length];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (ConnectorType up : ConnectorType.VALUES) &#123;</span><br><span class="line">            <span class="keyword">for</span> (ConnectorType down : ConnectorType.VALUES) &#123;</span><br><span class="line">                <span class="keyword">for</span> (ConnectorType north : ConnectorType.VALUES) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (ConnectorType south : ConnectorType.VALUES) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (ConnectorType east : ConnectorType.VALUES) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (ConnectorType west : ConnectorType.VALUES) &#123;</span><br><span class="line">                                <span class="type">int</span> <span class="variable">idx</span> <span class="operator">=</span> calculateShapeIndex(north, south, west, east, up, down);</span><br><span class="line">                                shapeCache[idx] = makeShape(north, south, west, east, up, down);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> VoxelShape <span class="title function_">makeShape</span><span class="params">(ConnectorType north, ConnectorType south, ConnectorType west, ConnectorType east, ConnectorType up, ConnectorType down)</span> &#123;</span><br><span class="line">    <span class="type">VoxelShape</span> <span class="variable">shape</span> <span class="operator">=</span> Shapes.box(<span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.4</span>, <span class="number">.6</span>, <span class="number">.6</span>, <span class="number">.6</span>);</span><br><span class="line">    shape = combineShape(shape, north, SHAPE_CABLE_NORTH, SHAPE_BLOCK_NORTH);</span><br><span class="line">    shape = combineShape(shape, south, SHAPE_CABLE_SOUTH, SHAPE_BLOCK_SOUTH);</span><br><span class="line">    shape = combineShape(shape, west, SHAPE_CABLE_WEST, SHAPE_BLOCK_WEST);</span><br><span class="line">    shape = combineShape(shape, east, SHAPE_CABLE_EAST, SHAPE_BLOCK_EAST);</span><br><span class="line">    shape = combineShape(shape, up, SHAPE_CABLE_UP, SHAPE_BLOCK_UP);</span><br><span class="line">    shape = combineShape(shape, down, SHAPE_CABLE_DOWN, SHAPE_BLOCK_DOWN);</span><br><span class="line">    <span class="keyword">return</span> shape;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">private</span> VoxelShape <span class="title function_">combineShape</span><span class="params">(VoxelShape shape, ConnectorType connectorType, VoxelShape cableShape, VoxelShape blockShape)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (connectorType == ConnectorType.CABLE) &#123;</span><br><span class="line">        <span class="keyword">return</span> Shapes.join(shape, cableShape, BooleanOp.OR);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (connectorType == ConnectorType.BLOCK) &#123;</span><br><span class="line">        <span class="keyword">return</span> Shapes.join(shape, Shapes.join(blockShape, cableShape, BooleanOp.OR), BooleanOp.OR);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> shape;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@Nonnull</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> VoxelShape <span class="title function_">getShape</span><span class="params">(<span class="meta">@Nonnull</span> BlockState state, <span class="meta">@Nonnull</span> BlockGetter world, <span class="meta">@Nonnull</span> BlockPos pos, <span class="meta">@Nonnull</span> CollisionContext context)</span> &#123;</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">north</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.NORTH);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">south</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.SOUTH);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">west</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.WEST);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">east</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.EAST);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">up</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.UP);</span><br><span class="line">    <span class="type">ConnectorType</span> <span class="variable">down</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.DOWN);</span><br><span class="line">    <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> calculateShapeIndex(north, south, west, east, up, down);</span><br><span class="line">    <span class="keyword">return</span> shapeCache[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Nonnull</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> BlockState <span class="title function_">updateShape</span><span class="params">(BlockState state, <span class="meta">@Nonnull</span> Direction direction, <span class="meta">@Nonnull</span> BlockState neighbourState, <span class="meta">@Nonnull</span> LevelAccessor world, <span class="meta">@Nonnull</span> BlockPos current, <span class="meta">@Nonnull</span> BlockPos offset)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (state.getValue(WATERLOGGED)) &#123;</span><br><span class="line">        world.getFluidTicks().schedule(<span class="keyword">new</span> <span class="title class_">ScheduledTick</span>&lt;&gt;(Fluids.WATER, current, Fluids.WATER.getTickDelay(world), <span class="number">0L</span>));   <span class="comment">// @todo 1.18 what is this last parameter exactly?</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> calculateState(world, current, state);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们有了构造方法（在这里调用makeShapes（））我们设置含水方块是false，我们还需要为block entity 和block entity tiker实现相应的功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">CableBlock</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(Properties.of()</span><br><span class="line">            .strength(<span class="number">1.0f</span>)</span><br><span class="line">            .sound(SoundType.METAL)</span><br><span class="line">            .noOcclusion()</span><br><span class="line">    );</span><br><span class="line">    makeShapes();</span><br><span class="line">    registerDefaultState(defaultBlockState().setValue(WATERLOGGED, <span class="literal">false</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> BlockEntity <span class="title function_">newBlockEntity</span><span class="params">(BlockPos blockPos, BlockState blockState)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CableBlockEntity</span>(blockPos, blockState);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">BlockEntity</span>&gt; BlockEntityTicker&lt;T&gt; <span class="title function_">getTicker</span><span class="params">(Level level, BlockState state, BlockEntityType&lt;T&gt; type)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (level.isClientSide) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (lvl, pos, st, be) -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (be <span class="keyword">instanceof</span> CableBlockEntity cable) &#123;</span><br><span class="line">                cable.tickServer();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>neighborChanged()和setPlacedBy用于标记实体的脏位，当某些东西改变的时候。这是为了让我们方块可以更新电缆网络（之后会介绍）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">neighborChanged</span><span class="params">(BlockState state, Level level, BlockPos pos, Block block, BlockPos fromPos, <span class="type">boolean</span> isMoving)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.neighborChanged(state, level, pos, block, fromPos, isMoving);</span><br><span class="line">    <span class="keyword">if</span> (!level.isClientSide &amp;&amp; level.getBlockEntity(pos) <span class="keyword">instanceof</span> CableBlockEntity cable) &#123;</span><br><span class="line">        cable.markDirty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPlacedBy</span><span class="params">(<span class="meta">@Nonnull</span> Level level, <span class="meta">@Nonnull</span> BlockPos pos, <span class="meta">@Nonnull</span> BlockState state, <span class="meta">@Nullable</span> LivingEntity placer, <span class="meta">@Nonnull</span> ItemStack stack)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.setPlacedBy(level, pos, state, placer, stack);</span><br><span class="line">    <span class="keyword">if</span> (!level.isClientSide &amp;&amp; level.getBlockEntity(pos) <span class="keyword">instanceof</span> CableBlockEntity cable) &#123;</span><br><span class="line">        cable.markDirty();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">BlockState</span> <span class="variable">blockState</span> <span class="operator">=</span> calculateState(level, pos, state);</span><br><span class="line">    <span class="keyword">if</span> (state != blockState) &#123;</span><br><span class="line">        level.setBlockAndUpdate(pos, blockState);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>getConnectorType()和isConnectable()方法用于确定在某个方向上的连接类型。这用于计算线缆的形状。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Return the connector type for the given position and facing direction</span></span><br><span class="line"><span class="keyword">private</span> ConnectorType <span class="title function_">getConnectorType</span><span class="params">(BlockGetter world, BlockPos connectorPos, Direction facing)</span> &#123;</span><br><span class="line">    <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> connectorPos.relative(facing);</span><br><span class="line">    <span class="type">BlockState</span> <span class="variable">state</span> <span class="operator">=</span> world.getBlockState(pos);</span><br><span class="line">    <span class="type">Block</span> <span class="variable">block</span> <span class="operator">=</span> state.getBlock();</span><br><span class="line">    <span class="keyword">if</span> (block <span class="keyword">instanceof</span> CableBlock) &#123;</span><br><span class="line">        <span class="keyword">return</span> ConnectorType.CABLE;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isConnectable(world, connectorPos, facing)) &#123;</span><br><span class="line">        <span class="keyword">return</span> ConnectorType.BLOCK;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ConnectorType.NONE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Return true if the block at the given position is connectable to a cable. This is the</span></span><br><span class="line"><span class="comment">// case if the block supports forge energy</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isConnectable</span><span class="params">(BlockGetter world, BlockPos connectorPos, Direction facing)</span> &#123;</span><br><span class="line">    <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> connectorPos.relative(facing);</span><br><span class="line">    <span class="type">BlockState</span> <span class="variable">state</span> <span class="operator">=</span> world.getBlockState(pos);</span><br><span class="line">    <span class="keyword">if</span> (state.isAir()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> world.getBlockEntity(pos);</span><br><span class="line">    <span class="keyword">if</span> (te == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> te.getCapability(ForgeCapabilities.ENERGY).isPresent();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>剩余的功能是定义和设置方块的状态，是必须要的。支持含水方块很简单，仅选哟台南佳WATERLOGGED属性，并重写getFluidState（）方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">createBlockStateDefinition</span><span class="params">(<span class="meta">@Nonnull</span> StateDefinition.Builder&lt;Block, BlockState&gt; builder)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.createBlockStateDefinition(builder);</span><br><span class="line">        builder.add(WATERLOGGED, NORTH, SOUTH, EAST, WEST, UP, DOWN);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> BlockState <span class="title function_">getStateForPlacement</span><span class="params">(BlockPlaceContext context)</span> &#123;</span><br><span class="line">        <span class="type">Level</span> <span class="variable">world</span> <span class="operator">=</span> context.getLevel();</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> context.getClickedPos();</span><br><span class="line">        <span class="keyword">return</span> calculateState(world, pos, defaultBlockState())</span><br><span class="line">                .setValue(WATERLOGGED, world.getFluidState(pos).getType() == Fluids.WATER);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="keyword">private</span> BlockState <span class="title function_">calculateState</span><span class="params">(LevelAccessor world, BlockPos pos, BlockState state)</span> &#123;</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">north</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.NORTH);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">south</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.SOUTH);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">west</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.WEST);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">east</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.EAST);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">up</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.UP);</span><br><span class="line">        <span class="type">ConnectorType</span> <span class="variable">down</span> <span class="operator">=</span> getConnectorType(world, pos, Direction.DOWN);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> state</span><br><span class="line">                .setValue(NORTH, north)</span><br><span class="line">                .setValue(SOUTH, south)</span><br><span class="line">                .setValue(WEST, west)</span><br><span class="line">                .setValue(EAST, east)</span><br><span class="line">                .setValue(UP, up)</span><br><span class="line">                .setValue(DOWN, down);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FluidState <span class="title function_">getFluidState</span><span class="params">(BlockState state)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> state.getValue(WATERLOGGED) ? Fluids.WATER.getSource(<span class="literal">false</span>) : <span class="built_in">super</span>.getFluidState(state);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Cable-Block-Entity"><a href="#Cable-Block-Entity" class="headerlink" title="Cable Block Entity"></a>Cable Block Entity</h4><p>Cable Block Entity负责追踪线缆网络。还负责追踪流过线缆的电量，电缆的网络简单的由一组具有能量接收器的坐标表示。当任意一个相邻的方块改变时候都需要重新计算网络。当方块放置或者移除的时候也需要重新计算网络。</p><ul><li>WARN：这里给出的网络的实现是可行的，但是并不完美。这只是一个简单的实现，对我们的目的有效。更先进的mod（例如XNet）具有更先进的有线网络，并将其网络数据缓存在SavedData结构中。</li></ul><p>这个block entity的第一部分和之前的一样，因为线缆也是一个energy handler，所以需要这种capability。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CableBlockEntity</span> <span class="keyword">extends</span> <span class="title class_">BlockEntity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ENERGY_TAG</span> <span class="operator">=</span> <span class="string">&quot;Energy&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAXTRANSFER</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CAPACITY</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">EnergyStorage</span> <span class="variable">energy</span> <span class="operator">=</span> createEnergyStorage();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LazyOptional&lt;IEnergyStorage&gt; energyHandler = LazyOptional.of(() -&gt; <span class="keyword">new</span> <span class="title class_">AdaptedEnergyStorage</span>(energy) &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">extractEnergy</span><span class="params">(<span class="type">int</span> maxExtract, <span class="type">boolean</span> simulate)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">receiveEnergy</span><span class="params">(<span class="type">int</span> maxReceive, <span class="type">boolean</span> simulate)</span> &#123;</span><br><span class="line">            setChanged();</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.receiveEnergy(maxReceive, simulate);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canExtract</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canReceive</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">CableBlockEntity</span><span class="params">(BlockEntityType&lt;?&gt; type, BlockPos pos, BlockState state)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(type, pos, state);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CableBlockEntity</span><span class="params">(BlockPos pos, BlockState state)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(Registration.CABLE_BLOCK_ENTITY.get(), pos, state);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>以下的block负责缓存输出，对于连接到网络的所有能量接收者，他们所接受的能量是一个懒惰计算集。checkOutputs（）函数计算此合集。他将遍历连接到该电缆，然后检查该线缆连接的所有能量接收器。markDirty（）函数将使得当前电缆和所有连接的电缆的输出缓存无效化。当电缆网络发生变化的时候需要这样做。</p><p>traverse（）方法是一个通用的方法，他将会遍历所有连接到此电缆的电缆并调用他们的comsumer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Cached outputs</span></span><br><span class="line"><span class="keyword">private</span> Set&lt;BlockPos&gt; outputs = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This function will cache all outputs for this cable network. It will do this</span></span><br><span class="line"><span class="comment">// by traversing all cables connected to this cable and then check for all energy</span></span><br><span class="line"><span class="comment">// receivers around those cables.</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">checkOutputs</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (outputs == <span class="literal">null</span>) &#123;</span><br><span class="line">        outputs = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        traverse(worldPosition, cable -&gt; &#123;</span><br><span class="line">            <span class="comment">// Check for all energy receivers around this position (ignore cables)</span></span><br><span class="line">            <span class="keyword">for</span> (Direction direction : Direction.values()) &#123;</span><br><span class="line">                <span class="type">BlockPos</span> <span class="variable">p</span> <span class="operator">=</span> cable.getBlockPos().relative(direction);</span><br><span class="line">                <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> level.getBlockEntity(p);</span><br><span class="line">                <span class="keyword">if</span> (te != <span class="literal">null</span> &amp;&amp; !(te <span class="keyword">instanceof</span> CableBlockEntity)) &#123;</span><br><span class="line">                    te.getCapability(ForgeCapabilities.ENERGY).ifPresent(handler -&gt; &#123;</span><br><span class="line">                        <span class="keyword">if</span> (handler.canReceive()) &#123;</span><br><span class="line">                            outputs.add(p);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">markDirty</span><span class="params">()</span> &#123;</span><br><span class="line">    traverse(worldPosition, cable -&gt; cable.outputs = <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is a generic function that will traverse all cables connected to this cable</span></span><br><span class="line"><span class="comment">// and call the given consumer for each cable.</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">traverse</span><span class="params">(BlockPos pos, Consumer&lt;CableBlockEntity&gt; consumer)</span> &#123;</span><br><span class="line">    Set&lt;BlockPos&gt; traversed = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    traversed.add(pos);</span><br><span class="line">    consumer.accept(<span class="built_in">this</span>);</span><br><span class="line">    traverse(pos, traversed, consumer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">traverse</span><span class="params">(BlockPos pos, Set&lt;BlockPos&gt; traversed, Consumer&lt;CableBlockEntity&gt; consumer)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (Direction direction : Direction.values()) &#123;</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">p</span> <span class="operator">=</span> pos.relative(direction);</span><br><span class="line">        <span class="keyword">if</span> (!traversed.contains(p)) &#123;</span><br><span class="line">            traversed.add(p);</span><br><span class="line">            <span class="keyword">if</span> (level.getBlockEntity(p) <span class="keyword">instanceof</span> CableBlockEntity cable) &#123;</span><br><span class="line">                consumer.accept(cable);</span><br><span class="line">                cable.traverse(p, traversed, consumer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>tickServer()方法在服务器上的每个tick都会回调。他将会将能量分发给所有的outputs。首先他会检查电缆中是否存在能量，如果没有能量，那么我们什么也不需要做。如果由能量，之后我们需要检查是否存在输出，如果没有任何输出，我们什么也不需要做。如果存在输出，那么我们分发能量到每一个outputs上。我们通过将能量除于所有的outpus来实现，然后对于每一个output我们检查它是否可以接受能量，如果可以接受我们就将能量发送给这个output。我们通过获得output的energy capability调用receiveEnergy（）方法，这个方法将会返回机器所接受的能量，我们之后减去线缆中对应的能量。</p><ul><li>WARN：同样，这不是一个完美的算法，按照这样的实现方式，一些接收器接受到能量可能会比其他的少。这是因为我们将能量除以了所有的outputs，然后一个一个的将能量发送给他们，如果第一个output不能接受能量，我们需要将能量发送给第二个output。如果第二个output可以接受能量，之后它将获得所有能量。如果第二个output不能接受能量，我们需要将能量发送给第三个output，以此类推。这意味第一个output获得的能量比第二个少。这对于我们的目的并不是一个问题，但是我们仍需要了解。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tickServer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (energy.getEnergyStored() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// Only do something if we have energy</span></span><br><span class="line">            checkOutputs();</span><br><span class="line">            <span class="keyword">if</span> (!outputs.isEmpty()) &#123;</span><br><span class="line">                <span class="comment">// Distribute energy over all outputs</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">amount</span> <span class="operator">=</span> energy.getEnergyStored() / outputs.size();</span><br><span class="line">                <span class="keyword">for</span> (BlockPos p : outputs) &#123;</span><br><span class="line">                    <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> level.getBlockEntity(p);</span><br><span class="line">                    <span class="keyword">if</span> (te != <span class="literal">null</span>) &#123;</span><br><span class="line">                        te.getCapability(ForgeCapabilities.ENERGY).ifPresent(handler -&gt; &#123;</span><br><span class="line">                            <span class="keyword">if</span> (handler.canReceive()) &#123;</span><br><span class="line">                                <span class="type">int</span> <span class="variable">received</span> <span class="operator">=</span> handler.receiveEnergy(amount, <span class="literal">false</span>);</span><br><span class="line">                                energy.extractEnergy(received, <span class="literal">false</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">saveAdditional</span><span class="params">(CompoundTag tag)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.saveAdditional(tag);</span><br><span class="line">        tag.put(ENERGY_TAG, energy.serializeNBT());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">load</span><span class="params">(CompoundTag tag)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.load(tag);</span><br><span class="line">        <span class="keyword">if</span> (tag.contains(ENERGY_TAG)) &#123;</span><br><span class="line">            energy.deserializeNBT(tag.get(ENERGY_TAG));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="keyword">private</span> EnergyStorage <span class="title function_">createEnergyStorage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">EnergyStorage</span>(CAPACITY, MAXTRANSFER, MAXTRANSFER);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; LazyOptional&lt;T&gt; <span class="title function_">getCapability</span><span class="params">(<span class="meta">@NotNull</span> Capability&lt;T&gt; cap, <span class="meta">@Nullable</span> Direction side)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (cap == ForgeCapabilities.ENERGY) &#123;</span><br><span class="line">            <span class="keyword">return</span> energyHandler.cast();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.getCapability(cap, side);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="The-Facade"><a href="#The-Facade" class="headerlink" title="The Facade"></a>The Facade</h3><p>The Facade 是一个 block，它可以用于模仿另一个方块，facade 实际上是一个特殊的电缆。这意味着FacadeBlock应该继承CableBlock，同样FacadeBlockEntity继承CableBlockEntity，让我们复习下代码：</p><h4 id="The-Facade-Block"><a href="#The-Facade-Block" class="headerlink" title="The Facade Block"></a>The Facade Block</h4><p>Facade Block和电缆方块类似，除此之外还有一些逻辑，当facade方块被破坏，应该回复到原本的线缆，此外我们还需要覆盖getShape方法，以便返回模拟块的形状。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FacadeBlock</span> <span class="keyword">extends</span> <span class="title class_">CableBlock</span> <span class="keyword">implements</span> <span class="title class_">EntityBlock</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FacadeBlock</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> BlockEntity <span class="title function_">newBlockEntity</span><span class="params">(<span class="meta">@NotNull</span> BlockPos pos, <span class="meta">@NotNull</span> BlockState state)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FacadeBlockEntity</span>(pos, state);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> VoxelShape <span class="title function_">getShape</span><span class="params">(<span class="meta">@NotNull</span> BlockState state, <span class="meta">@NotNull</span> BlockGetter world, <span class="meta">@NotNull</span> BlockPos pos, <span class="meta">@NotNull</span> CollisionContext context)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (world.getBlockEntity(pos) <span class="keyword">instanceof</span> FacadeBlockEntity facade) &#123;</span><br><span class="line">            <span class="type">BlockState</span> <span class="variable">mimicBlock</span> <span class="operator">=</span> facade.getMimicBlock();</span><br><span class="line">            <span class="keyword">if</span> (mimicBlock != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> mimicBlock.getShape(world, pos, context);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getShape(state, world, pos, context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This function is called when the facade block is succesfully harvested by the player</span></span><br><span class="line">    <span class="comment">// When the player destroys the facade we need to drop the facade block item with the correct mimiced block</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playerDestroy</span><span class="params">(<span class="meta">@Nonnull</span> Level level, <span class="meta">@Nonnull</span> Player player, <span class="meta">@Nonnull</span> BlockPos pos, <span class="meta">@Nonnull</span> BlockState state, <span class="meta">@Nullable</span> BlockEntity te, <span class="meta">@Nonnull</span> ItemStack stack)</span> &#123;</span><br><span class="line">        <span class="type">ItemStack</span> <span class="variable">item</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemStack</span>(Registration.FACADE_BLOCK.get());</span><br><span class="line">        BlockState mimicBlock;</span><br><span class="line">        <span class="keyword">if</span> (te <span class="keyword">instanceof</span> FacadeBlockEntity) &#123;</span><br><span class="line">            mimicBlock = ((FacadeBlockEntity) te).getMimicBlock();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mimicBlock = Blocks.COBBLESTONE.defaultBlockState();</span><br><span class="line">        &#125;</span><br><span class="line">        FacadeBlockItem.setMimicBlock(item, mimicBlock);</span><br><span class="line">        popResource(level, pos, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// When the player destroys the facade we need to restore the cable block</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onDestroyedByPlayer</span><span class="params">(BlockState state, Level world, BlockPos pos, Player player, <span class="type">boolean</span> willHarvest, FluidState fluid)</span> &#123;</span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">defaultState</span> <span class="operator">=</span> Registration.CABLE_BLOCK.get().defaultBlockState();</span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">newState</span> <span class="operator">=</span> CableBlock.calculateState(world, pos, defaultState);</span><br><span class="line">        <span class="keyword">return</span> ((LevelAccessor) world).setBlock(pos, newState, ((LevelAccessor) world).isClientSide()</span><br><span class="line">                ? Block.UPDATE_ALL + Block.UPDATE_IMMEDIATE</span><br><span class="line">                : Block.UPDATE_ALL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="The-Facade-Block-Entity"><a href="#The-Facade-Block-Entity" class="headerlink" title="The Facade Block Entity"></a>The Facade Block Entity</h4><p>Facade Block Entity类似线缆的block entity，不过Facade Block Entity 还需要追踪模仿的方块，它应该拓展于CableBlockEntity，所以它也需要被识别为传输电力的有效方块。</p><p>需要值得注意的是烘焙模型不能访问level，因为没法访问方块实体。这意味着我们不能通过方块实体获得模拟的方块，相反，我们需要通过模型数据系统传达信息。</p><p>查看代码中的注释，了解每个方法详细是做什么的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FacadeBlockEntity</span> <span class="keyword">extends</span> <span class="title class_">CableBlockEntity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MIMIC_TAG</span> <span class="operator">=</span> <span class="string">&quot;mimic&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span> <span class="keyword">private</span> <span class="type">BlockState</span> <span class="variable">mimicBlock</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FacadeBlockEntity</span><span class="params">(BlockPos pos, BlockState state)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(Registration.FACADE_BLOCK_ENTITY.get(), pos, state);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The default onDataPacket() will call load() to load the data from the packet.</span></span><br><span class="line">    <span class="comment">// In addition to that we send a block update to the client</span></span><br><span class="line">    <span class="comment">// and also request a model data update (for the cable baked model)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDataPacket</span><span class="params">(Connection net, ClientboundBlockEntityDataPacket packet)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDataPacket(net, packet);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (level.isClientSide) &#123;</span><br><span class="line">            level.sendBlockUpdated(worldPosition, getBlockState(), getBlockState(), Block.UPDATE_ALL);</span><br><span class="line">            requestModelDataUpdate();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getUpdatePacket() is called on the server when a block is placed or updated.</span></span><br><span class="line">    <span class="comment">// It should return a packet containing all information needed to render this block on the client.</span></span><br><span class="line">    <span class="comment">// In our case this is the block mimic information. On the client side onDataPacket() is called</span></span><br><span class="line">    <span class="comment">// with this packet.</span></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ClientboundBlockEntityDataPacket <span class="title function_">getUpdatePacket</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">nbtTag</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CompoundTag</span>();</span><br><span class="line">        saveMimic(nbtTag);</span><br><span class="line">        <span class="keyword">return</span> ClientboundBlockEntityDataPacket.create(<span class="built_in">this</span>, (BlockEntity entity) -&gt; &#123;<span class="keyword">return</span> nbtTag;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getUpdateTag() is called on the server on initial load of the chunk. It will cause</span></span><br><span class="line">    <span class="comment">// the packet to be sent to the client and handleUpdateTag() will be called on the client.</span></span><br><span class="line">    <span class="comment">// The default implementation of handleUpdateTag() will call load() to load the data from the packet.</span></span><br><span class="line">    <span class="comment">// In our case this is sufficient</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CompoundTag <span class="title function_">getUpdateTag</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">updateTag</span> <span class="operator">=</span> <span class="built_in">super</span>.getUpdateTag();</span><br><span class="line">        saveMimic(updateTag);</span><br><span class="line">        <span class="keyword">return</span> updateTag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@Nullable</span> BlockState <span class="title function_">getMimicBlock</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mimicBlock;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This is used to build the model data for the cable baked model.</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ModelData <span class="title function_">getModelData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ModelData.builder()</span><br><span class="line">                .with(CableBlock.FACADEID, mimicBlock)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMimicBlock</span><span class="params">(BlockState mimicBlock)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mimicBlock = mimicBlock;</span><br><span class="line">        setChanged();</span><br><span class="line">        getLevel().sendBlockUpdated(getBlockPos(), getBlockState(), getBlockState(), Block.UPDATE_CLIENTS + Block.UPDATE_NEIGHBORS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">load</span><span class="params">(CompoundTag tagCompound)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.load(tagCompound);</span><br><span class="line">        loadMimic(tagCompound);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadMimic</span><span class="params">(CompoundTag tagCompound)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (tagCompound.contains(MIMIC_TAG)) &#123;</span><br><span class="line">            mimicBlock = NbtUtils.readBlockState(BuiltInRegistries.BLOCK.asLookup(), tagCompound.getCompound(MIMIC_TAG));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mimicBlock = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAdditional</span><span class="params">(<span class="meta">@Nonnull</span> CompoundTag tagCompound)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.saveAdditional(tagCompound);</span><br><span class="line">        saveMimic(tagCompound);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">saveMimic</span><span class="params">(<span class="meta">@NotNull</span> CompoundTag tagCompound)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mimicBlock != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">CompoundTag</span> <span class="variable">tag</span> <span class="operator">=</span> NbtUtils.writeBlockState(mimicBlock);</span><br><span class="line">            tagCompound.put(MIMIC_TAG, tag);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="The-Facade-Block-Item"><a href="#The-Facade-Block-Item" class="headerlink" title="The Facade Block Item"></a>The Facade Block Item</h4><p>由于当facade Block放置的时候我们需要一些特殊的处理，我们需要为他创建一个自定义的block item，FacadeBlockItme，负责放置Facade时候设置模拟方块。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FacadeBlockItem</span> <span class="keyword">extends</span> <span class="title class_">BlockItem</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FACADE_IS_MIMICING</span> <span class="operator">=</span> <span class="string">&quot;tutorial.facade.is_mimicing&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getMimickingString</span><span class="params">(ItemStack stack)</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">tag</span> <span class="operator">=</span> stack.getTag();</span><br><span class="line">        <span class="keyword">if</span> (tag != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">CompoundTag</span> <span class="variable">mimic</span> <span class="operator">=</span> tag.getCompound(<span class="string">&quot;mimic&quot;</span>);</span><br><span class="line">            <span class="type">Block</span> <span class="variable">value</span> <span class="operator">=</span> ForgeRegistries.BLOCKS.getValue(<span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(mimic.getString(<span class="string">&quot;Name&quot;</span>)));</span><br><span class="line">            <span class="keyword">if</span> (value != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">ItemStack</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemStack</span>(value, <span class="number">1</span>);</span><br><span class="line">                s.getItem();</span><br><span class="line">                <span class="keyword">return</span> s.getHoverName().getString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;unset&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FacadeBlockItem</span><span class="params">(FacadeBlock block, Item.Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(block, properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">userSetMimicBlock</span><span class="params">(<span class="meta">@Nonnull</span> ItemStack item, BlockState mimicBlock, UseOnContext context)</span> &#123;</span><br><span class="line">        <span class="type">Level</span> <span class="variable">world</span> <span class="operator">=</span> context.getLevel();</span><br><span class="line">        <span class="type">Player</span> <span class="variable">player</span> <span class="operator">=</span> context.getPlayer();</span><br><span class="line">        setMimicBlock(item, mimicBlock);</span><br><span class="line">        <span class="keyword">if</span> (world.isClientSide) &#123;</span><br><span class="line">            player.displayClientMessage(Component.translatable(FACADE_IS_MIMICING, mimicBlock.getBlock().getDescriptionId()), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setMimicBlock</span><span class="params">(<span class="meta">@Nonnull</span> ItemStack item, BlockState mimicBlock)</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">tagCompound</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CompoundTag</span>();</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">nbt</span> <span class="operator">=</span> NbtUtils.writeBlockState(mimicBlock);</span><br><span class="line">        tagCompound.put(<span class="string">&quot;mimic&quot;</span>, nbt);</span><br><span class="line">        item.setTag(tagCompound);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlockState <span class="title function_">getMimicBlock</span><span class="params">(Level level, <span class="meta">@Nonnull</span> ItemStack stack)</span> &#123;</span><br><span class="line">        <span class="type">CompoundTag</span> <span class="variable">tagCompound</span> <span class="operator">=</span> stack.getTag();</span><br><span class="line">        <span class="keyword">if</span> (tagCompound == <span class="literal">null</span> || !tagCompound.contains(<span class="string">&quot;mimic&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Blocks.COBBLESTONE.defaultBlockState();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> NbtUtils.readBlockState(BuiltInRegistries.BLOCK.asLookup(), tagCompound.getCompound(<span class="string">&quot;mimic&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">canPlace</span><span class="params">(<span class="meta">@Nonnull</span> BlockPlaceContext context, <span class="meta">@Nonnull</span> BlockState state)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This function is called when our block item is right clicked on something. When this happens</span></span><br><span class="line">    <span class="comment">// we want to either set the minic block or place the facade block</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> InteractionResult <span class="title function_">useOn</span><span class="params">(UseOnContext context)</span> &#123;</span><br><span class="line">        <span class="type">Level</span> <span class="variable">world</span> <span class="operator">=</span> context.getLevel();</span><br><span class="line">        <span class="type">BlockPos</span> <span class="variable">pos</span> <span class="operator">=</span> context.getClickedPos();</span><br><span class="line">        <span class="type">Player</span> <span class="variable">player</span> <span class="operator">=</span> context.getPlayer();</span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">state</span> <span class="operator">=</span> world.getBlockState(pos);</span><br><span class="line">        <span class="type">Block</span> <span class="variable">block</span> <span class="operator">=</span> state.getBlock();</span><br><span class="line"></span><br><span class="line">        <span class="type">ItemStack</span> <span class="variable">itemstack</span> <span class="operator">=</span> context.getItemInHand();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!itemstack.isEmpty()) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (block == Registration.CABLE_BLOCK.get()) &#123;</span><br><span class="line">                <span class="comment">// We are hitting a cable block. We want to replace it with a facade block</span></span><br><span class="line">                <span class="type">FacadeBlock</span> <span class="variable">facadeBlock</span> <span class="operator">=</span> (FacadeBlock) <span class="built_in">this</span>.getBlock();</span><br><span class="line">                <span class="type">BlockPlaceContext</span> <span class="variable">blockContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReplaceBlockItemUseContext</span>(context);</span><br><span class="line">                <span class="type">BlockState</span> <span class="variable">placementState</span> <span class="operator">=</span> facadeBlock.getStateForPlacement(blockContext)</span><br><span class="line">                        .setValue(NORTH, state.getValue(NORTH))</span><br><span class="line">                        .setValue(SOUTH, state.getValue(SOUTH))</span><br><span class="line">                        .setValue(WEST, state.getValue(WEST))</span><br><span class="line">                        .setValue(EAST, state.getValue(EAST))</span><br><span class="line">                        .setValue(UP, state.getValue(UP))</span><br><span class="line">                        .setValue(DOWN, state.getValue(DOWN))</span><br><span class="line">                        ;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (placeBlock(blockContext, placementState)) &#123;</span><br><span class="line">                    <span class="type">SoundType</span> <span class="variable">soundtype</span> <span class="operator">=</span> world.getBlockState(pos).getBlock().getSoundType(world.getBlockState(pos), world, pos, player);</span><br><span class="line">                    world.playSound(player, pos, soundtype.getPlaceSound(), SoundSource.BLOCKS, (soundtype.getVolume() + <span class="number">1.0F</span>) / <span class="number">2.0F</span>, soundtype.getPitch() * <span class="number">0.8F</span>);</span><br><span class="line">                    <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> world.getBlockEntity(pos);</span><br><span class="line">                    <span class="keyword">if</span> (te <span class="keyword">instanceof</span> FacadeBlockEntity) &#123;</span><br><span class="line">                        ((FacadeBlockEntity) te).setMimicBlock(getMimicBlock(world, itemstack));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">amount</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">                    itemstack.grow(amount);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (block == Registration.FACADE_BLOCK.get()) &#123;</span><br><span class="line">                <span class="comment">// We are hitting a facade block. We want to copy the block it is mimicing</span></span><br><span class="line">                <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> world.getBlockEntity(pos);</span><br><span class="line">                <span class="keyword">if</span> (!(te <span class="keyword">instanceof</span> FacadeBlockEntity facade)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> InteractionResult.FAIL;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (facade.getMimicBlock() == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> InteractionResult.FAIL;</span><br><span class="line">                &#125;</span><br><span class="line">                userSetMimicBlock(itemstack, facade.getMimicBlock(), context);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// We are hitting something else. We want to set that block as what we are going to mimic</span></span><br><span class="line">                userSetMimicBlock(itemstack, state, context);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> InteractionResult.SUCCESS;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> InteractionResult.FAIL;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">appendHoverText</span><span class="params">(<span class="meta">@Nonnull</span> ItemStack stack, <span class="meta">@Nullable</span> Level level, <span class="meta">@Nonnull</span> List&lt;Component&gt; tooltip, <span class="meta">@Nonnull</span> TooltipFlag flag)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.appendHoverText(stack, level, tooltip, flag);</span><br><span class="line">        <span class="keyword">if</span> (stack.hasTag()) &#123;</span><br><span class="line">            tooltip.add(Component.translatable(FACADE_IS_MIMICING, getMimickingString(stack)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要一个类帮助我们进行右键的处理，ReplaceBlockItemUseContext，BlockPlaceContext会将replaceClicked设置为True，这将保证我们的facade放置的时候会替换cable。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReplaceBlockItemUseContext</span> <span class="keyword">extends</span> <span class="title class_">BlockPlaceContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ReplaceBlockItemUseContext</span><span class="params">(UseOnContext context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        replaceClicked = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册Registration"><a href="#注册Registration" class="headerlink" title="注册Registration"></a>注册Registration</h3><p>在这里注册我们的cable  和 facade方块</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Registration</span> &#123;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;CableBlock&gt; CABLE_BLOCK = BLOCKS.register(<span class="string">&quot;cable&quot;</span>, CableBlock::<span class="keyword">new</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;Item&gt; CABLE_BLOCK_ITEM = ITEMS.register(<span class="string">&quot;cable&quot;</span>, () -&gt; <span class="keyword">new</span> <span class="title class_">BlockItem</span>(CABLE_BLOCK.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties()));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;BlockEntityType&lt;CableBlockEntity&gt;&gt; CABLE_BLOCK_ENTITY = BLOCK_ENTITIES.register(<span class="string">&quot;cable&quot;</span>,</span><br><span class="line">            () -&gt; BlockEntityType.Builder.of(CableBlockEntity::<span class="keyword">new</span>, CABLE_BLOCK.get()).build(<span class="literal">null</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;FacadeBlock&gt; FACADE_BLOCK = BLOCKS.register(<span class="string">&quot;facade&quot;</span>, FacadeBlock::<span class="keyword">new</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;Item&gt; FACADE_BLOCK_ITEM = ITEMS.register(<span class="string">&quot;facade&quot;</span>, () -&gt; <span class="keyword">new</span> <span class="title class_">FacadeBlockItem</span>(FACADE_BLOCK.get(), <span class="keyword">new</span> <span class="title class_">Item</span>.Properties()));</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RegistryObject&lt;BlockEntityType&lt;FacadeBlockEntity&gt;&gt; FACADE_BLOCK_ENTITY = BLOCK_ENTITIES.register(<span class="string">&quot;facade&quot;</span>,</span><br><span class="line">            () -&gt; BlockEntityType.Builder.of(FacadeBlockEntity::<span class="keyword">new</span>, FACADE_BLOCK.get()).build(<span class="literal">null</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> RegistryObject&lt;CreativeModeTab&gt; TAB = TABS.register(<span class="string">&quot;tutpower&quot;</span>, () -&gt; CreativeModeTab.builder()</span><br><span class="line">            .title(Component.translatable(<span class="string">&quot;tab.tutpower&quot;</span>))</span><br><span class="line">            .icon(() -&gt; <span class="keyword">new</span> <span class="title class_">ItemStack</span>(GENERATOR_BLOCK.get()))</span><br><span class="line">            .withTabsBefore(CreativeModeTabs.SPAWN_EGGS)</span><br><span class="line">            .displayItems((featureFlags, output) -&gt; &#123;</span><br><span class="line">                output.accept(GENERATOR_BLOCK.get());</span><br><span class="line">                output.accept(CHARGER_BLOCK.get());</span><br><span class="line">                output.accept(CABLE_BLOCK.get());</span><br><span class="line">                output.accept(FACADE_BLOCK.get());</span><br><span class="line">            &#125;)</span><br><span class="line">            .build());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="烘焙模型Baked-Model"><a href="#烘焙模型Baked-Model" class="headerlink" title="烘焙模型Baked Model"></a>烘焙模型Baked Model</h3><p>烘焙模型负责生成电缆的实际的模型，通过查看六个方向和六个方向上的类型然后生成适当的立体方块实现此目的，电缆方块和facade方块都使用相同的烘焙模型</p><h4 id="烘焙模型加载器The-Baked-Model-Loader"><a href="#烘焙模型加载器The-Baked-Model-Loader" class="headerlink" title="烘焙模型加载器The Baked Model Loader"></a>烘焙模型加载器The Baked Model Loader</h4><p>要实现烘焙模型，你首先需要实现模型加载器。该加载器负责从json中加载模型，在我们的例子中，我们有一个json文件，用于电缆方块和facade方块，因此我们需要区分两者，我们在接送文件中添加facade属性。对于facade方块，该属性为true，对于电缆方块，该属性为fasle，加载器读取此属性，然后创建适当的CableBakeModel</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CableModelLoader</span> <span class="keyword">implements</span> <span class="title class_">IGeometryLoader</span>&lt;CableModelLoader.CableModelGeometry&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">ResourceLocation</span> <span class="variable">GENERATOR_LOADER</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(TutorialPower.MODID, <span class="string">&quot;cableloader&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(ModelEvent.RegisterGeometryLoaders event)</span> &#123;</span><br><span class="line">        event.register(<span class="string">&quot;cableloader&quot;</span>, <span class="keyword">new</span> <span class="title class_">CableModelLoader</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CableModelGeometry <span class="title function_">read</span><span class="params">(JsonObject jsonObject, JsonDeserializationContext deserializationContext)</span> <span class="keyword">throws</span> JsonParseException &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">facade</span> <span class="operator">=</span> jsonObject.has(<span class="string">&quot;facade&quot;</span>) &amp;&amp; jsonObject.get(<span class="string">&quot;facade&quot;</span>).getAsBoolean();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CableModelGeometry</span>(facade);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CableModelGeometry</span> <span class="keyword">implements</span> <span class="title class_">IUnbakedGeometry</span>&lt;CableModelGeometry&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> facade;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">CableModelGeometry</span><span class="params">(<span class="type">boolean</span> facade)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.facade = facade;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> BakedModel <span class="title function_">bake</span><span class="params">(IGeometryBakingContext context, ModelBaker baker, Function&lt;Material, TextureAtlasSprite&gt; spriteGetter, ModelState modelState, ItemOverrides overrides, ResourceLocation modelLocation)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CableBakedModel</span>(context, facade);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>register()</code>方法需要在<code>ModelEvent.RegisterGeometryLoaders</code>事件中调用，我们在<code>ClientSetup</code>中做到这一点，我们还需要注册方块颜色处理器，之后会介绍，这个颜色处理器确保我们在模仿类似草方块时候可以正确的从生物群系中获得颜色。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mod</span>.EventBusSubscriber(modid = MODID, bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClientSetup</span> &#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SubscribeEvent</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">modelInit</span><span class="params">(ModelEvent.RegisterGeometryLoaders event)</span> &#123;</span><br><span class="line">        CableModelLoader.register(event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SubscribeEvent</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">registerBlockColor</span><span class="params">(RegisterColorHandlersEvent.Block event)</span> &#123;</span><br><span class="line">        event.register(<span class="keyword">new</span> <span class="title class_">FacadeBlockColor</span>(), Registration.FACADE_BLOCK.get());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方块颜色处理器The-block-color-handler"><a href="#方块颜色处理器The-block-color-handler" class="headerlink" title="方块颜色处理器The block color handler"></a>方块颜色处理器The block color handler</h4><p>当我们模仿另一个方块的时候需要确保方块的颜色是正确的，例如，我们模仿草方块，需要确保草方块颜色和当前的生物群系颜色是一致的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FacadeBlockColor</span> <span class="keyword">implements</span> <span class="title class_">BlockColor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getColor</span><span class="params">(<span class="meta">@Nonnull</span> BlockState blockState, <span class="meta">@Nullable</span> BlockAndTintGetter world, <span class="meta">@Nullable</span> BlockPos pos, <span class="type">int</span> tint)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (world != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">BlockEntity</span> <span class="variable">te</span> <span class="operator">=</span> world.getBlockEntity(pos);</span><br><span class="line">            <span class="keyword">if</span> (te <span class="keyword">instanceof</span> FacadeBlockEntity facade) &#123;</span><br><span class="line">                <span class="type">BlockState</span> <span class="variable">mimic</span> <span class="operator">=</span> facade.getMimicBlock();</span><br><span class="line">                <span class="keyword">if</span> (mimic != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Minecraft.getInstance().getBlockColors().getColor(mimic, world, pos, tint);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="烘焙模型The-Baked-Model"><a href="#烘焙模型The-Baked-Model" class="headerlink" title="烘焙模型The Baked Model"></a>烘焙模型The Baked Model</h4><p>烘焙模型负责生成电缆的实际模型。它通过六个方向和六个方向行上的线缆类型来生成对应的四边形，电缆方块和facade方块使用相同的烘焙模型。</p><p>代码使用CablePatterns辅助类生成四边形，该类知道如何将特定的连接器转为正确的四边形。</p><p>这个类最总要的就是线程就是getQuads（）线程，该线程被渲染器调用获得线缆的四边形。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CableBakedModel</span> <span class="keyword">implements</span> <span class="title class_">IDynamicBakedModel</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IGeometryBakingContext context;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> facade;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteConnector;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteNoneCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteNormalCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteEndCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteCornerCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteThreeCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteCrossCable;</span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite spriteSide;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// For all possible patterns we define the sprite to use and the rotation. Note that each</span></span><br><span class="line">        <span class="comment">// pattern looks at the existance of a cable section for each of the four directions</span></span><br><span class="line">        <span class="comment">// excluding the one we are looking at.</span></span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_NONE, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_END, <span class="number">3</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_END, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_END, <span class="number">1</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_END, <span class="number">2</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_CORNER, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_CORNER, <span class="number">1</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_CORNER, <span class="number">2</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_CORNER, <span class="number">3</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_STRAIGHT, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_STRAIGHT, <span class="number">1</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>), QuadSetting.of(SPRITE_THREE, <span class="number">0</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_THREE, <span class="number">1</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_THREE, <span class="number">2</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_THREE, <span class="number">3</span>));</span><br><span class="line">        CablePatterns.PATTERNS.put(Pattern.of(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>), QuadSetting.of(SPRITE_CROSS, <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CableBakedModel</span><span class="params">(IGeometryBakingContext context, <span class="type">boolean</span> facade)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.facade = facade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initTextures</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (spriteConnector == <span class="literal">null</span>) &#123;</span><br><span class="line">            spriteConnector = getTexture(<span class="string">&quot;block/cable/connector&quot;</span>);</span><br><span class="line">            spriteNormalCable = getTexture(<span class="string">&quot;block/cable/normal&quot;</span>);</span><br><span class="line">            spriteNoneCable = getTexture(<span class="string">&quot;block/cable/none&quot;</span>);</span><br><span class="line">            spriteEndCable = getTexture(<span class="string">&quot;block/cable/end&quot;</span>);</span><br><span class="line">            spriteCornerCable = getTexture(<span class="string">&quot;block/cable/corner&quot;</span>);</span><br><span class="line">            spriteThreeCable = getTexture(<span class="string">&quot;block/cable/three&quot;</span>);</span><br><span class="line">            spriteCrossCable = getTexture(<span class="string">&quot;block/cable/cross&quot;</span>);</span><br><span class="line">            spriteSide = getTexture(<span class="string">&quot;block/cable/side&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// All textures are baked on a big texture atlas. This function gets the texture from that atlas</span></span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite <span class="title function_">getTexture</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Minecraft.getInstance().getTextureAtlas(InventoryMenu.BLOCK_ATLAS).apply(<span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(TutorialPower.MODID, path));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextureAtlasSprite <span class="title function_">getSpriteNormal</span><span class="params">(CablePatterns.SpriteIdx idx)</span> &#123;</span><br><span class="line">        initTextures();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">switch</span> (idx) &#123;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_NONE -&gt; spriteNoneCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_END -&gt; spriteEndCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_STRAIGHT -&gt; spriteNormalCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_CORNER -&gt; spriteCornerCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_THREE -&gt; spriteThreeCable;</span><br><span class="line">            <span class="keyword">case</span> SPRITE_CROSS -&gt; spriteCrossCable;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">usesBlockLight</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;BakedQuad&gt; <span class="title function_">getQuads</span><span class="params">(<span class="meta">@Nullable</span> BlockState state, <span class="meta">@Nullable</span> Direction side, <span class="meta">@NotNull</span> RandomSource rand, <span class="meta">@NotNull</span> ModelData extraData, <span class="meta">@Nullable</span> RenderType layer)</span> &#123;</span><br><span class="line">        initTextures();</span><br><span class="line">        List&lt;BakedQuad&gt; quads = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="literal">null</span> &amp;&amp; (layer == <span class="literal">null</span> || layer.equals(RenderType.solid()))) &#123;</span><br><span class="line">            <span class="comment">// Called with the blockstate from our block. Here we get the values of the six properties and pass that to</span></span><br><span class="line">            <span class="comment">// our baked model implementation. If state == null we are called from the inventory and we use the default</span></span><br><span class="line">            <span class="comment">// values for the properties</span></span><br><span class="line">            ConnectorType north, south, west, east, up, down;</span><br><span class="line">            <span class="keyword">if</span> (state != <span class="literal">null</span>) &#123;</span><br><span class="line">                north = state.getValue(CableBlock.NORTH);</span><br><span class="line">                south = state.getValue(CableBlock.SOUTH);</span><br><span class="line">                west = state.getValue(CableBlock.WEST);</span><br><span class="line">                east = state.getValue(CableBlock.EAST);</span><br><span class="line">                up = state.getValue(CableBlock.UP);</span><br><span class="line">                down = state.getValue(CableBlock.DOWN);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// If we are a facade and we are an item then we render as the &#x27;side&#x27; texture as a full block</span></span><br><span class="line">                <span class="keyword">if</span> (facade) &#123;</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>), v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), spriteSide));</span><br><span class="line">                    quads.add(quad(v(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>), v(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>), v(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), spriteSide));</span><br><span class="line">                    <span class="keyword">return</span> quads;</span><br><span class="line">                &#125;</span><br><span class="line">                north = south = west = east = up = down = NONE;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">TextureAtlasSprite</span> <span class="variable">spriteCable</span> <span class="operator">=</span> spriteNormalCable;</span><br><span class="line">            Function&lt;CablePatterns.SpriteIdx, TextureAtlasSprite&gt; spriteGetter = <span class="built_in">this</span>::getSpriteNormal;</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">o</span> <span class="operator">=</span> <span class="number">.4</span>;      <span class="comment">// Thickness of the cable. .0 would be full block, .5 is infinitely thin.</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">p</span> <span class="operator">=</span> <span class="number">.1</span>;      <span class="comment">// Thickness of the connector as it is put on the connecting block</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">q</span> <span class="operator">=</span> <span class="number">.2</span>;      <span class="comment">// The wideness of the connector</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// For each side we either cap it off if there is no similar block adjacent on that side</span></span><br><span class="line">            <span class="comment">// or else we extend so that we touch the adjacent block:</span></span><br><span class="line">            <span class="keyword">if</span> (up == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, <span class="number">1</span>, o), v(<span class="number">1</span> - o, <span class="number">1</span>, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span>, <span class="number">1</span> - o), v(o, <span class="number">1</span>, o), v(o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span>, o), v(<span class="number">1</span> - o, <span class="number">1</span>, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span>, <span class="number">1</span> - o), v(o, <span class="number">1</span>, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (up == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, <span class="number">1</span> - p, o), v(<span class="number">1</span> - o, <span class="number">1</span> - p, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - p, <span class="number">1</span> - o), v(o, <span class="number">1</span> - p, o), v(o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - p, o), v(<span class="number">1</span> - o, <span class="number">1</span> - p, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - p, <span class="number">1</span> - o), v(o, <span class="number">1</span> - p, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - q, <span class="number">1</span> - p, q), v(<span class="number">1</span> - q, <span class="number">1</span>, q), v(<span class="number">1</span> - q, <span class="number">1</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - p, <span class="number">1</span> - q), v(q, <span class="number">1</span>, <span class="number">1</span> - q), v(q, <span class="number">1</span>, q), v(q, <span class="number">1</span> - p, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span>, q), v(<span class="number">1</span> - q, <span class="number">1</span>, q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, q), v(q, <span class="number">1</span> - p, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span>, <span class="number">1</span> - q), v(q, <span class="number">1</span>, <span class="number">1</span> - q), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - p, q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, q), v(<span class="number">1</span> - q, <span class="number">1</span> - p, <span class="number">1</span> - q), v(q, <span class="number">1</span> - p, <span class="number">1</span> - q), spriteConnector));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span>, q), v(q, <span class="number">1</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">1</span>, q), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(west, south, east, north);</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (down == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">0</span>, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">0</span>, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, o, o), v(o, <span class="number">0</span>, o), v(o, <span class="number">0</span>, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, <span class="number">0</span>, o), v(o, <span class="number">0</span>, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">0</span>, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">0</span>, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (down == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, p, <span class="number">1</span> - o), v(<span class="number">1</span> - o, p, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, o, o), v(o, p, o), v(o, p, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, p, o), v(o, p, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, p, <span class="number">1</span> - o), v(<span class="number">1</span> - o, p, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - q, <span class="number">0</span>, q), v(<span class="number">1</span> - q, p, q), v(<span class="number">1</span> - q, p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">0</span>, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">0</span>, <span class="number">1</span> - q), v(q, p, <span class="number">1</span> - q), v(q, p, q), v(q, <span class="number">0</span>, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, p, q), v(<span class="number">1</span> - q, p, q), v(<span class="number">1</span> - q, <span class="number">0</span>, q), v(q, <span class="number">0</span>, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">0</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, <span class="number">0</span>, <span class="number">1</span> - q), v(<span class="number">1</span> - q, p, <span class="number">1</span> - q), v(q, p, <span class="number">1</span> - q), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, p, <span class="number">1</span> - q), v(<span class="number">1</span> - q, p, q), v(q, p, q), spriteConnector));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">0</span>, <span class="number">1</span> - q), v(q, <span class="number">0</span>, q), v(<span class="number">1</span> - q, <span class="number">0</span>, q), v(<span class="number">1</span> - q, <span class="number">0</span>, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(west, north, east, south);</span><br><span class="line">                quads.add(quad(v(o, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (east == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span>, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, o, o), v(<span class="number">1</span>, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, <span class="number">1</span> - o, o), v(<span class="number">1</span>, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, o, <span class="number">1</span> - o), v(<span class="number">1</span>, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (east == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - p, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, o, o), v(<span class="number">1</span> - p, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, <span class="number">1</span> - o, o), v(<span class="number">1</span> - p, o, o), v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, o, <span class="number">1</span> - o), v(<span class="number">1</span> - p, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">1</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">1</span>, <span class="number">1</span> - q, q), v(<span class="number">1</span> - p, <span class="number">1</span> - q, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, q, q), v(<span class="number">1</span>, q, q), v(<span class="number">1</span>, q, <span class="number">1</span> - q), v(<span class="number">1</span> - p, q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, <span class="number">1</span> - q, q), v(<span class="number">1</span>, <span class="number">1</span> - q, q), v(<span class="number">1</span>, q, q), v(<span class="number">1</span> - p, q, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, q, <span class="number">1</span> - q), v(<span class="number">1</span>, q, <span class="number">1</span> - q), v(<span class="number">1</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">1</span> - p, <span class="number">1</span> - q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - p, q, <span class="number">1</span> - q), v(<span class="number">1</span> - p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">1</span> - p, <span class="number">1</span> - q, q), v(<span class="number">1</span> - p, q, q), spriteConnector));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span>, q, <span class="number">1</span> - q), v(<span class="number">1</span>, q, q), v(<span class="number">1</span>, <span class="number">1</span> - q, q), v(<span class="number">1</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(down, north, up, south);</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (west == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, o), v(<span class="number">0</span>, <span class="number">1</span> - o, o), v(<span class="number">0</span>, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(o, o, <span class="number">1</span> - o), v(<span class="number">0</span>, o, <span class="number">1</span> - o), v(<span class="number">0</span>, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(o, o, o), v(<span class="number">0</span>, o, o), v(<span class="number">0</span>, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">0</span>, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">0</span>, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (west == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, o), v(p, <span class="number">1</span> - o, o), v(p, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(o, o, <span class="number">1</span> - o), v(p, o, <span class="number">1</span> - o), v(p, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(o, o, o), v(p, o, o), v(p, <span class="number">1</span> - o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(p, <span class="number">1</span> - o, <span class="number">1</span> - o), v(p, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), v(p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(p, <span class="number">1</span> - q, q), v(<span class="number">0</span>, <span class="number">1</span> - q, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, q, q), v(p, q, q), v(p, q, <span class="number">1</span> - q), v(<span class="number">0</span>, q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, <span class="number">1</span> - q, q), v(p, <span class="number">1</span> - q, q), v(p, q, q), v(<span class="number">0</span>, q, q), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, q, <span class="number">1</span> - q), v(p, q, <span class="number">1</span> - q), v(p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">0</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(p, q, q), v(p, <span class="number">1</span> - q, q), v(p, <span class="number">1</span> - q, <span class="number">1</span> - q), v(p, q, <span class="number">1</span> - q), spriteConnector));</span><br><span class="line">                quads.add(quad(v(<span class="number">0</span>, q, q), v(<span class="number">0</span>, q, <span class="number">1</span> - q), v(<span class="number">0</span>, <span class="number">1</span> - q, <span class="number">1</span> - q), v(<span class="number">0</span>, <span class="number">1</span> - q, q), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(down, south, up, north);</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, o), v(o, o, o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (north == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">0</span>), v(o, <span class="number">1</span> - o, <span class="number">0</span>), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">0</span>), v(<span class="number">1</span> - o, o, <span class="number">0</span>), v(<span class="number">1</span> - o, o, o), v(o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, <span class="number">0</span>), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">0</span>), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, <span class="number">0</span>), v(o, o, <span class="number">0</span>), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (north == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, p), v(o, <span class="number">1</span> - o, p), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, p), v(<span class="number">1</span> - o, o, p), v(<span class="number">1</span> - o, o, o), v(o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, p), v(<span class="number">1</span> - o, <span class="number">1</span> - o, p), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, o, o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, o), v(o, <span class="number">1</span> - o, o), v(o, <span class="number">1</span> - o, p), v(o, o, p), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - q, p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">0</span>), v(q, <span class="number">1</span> - q, <span class="number">0</span>), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, q, <span class="number">0</span>), v(<span class="number">1</span> - q, q, <span class="number">0</span>), v(<span class="number">1</span> - q, q, p), v(q, q, p), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - q, q, <span class="number">0</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">0</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, p), v(<span class="number">1</span> - q, q, p), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, q, p), v(q, <span class="number">1</span> - q, p), v(q, <span class="number">1</span> - q, <span class="number">0</span>), v(q, q, <span class="number">0</span>), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, q, p), v(<span class="number">1</span> - q, q, p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, p), v(q, <span class="number">1</span> - q, p), spriteConnector));</span><br><span class="line">                quads.add(quad(v(q, q, <span class="number">0</span>), v(q, <span class="number">1</span> - q, <span class="number">0</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">0</span>), v(<span class="number">1</span> - q, q, <span class="number">0</span>), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(west, up, east, down);</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, o), v(<span class="number">1</span> - o, o, o), v(o, o, o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (south == CABLE) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span>), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span>), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span>), v(o, o, <span class="number">1</span>), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span>), v(<span class="number">1</span> - o, o, <span class="number">1</span>), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span>), v(o, <span class="number">1</span> - o, <span class="number">1</span>), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (south == BLOCK) &#123;</span><br><span class="line">                quads.add(quad(v(o, <span class="number">1</span> - o, <span class="number">1</span> - p), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - p), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - p), v(o, o, <span class="number">1</span> - p), spriteCable));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - p), v(<span class="number">1</span> - o, o, <span class="number">1</span> - p), spriteCable));</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - p), v(o, <span class="number">1</span> - o, <span class="number">1</span> - p), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, o, <span class="number">1</span> - o), spriteCable));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - q, <span class="number">1</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(q, <span class="number">1</span> - q, <span class="number">1</span> - p), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, q, <span class="number">1</span>), v(q, q, <span class="number">1</span>), spriteSide));</span><br><span class="line">                quads.add(quad(v(<span class="number">1</span> - q, q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span>), v(<span class="number">1</span> - q, q, <span class="number">1</span>), spriteSide));</span><br><span class="line">                quads.add(quad(v(q, q, <span class="number">1</span>), v(q, <span class="number">1</span> - q, <span class="number">1</span>), v(q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(q, q, <span class="number">1</span> - p), spriteSide));</span><br><span class="line"></span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span> - p), v(<span class="number">1</span> - q, q, <span class="number">1</span> - p), v(q, q, <span class="number">1</span> - p), spriteConnector));</span><br><span class="line">                quads.add(quad(v(q, <span class="number">1</span> - q, <span class="number">1</span>), v(q, q, <span class="number">1</span>), v(<span class="number">1</span> - q, q, <span class="number">1</span>), v(<span class="number">1</span> - q, <span class="number">1</span> - q, <span class="number">1</span>), spriteSide));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">QuadSetting</span> <span class="variable">pattern</span> <span class="operator">=</span> CablePatterns.findPattern(west, down, east, up);</span><br><span class="line">                quads.add(quad(v(o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, o, <span class="number">1</span> - o), v(<span class="number">1</span> - o, <span class="number">1</span> - o, <span class="number">1</span> - o), v(o, <span class="number">1</span> - o, <span class="number">1</span> - o), spriteGetter.apply(pattern.sprite()), pattern.rotation()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Render the facade if we have one in addition to the cable above. Note that the facade comes from the model data property</span></span><br><span class="line">        <span class="comment">// (FACADEID)</span></span><br><span class="line">        <span class="type">BlockState</span> <span class="variable">facadeId</span> <span class="operator">=</span> extraData.get(CableBlock.FACADEID);</span><br><span class="line">        <span class="keyword">if</span> (facadeId != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">BakedModel</span> <span class="variable">model</span> <span class="operator">=</span> Minecraft.getInstance().getBlockRenderer().getBlockModelShaper().getBlockModel(facadeId);</span><br><span class="line">            <span class="type">ChunkRenderTypeSet</span> <span class="variable">renderTypes</span> <span class="operator">=</span> model.getRenderTypes(facadeId, rand, extraData);</span><br><span class="line">            <span class="keyword">if</span> (layer == <span class="literal">null</span> || renderTypes.contains(layer)) &#123; <span class="comment">// always render in the null layer or the block-breaking textures don&#x27;t show up</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    quads.addAll(model.getQuads(state, side, rand, ModelData.EMPTY, layer));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception ignored) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> quads;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">useAmbientOcclusion</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isGui3d</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCustomRenderer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Because we can potentially mimic other blocks we need to render on all render types</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="keyword">public</span> ChunkRenderTypeSet <span class="title function_">getRenderTypes</span><span class="params">(<span class="meta">@NotNull</span> BlockState state, <span class="meta">@NotNull</span> RandomSource rand, <span class="meta">@NotNull</span> ModelData data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChunkRenderTypeSet.all();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> TextureAtlasSprite <span class="title function_">getParticleIcon</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> spriteNormalCable == <span class="literal">null</span></span><br><span class="line">                ? Minecraft.getInstance().getTextureAtlas(InventoryMenu.BLOCK_ATLAS).apply((<span class="keyword">new</span> <span class="title class_">ResourceLocation</span>(<span class="string">&quot;minecraft&quot;</span>, <span class="string">&quot;missingno&quot;</span>)))</span><br><span class="line">                : spriteNormalCable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// To let our cable/facade render correctly as an item (both in inventory and on the ground) we</span></span><br><span class="line">    <span class="comment">// get the correct transforms from the context</span></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ItemTransforms <span class="title function_">getTransforms</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> context.getTransforms();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nonnull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ItemOverrides <span class="title function_">getOverrides</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ItemOverrides.EMPTY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="The-CablePatterns-helper"><a href="#The-CablePatterns-helper" class="headerlink" title="The CablePatterns helper"></a>The CablePatterns helper</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CablePatterns</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This map takes a pattern of four directions (excluding the one we are looking at) and returns the sprite index</span></span><br><span class="line">    <span class="comment">// and rotation for the quad that we are looking at.</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Pattern, QuadSetting&gt; PATTERNS = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Given a pattern of four directions (excluding the one we are looking at) we return the sprite index and rotation</span></span><br><span class="line">    <span class="comment">// for the quad that we are looking at.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> QuadSetting <span class="title function_">findPattern</span><span class="params">(ConnectorType s1, ConnectorType s2, ConnectorType s3, ConnectorType s4)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> PATTERNS.get(<span class="keyword">new</span> <span class="title class_">Pattern</span>(s1 != NONE, s2 != NONE, s3 != NONE, s4 != NONE));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This enum represents the type of sprite (texture)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">SpriteIdx</span> &#123;</span><br><span class="line">        SPRITE_NONE,</span><br><span class="line">        SPRITE_END,</span><br><span class="line">        SPRITE_STRAIGHT,</span><br><span class="line">        SPRITE_CORNER,</span><br><span class="line">        SPRITE_THREE,</span><br><span class="line">        SPRITE_CROSS</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This enum represents the type of sprite (texture) as well as the rotation for that sprite</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">record</span> <span class="title class_">QuadSetting</span><span class="params">(SpriteIdx sprite, <span class="type">int</span> rotation)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> QuadSetting <span class="title function_">of</span><span class="params">(SpriteIdx sprite, <span class="type">int</span> rotation)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">QuadSetting</span>(sprite, rotation);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A pattern represents a configuration (cable or no cable) for the four directions excluding the one we are looking at</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">record</span> <span class="title class_">Pattern</span><span class="params">(<span class="type">boolean</span> s1, <span class="type">boolean</span> s2, <span class="type">boolean</span> s3, <span class="type">boolean</span> s4)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> Pattern <span class="title function_">of</span><span class="params">(<span class="type">boolean</span> s1, <span class="type">boolean</span> s2, <span class="type">boolean</span> s3, <span class="type">boolean</span> s4)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Pattern</span>(s1, s2, s3, s4);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="The-BakedModelHelper"><a href="#The-BakedModelHelper" class="headerlink" title="The BakedModelHelper"></a>The BakedModelHelper</h4><p>BakedModelHelper是一个辅助类，有一些创建四边形的辅助方法，我们使用这个类来创建线缆的四边形模型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BakedModelHelper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BakedQuad <span class="title function_">quad</span><span class="params">(Vec3 v1, Vec3 v2, Vec3 v3, Vec3 v4, TextureAtlasSprite sprite, <span class="type">int</span> rotation)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">switch</span> (rotation) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span> -&gt; quad(v1, v2, v3, v4, sprite);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span> -&gt; quad(v2, v3, v4, v1, sprite);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span> -&gt; quad(v3, v4, v1, v2, sprite);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span> -&gt; quad(v4, v1, v2, v3, sprite);</span><br><span class="line">            <span class="keyword">default</span> -&gt; quad(v1, v2, v3, v4, sprite);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BakedQuad <span class="title function_">quad</span><span class="params">(Vec3 v1, Vec3 v2, Vec3 v3, Vec3 v4, TextureAtlasSprite sprite)</span> &#123;</span><br><span class="line">        <span class="type">Vec3</span> <span class="variable">normal</span> <span class="operator">=</span> v3.subtract(v2).cross(v1.subtract(v2)).normalize();</span><br><span class="line"></span><br><span class="line">        BakedQuad[] quad = <span class="keyword">new</span> <span class="title class_">BakedQuad</span>[<span class="number">1</span>];</span><br><span class="line">        <span class="type">QuadBakingVertexConsumer</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QuadBakingVertexConsumer</span>(q -&gt; quad[<span class="number">0</span>] = q);</span><br><span class="line">        builder.setSprite(sprite);</span><br><span class="line">        builder.setDirection(Direction.getNearest(normal.x, normal.y, normal.z));</span><br><span class="line">        putVertex(builder, normal, v1.x, v1.y, v1.z, <span class="number">0</span>, <span class="number">0</span>, sprite);</span><br><span class="line">        putVertex(builder, normal, v2.x, v2.y, v2.z, <span class="number">0</span>, <span class="number">16</span>, sprite);</span><br><span class="line">        putVertex(builder, normal, v3.x, v3.y, v3.z, <span class="number">16</span>, <span class="number">16</span>, sprite);</span><br><span class="line">        putVertex(builder, normal, v4.x, v4.y, v4.z, <span class="number">16</span>, <span class="number">0</span>, sprite);</span><br><span class="line">        <span class="keyword">return</span> quad[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">putVertex</span><span class="params">(VertexConsumer builder, Position normal,</span></span><br><span class="line"><span class="params">                                 <span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> z, <span class="type">float</span> u, <span class="type">float</span> v,</span></span><br><span class="line"><span class="params">                                 TextureAtlasSprite sprite)</span> &#123;</span><br><span class="line">        <span class="type">float</span> <span class="variable">iu</span> <span class="operator">=</span> sprite.getU(u);</span><br><span class="line">        <span class="type">float</span> <span class="variable">iv</span> <span class="operator">=</span> sprite.getV(v);</span><br><span class="line">        builder.vertex(x, y, z)</span><br><span class="line">                .uv(iu, iv)</span><br><span class="line">                .uv2(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">                .color(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>)</span><br><span class="line">                .normal((<span class="type">float</span>) normal.x(), (<span class="type">float</span>) normal.y(), (<span class="type">float</span>) normal.z())</span><br><span class="line">                .endVertex();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Vec3 <span class="title function_">v</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> z)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Vec3</span>(x, y, z);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据生成Data-Generation"><a href="#数据生成Data-Generation" class="headerlink" title="数据生成Data Generation"></a>数据生成Data Generation</h3><p>最后一件我们需要解释的事情是Data Generation。我们不会在这里进行详细的介绍，因为你应该知道它是如何工作的。你可以在github查看详细的代码。然而，然而我想解释一下关于我们使用的烘焙模型系统的模型如何进行数据生成。</p><p>为了生成电缆和facade方块的json，我们可以在<code>TutBlockStates</code>中使用以下的代码，因为我们需要一个为我们模型自定义的builder，所以创建了一个builder的类，这个类叫做CableLoaderBuilder继承自CustomLoaderBuilder，CableLoaderBuilder使用ResourceLocation 作为加载id，BlockModelBuilder是其父类，ExistingFileHelper和一个布尔值指出我们是否生成一个facade方块，CableLoaderBuilder需要重写toJson的方法增加facade的属性，facade属性用于CableModelLoader中决定我们是否生成一个电缆或者facade方块。</p><p>在registerCable（）和registerFacade（）中，我们创建了一个BlockModelBuilder，父类为cube。然后，我们将自定义加载器设置为我们的CableLoaderBuilder，并设置facade属性，最后我们在BlockModelBuilder和block中调用simpleBlock 。</p><p>因为我们使用了原版的cube作为父模型，所以我们将会继承该项目的正确转化，这意味着电缆方块和facade方块将会在背包和地面上得到正确的渲染（也是因为我们在烘焙模型中使用content来获取变换）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TutBlockStates</span> <span class="keyword">extends</span> <span class="title class_">BlockStateProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">registerStatesAndModels</span><span class="params">()</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        registerCable();</span><br><span class="line">        registerFacade();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">registerCable</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">BlockModelBuilder</span> <span class="variable">model</span> <span class="operator">=</span> models().getBuilder(<span class="string">&quot;cable&quot;</span>)</span><br><span class="line">                .parent(models().getExistingFile(mcLoc(<span class="string">&quot;cube&quot;</span>)))</span><br><span class="line">                .customLoader((builder, helper) -&gt; <span class="keyword">new</span> <span class="title class_">CableLoaderBuilder</span>(CableModelLoader.GENERATOR_LOADER, builder, helper, <span class="literal">false</span>))</span><br><span class="line">                .end();</span><br><span class="line">        simpleBlock(Registration.CABLE_BLOCK.get(), model);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">registerFacade</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">BlockModelBuilder</span> <span class="variable">model</span> <span class="operator">=</span> models().getBuilder(<span class="string">&quot;facade&quot;</span>)</span><br><span class="line">                .parent(models().getExistingFile(mcLoc(<span class="string">&quot;cube&quot;</span>)))</span><br><span class="line">                .customLoader((builder, helper) -&gt; <span class="keyword">new</span> <span class="title class_">CableLoaderBuilder</span>(CableModelLoader.GENERATOR_LOADER, builder, helper, <span class="literal">true</span>))</span><br><span class="line">                .end();</span><br><span class="line">        simpleBlock(Registration.FACADE_BLOCK.get(), model);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CableLoaderBuilder</span> <span class="keyword">extends</span> <span class="title class_">CustomLoaderBuilder</span>&lt;BlockModelBuilder&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> facade;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">CableLoaderBuilder</span><span class="params">(ResourceLocation loader, BlockModelBuilder parent, ExistingFileHelper existingFileHelper,</span></span><br><span class="line"><span class="params">                                  <span class="type">boolean</span> facade)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(loader, parent, existingFileHelper);</span><br><span class="line">            <span class="built_in">this</span>.facade = facade;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> JsonObject <span class="title function_">toJson</span><span class="params">(JsonObject json)</span> &#123;</span><br><span class="line">            <span class="type">JsonObject</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="built_in">super</span>.toJson(json);</span><br><span class="line">            obj.addProperty(<span class="string">&quot;facade&quot;</span>, facade);</span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello world</title>
      <link href="/2023/10/24/hello-world/"/>
      <url>/2023/10/24/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Architectury-00-环境搭建</title>
      <link href="/2023/10/24/Architectury-00-%E5%89%8D%E8%A8%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/10/24/Architectury-00-%E5%89%8D%E8%A8%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Architectury是什么东西"><a href="#Architectury是什么东西" class="headerlink" title="Architectury是什么东西"></a>Architectury是什么东西</h1><p>Architectury是一个工具链。<br>目的是：为了简化开发多平台mod<br>什么用：可以让你开发一次，发布forge和fabric平台。</p><h1 id="怎么开始"><a href="#怎么开始" class="headerlink" title="怎么开始"></a>怎么开始</h1><h2 id="如何开始使用"><a href="#如何开始使用" class="headerlink" title="如何开始使用"></a>如何开始使用</h2><ol><li>下载<a href="https://github.com/architectury/architectury-templates/releases/">架构模板</a>并将其导入为Gradle项目</li><li>使用模板生成器生成更新模板。</li></ol><p>这里采用第一种方法</p><h2 id="使用Architectury模板构建自己项目"><a href="#使用Architectury模板构建自己项目" class="headerlink" title="使用Architectury模板构建自己项目"></a>使用Architectury模板构建自己项目</h2><h3 id="如何选择模板"><a href="#如何选择模板" class="headerlink" title="如何选择模板"></a>如何选择模板</h3><p>要选择模板需要搞清楚几个概念</p><h4 id="简介mixin"><a href="#简介mixin" class="headerlink" title="简介mixin"></a>简介mixin</h4><p>Mixins是一个在Forge和Fabric上都可以使用的修改系统。由于Forge一般提供了对游戏的修改方法，所以可能不需要知道Mixins，但是对于Fabric是必须的。</p><h4 id="怎么了解Mixins"><a href="#怎么了解Mixins" class="headerlink" title="怎么了解Mixins"></a>怎么了解Mixins</h4><p><a href="https://fabricmc.net/wiki/tutorial:mixin_introduction">Fabric Wiki</a>是一个很好的资源。如果你只是添加一些简单方块物品，那么不需要用到Mixins，Fabric提供了这样的功能，但是如果你添加负责的功能，这是必要的。</p><h4 id="搞清楚我是否需要Quilt"><a href="#搞清楚我是否需要Quilt" class="headerlink" title="搞清楚我是否需要Quilt"></a>搞清楚我是否需要Quilt</h4><h4 id="当前由那些模板变体"><a href="#当前由那些模板变体" class="headerlink" title="当前由那些模板变体"></a>当前由那些模板变体</h4><ul><li>Forge：Forge子项目用于调用特定的Forge代码，处理ForgeInit，此子项目可以执行Forge</li><li>Fabric-Like Intermedinary：调用Fabric API绑定类Fabric项目，可用于调用不特定的Fabric和Quilt代码，例如Fabric和Quilt都支持的钩子，此子项目不可执行。</li><li>Fabric：Fabric子项目用于调用特定的Fabric代码，处理Fabirc Init。此子项目可执行Fabric代码</li><li>Quilt：同上</li></ul><p>支持的子项目</p><p><img src="https://s2.loli.net/2023/10/28/PUbjzWpSDyFr8ns.png" alt="1698156270904"></p><p>根据你需求选择不同的模板，我这里选择Forge-Fabric 需要mixin</p><p><img src="https://s2.loli.net/2023/10/28/xpuNgvHWCFs5GP1.png" alt="1698156452676"></p><h4 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h4><p>下载解压后用idea打开文件夹即可。<br>它会自动构建项目，等待successful即可。</p><p><img src="https://s2.loli.net/2023/10/28/pA7oEWru4QBOq5e.png" alt="1698156741346"></p><p>构建完成后</p><p><img src="https://s2.loli.net/2023/10/28/3seGOlJqFmZjSVX.png" alt="1698158356631"></p><h3 id="有哪些内容是我需要配置的"><a href="#有哪些内容是我需要配置的" class="headerlink" title="有哪些内容是我需要配置的"></a>有哪些内容是我需要配置的</h3><p>你需要配置的文件具有如下（如果存在的话）：</p><ul><li>gradle.properties</li><li>fabric.mod.json</li><li>META-INF&#x2F;mods.toml</li><li>quilt.mod.json</li><li>architectury.common.json</li><li>examplemod.accesswidener</li><li>examplemod-common.mixins.json</li></ul><p>并且需要配置类的定位，还需要更改common&#x2F;build.gradle中的访问加宽器。</p><p><img src="https://s2.loli.net/2023/10/28/RW4TLxKpVlyCeUS.png" alt="image-20231028183829928"></p><p><img src="https://s2.loli.net/2023/10/28/FqJOWrSav9sHLA1.png" alt="image-20231028183838837"></p><p><img src="https://s2.loli.net/2023/10/28/uOdJmYSHgPtcwfp.png" alt="image-20231028183848321"></p><p><img src="https://s2.loli.net/2023/10/28/kXyzLxlgbKh6vNS.png" alt="image-20231028194831201"></p><p>修改之后重新reload下项目，启动游戏查看是否正常显示为你的mod了。</p><h2 id="如果我不想使用Architectury-API"><a href="#如果我不想使用Architectury-API" class="headerlink" title="如果我不想使用Architectury API"></a>如果我不想使用Architectury API</h2><h2 id="你可以更换什么api"><a href="#你可以更换什么api" class="headerlink" title="你可以更换什么api"></a>你可以更换什么api</h2><ul><li>yarn</li><li>ParchmentMC</li></ul><h3 id="我应该怎么操作"><a href="#我应该怎么操作" class="headerlink" title="我应该怎么操作"></a>我应该怎么操作</h3><p>请见[官网](<a href="https://docs.architectury.dev/plugin:get_started">plugin:get_started | Architectury Documentation</a>)，我直接用了原本的api</p><h2 id="如何将先有个的项目转化为Architectury项目"><a href="#如何将先有个的项目转化为Architectury项目" class="headerlink" title="如何将先有个的项目转化为Architectury项目"></a>如何将先有个的项目转化为Architectury项目</h2><p>官网教程显示已过期，没找到其他的教程，待补充</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>接下来我们看如何添加物品方块等游戏内容</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的世界 </tag>
            
            <tag> 模组 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
